version: '2.3'
volumes:
  bundle_cache: {}
  db_data:
  db_backup:
  api_data:
  # scrapydo_data:
  # splash_data:
  #  redis_data:
  # scrapy_shared:
  # search_data:
services:
  app:
    build:
      context: ./web
      dockerfile: ./Dockerfile
    depends_on:
      - db
      - api
      # - scrapy
      # - search
      # - memcached
      # - redis
      # - bot
    volumes:
      - bundle_cache:/bundle
      # - ./scrapy/data:/var/www/scrapy/data
      - ./web/app:/var/www/alegreme/app:ro
      # - ./storage:/var/www/alegreme/storage
      # - ./logs/app:/var/www/alegreme/log:delegated
    environment:
      RAILS_ENV: development
      RACK_ENV: development
      RAILS_SERVE_STATIC_FILES: 'false'
      PGHOST: db
      PGUSER: postgres
      API_URL: http://api
      IS_DOCKER: 'true'
      HTTP_HOST: 'www.alegreme.com'
      NODE_ENV: development
      JOB_WORKER_URL: redis://redis:6379/0
      RAILS_MAX_THREADS: 5
      ELASTICSEARCH_URL: http://search:9200
    restart: always
    ports:
      - 3000:3000
    stdin_open: true
    tty: true
    command: bundle exec puma -C config/puma/puma-development.rb
  #    mem_limit: 6gb
  #    memswap_limit: 6gb
  #    mem_reservation: 256m
  #    cpus: 0.5
  #  sidekiq:
  #    build:
  #      context: ./web
  #      dockerfile: ./docker/sidekiq/Dockerfile
  #    depends_on:
  #      - redis
  #      - db
  #    volumes:
  #      - ./web:/var/www/alegreme
  #      - ./logs/sidekiq:/var/www/alegreme/log
  #    working_dir: /var/www/alegreme
  #    environment:
  #      RAILS_ENV: development
  #      RACK_ENV: development
  #      PGHOST: db
  #      PGUSER: postgres
  #      API_URL: http://api
  #      IS_DOCKER: 'true'
  #      HTTP_HOST: 'www.alegreme.com'
  #      NODE_ENV: development
  #      JOB_WORKER_URL: redis://redis:6379/0
  #    command: bundle exec sidekiq -C /var/www/sidekiq/config.yml -r /var/www/alegreme
  #    restart: always
  #    mem_limit: 3gb
  #    memswap_limit: 3gb
  #    cpus: 0.5
  db:
    image: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: db
      TZ: 'America/Sao_Paulo'
      PGTZ: 'America/Sao_Paulo'
    ports:
      - 5432:5432
    restart: always
  #    mem_limit: 2gb
  #    memswap_limit: 3gb
  #    cpus: 0.5
  api:
    build:
      context: ./ml
      dockerfile: ./Dockerfile
    ports:
      - "5000:5000"
    # volumes:
      # - api_data:/var/www/api/data
      # - ./scrapy/data:/var/www/scrapy/data:delegated
      # - ./ml/api:/var/www/ml/api:delegated
      # - ./logs/api:/var/www/ml/api/log:delegated
    environment:
      IS_DOCKER: 'true'
    #    mem_limit: 3gb
    #    memswap_limit: 4gb
    #    mem_reservation: 256m
    #    cpus: 0.7
  # scrapy:
  #   build:
  #     context: ./scrapy
  #     dockerfile: ./Dockerfile
  #   environment:
  #       SPLASH_URL: http://splash:8050
  #       IS_DOCKER: 'true'
  #       ENV: 'development'
  #   depends_on:
  #     - splash
  #   volumes:
  #     - ./scrapy/alegreme:/var/www/scrapy/alegreme
  #     - ./scrapy/data:/var/www/scrapy/data
  #     - ./logs/scrapy:/var/www/scrapy/log
  #   ports:
  #     - "7654:7654"
  #   restart: always
  #   mem_limit: 3gb
  #   memswap_limit: 4gb
  #   cpus: 0.5
  #   command: scrapy-do --nodaemon --pidfile= scrapy-do --config scrapydo.conf
  # splash:
  #   image: scrapinghub/splash
  #   ports:
  #     - 8050:8050
  #     - 5023:5023
  #   restart: always
  #   volumes:
  #     - splash_data:/var/www/splash/data
  #   mem_limit: 5gb
  #   memswap_limit: 5gb
  #   mem_reservation: 256m
  #   cpus: 0.7
  #   command: --maxrss 4048 --max-timeout 300 --disable-lua-sandbox
  #  memcached:
  #    image: memcached
  #    command: memcached -m 64
  #    ports:
  #      - 11211:11211
  #    restart: always
  #    mem_limit: 3gb
  #    memswap_limit: 3gb
  #    mem_reservation: 256m
  #    cpus: 0.3
  #    restart: always
  #  redis:
  #    image: redis
  #    command: redis-server
  #    volumes:
  #      - redis_data:/data
  #    ports:
  #      - 6379:6379
  #    mem_limit: 3gb
  #    memswap_limit: 3gb
  #    mem_reservation: 256m
  #    cpus: 0.3
  #    restart: always
  # web:
  #   build:
  #     context: ./web
  #     dockerfile: ./docker/web/Dockerfile
  #   depends_on:
  #     - app
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  #   restart: always
  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  # search:
  #   build:
  #     context: ./search
  #     dockerfile: ./Dockerfile
  #   environment:
  #     discovery.type: single-node
  #   ports:
  #     - "9200:9200"
  #   restart: always
#  ofelia:
#    image: 'mcuadros/ofelia:latest'
#    volumes:
#      - ./ofelia/conf/config.ini:/etc/ofelia/config.ini
#      - /home/centos/.docker/config.json:/root/.docker/config.json
#      - /var/run/docker.sock:/var/run/docker.sock
#      - ./logs/ofelia:/tmp/logs
#    restart: always
