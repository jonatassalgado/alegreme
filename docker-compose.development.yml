version: '2.3'
volumes:
  bundle_cache:
  app_log:
  db_data:
  db_backup:
  api_data:
  redis_data:
services:
  app:
    build:
      context: ./web
      dockerfile: ./Dockerfile
    depends_on:
      - db
      - api
      - redis
    volumes:
      - bundle_cache:/bundle
      - ./web:/var/www/alegreme
      - ./scrapy/data:/var/www/scrapy/data
      - app_log:/var/www/alegreme/log
    environment:
      BUNDLE_USER_CONFIG : /var/www/alegreme/.bundle_config
      RAILS_ENV: development
      RACK_ENV: development
      RAILS_SERVE_STATIC_FILES: 'false'
      PGHOST: db
      PGUSER: postgres
      API_URL: http://api
      IS_DOCKER: 'true'
      HTTP_HOST: 'www.alegreme.com'
      NODE_ENV: development
      JOB_WORKER_URL: redis://redis:6379/0
      RAILS_MAX_THREADS: 3
      ELASTICSEARCH_URL: http://search:9200
      REDIS_URL: redis://redis:6379/1
      GOOGLE_APPLICATION_CREDENTIALS: /var/www/alegreme/config/google_application_credentials.json
    restart: unless-stopped
    ports:
      - 3000:3000
    stdin_open: true
    tty: true
    command: bundle exec puma -C config/puma/puma-development.rb
    mem_limit: 3gb
    memswap_limit: 3gb
    mem_reservation: 256m
    cpus: 2
  db:
    image: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: db
      TZ: 'America/Sao_Paulo'
      PGTZ: 'America/Sao_Paulo'
    ports:
      - 5432:5432
    restart: unless-stopped
  api:
    build:
      context: ./ml
      dockerfile: ./Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - api_data:/var/www/api/data
      - ./scrapy/data:/var/www/scrapy/data
      - ./ml/api:/var/www/ml/api
      # - ./logs/api:/var/www/ml/api/log:delegated
    environment:
      IS_DOCKER: 'true'
  redis:
    image: redis
    command: redis-server
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
    mem_limit: 1gb
    memswap_limit: 2gb
    mem_reservation: 256m
    cpus: 1
    restart: unless-stopped
