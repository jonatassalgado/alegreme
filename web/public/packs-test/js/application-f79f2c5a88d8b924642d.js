/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/packs-test/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./app/javascript/packs/application.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./app/javascript/controllers sync recursive _controller\\.js$":
/*!**********************************************************!*\
  !*** ./app/javascript/controllers sync _controller\.js$ ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./bot_controller.js": "./app/javascript/controllers/bot_controller.js",
	"./chat_controller.js": "./app/javascript/controllers/chat_controller.js",
	"./chip_controller.js": "./app/javascript/controllers/chip_controller.js",
	"./event_controller.js": "./app/javascript/controllers/event_controller.js",
	"./favorite_controller.js": "./app/javascript/controllers/favorite_controller.js",
	"./favorite_events_controller.js": "./app/javascript/controllers/favorite_events_controller.js",
	"./filter_controller.js": "./app/javascript/controllers/filter_controller.js",
	"./hero_controller.js": "./app/javascript/controllers/hero_controller.js",
	"./kinds_controller.js": "./app/javascript/controllers/kinds_controller.js",
	"./label_controller.js": "./app/javascript/controllers/label_controller.js",
	"./snackbar_controller.js": "./app/javascript/controllers/snackbar_controller.js",
	"./tags_controller.js": "./app/javascript/controllers/tags_controller.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) { // check for number or string
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return id;
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./app/javascript/controllers sync recursive _controller\\.js$";

/***/ }),

/***/ "./app/javascript/controllers/bot_controller.js":
/*!******************************************************!*\
  !*** ./app/javascript/controllers/bot_controller.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return BotController; });
/* harmony import */ var stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stimulus */ "./node_modules/stimulus/index.js");
/* harmony import */ var mobile_detect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mobile-detect */ "./node_modules/mobile-detect/mobile-detect.js");
/* harmony import */ var mobile_detect__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mobile_detect__WEBPACK_IMPORTED_MODULE_1__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




var BotController =
/*#__PURE__*/
function (_Controller) {
  _inherits(BotController, _Controller);

  function BotController() {
    _classCallCheck(this, BotController);

    return _possibleConstructorReturn(this, _getPrototypeOf(BotController).apply(this, arguments));
  }

  _createClass(BotController, [{
    key: "initialize",
    value: function initialize() {
      this.md = new mobile_detect__WEBPACK_IMPORTED_MODULE_1__(window.navigator.userAgent);

      if (this.hasInputTarget) {
        this.insertButton();
      }

      document.addEventListener("DOMContentLoaded", function () {
        var options = {
          id: gon.user_id || "null"
        };
        Botkit.boot(options);
      });
    }
  }, {
    key: "showBot",
    value: function showBot() {
      this.conversationVisibility = "visible";
      this.overlayVisibility = "visible";
      this.heroVisibility = "hidden";
    }
  }, {
    key: "hideBot",
    value: function hideBot() {
      this.conversationVisibility = "hidden";
      this.overlayVisibility = "hidden";
    }
  }, {
    key: "insertButton",
    value: function insertButton() {}
  }, {
    key: "overlayVisibility",
    set: function set(value) {
      self = this;
      var overlay = document.querySelector(".me-overlay");

      switch (value) {
        case "visible":
          break;

        case "hidden":
      }
    }
  }, {
    key: "heroVisibility",
    set: function set(value) {
      self = this;

      switch (value) {
        case "visible":
          self.heroController.show();
          break;

        case "hidden":
          self.heroController.close();
          break;
      }
    }
  }, {
    key: "conversationVisibility",
    set: function set(value) {
      var _this = this;

      switch (value) {
        case "visible":
          this.botTarget.classList.add("me-bot--active");
          setTimeout(function () {
            if (_this.data.get("already-open") == "false") {
              Botkit.send("Vamos", event);

              _this.data.set("already-open", "true");
            }
          }, 400);
          break;

        case "hidden":
          this.botTarget.classList.remove("me-bot--active");
          break;
      }
    }
  }, {
    key: "heroController",
    get: function get() {
      return this.application.controllers.find(function (controller) {
        return controller.context.identifier === "hero";
      });
    }
  }]);

  return BotController;
}(stimulus__WEBPACK_IMPORTED_MODULE_0__["Controller"]);

BotController.targets = ["bot", "start", "botIcon", "conversation", "reply", "close"];


/***/ }),

/***/ "./app/javascript/controllers/chat_controller.js":
/*!*******************************************************!*\
  !*** ./app/javascript/controllers/chat_controller.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return SearchFieldController; });
/* harmony import */ var stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stimulus */ "./node_modules/stimulus/index.js");
/* harmony import */ var mobile_detect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mobile-detect */ "./node_modules/mobile-detect/mobile-detect.js");
/* harmony import */ var mobile_detect__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mobile_detect__WEBPACK_IMPORTED_MODULE_1__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




var SearchFieldController =
/*#__PURE__*/
function (_Controller) {
  _inherits(SearchFieldController, _Controller);

  function SearchFieldController() {
    _classCallCheck(this, SearchFieldController);

    return _possibleConstructorReturn(this, _getPrototypeOf(SearchFieldController).apply(this, arguments));
  }

  _createClass(SearchFieldController, [{
    key: "initialize",
    value: function initialize() {
      this.md = new mobile_detect__WEBPACK_IMPORTED_MODULE_1__(window.navigator.userAgent);

      if (this.hasInputTarget) {
        this.insertButton();
      }
    }
  }, {
    key: "showBot",
    value: function showBot() {
      this.conversationVisibility = "visible";
      this.overlayVisibility = "visible";
    }
  }, {
    key: "hideBot",
    value: function hideBot() {
      this.conversationVisibility = "hidden";
      this.overlayVisibility = "hidden";
    }
  }, {
    key: "insertButton",
    value: function insertButton() {}
  }, {
    key: "search",
    value: function search(event) {
      console.log(event);
      event.preventDefault();
      var query = this.inputTarget.value; // Turbolinks.visit(`${location.origin}?q=${query.toLowerCase()}`);

      location.assign("".concat(location.origin, "?q=").concat(query.toLowerCase()));
    }
  }, {
    key: "overlayVisibility",
    set: function set(value) {
      self = this;
      var overlay = document.querySelector(".me-overlay");

      switch (value) {
        case "visible":
          overlay.classList.add("me-overlay--active");
          overlay.addEventListener("click", function () {
            self.conversationVisibility = "hidden";
            self.overlayVisibility = "hidden";
          });
          break;

        case "hidden":
          overlay.classList.remove("me-overlay--active");
          break;
      }
    }
  }, {
    key: "conversationVisibility",
    set: function set(value) {
      var _this = this;

      switch (value) {
        case "visible":
          if (!this.md.mobile() && this.hasReplyTarget) {
            this.replyTarget.style.display = "none";
          }

          this.botConversationTarget.style.visibility = "visible";
          this.botConversationTarget.style.opacity = 1;
          this.fieldTarget.classList.add("me-search-field--bot-on");
          this.fieldTarget.parentElement.classList.add("me-top-app-bar--bot-on");
          document.body.style.overflow = "hidden";
          setTimeout(function () {
            _this.closeTarget.classList.add("me-search-field__close--bot-on");
          }, 400);
          break;

        case "hidden":
          if (!this.md.mobile() && this.hasReplyTarget) {
            this.replyTarget.style.display = "block";
          }

          document.body.style.overflow = "";
          this.botConversationTarget.style.visibility = "hidden";
          this.botConversationTarget.style.opacity = 0;
          this.fieldTarget.classList.remove("me-search-field--bot-on");
          this.fieldTarget.parentElement.classList.remove("me-top-app-bar--bot-on");
          this.closeTarget.classList.remove("me-search-field__close--bot-on");
          break;
      }
    }
  }]);

  return SearchFieldController;
}(stimulus__WEBPACK_IMPORTED_MODULE_0__["Controller"]);

SearchFieldController.targets = ["chat", "field", "form", "input", "botIcon", "botConversation", "reply", "close"];


/***/ }),

/***/ "./app/javascript/controllers/chip_controller.js":
/*!*******************************************************!*\
  !*** ./app/javascript/controllers/chip_controller.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ChipController; });
/* harmony import */ var stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stimulus */ "./node_modules/stimulus/index.js");
/* harmony import */ var _material_chips__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @material/chips */ "./node_modules/@material/chips/dist/mdc.chips.js");
/* harmony import */ var _material_chips__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_chips__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit-html */ "./node_modules/lit-html/lit-html.js");
function _templateObject() {
  var data = _taggedTemplateLiteral(["\n      <div class=\"mdc-chip__checkmark\">\n        <svg class=\"mdc-chip__checkmark-svg\" viewBox=\"-2 -3 30 30\">\n          <path class=\"mdc-chip__checkmark-path\" fill=\"none\" stroke=\"black\" d=\"M1.73,12.91 8.1,19.28 22.79,4.59\" />\n        </svg>\n      </div>\n      <div class=\"mdc-chip__text\">\n        ", "\n      </div>\n    "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }





var ChipController =
/*#__PURE__*/
function (_Controller) {
  _inherits(ChipController, _Controller);

  function ChipController() {
    _classCallCheck(this, ChipController);

    return _possibleConstructorReturn(this, _getPrototypeOf(ChipController).apply(this, arguments));
  }

  _createClass(ChipController, [{
    key: "initialize",
    value: function initialize() {
      var self = this;
      self.MDCChipSet = new _material_chips__WEBPACK_IMPORTED_MODULE_1__["MDCChipSet"](this.chipsetTarget);

      if (self.hasInputTarget) {
        self.inputTarget.addEventListener('keydown', function (event) {
          if (event.key === 'Enter' || event.keyCode === 13) {
            self.create();
          }
        });
      }
    }
  }, {
    key: "select",
    value: function select() {
      var self = this;
      var type = self.data.get("type");

      switch (type) {
        case "filter":
          self.filterController.filter();
          break;

        case "kinds":
          // self.kindsController.classify();
          break;

        case "tags":
          // self.tagsController.classify();
          break;
      }
    }
  }, {
    key: "create",
    value: function create() {
      var self = this;

      if (self.hasChipTarget) {
        var chipEl = document.createElement("div");
        chipEl.classList.add("me-chip", "mdc-chip", "mdc-chip--selected");
        chipEl.dataset.target = "chip.chip";
        chipEl.dataset.action = "click->chip#select";
        self.chipsetTarget.appendChild(chipEl);
        self.MDCChipSet.addChip(chipEl);
        self.setSelected(chipEl);
      }
    }
  }, {
    key: "setSelected",
    value: function setSelected(chipEl) {
      var self = this;

      var chipTemplate = function chipTemplate(text) {
        return Object(lit_html__WEBPACK_IMPORTED_MODULE_2__["html"])(_templateObject(), text);
      };

      var currentMDCChipPromise = new Promise(function (resolve, reject) {
        var currentMDCChip = self.MDCChipSet.chips.filter(function (chip) {
          return chip.id == chipEl.id;
        });
        resolve(currentMDCChip[0]);
      });
      currentMDCChipPromise.then(function (currentMDCChip) {
        currentMDCChip.selected = true;
        Object(lit_html__WEBPACK_IMPORTED_MODULE_2__["render"])(chipTemplate(self.inputTarget.value.toLowerCase()), chipEl);
        self.inputTarget.value = '';
      }).catch(function (err) {
        console.log(err);
      });
    }
  }, {
    key: "filterController",
    get: function get() {
      var parentClassifier = this.context.element.closest('[data-controller="filter"]');
      return this.application.getControllerForElementAndIdentifier(parentClassifier, "filter");
    }
  }, {
    key: "kindsController",
    get: function get() {
      var parentClassifier = this.context.element.closest('[data-controller="kinds"]');
      return this.application.getControllerForElementAndIdentifier(parentClassifier, "kinds");
    }
  }, {
    key: "tagsController",
    get: function get() {
      var parentClassifier = this.context.element.closest('[data-controller="tags"]');
      return this.application.getControllerForElementAndIdentifier(parentClassifier, "tags");
    }
  }]);

  return ChipController;
}(stimulus__WEBPACK_IMPORTED_MODULE_0__["Controller"]);

ChipController.targets = ["chipset", "container", "chip", "input", "inputContainer"];


/***/ }),

/***/ "./app/javascript/controllers/event_controller.js":
/*!********************************************************!*\
  !*** ./app/javascript/controllers/event_controller.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return EventController; });
/* harmony import */ var stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stimulus */ "./node_modules/stimulus/index.js");
/* harmony import */ var _material_menu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @material/menu */ "./node_modules/@material/menu/dist/mdc.menu.js");
/* harmony import */ var _material_menu__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_menu__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _material_ripple__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @material/ripple */ "./node_modules/@material/ripple/dist/mdc.ripple.js");
/* harmony import */ var _material_ripple__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_material_ripple__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var modules_cache_system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! modules/cache-system */ "./app/javascript/modules/cache-system.js");
/* harmony import */ var mobile_detect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mobile-detect */ "./node_modules/mobile-detect/mobile-detect.js");
/* harmony import */ var mobile_detect__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(mobile_detect__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var material_components_web__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! material-components-web */ "./node_modules/material-components-web/dist/material-components-web.js");
/* harmony import */ var material_components_web__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(material_components_web__WEBPACK_IMPORTED_MODULE_5__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }








var EventController =
/*#__PURE__*/
function (_Controller) {
  _inherits(EventController, _Controller);

  function EventController() {
    _classCallCheck(this, EventController);

    return _possibleConstructorReturn(this, _getPrototypeOf(EventController).apply(this, arguments));
  }

  _createClass(EventController, [{
    key: "initialize",
    value: function initialize() {
      var self = this;
      self.eventTarget.addEventListener('eventLiked', function (event) {
        self.updateLikeStatus(event, self);
      });
      self.md = new mobile_detect__WEBPACK_IMPORTED_MODULE_4__(window.navigator.userAgent);
      self.activeInteractions = true;
      self.adjustForDevice = self.md.mobile();
      document.addEventListener("turbolinks:before-cache", function () {
        self.activeInteractions = false;
      });
    }
  }, {
    key: "showEventDetails",
    value: function showEventDetails() {
      var self = this;

      if (this.md.mobile()) {} else {
        if (self.data.get("favorited") == "false") {
          self.likeButtonTarget.style.display = "inline";
        }

        self.eventTarget.addEventListener("mouseout", function () {
          if (self.data.get("favorited") == "false") {
            self.likeButtonTarget.style.display = "none";
          }
        });
      }
    }
  }, {
    key: "openMenu",
    value: function openMenu() {
      var self = this;
      var mdcMenu = new _material_menu__WEBPACK_IMPORTED_MODULE_1__["MDCMenu"](self.menuTarget);

      if (mdcMenu.open) {
        mdcMenu.open = false;
      } else {
        mdcMenu.open = true;
      }
    }
  }, {
    key: "updateLikeStatus",
    value: function updateLikeStatus(event, self) {
      self.activeLikeButton = event.detail.currentEventFavorited;
      self.data.set("favorited", event.detail.currentEventFavorited);
      modules_cache_system__WEBPACK_IMPORTED_MODULE_3__["CacheSystem"].clearCache(["feed-page", "events-page"], {
        event: {
          identifier: self.identifier
        }
      });
    }
  }, {
    key: "like",
    value: function like() {
      var self = this;
      fetch("/events/".concat(self.identifier, "/favorite"), {
        method: self.isFavorited,
        headers: {
          'X-Requested-With': 'XMLHttpRequest',
          'Content-type': 'text/javascript; charset=UTF-8',
          'X-CSRF-Token': Rails.csrfToken()
        },
        credentials: 'same-origin'
      }).then(function (response) {
        response.text().then(function (data) {
          eval(data);
        });
      }).catch(function (err) {
        console.log('Fetch Error :-S', err);
      });
    }
  }, {
    key: "isFavorited",
    get: function get() {
      if (this.data.get("favorited") == "true") {
        return "delete";
      } else {
        return "post";
      }
    }
  }, {
    key: "identifier",
    get: function get() {
      return this.data.get("identifier");
    }
  }, {
    key: "favoriteController",
    get: function get() {
      return this.application.controllers.find(function (controller) {
        return controller.context.identifier === "favorite";
      });
    }
  }, {
    key: "activeLikeButton",
    set: function set(value) {
      var self = this;
      document.querySelectorAll("[data-event-identifier=\"".concat(self.identifier, "\"]")).forEach(function (event) {
        event.setAttribute('data-event-favorited', value);

        if (value) {
          event.querySelector('[data-target="event.likeButton"]').classList.add('mdc-icon-button--on');
        } else {
          event.querySelector('[data-target="event.likeButton"]').classList.remove('mdc-icon-button--on');
        }
      });
    }
  }, {
    key: "likeCount",
    set: function set(value) {
      var likeElementsCounts = document.querySelectorAll("[data-event-identifier=\"".concat(value.event_id, "\"] .me-like-count"));
      likeElementsCounts.forEach(function (count) {
        count.textContent = value.event_likes_count;
      });
    }
  }, {
    key: "activeInteractions",
    set: function set(value) {
      var self = this;

      if (value) {
        if (self.hasOverlayTarget && !self.overlayRipple) {
          self.overlayRipple = new _material_ripple__WEBPACK_IMPORTED_MODULE_2__["MDCRipple"](self.overlayTarget);
        }

        if (self.hasLikeButtonTarget) {
          self.toggleLikeButton = new material_components_web__WEBPACK_IMPORTED_MODULE_5__["iconButton"].MDCIconButtonToggle(self.likeButtonTarget);
        }
      } else {
        if (self.overlayRipple) {
          self.overlayRipple.destroy();
        }

        if (self.likeButtonRipple) {
          self.likeButtonRipple.destroy();
        }
      }
    }
  }, {
    key: "adjustForDevice",
    set: function set(isMobile) {
      var self = this;
      var isFavorited = self.data.get("favorited") == "false";
      var isSingle = self.data.get("modifier") == "single";

      if (isMobile) {} else {
        if (isFavorited && !isSingle) {
          self.likeButtonTarget.style.display = "none";
        }
      }
    }
  }]);

  return EventController;
}(stimulus__WEBPACK_IMPORTED_MODULE_0__["Controller"]);

EventController.targets = ["event", "overlay", "name", "place", "date", "like", "likeButton", "likeCount", "moreButton", "menu"];


/***/ }),

/***/ "./app/javascript/controllers/favorite_controller.js":
/*!***********************************************************!*\
  !*** ./app/javascript/controllers/favorite_controller.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return FavoriteController; });
/* harmony import */ var stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stimulus */ "./node_modules/stimulus/index.js");
/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit-html */ "./node_modules/lit-html/lit-html.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




var FavoriteController =
/*#__PURE__*/
function (_Controller) {
  _inherits(FavoriteController, _Controller);

  function FavoriteController() {
    _classCallCheck(this, FavoriteController);

    return _possibleConstructorReturn(this, _getPrototypeOf(FavoriteController).apply(this, arguments));
  }

  _createClass(FavoriteController, [{
    key: "initialize",
    value: function initialize() {
      var self = this;

      if (self.hasListTarget) {
        self.scrollLeftEvent = new CustomEvent('scrolledLeft', {
          'detail': {
            'controller': self
          }
        });
        self.scrollRightEvent = new CustomEvent('scrolledRight', {
          'detail': {
            'controller': self
          }
        });
        self.handlerScrollButtons = true;
        FavoriteController.removeRepeatedDates = true;
      }
    }
  }, {
    key: "scrollLeft",
    value: function scrollLeft(event) {
      var self = this;
      var amount = this.listTarget.offsetWidth * -1;
      this.listTarget.scrollBy(amount, 0);
      setTimeout(function () {
        self.listTarget.dispatchEvent(self.scrollLeftEvent);
      }, 400);
    }
  }, {
    key: "scrollRight",
    value: function scrollRight(event) {
      var self = this;
      var amount = self.listTarget.offsetWidth;
      self.listTarget.scrollBy(amount, 0);
      setTimeout(function () {
        self.listTarget.dispatchEvent(self.scrollRightEvent);
      }, 400);
    }
  }, {
    key: "updateScrollButtonsStatus",
    value: function updateScrollButtonsStatus() {
      var self = this;
      var containerSize = self.listTarget.offsetParent.offsetWidth;
      var scrollSizeOverflow = self.listTarget.scrollWidth;
      var scrolled = self.listTarget.scrollLeft;

      var scrollUntilX = function scrollUntilX() {
        return containerSize + scrolled;
      };

      var scrolledUntilEnd = function scrolledUntilEnd() {
        return scrollUntilX() === scrollSizeOverflow;
      };

      var hasToScroll = function hasToScroll() {
        return containerSize < scrollSizeOverflow;
      };

      var hasToScrollYet = function hasToScrollYet() {
        return scrollUntilX() < scrollSizeOverflow;
      };

      var scrollInZeroPosition = function scrollInZeroPosition() {
        return scrolled === 0;
      };

      function switchLeftButton() {
        var turnOn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

        if (turnOn) {
          self.scrollLeftTarget.classList.remove('me-icon--off');
          self.listTarget.classList.remove('me-favorite__list--at-end');
          self.listTarget.classList.add('me-favorite__list--at-initital');
        } else {
          self.scrollLeftTarget.classList.add('me-icon--off');
          self.listTarget.classList.remove('me-favorite__list--at-initital');
        }
      }

      function switchRightButton() {
        var turnOn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

        if (turnOn) {
          self.scrollRightTarget.classList.remove('me-icon--off');
          self.listTarget.classList.add('me-favorite__list--at-end');
          self.listTarget.classList.remove('me-favorite__list--at-initital');
        } else {
          self.scrollRightTarget.classList.add('me-icon--off');
          self.listTarget.classList.remove('me-favorite__list--at-end');
        }
      }

      if (scrollInZeroPosition() && scrolledUntilEnd()) {
        switchLeftButton(false);
        switchRightButton(false);
      } else if (scrolledUntilEnd() && hasToScroll()) {
        switchLeftButton();
        switchRightButton(false);
      } else if (scrollInZeroPosition() && hasToScrollYet()) {
        switchRightButton();
        switchLeftButton(false);
      } else if (hasToScrollYet() && !scrolledUntilEnd() && !scrollInZeroPosition()) {
        switchLeftButton();
        switchRightButton();
      }
    }
  }, {
    key: "handlerScrollButtons",
    set: function set(value) {
      var self = this;

      if (value === true) {
        self.updateScrollButtonsStatus();
        self.listTarget.addEventListener('scrolledLeft', FavoriteController.scrolledToLeft);
        self.listTarget.addEventListener('scrolledRight', FavoriteController.scrolledToRight);
      }
    }
  }], [{
    key: "scrolledToLeft",
    value: function scrolledToLeft(event) {
      event.detail.controller.updateScrollButtonsStatus();
    }
  }, {
    key: "scrolledToRight",
    value: function scrolledToRight(event) {
      event.detail.controller.updateScrollButtonsStatus();
    }
  }, {
    key: "removeRepeatedDates",
    set: function set(value) {
      if (value === true) {
        var dates = document.querySelectorAll('.me-favorite .me-card__date');
        var lastDay = dates[0].innerText;

        for (var i = 0; i < dates.length - 1; i++) {
          if (lastDay !== dates[i + 1].innerText) {
            lastDay = dates[i].innerText;
          }

          if (lastDay === dates[i + 1].innerText) {
            dates[i + 1].innerHTML = '';
          }
        }
      }
    }
  }]);

  return FavoriteController;
}(stimulus__WEBPACK_IMPORTED_MODULE_0__["Controller"]);

FavoriteController.targets = ["saves", "list", "title", "date", "remove", "scrollLeft", "scrollRight", "header"];


/***/ }),

/***/ "./app/javascript/controllers/favorite_events_controller.js":
/*!******************************************************************!*\
  !*** ./app/javascript/controllers/favorite_events_controller.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return FavoriteEventsController; });
/* harmony import */ var stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stimulus */ "./node_modules/stimulus/index.js");
/* harmony import */ var _material_ripple__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @material/ripple */ "./node_modules/@material/ripple/dist/mdc.ripple.js");
/* harmony import */ var _material_ripple__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_ripple__WEBPACK_IMPORTED_MODULE_1__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




var FavoriteEventsController =
/*#__PURE__*/
function (_Controller) {
  _inherits(FavoriteEventsController, _Controller);

  function FavoriteEventsController() {
    _classCallCheck(this, FavoriteEventsController);

    return _possibleConstructorReturn(this, _getPrototypeOf(FavoriteEventsController).apply(this, arguments));
  }

  _createClass(FavoriteEventsController, [{
    key: "initialize",
    value: function initialize() {
      if (this.hasOverlayTarget) {
        _material_ripple__WEBPACK_IMPORTED_MODULE_1__["MDCRipple"].attachTo(this.overlayTarget);
      }
    }
  }, {
    key: "showEventDetails",
    value: function showEventDetails(event) {
      var self = this;
      self.removeTarget.style.display = "inline";
      self.eventTarget.addEventListener("mouseout", function () {
        self.removeTarget.style.display = "none";
      });
    }
  }, {
    key: "remove",
    value: function remove() {
      var self = this;
      fetch("/events/".concat(self.identifier, "/favorite"), {
        method: 'delete',
        headers: {
          'X-Requested-With': 'XMLHttpRequest',
          'Content-type': 'text/javascript; charset=UTF-8',
          'X-CSRF-Token': Rails.csrfToken()
        },
        credentials: 'same-origin'
      }).then(function (response) {
        response.text().then(function (data) {
          eval(data);
        });
      }).catch(function (err) {
        console.log('Fetch Error :-S', err);
      });
    }
  }, {
    key: "identifier",
    get: function get() {
      return this.data.get("identifier");
    }
  }]);

  return FavoriteEventsController;
}(stimulus__WEBPACK_IMPORTED_MODULE_0__["Controller"]);

FavoriteEventsController.targets = ["event", "overlay", "title", "date", "remove"];


/***/ }),

/***/ "./app/javascript/controllers/filter_controller.js":
/*!*********************************************************!*\
  !*** ./app/javascript/controllers/filter_controller.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return FilterController; });
/* harmony import */ var stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stimulus */ "./node_modules/stimulus/index.js");
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! query-string */ "./node_modules/query-string/index.js");
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(query_string__WEBPACK_IMPORTED_MODULE_1__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




var FilterController =
/*#__PURE__*/
function (_Controller) {
  _inherits(FilterController, _Controller);

  function FilterController() {
    _classCallCheck(this, FilterController);

    return _possibleConstructorReturn(this, _getPrototypeOf(FilterController).apply(this, arguments));
  }

  _createClass(FilterController, [{
    key: "initialize",
    value: function initialize() {}
  }, {
    key: "filter",
    value: function filter() {
      var self = this;
      var promises = [];

      if (this.hasPersonasTarget) {
        var selectedPersonaValues = self.personasController.MDCChipSet.selectedChipIds.map(function (chipId) {
          var chipElement = self.personasController.chipsetTarget.querySelector("#".concat(chipId));
          return chipElement.innerText.toLowerCase();
        });
        promises[0] = selectedPersonaValues;
      }

      if (this.hasCategoriesTarget) {
        var selectedCategoryValues = self.categoriesController.MDCChipSet.selectedChipIds.map(function (chipId) {
          var chipElement = self.categoriesController.chipsetTarget.querySelector("#".concat(chipId));
          return chipElement.innerText.toLowerCase();
        });
        promises[1] = selectedCategoryValues;
      }

      if (this.hasOcurrencesTarget) {
        var selectedOcurrencesValues = self.ocurrencesController.MDCChipSet.selectedChipIds.map(function (chipId) {
          var chipElement = self.ocurrencesController.chipsetTarget.querySelector("#".concat(chipId));
          return chipElement.dataset.chipValue.toLowerCase();
        });
        promises[2] = selectedOcurrencesValues;
      }

      if (this.hasKindsTarget) {
        var selectedKindsValues = self.kindsController.MDCChipSet.selectedChipIds.map(function (chipId) {
          var chipElement = self.kindsController.chipsetTarget.querySelector("#".concat(chipId));
          return chipElement.innerText.toLowerCase();
        });
        promises[3] = selectedKindsValues;
      }

      if (promises.length) {
        Promise.all(promises).then(function (resultsArray) {
          var urlWithFilters = Object(query_string__WEBPACK_IMPORTED_MODULE_1__["stringify"])({
            personas: resultsArray[0],
            categories: resultsArray[1],
            ocurrences: resultsArray[2],
            kinds: resultsArray[3],
            section: self.data.get('sectionIdentifier'),
            defaults: self.defaultValue
          }, {
            arrayFormat: 'bracket'
          }); // Turbolinks.clearCache();
          // if (urlWithFilters !== "" && typeof urlWithFilters !== "undefined") {
          // location.assign(`${location.origin}?${urlWithFilters}`);

          console.log("".concat(location.origin, "?").concat(urlWithFilters));
          fetch("/collections?".concat(urlWithFilters), {
            method: 'get',
            headers: {
              'X-Requested-With': 'XMLHttpRequest',
              'Content-type': 'text/javascript; charset=UTF-8',
              'X-CSRF-Token': Rails.csrfToken()
            },
            credentials: 'same-origin'
          }).then(function (response) {
            response.text().then(function (data) {
              eval(data);
            });
          }).catch(function (err) {
            console.log('Fetch Error :-S', err);
          }); // }
        }).catch(function (err) {
          console.log(err);
        });
      }
    }
  }, {
    key: "personasController",
    get: function get() {
      return this.application.getControllerForElementAndIdentifier(this.personasTarget, 'chip');
    }
  }, {
    key: "categoriesController",
    get: function get() {
      return this.application.getControllerForElementAndIdentifier(this.categoriesTarget, 'chip');
    }
  }, {
    key: "kindsController",
    get: function get() {
      return this.application.getControllerForElementAndIdentifier(this.kindsTarget, 'chip');
    }
  }, {
    key: "ocurrencesController",
    get: function get() {
      return this.application.getControllerForElementAndIdentifier(this.ocurrencesTarget, 'chip');
    }
  }, {
    key: "defaultValue",
    get: function get() {
      var self = this;
      var defaults = {
        categories: self.hasCategoriesTarget ? JSON.parse(self.categoriesController.data.get('defaultValue')) : [],
        personas: self.hasPersonasTarget ? JSON.parse(self.personasController.data.get('defaultValue')) : [],
        ocurrences: self.hasOcurrencesTarget ? JSON.parse(self.ocurrencesController.data.get('defaultValue')) : [],
        kinds: self.hasKindsTarget ? JSON.parse(self.kindsController.data.get('defaultValue')) : []
      };
      return JSON.stringify(defaults);
    }
  }]);

  return FilterController;
}(stimulus__WEBPACK_IMPORTED_MODULE_0__["Controller"]);

FilterController.targets = ["filterContainer", "personas", "categories", "ocurrences", "kinds"];


/***/ }),

/***/ "./app/javascript/controllers/hero_controller.js":
/*!*******************************************************!*\
  !*** ./app/javascript/controllers/hero_controller.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return HeroController; });
/* harmony import */ var stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stimulus */ "./node_modules/stimulus/index.js");
/* harmony import */ var _material_ripple__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @material/ripple */ "./node_modules/@material/ripple/dist/mdc.ripple.js");
/* harmony import */ var _material_ripple__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_ripple__WEBPACK_IMPORTED_MODULE_1__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }


 // import * as MobileDetect from "mobile-detect";

var HeroController =
/*#__PURE__*/
function (_Controller) {
  _inherits(HeroController, _Controller);

  function HeroController() {
    _classCallCheck(this, HeroController);

    return _possibleConstructorReturn(this, _getPrototypeOf(HeroController).apply(this, arguments));
  }

  _createClass(HeroController, [{
    key: "initialize",
    value: function initialize() {
      var _this = this;

      this.activeInteractions = true;
      document.addEventListener("turbolinks:before-cache", function () {
        _this.activeInteractions = false;
      });
    }
  }, {
    key: "show",
    value: function show() {
      this.visibility = "visible";
    }
  }, {
    key: "close",
    value: function close() {
      this.visibility = "hidden";
    }
  }, {
    key: "visibility",
    set: function set(value) {
      self = this;

      switch (value) {
        case "visible":
          self.heroTarget.classList.remove("me-hero--hidden");
          break;

        case "hidden":
          self.heroTarget.classList.add("me-hero--hidden");
          break;
      }
    }
  }, {
    key: "activeInteractions",
    set: function set(value) {
      var self = this;

      if (value) {
        if (self.hasCloseTarget && !self.closeRipple) {
          self.closeRipple = new _material_ripple__WEBPACK_IMPORTED_MODULE_1__["MDCRipple"](self.closeTarget);
          self.closeRipple.unbounded = true;
        }
      } else {
        if (self.closeRipple) {
          self.closeRipple.destroy();
        }
      }
    }
  }]);

  return HeroController;
}(stimulus__WEBPACK_IMPORTED_MODULE_0__["Controller"]);

HeroController.targets = ["hero", "close"];


/***/ }),

/***/ "./app/javascript/controllers/index.js":
/*!*********************************************!*\
  !*** ./app/javascript/controllers/index.js ***!
  \*********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stimulus */ "./node_modules/stimulus/index.js");
/* harmony import */ var stimulus_webpack_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! stimulus/webpack-helpers */ "./node_modules/stimulus/webpack-helpers.js");
// Load all the controllers within this directory and all subdirectories. 
// Controller files must be named *_controller.js.


var application = stimulus__WEBPACK_IMPORTED_MODULE_0__["Application"].start();

var context = __webpack_require__("./app/javascript/controllers sync recursive _controller\\.js$");

application.load(Object(stimulus_webpack_helpers__WEBPACK_IMPORTED_MODULE_1__["definitionsFromContext"])(context));

/***/ }),

/***/ "./app/javascript/controllers/kinds_controller.js":
/*!********************************************************!*\
  !*** ./app/javascript/controllers/kinds_controller.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return KindsController; });
/* harmony import */ var stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stimulus */ "./node_modules/stimulus/index.js");
/* harmony import */ var _material_dialog__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @material/dialog */ "./node_modules/@material/dialog/dist/mdc.dialog.js");
/* harmony import */ var _material_dialog__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_dialog__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _material_textfield__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @material/textfield */ "./node_modules/@material/textfield/dist/mdc.textfield.js");
/* harmony import */ var _material_textfield__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_material_textfield__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! query-string */ "./node_modules/query-string/index.js");
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(query_string__WEBPACK_IMPORTED_MODULE_3__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }






var KindsController =
/*#__PURE__*/
function (_Controller) {
  _inherits(KindsController, _Controller);

  function KindsController() {
    _classCallCheck(this, KindsController);

    return _possibleConstructorReturn(this, _getPrototypeOf(KindsController).apply(this, arguments));
  }

  _createClass(KindsController, [{
    key: "initialize",
    value: function initialize() {
      var self = this;
    }
  }, {
    key: "openDialog",
    value: function openDialog() {
      var self = this;
      self.dialog = new _material_dialog__WEBPACK_IMPORTED_MODULE_1__["MDCDialog"](self.dialogTarget);
      self.chipsetInput = new _material_textfield__WEBPACK_IMPORTED_MODULE_2__["MDCTextField"](self.chipController.inputContainerTarget);
      self.dialog.open();
    }
  }, {
    key: "saveKindsSelected",
    value: function saveKindsSelected() {
      var self = this;

      if (self.hasChipsKindsTarget) {
        var selectedKindsValues = new Promise(function (resolve, reject) {
          var result = self.chipController.MDCChipSet.selectedChipIds.map(function (chipId) {
            var chipElement = self.chipController.chipsetTarget.querySelector("#".concat(chipId));
            return {
              name: chipElement.innerText.toLowerCase(),
              score: 1
            };
          });
          resolve(result);
        });
        selectedKindsValues.then(function (result) {
          var urlWithFilters = Object(query_string__WEBPACK_IMPORTED_MODULE_3__["stringify"])({
            kinds: JSON.stringify(result),
            feature: 'kinds',
            event_id: self.data.get('identifier')
          }, {
            arrayFormat: 'bracket'
          });
          fetch("/retrain?".concat(urlWithFilters), {
            method: 'get',
            headers: {
              'X-Requested-With': 'XMLHttpRequest',
              'Content-type': 'text/javascript; charset=UTF-8',
              'X-CSRF-Token': Rails.csrfToken()
            },
            credentials: 'same-origin'
          }).then(function (response) {
            response.text().then(function (data) {
              eval(data);
            });
          }).catch(function (err) {
            console.log('Fetch Error :-S', err);
          });
        }).catch(function (err) {
          console.log(err);
        });
      }
    }
  }, {
    key: "chipController",
    get: function get() {
      var self = this;
      return self.application.getControllerForElementAndIdentifier(self.chipsKindsTarget, "chip");
    }
  }]);

  return KindsController;
}(stimulus__WEBPACK_IMPORTED_MODULE_0__["Controller"]);

KindsController.targets = ["dialog", "chipsKinds"];


/***/ }),

/***/ "./app/javascript/controllers/label_controller.js":
/*!********************************************************!*\
  !*** ./app/javascript/controllers/label_controller.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return LabelController; });
/* harmony import */ var stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stimulus */ "./node_modules/stimulus/index.js");
/* harmony import */ var _material_menu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @material/menu */ "./node_modules/@material/menu/dist/mdc.menu.js");
/* harmony import */ var _material_menu__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_menu__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @material/dialog */ "./node_modules/@material/dialog/dist/mdc.dialog.js");
/* harmony import */ var _material_dialog__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_material_dialog__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! query-string */ "./node_modules/query-string/index.js");
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(query_string__WEBPACK_IMPORTED_MODULE_3__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }






var LabelController =
/*#__PURE__*/
function (_Controller) {
  _inherits(LabelController, _Controller);

  function LabelController() {
    _classCallCheck(this, LabelController);

    return _possibleConstructorReturn(this, _getPrototypeOf(LabelController).apply(this, arguments));
  }

  _createClass(LabelController, [{
    key: "initialize",
    value: function initialize() {
      var self = this;
    }
  }, {
    key: "openMenu",
    value: function openMenu() {
      var self = this;
      var mdcMenu = new _material_menu__WEBPACK_IMPORTED_MODULE_1__["MDCMenu"](self.menuTarget);

      if (mdcMenu.open) {
        mdcMenu.open = false;
      } else {
        mdcMenu.open = true;
      }
    }
  }]);

  return LabelController;
}(stimulus__WEBPACK_IMPORTED_MODULE_0__["Controller"]);

LabelController.targets = ["menuButton", "menu"];


/***/ }),

/***/ "./app/javascript/controllers/snackbar_controller.js":
/*!***********************************************************!*\
  !*** ./app/javascript/controllers/snackbar_controller.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return SnackbarController; });
/* harmony import */ var stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stimulus */ "./node_modules/stimulus/index.js");
/* harmony import */ var modules_cache_system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! modules/cache-system */ "./app/javascript/modules/cache-system.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




var SnackbarController =
/*#__PURE__*/
function (_Controller) {
  _inherits(SnackbarController, _Controller);

  function SnackbarController() {
    _classCallCheck(this, SnackbarController);

    return _possibleConstructorReturn(this, _getPrototypeOf(SnackbarController).apply(this, arguments));
  }

  _createClass(SnackbarController, [{
    key: "initialize",
    value: function initialize() {
      modules_cache_system__WEBPACK_IMPORTED_MODULE_1__["CacheSystem"].clearCache();
      caches.open('v1:sw-cache-feed-page').then(function (cache) {
        cache.delete('/').then(function (response) {
          if (response) {
            cache.add('/');
          }
        });
      });
    }
  }]);

  return SnackbarController;
}(stimulus__WEBPACK_IMPORTED_MODULE_0__["Controller"]);

SnackbarController.targets = [];


/***/ }),

/***/ "./app/javascript/controllers/tags_controller.js":
/*!*******************************************************!*\
  !*** ./app/javascript/controllers/tags_controller.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return TagsController; });
/* harmony import */ var stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stimulus */ "./node_modules/stimulus/index.js");
/* harmony import */ var _material_textfield__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @material/textfield */ "./node_modules/@material/textfield/dist/mdc.textfield.js");
/* harmony import */ var _material_textfield__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_textfield__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @material/dialog */ "./node_modules/@material/dialog/dist/mdc.dialog.js");
/* harmony import */ var _material_dialog__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_material_dialog__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! query-string */ "./node_modules/query-string/index.js");
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(query_string__WEBPACK_IMPORTED_MODULE_3__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }






var TagsController =
/*#__PURE__*/
function (_Controller) {
  _inherits(TagsController, _Controller);

  function TagsController() {
    _classCallCheck(this, TagsController);

    return _possibleConstructorReturn(this, _getPrototypeOf(TagsController).apply(this, arguments));
  }

  _createClass(TagsController, [{
    key: "initialize",
    value: function initialize() {
      var self = this;
    }
  }, {
    key: "openDialog",
    value: function openDialog() {
      var self = this;
      self.dialog = new _material_dialog__WEBPACK_IMPORTED_MODULE_2__["MDCDialog"](self.dialogTarget);
      self.chipsetInput = new _material_textfield__WEBPACK_IMPORTED_MODULE_1__["MDCTextField"](self.chipController.inputContainerTarget);
      self.dialog.open();
    }
  }, {
    key: "saveTagsSelected",
    value: function saveTagsSelected() {
      var self = this;

      if (self.hasTagsTarget) {
        var selectedTagsValues = new Promise(function (resolve, reject) {
          var result = self.chipController.MDCChipSet.selectedChipIds.map(function (chipId) {
            var chipElement = self.chipController.chipsetTarget.querySelector("#".concat(chipId));
            return chipElement.innerText.toLowerCase();
          });
          resolve(result);
        });
        selectedTagsValues.then(function (result) {
          var urlWithFilters = Object(query_string__WEBPACK_IMPORTED_MODULE_3__["stringify"])({
            tags: JSON.stringify(result),
            feature: 'tags',
            type: self.data.get('type'),
            event_id: self.data.get('identifier')
          }, {
            arrayFormat: 'bracket'
          });
          fetch("/retrain?".concat(urlWithFilters), {
            method: 'get',
            headers: {
              'X-Requested-With': 'XMLHttpRequest',
              'Content-type': 'application/javascript; charset=UTF-8',
              'X-CSRF-Token': Rails.csrfToken()
            },
            credentials: 'same-origin'
          }).then(function (response) {
            if (response.status !== 200) {
              console.log('Looks like there was a problem. Status Code: ' + response.status);
              return;
            }

            response.text().then(function (data) {
              eval(data);
            });
          }).catch(function (err) {
            console.log('Fetch Error :-S', err);
          });
        }).catch(function (err) {
          console.log(err);
        });
      }
    }
  }, {
    key: "chipController",
    get: function get() {
      var self = this;
      return self.application.getControllerForElementAndIdentifier(self.tagsTarget, "chip");
    }
  }]);

  return TagsController;
}(stimulus__WEBPACK_IMPORTED_MODULE_0__["Controller"]);

TagsController.targets = ["dialog", "tags"];


/***/ }),

/***/ "./app/javascript/modules/cache-system.js":
/*!************************************************!*\
  !*** ./app/javascript/modules/cache-system.js ***!
  \************************************************/
/*! exports provided: CacheSystem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CacheSystem", function() { return CacheSystem; });
/* harmony import */ var turbolinks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! turbolinks */ "./node_modules/turbolinks/dist/turbolinks.js");
/* harmony import */ var turbolinks__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(turbolinks__WEBPACK_IMPORTED_MODULE_0__);


var CacheSystem = function () {
  var module = {};
  var status = {
    turbolinksStarted: false
  };

  var startTurbolinks = function startTurbolinks() {
    turbolinks__WEBPACK_IMPORTED_MODULE_0__["start"]();
    status.turbolinksStarted = true;
    console.log("[TURBOLINKS]: started");
  };

  module.activateTurbolinks = function () {
    var feedCache = caches.has("v1:sw-cache-feed-page");
    var staticResourcesCache = caches.has("v1:sw-cache-static-resources");
    var staticImagesCache = caches.has("v1:sw-cache-static-images");
    var gFontsCache = caches.has("v1:sw-cache-google-fonts-stylesheets");
    var wFontsCache = caches.has("v1:sw-cache-google-fonts-webfonts");
    Promise.all([feedCache, staticResourcesCache, staticImagesCache, gFontsCache, wFontsCache]).then(function (hasCaches) {
      var hasCachedPrincipalResources = hasCaches.every(Boolean);

      if (hasCachedPrincipalResources) {
        startTurbolinks();
      }
    }).catch(function (reason) {
      console.log(reason.message);
    });
  };

  module.clearCache = function (cacheNames, attrs) {
    if (!cacheNames || cacheNames.includes("feed-page")) {
      caches.open("v1:sw-cache-feed-page").then(function (cache) {
        cache.delete("/").then(function (response) {
          if (response) {
            console.log("Cache v1:sw-cache-feed-page deleted: ", response);
          }
        });
      }).catch(function (reason) {
        console.log(reason);
      });
    }

    if (cacheNames && cacheNames.includes("events-page")) {
      caches.open("v1:sw-cache-events-page").then(function (cache) {
        cache.delete("/events/".concat(attrs.event.identifier)).then(function (response) {
          if (response) {
            console.log("v1:sw-cache-events-page deleted: ", response); // cache.add(`/events/${attrs.event.identifier}`);
          }
        });
      }).catch(function (reason) {
        console.log(reason);
      });
    }

    if (status.turbolinksStarted) {
      turbolinks__WEBPACK_IMPORTED_MODULE_0__["clearCache"]();
      console.log("[TURBOLINKS] cache cleaned: true");
    }
  };

  window.CacheSystem = module;
  return module;
}();



/***/ }),

/***/ "./app/javascript/packs/application.js":
/*!*********************************************!*\
  !*** ./app/javascript/packs/application.js ***!
  \*********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var controllers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! controllers */ "./app/javascript/controllers/index.js");
/* harmony import */ var material_components_web__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! material-components-web */ "./node_modules/material-components-web/dist/material-components-web.js");
/* harmony import */ var material_components_web__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(material_components_web__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _material_top_app_bar_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @material/top-app-bar/index */ "./node_modules/@material/top-app-bar/index.js");
/* harmony import */ var _material_list__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @material/list */ "./node_modules/@material/list/dist/mdc.list.js");
/* harmony import */ var _material_list__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_material_list__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _material_ripple__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @material/ripple */ "./node_modules/@material/ripple/dist/mdc.ripple.js");
/* harmony import */ var _material_ripple__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_material_ripple__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _material_textfield__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @material/textfield */ "./node_modules/@material/textfield/dist/mdc.textfield.js");
/* harmony import */ var _material_textfield__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_material_textfield__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _material_select__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @material/select */ "./node_modules/@material/select/dist/mdc.select.js");
/* harmony import */ var _material_select__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_material_select__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _material_form_field__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @material/form-field */ "./node_modules/@material/form-field/dist/mdc.formField.js");
/* harmony import */ var _material_form_field__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_material_form_field__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _material_checkbox__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @material/checkbox */ "./node_modules/@material/checkbox/dist/mdc.checkbox.js");
/* harmony import */ var _material_checkbox__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_material_checkbox__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _material_menu__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @material/menu */ "./node_modules/@material/menu/dist/mdc.menu.js");
/* harmony import */ var _material_menu__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_material_menu__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _material_snackbar__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @material/snackbar */ "./node_modules/@material/snackbar/dist/mdc.snackbar.js");
/* harmony import */ var _material_snackbar__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_material_snackbar__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var modules_cache_system__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! modules/cache-system */ "./app/javascript/modules/cache-system.js");
/* eslint no-console:0 */
// This file is automatically compiled by Webpack, along with any other files
// present in this directory. You're encouraged to place your actual application logic in
// a relevant structure within app/javascript and only use these pack files to reference
// that code so it'll be compiled.
//
// To reference this file, add <%= javascript_pack_tag 'application' %> to the appropriate
// layout file, like app/views/layouts/application.html.erb
console.log("Hello World from Webpacker");
 // import 'default-passive-events'












modules_cache_system__WEBPACK_IMPORTED_MODULE_11__["CacheSystem"].activateTurbolinks();

var applicationScript = function applicationScript() {
  // TopAppBar
  var topAppBarElement = document.querySelector(".mdc-top-app-bar");
  var topAppBar = new _material_top_app_bar_index__WEBPACK_IMPORTED_MODULE_2__["MDCTopAppBar"](topAppBarElement); // Button

  var buttons = document.querySelectorAll(".mdc-button");
  var fabs = document.querySelectorAll(".mdc-fab");
  var icons = document.querySelectorAll(".mdc-icon-button");
  buttons.forEach(function (button) {
    if (button) {
      new _material_ripple__WEBPACK_IMPORTED_MODULE_4__["MDCRipple"](button);
    }
  });
  fabs.forEach(function (fab) {
    if (fab) {
      new _material_ripple__WEBPACK_IMPORTED_MODULE_4__["MDCRipple"](fab);
    }
  });
  icons.forEach(function (icon) {
    new material_components_web__WEBPACK_IMPORTED_MODULE_1__["iconButton"].MDCIconButtonToggle(icon);
    var ripple = new _material_ripple__WEBPACK_IMPORTED_MODULE_4__["MDCRipple"](icon);
    ripple.unbounded = true;
  }); // Textfield

  var fields = document.querySelectorAll(".mdc-text-field");
  fields.forEach(function (field) {
    // const chatInput = field.querySelector('[data-target="chat.input"]');
    // if (chatInput) {
    new _material_textfield__WEBPACK_IMPORTED_MODULE_5__["MDCTextField"](field); // }
  }); // Snackbar

  var snackbarElem = document.querySelector(".mdc-snackbar");

  if (snackbarElem) {
    var snackbar = new _material_snackbar__WEBPACK_IMPORTED_MODULE_10__["MDCSnackbar"](snackbarElem);
    snackbar.open();
  } // Select


  var selects = document.querySelectorAll(".mdc-select");
  selects.forEach(function (select) {
    new _material_select__WEBPACK_IMPORTED_MODULE_6__["MDCSelect"](select);
  }); // Checkbox

  var checkboxes = document.querySelectorAll(".mdc-checkbox");
  checkboxes.forEach(function (checkbox) {
    new _material_checkbox__WEBPACK_IMPORTED_MODULE_8__["MDCCheckbox"](checkbox);
  }); // Menu

  var menus = document.querySelectorAll(".mdc-menu");
  menus.forEach(function (menu) {
    new _material_menu__WEBPACK_IMPORTED_MODULE_9__["MDCMenu"](menu);
  });
};

document.addEventListener("DOMContentLoaded", applicationScript, false);
document.addEventListener("turbolinks:load", applicationScript, false);

/***/ }),

/***/ "./node_modules/@material/base/component.js":
/*!**************************************************!*\
  !*** ./node_modules/@material/base/component.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _foundation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./foundation */ "./node_modules/@material/base/foundation.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @template F
 */

var MDCComponent =
/*#__PURE__*/
function () {
  _createClass(MDCComponent, null, [{
    key: "attachTo",

    /**
     * @param {!Element} root
     * @return {!MDCComponent}
     */
    value: function attachTo(root) {
      // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and
      // returns an instantiated component with its root set to that element. Also note that in the cases of
      // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized
      // from getDefaultFoundation().
      return new MDCComponent(root, new _foundation__WEBPACK_IMPORTED_MODULE_0__["default"]());
    }
    /**
     * @param {!Element} root
     * @param {F=} foundation
     * @param {...?} args
     */

  }]);

  function MDCComponent(root) {
    var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

    _classCallCheck(this, MDCComponent);

    /** @protected {!Element} */
    this.root_ = root;

    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    this.initialize.apply(this, args); // Note that we initialize foundation here and not within the constructor's default param so that
    // this.root_ is defined and can be used within the foundation class.

    /** @protected {!F} */

    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;
    this.foundation_.init();
    this.initialSyncWithDOM();
  }

  _createClass(MDCComponent, [{
    key: "initialize",
    value: function initialize()
    /* ...args */
    {} // Subclasses can override this to do any additional setup work that would be considered part of a
    // "constructor". Essentially, it is a hook into the parent constructor before the foundation is
    // initialized. Any additional arguments besides root and foundation will be passed in here.

    /**
     * @return {!F} foundation
     */

  }, {
    key: "getDefaultFoundation",
    value: function getDefaultFoundation() {
      // Subclasses must override this method to return a properly configured foundation class for the
      // component.
      throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');
    }
  }, {
    key: "initialSyncWithDOM",
    value: function initialSyncWithDOM() {// Subclasses should override this method if they need to perform work to synchronize with a host DOM
      // object. An example of this would be a form control wrapper that needs to synchronize its internal state
      // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM
      // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.
    }
  }, {
    key: "destroy",
    value: function destroy() {
      // Subclasses may implement this method to release any resources / deregister any listeners they have
      // attached. An example of this might be deregistering a resize event from the window object.
      this.foundation_.destroy();
    }
    /**
     * Wrapper method to add an event listener to the component's root element. This is most useful when
     * listening for custom events.
     * @param {string} evtType
     * @param {!Function} handler
     */

  }, {
    key: "listen",
    value: function listen(evtType, handler) {
      this.root_.addEventListener(evtType, handler);
    }
    /**
     * Wrapper method to remove an event listener to the component's root element. This is most useful when
     * unlistening for custom events.
     * @param {string} evtType
     * @param {!Function} handler
     */

  }, {
    key: "unlisten",
    value: function unlisten(evtType, handler) {
      this.root_.removeEventListener(evtType, handler);
    }
    /**
     * Fires a cross-browser-compatible custom event from the component root of the given type,
     * with the given data.
     * @param {string} evtType
     * @param {!Object} evtData
     * @param {boolean=} shouldBubble
     */

  }, {
    key: "emit",
    value: function emit(evtType, evtData) {
      var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var evt;

      if (typeof CustomEvent === 'function') {
        evt = new CustomEvent(evtType, {
          detail: evtData,
          bubbles: shouldBubble
        });
      } else {
        evt = document.createEvent('CustomEvent');
        evt.initCustomEvent(evtType, shouldBubble, false, evtData);
      }

      this.root_.dispatchEvent(evt);
    }
  }]);

  return MDCComponent;
}();

/* harmony default export */ __webpack_exports__["default"] = (MDCComponent);

/***/ }),

/***/ "./node_modules/@material/base/foundation.js":
/*!***************************************************!*\
  !*** ./node_modules/@material/base/foundation.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @template A
 */
var MDCFoundation =
/*#__PURE__*/
function () {
  _createClass(MDCFoundation, null, [{
    key: "cssClasses",

    /** @return enum{cssClasses} */
    get: function get() {
      // Classes extending MDCFoundation should implement this method to return an object which exports every
      // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}
      return {};
    }
    /** @return enum{strings} */

  }, {
    key: "strings",
    get: function get() {
      // Classes extending MDCFoundation should implement this method to return an object which exports all
      // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}
      return {};
    }
    /** @return enum{numbers} */

  }, {
    key: "numbers",
    get: function get() {
      // Classes extending MDCFoundation should implement this method to return an object which exports all
      // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}
      return {};
    }
    /** @return {!Object} */

  }, {
    key: "defaultAdapter",
    get: function get() {
      // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient
      // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter
      // validation.
      return {};
    }
    /**
     * @param {A=} adapter
     */

  }]);

  function MDCFoundation() {
    var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, MDCFoundation);

    /** @protected {!A} */
    this.adapter_ = adapter;
  }

  _createClass(MDCFoundation, [{
    key: "init",
    value: function init() {// Subclasses should override this method to perform initialization routines (registering events, etc.)
    }
  }, {
    key: "destroy",
    value: function destroy() {// Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)
    }
  }]);

  return MDCFoundation;
}();

/* harmony default export */ __webpack_exports__["default"] = (MDCFoundation);

/***/ }),

/***/ "./node_modules/@material/checkbox/dist/mdc.checkbox.js":
/*!**************************************************************!*\
  !*** ./node_modules/@material/checkbox/dist/mdc.checkbox.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 Material Components for the Web
 Copyright (c) 2019 Google Inc.
 License: MIT
*/
(function webpackUniversalModuleDefinition(root, factory) {
  if (( false ? undefined : _typeof(exports)) === 'object' && ( false ? undefined : _typeof(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}
})(this, function () {
  return (
    /******/
    function (modules) {
      // webpackBootstrap

      /******/
      // The module cache

      /******/
      var installedModules = {};
      /******/

      /******/
      // The require function

      /******/

      function __webpack_require__(moduleId) {
        /******/

        /******/
        // Check if module is in cache

        /******/
        if (installedModules[moduleId]) {
          /******/
          return installedModules[moduleId].exports;
          /******/
        }
        /******/
        // Create a new module (and put it into the cache)

        /******/


        var module = installedModules[moduleId] = {
          /******/
          i: moduleId,

          /******/
          l: false,

          /******/
          exports: {}
          /******/

        };
        /******/

        /******/
        // Execute the module function

        /******/

        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/

        /******/
        // Flag the module as loaded

        /******/

        module.l = true;
        /******/

        /******/
        // Return the exports of the module

        /******/

        return module.exports;
        /******/
      }
      /******/

      /******/

      /******/
      // expose the modules object (__webpack_modules__)

      /******/


      __webpack_require__.m = modules;
      /******/

      /******/
      // expose the module cache

      /******/

      __webpack_require__.c = installedModules;
      /******/

      /******/
      // define getter function for harmony exports

      /******/

      __webpack_require__.d = function (exports, name, getter) {
        /******/
        if (!__webpack_require__.o(exports, name)) {
          /******/
          Object.defineProperty(exports, name, {
            /******/
            configurable: false,

            /******/
            enumerable: true,

            /******/
            get: getter
            /******/

          });
          /******/
        }
        /******/

      };
      /******/

      /******/
      // getDefaultExport function for compatibility with non-harmony modules

      /******/


      __webpack_require__.n = function (module) {
        /******/
        var getter = module && module.__esModule ?
        /******/
        function getDefault() {
          return module['default'];
        } :
        /******/
        function getModuleExports() {
          return module;
        };
        /******/

        __webpack_require__.d(getter, 'a', getter);
        /******/


        return getter;
        /******/
      };
      /******/

      /******/
      // Object.prototype.hasOwnProperty.call

      /******/


      __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      /******/

      /******/
      // __webpack_public_path__

      /******/


      __webpack_require__.p = "";
      /******/

      /******/
      // Load entry module and return exports

      /******/

      return __webpack_require__(__webpack_require__.s = 88);
      /******/
    }(
    /************************************************************************/

    /******/
    {
      /***/
      0:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @template A
         */


        var MDCFoundation = function () {
          _createClass(MDCFoundation, null, [{
            key: "cssClasses",

            /** @return enum{cssClasses} */
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports every
              // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}
              return {};
            }
            /** @return enum{strings} */

          }, {
            key: "strings",
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports all
              // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}
              return {};
            }
            /** @return enum{numbers} */

          }, {
            key: "numbers",
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports all
              // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}
              return {};
            }
            /** @return {!Object} */

          }, {
            key: "defaultAdapter",
            get: function get() {
              // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient
              // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter
              // validation.
              return {};
            }
            /**
             * @param {A=} adapter
             */

          }]);

          function MDCFoundation() {
            var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

            _classCallCheck(this, MDCFoundation);
            /** @protected {!A} */


            this.adapter_ = adapter;
          }

          _createClass(MDCFoundation, [{
            key: "init",
            value: function init() {// Subclasses should override this method to perform initialization routines (registering events, etc.)
            }
          }, {
            key: "destroy",
            value: function destroy() {// Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)
            }
          }]);

          return MDCFoundation;
        }();
        /* harmony default export */


        __webpack_exports__["a"] = MDCFoundation;
        /***/
      },

      /***/
      1:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0);

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @template F
         */


        var MDCComponent = function () {
          _createClass(MDCComponent, null, [{
            key: 'attachTo',

            /**
             * @param {!Element} root
             * @return {!MDCComponent}
             */
            value: function attachTo(root) {
              // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and
              // returns an instantiated component with its root set to that element. Also note that in the cases of
              // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized
              // from getDefaultFoundation().
              return new MDCComponent(root, new __WEBPACK_IMPORTED_MODULE_0__foundation__["a"
              /* default */
              ]());
            }
            /**
             * @param {!Element} root
             * @param {F=} foundation
             * @param {...?} args
             */

          }]);

          function MDCComponent(root) {
            var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

            _classCallCheck(this, MDCComponent);
            /** @protected {!Element} */


            this.root_ = root;

            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              args[_key - 2] = arguments[_key];
            }

            this.initialize.apply(this, args); // Note that we initialize foundation here and not within the constructor's default param so that
            // this.root_ is defined and can be used within the foundation class.

            /** @protected {!F} */

            this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;
            this.foundation_.init();
            this.initialSyncWithDOM();
          }

          _createClass(MDCComponent, [{
            key: 'initialize',
            value: function initialize()
            /* ...args */
            {} // Subclasses can override this to do any additional setup work that would be considered part of a
            // "constructor". Essentially, it is a hook into the parent constructor before the foundation is
            // initialized. Any additional arguments besides root and foundation will be passed in here.

            /**
             * @return {!F} foundation
             */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              // Subclasses must override this method to return a properly configured foundation class for the
              // component.
              throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');
            }
          }, {
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {// Subclasses should override this method if they need to perform work to synchronize with a host DOM
              // object. An example of this would be a form control wrapper that needs to synchronize its internal state
              // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM
              // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.
            }
          }, {
            key: 'destroy',
            value: function destroy() {
              // Subclasses may implement this method to release any resources / deregister any listeners they have
              // attached. An example of this might be deregistering a resize event from the window object.
              this.foundation_.destroy();
            }
            /**
             * Wrapper method to add an event listener to the component's root element. This is most useful when
             * listening for custom events.
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: 'listen',
            value: function listen(evtType, handler) {
              this.root_.addEventListener(evtType, handler);
            }
            /**
             * Wrapper method to remove an event listener to the component's root element. This is most useful when
             * unlistening for custom events.
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: 'unlisten',
            value: function unlisten(evtType, handler) {
              this.root_.removeEventListener(evtType, handler);
            }
            /**
             * Fires a cross-browser-compatible custom event from the component root of the given type,
             * with the given data.
             * @param {string} evtType
             * @param {!Object} evtData
             * @param {boolean=} shouldBubble
             */

          }, {
            key: 'emit',
            value: function emit(evtType, evtData) {
              var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
              var evt = void 0;

              if (typeof CustomEvent === 'function') {
                evt = new CustomEvent(evtType, {
                  detail: evtData,
                  bubbles: shouldBubble
                });
              } else {
                evt = document.createEvent('CustomEvent');
                evt.initCustomEvent(evtType, shouldBubble, false, evtData);
              }

              this.root_.dispatchEvent(evt);
            }
          }]);

          return MDCComponent;
        }();
        /* harmony default export */


        __webpack_exports__["a"] = MDCComponent;
        /***/
      },

      /***/
      14:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "transformStyleProperties", function () {
          return transformStyleProperties;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "getCorrectEventName", function () {
          return getCorrectEventName;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "getCorrectPropertyName", function () {
          return getCorrectPropertyName;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @typedef {{
         *   noPrefix: string,
         *   webkitPrefix: string,
         *   styleProperty: string
         * }}
         */


        var VendorPropertyMapType = void 0;
        /** @const {Object<string, !VendorPropertyMapType>} */

        var eventTypeMap = {
          'animationstart': {
            noPrefix: 'animationstart',
            webkitPrefix: 'webkitAnimationStart',
            styleProperty: 'animation'
          },
          'animationend': {
            noPrefix: 'animationend',
            webkitPrefix: 'webkitAnimationEnd',
            styleProperty: 'animation'
          },
          'animationiteration': {
            noPrefix: 'animationiteration',
            webkitPrefix: 'webkitAnimationIteration',
            styleProperty: 'animation'
          },
          'transitionend': {
            noPrefix: 'transitionend',
            webkitPrefix: 'webkitTransitionEnd',
            styleProperty: 'transition'
          }
        };
        /** @const {Object<string, !VendorPropertyMapType>} */

        var cssPropertyMap = {
          'animation': {
            noPrefix: 'animation',
            webkitPrefix: '-webkit-animation'
          },
          'transform': {
            noPrefix: 'transform',
            webkitPrefix: '-webkit-transform'
          },
          'transition': {
            noPrefix: 'transition',
            webkitPrefix: '-webkit-transition'
          }
        };
        /**
         * @param {!Object} windowObj
         * @return {boolean}
         */

        function hasProperShape(windowObj) {
          return windowObj['document'] !== undefined && typeof windowObj['document']['createElement'] === 'function';
        }
        /**
         * @param {string} eventType
         * @return {boolean}
         */


        function eventFoundInMaps(eventType) {
          return eventType in eventTypeMap || eventType in cssPropertyMap;
        }
        /**
         * @param {string} eventType
         * @param {!Object<string, !VendorPropertyMapType>} map
         * @param {!Element} el
         * @return {string}
         */


        function getJavaScriptEventName(eventType, map, el) {
          return map[eventType].styleProperty in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;
        }
        /**
         * Helper function to determine browser prefix for CSS3 animation events
         * and property names.
         * @param {!Object} windowObj
         * @param {string} eventType
         * @return {string}
         */


        function getAnimationName(windowObj, eventType) {
          if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType)) {
            return eventType;
          }

          var map =
          /** @type {!Object<string, !VendorPropertyMapType>} */
          eventType in eventTypeMap ? eventTypeMap : cssPropertyMap;
          var el = windowObj['document']['createElement']('div');
          var eventName = '';

          if (map === eventTypeMap) {
            eventName = getJavaScriptEventName(eventType, map, el);
          } else {
            eventName = map[eventType].noPrefix in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;
          }

          return eventName;
        } // Public functions to access getAnimationName() for JavaScript events or CSS
        // property names.


        var transformStyleProperties = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'MSTransform'];
        /**
         * @param {!Object} windowObj
         * @param {string} eventType
         * @return {string}
         */

        function getCorrectEventName(windowObj, eventType) {
          return getAnimationName(windowObj, eventType);
        }
        /**
         * @param {!Object} windowObj
         * @param {string} eventType
         * @return {string}
         */


        function getCorrectPropertyName(windowObj, eventType) {
          return getAnimationName(windowObj, eventType);
        }
        /***/

      },

      /***/
      2:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "supportsCssVariables", function () {
          return supportsCssVariables;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "applyPassive", function () {
          return applyPassive;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "getMatchesProperty", function () {
          return getMatchesProperty;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "getNormalizedEventCoords", function () {
          return getNormalizedEventCoords;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.
         * @private {boolean|undefined}
         */


        var supportsCssVariables_ = void 0;
        /**
         * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.
         * @private {boolean|undefined}
         */

        var supportsPassive_ = void 0;
        /**
         * @param {!Window} windowObj
         * @return {boolean}
         */

        function detectEdgePseudoVarBug(windowObj) {
          // Detect versions of Edge with buggy var() support
          // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/
          var document = windowObj.document;
          var node = document.createElement('div');
          node.className = 'mdc-ripple-surface--test-edge-var-bug';
          document.body.appendChild(node); // The bug exists if ::before style ends up propagating to the parent element.
          // Additionally, getComputedStyle returns null in iframes with display: "none" in Firefox,
          // but Firefox is known to support CSS custom properties correctly.
          // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397

          var computedStyle = windowObj.getComputedStyle(node);
          var hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';
          node.remove();
          return hasPseudoVarBug;
        }
        /**
         * @param {!Window} windowObj
         * @param {boolean=} forceRefresh
         * @return {boolean|undefined}
         */


        function supportsCssVariables(windowObj) {
          var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          var supportsCssVariables = supportsCssVariables_;

          if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {
            return supportsCssVariables;
          }

          var supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';

          if (!supportsFunctionPresent) {
            return;
          }

          var explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes'); // See: https://bugs.webkit.org/show_bug.cgi?id=154669
          // See: README section on Safari

          var weAreFeatureDetectingSafari10plus = windowObj.CSS.supports('(--css-vars: yes)') && windowObj.CSS.supports('color', '#00000000');

          if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {
            supportsCssVariables = !detectEdgePseudoVarBug(windowObj);
          } else {
            supportsCssVariables = false;
          }

          if (!forceRefresh) {
            supportsCssVariables_ = supportsCssVariables;
          }

          return supportsCssVariables;
        } //

        /**
         * Determine whether the current browser supports passive event listeners, and if so, use them.
         * @param {!Window=} globalObj
         * @param {boolean=} forceRefresh
         * @return {boolean|!EventListenerOptions}
         */


        function applyPassive() {
          var globalObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
          var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

          if (supportsPassive_ === undefined || forceRefresh) {
            var isSupported = false;

            try {
              globalObj.document.addEventListener('test', null, {
                get passive() {
                  isSupported = true;
                  return isSupported;
                }

              });
            } catch (e) {}

            supportsPassive_ = isSupported;
          }

          return supportsPassive_ ?
          /** @type {!EventListenerOptions} */
          {
            passive: true
          } : false;
        }
        /**
         * @param {!Object} HTMLElementPrototype
         * @return {string}
         */


        function getMatchesProperty(HTMLElementPrototype) {
          /**
           * Order is important because we return the first existing method we find.
           * Do not change the order of the items in the below array.
           */
          var matchesMethods = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'];
          var method = 'matches';

          for (var i = 0; i < matchesMethods.length; i++) {
            var matchesMethod = matchesMethods[i];

            if (matchesMethod in HTMLElementPrototype) {
              method = matchesMethod;
              break;
            }
          }

          return method;
        }
        /**
         * @param {!Event} ev
         * @param {{x: number, y: number}} pageOffset
         * @param {!ClientRect} clientRect
         * @return {{x: number, y: number}}
         */


        function getNormalizedEventCoords(ev, pageOffset, clientRect) {
          var x = pageOffset.x,
              y = pageOffset.y;
          var documentX = x + clientRect.left;
          var documentY = y + clientRect.top;
          var normalizedX = void 0;
          var normalizedY = void 0; // Determine touch point relative to the ripple container.

          if (ev.type === 'touchstart') {
            ev =
            /** @type {!TouchEvent} */
            ev;
            normalizedX = ev.changedTouches[0].pageX - documentX;
            normalizedY = ev.changedTouches[0].pageY - documentY;
          } else {
            ev =
            /** @type {!MouseEvent} */
            ev;
            normalizedX = ev.pageX - documentX;
            normalizedY = ev.pageY - documentY;
          }

          return {
            x: normalizedX,
            y: normalizedY
          };
        }
        /***/

      },

      /***/
      3:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint no-unused-vars: [2, {"args": "none"}] */

        /**
         * Adapter for MDC Ripple. Provides an interface for managing
         * - classes
         * - dom
         * - CSS variables
         * - position
         * - dimensions
         * - scroll position
         * - event handlers
         * - unbounded, active and disabled states
         *
         * Additionally, provides type information for the adapter to the Closure
         * compiler.
         *
         * Implement this adapter for your framework of choice to delegate updates to
         * the component in your framework of choice. See architecture documentation
         * for more details.
         * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
         *
         * @record
         */


        var MDCRippleAdapter = function () {
          function MDCRippleAdapter() {
            _classCallCheck(this, MDCRippleAdapter);
          }

          _createClass(MDCRippleAdapter, [{
            key: "browserSupportsCssVars",

            /** @return {boolean} */
            value: function browserSupportsCssVars() {}
            /** @return {boolean} */

          }, {
            key: "isUnbounded",
            value: function isUnbounded() {}
            /** @return {boolean} */

          }, {
            key: "isSurfaceActive",
            value: function isSurfaceActive() {}
            /** @return {boolean} */

          }, {
            key: "isSurfaceDisabled",
            value: function isSurfaceDisabled() {}
            /** @param {string} className */

          }, {
            key: "addClass",
            value: function addClass(className) {}
            /** @param {string} className */

          }, {
            key: "removeClass",
            value: function removeClass(className) {}
            /** @param {!EventTarget} target */

          }, {
            key: "containsEventTarget",
            value: function containsEventTarget(target) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "registerInteractionHandler",
            value: function registerInteractionHandler(evtType, handler) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "deregisterInteractionHandler",
            value: function deregisterInteractionHandler(evtType, handler) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "registerDocumentInteractionHandler",
            value: function registerDocumentInteractionHandler(evtType, handler) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "deregisterDocumentInteractionHandler",
            value: function deregisterDocumentInteractionHandler(evtType, handler) {}
            /**
             * @param {!Function} handler
             */

          }, {
            key: "registerResizeHandler",
            value: function registerResizeHandler(handler) {}
            /**
             * @param {!Function} handler
             */

          }, {
            key: "deregisterResizeHandler",
            value: function deregisterResizeHandler(handler) {}
            /**
             * @param {string} varName
             * @param {?number|string} value
             */

          }, {
            key: "updateCssVariable",
            value: function updateCssVariable(varName, value) {}
            /** @return {!ClientRect} */

          }, {
            key: "computeBoundingRect",
            value: function computeBoundingRect() {}
            /** @return {{x: number, y: number}} */

          }, {
            key: "getWindowPageOffset",
            value: function getWindowPageOffset() {}
          }]);

          return MDCRippleAdapter;
        }();
        /* unused harmony default export */


        var _unused_webpack_default_export = MDCRippleAdapter;
        /***/
      },

      /***/
      4:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "MDCRipple", function () {
          return MDCRipple;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "RippleCapableSurface", function () {
          return RippleCapableSurface;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(3);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(5);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(2);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCRippleFoundation", function () {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
        });
        /* harmony reexport (module object) */


        __webpack_require__.d(__webpack_exports__, "util", function () {
          return __WEBPACK_IMPORTED_MODULE_3__util__;
        });

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @extends MDCComponent<!MDCRippleFoundation>
         */


        var MDCRipple = function (_MDCComponent) {
          _inherits(MDCRipple, _MDCComponent);
          /** @param {...?} args */


          function MDCRipple() {
            var _ref;

            _classCallCheck(this, MDCRipple);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            /** @type {boolean} */


            var _this = _possibleConstructorReturn(this, (_ref = MDCRipple.__proto__ || Object.getPrototypeOf(MDCRipple)).call.apply(_ref, [this].concat(args)));

            _this.disabled = false;
            /** @private {boolean} */

            _this.unbounded_;
            return _this;
          }
          /**
           * @param {!Element} root
           * @param {{isUnbounded: (boolean|undefined)}=} options
           * @return {!MDCRipple}
           */


          _createClass(MDCRipple, [{
            key: 'setUnbounded_',

            /**
             * Closure Compiler throws an access control error when directly accessing a
             * protected or private property inside a getter/setter, like unbounded above.
             * By accessing the protected property inside a method, we solve that problem.
             * That's why this function exists.
             * @private
             */
            value: function setUnbounded_() {
              this.foundation_.setUnbounded(this.unbounded_);
            }
          }, {
            key: 'activate',
            value: function activate() {
              this.foundation_.activate();
            }
          }, {
            key: 'deactivate',
            value: function deactivate() {
              this.foundation_.deactivate();
            }
          }, {
            key: 'layout',
            value: function layout() {
              this.foundation_.layout();
            }
            /**
             * @return {!MDCRippleFoundation}
             * @override
             */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
              /* default */
              ](MDCRipple.createAdapter(this));
            }
            /** @override */

          }, {
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {
              this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;
            }
          }, {
            key: 'unbounded',

            /** @return {boolean} */
            get: function get() {
              return this.unbounded_;
            }
            /** @param {boolean} unbounded */
            ,
            set: function set(unbounded) {
              this.unbounded_ = Boolean(unbounded);
              this.setUnbounded_();
            }
          }], [{
            key: 'attachTo',
            value: function attachTo(root) {
              var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
                  _ref2$isUnbounded = _ref2.isUnbounded,
                  isUnbounded = _ref2$isUnbounded === undefined ? undefined : _ref2$isUnbounded;

              var ripple = new MDCRipple(root); // Only override unbounded behavior if option is explicitly specified

              if (isUnbounded !== undefined) {
                ripple.unbounded =
                /** @type {boolean} */
                isUnbounded;
              }

              return ripple;
            }
            /**
             * @param {!RippleCapableSurface} instance
             * @return {!MDCRippleAdapter}
             */

          }, {
            key: 'createAdapter',
            value: function createAdapter(instance) {
              var MATCHES = __WEBPACK_IMPORTED_MODULE_3__util__["getMatchesProperty"](HTMLElement.prototype);

              return {
                browserSupportsCssVars: function browserSupportsCssVars() {
                  return __WEBPACK_IMPORTED_MODULE_3__util__["supportsCssVariables"](window);
                },
                isUnbounded: function isUnbounded() {
                  return instance.unbounded;
                },
                isSurfaceActive: function isSurfaceActive() {
                  return instance.root_[MATCHES](':active');
                },
                isSurfaceDisabled: function isSurfaceDisabled() {
                  return instance.disabled;
                },
                addClass: function addClass(className) {
                  return instance.root_.classList.add(className);
                },
                removeClass: function removeClass(className) {
                  return instance.root_.classList.remove(className);
                },
                containsEventTarget: function containsEventTarget(target) {
                  return instance.root_.contains(target);
                },
                registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
                  return instance.root_.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
                  return instance.root_.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                registerDocumentInteractionHandler: function registerDocumentInteractionHandler(evtType, handler) {
                  return document.documentElement.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler(evtType, handler) {
                  return document.documentElement.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                registerResizeHandler: function registerResizeHandler(handler) {
                  return window.addEventListener('resize', handler);
                },
                deregisterResizeHandler: function deregisterResizeHandler(handler) {
                  return window.removeEventListener('resize', handler);
                },
                updateCssVariable: function updateCssVariable(varName, value) {
                  return instance.root_.style.setProperty(varName, value);
                },
                computeBoundingRect: function computeBoundingRect() {
                  return instance.root_.getBoundingClientRect();
                },
                getWindowPageOffset: function getWindowPageOffset() {
                  return {
                    x: window.pageXOffset,
                    y: window.pageYOffset
                  };
                }
              };
            }
          }]);

          return MDCRipple;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
        /* default */
        ]);
        /**
         * See Material Design spec for more details on when to use ripples.
         * https://material.io/guidelines/motion/choreography.html#choreography-creation
         * @record
         */


        var RippleCapableSurface = function RippleCapableSurface() {
          _classCallCheck(this, RippleCapableSurface);
        };
        /** @protected {!Element} */


        RippleCapableSurface.prototype.root_;
        /**
         * Whether or not the ripple bleeds out of the bounds of the element.
         * @type {boolean|undefined}
         */

        RippleCapableSurface.prototype.unbounded;
        /**
         * Whether or not the ripple is attached to a disabled component.
         * @type {boolean|undefined}
         */

        RippleCapableSurface.prototype.disabled;
        /***/
      },

      /***/
      5:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(3);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(6);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(2);

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @typedef {{
         *   isActivated: (boolean|undefined),
         *   hasDeactivationUXRun: (boolean|undefined),
         *   wasActivatedByPointer: (boolean|undefined),
         *   wasElementMadeActive: (boolean|undefined),
         *   activationEvent: (!Event|undefined),
         *   isProgrammatic: (boolean|undefined)
         * }}
         */


        var ActivationStateType = void 0;
        /**
         * @typedef {{
         *   activate: (string|undefined),
         *   deactivate: (string|undefined),
         *   focus: (string|undefined),
         *   blur: (string|undefined)
         * }}
         */

        var ListenerInfoType = void 0;
        /**
         * @typedef {{
         *   activate: function(!Event),
         *   deactivate: function(!Event=),
         *   focus: function(),
         *   blur: function()
         * }}
         */

        var ListenersType = void 0;
        /**
         * @typedef {{
         *   x: number,
         *   y: number
         * }}
         */

        var PointType = void 0; // Activation events registered on the root element of each instance for activation

        var ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown']; // Deactivation events registered on documentElement when a pointer-related down event occurs

        var POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu']; // Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations

        /** @type {!Array<!EventTarget>} */

        var activatedTargets = [];
        /**
         * @extends {MDCFoundation<!MDCRippleAdapter>}
         */

        var MDCRippleFoundation = function (_MDCFoundation) {
          _inherits(MDCRippleFoundation, _MDCFoundation);

          _createClass(MDCRippleFoundation, null, [{
            key: 'cssClasses',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ];
            }
          }, {
            key: 'strings',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["c"
              /* strings */
              ];
            }
          }, {
            key: 'numbers',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ];
            }
          }, {
            key: 'defaultAdapter',
            get: function get() {
              return {
                browserSupportsCssVars: function browserSupportsCssVars()
                /* boolean - cached */
                {},
                isUnbounded: function isUnbounded()
                /* boolean */
                {},
                isSurfaceActive: function isSurfaceActive()
                /* boolean */
                {},
                isSurfaceDisabled: function isSurfaceDisabled()
                /* boolean */
                {},
                addClass: function addClass()
                /* className: string */
                {},
                removeClass: function removeClass()
                /* className: string */
                {},
                containsEventTarget: function containsEventTarget()
                /* target: !EventTarget */
                {},
                registerInteractionHandler: function registerInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                deregisterInteractionHandler: function deregisterInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                registerDocumentInteractionHandler: function registerDocumentInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                registerResizeHandler: function registerResizeHandler()
                /* handler: EventListener */
                {},
                deregisterResizeHandler: function deregisterResizeHandler()
                /* handler: EventListener */
                {},
                updateCssVariable: function updateCssVariable()
                /* varName: string, value: string */
                {},
                computeBoundingRect: function computeBoundingRect()
                /* ClientRect */
                {},
                getWindowPageOffset: function getWindowPageOffset()
                /* {x: number, y: number} */
                {}
              };
            }
          }]);

          function MDCRippleFoundation(adapter) {
            _classCallCheck(this, MDCRippleFoundation);
            /** @private {number} */


            var _this = _possibleConstructorReturn(this, (MDCRippleFoundation.__proto__ || Object.getPrototypeOf(MDCRippleFoundation)).call(this, _extends(MDCRippleFoundation.defaultAdapter, adapter)));

            _this.layoutFrame_ = 0;
            /** @private {!ClientRect} */

            _this.frame_ =
            /** @type {!ClientRect} */
            {
              width: 0,
              height: 0
            };
            /** @private {!ActivationStateType} */

            _this.activationState_ = _this.defaultActivationState_();
            /** @private {number} */

            _this.initialSize_ = 0;
            /** @private {number} */

            _this.maxRadius_ = 0;
            /** @private {function(!Event)} */

            _this.activateHandler_ = function (e) {
              return _this.activate_(e);
            };
            /** @private {function(!Event=)} */


            _this.deactivateHandler_ = function () {
              return _this.deactivate_();
            };
            /** @private {function(!Event=)} */


            _this.focusHandler_ = function () {
              return _this.handleFocus();
            };
            /** @private {function(!Event=)} */


            _this.blurHandler_ = function () {
              return _this.handleBlur();
            };
            /** @private {!Function} */


            _this.resizeHandler_ = function () {
              return _this.layout();
            };
            /** @private {{left: number, top:number}} */


            _this.unboundedCoords_ = {
              left: 0,
              top: 0
            };
            /** @private {number} */

            _this.fgScale_ = 0;
            /** @private {number} */

            _this.activationTimer_ = 0;
            /** @private {number} */

            _this.fgDeactivationRemovalTimer_ = 0;
            /** @private {boolean} */

            _this.activationAnimationHasEnded_ = false;
            /** @private {!Function} */

            _this.activationTimerCallback_ = function () {
              _this.activationAnimationHasEnded_ = true;

              _this.runDeactivationUXLogicIfReady_();
            };
            /** @private {!Event|undefined} */


            _this.previousActivationEvent_;
            return _this;
          }
          /**
           * We compute this property so that we are not querying information about the client
           * until the point in time where the foundation requests it. This prevents scenarios where
           * client-side feature-detection may happen too early, such as when components are rendered on the server
           * and then initialized at mount time on the client.
           * @return {boolean}
           * @private
           */


          _createClass(MDCRippleFoundation, [{
            key: 'supportsPressRipple_',
            value: function supportsPressRipple_() {
              return this.adapter_.browserSupportsCssVars();
            }
            /**
             * @return {!ActivationStateType}
             */

          }, {
            key: 'defaultActivationState_',
            value: function defaultActivationState_() {
              return {
                isActivated: false,
                hasDeactivationUXRun: false,
                wasActivatedByPointer: false,
                wasElementMadeActive: false,
                activationEvent: undefined,
                isProgrammatic: false
              };
            }
            /** @override */

          }, {
            key: 'init',
            value: function init() {
              var _this2 = this;

              var supportsPressRipple = this.supportsPressRipple_();
              this.registerRootHandlers_(supportsPressRipple);

              if (supportsPressRipple) {
                var _MDCRippleFoundation$ = MDCRippleFoundation.cssClasses,
                    ROOT = _MDCRippleFoundation$.ROOT,
                    UNBOUNDED = _MDCRippleFoundation$.UNBOUNDED;
                requestAnimationFrame(function () {
                  _this2.adapter_.addClass(ROOT);

                  if (_this2.adapter_.isUnbounded()) {
                    _this2.adapter_.addClass(UNBOUNDED); // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple


                    _this2.layoutInternal_();
                  }
                });
              }
            }
            /** @override */

          }, {
            key: 'destroy',
            value: function destroy() {
              var _this3 = this;

              if (this.supportsPressRipple_()) {
                if (this.activationTimer_) {
                  clearTimeout(this.activationTimer_);
                  this.activationTimer_ = 0;
                  this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);
                }

                if (this.fgDeactivationRemovalTimer_) {
                  clearTimeout(this.fgDeactivationRemovalTimer_);
                  this.fgDeactivationRemovalTimer_ = 0;
                  this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);
                }

                var _MDCRippleFoundation$2 = MDCRippleFoundation.cssClasses,
                    ROOT = _MDCRippleFoundation$2.ROOT,
                    UNBOUNDED = _MDCRippleFoundation$2.UNBOUNDED;
                requestAnimationFrame(function () {
                  _this3.adapter_.removeClass(ROOT);

                  _this3.adapter_.removeClass(UNBOUNDED);

                  _this3.removeCssVars_();
                });
              }

              this.deregisterRootHandlers_();
              this.deregisterDeactivationHandlers_();
            }
            /**
             * @param {boolean} supportsPressRipple Passed from init to save a redundant function call
             * @private
             */

          }, {
            key: 'registerRootHandlers_',
            value: function registerRootHandlers_(supportsPressRipple) {
              var _this4 = this;

              if (supportsPressRipple) {
                ACTIVATION_EVENT_TYPES.forEach(function (type) {
                  _this4.adapter_.registerInteractionHandler(type, _this4.activateHandler_);
                });

                if (this.adapter_.isUnbounded()) {
                  this.adapter_.registerResizeHandler(this.resizeHandler_);
                }
              }

              this.adapter_.registerInteractionHandler('focus', this.focusHandler_);
              this.adapter_.registerInteractionHandler('blur', this.blurHandler_);
            }
            /**
             * @param {!Event} e
             * @private
             */

          }, {
            key: 'registerDeactivationHandlers_',
            value: function registerDeactivationHandlers_(e) {
              var _this5 = this;

              if (e.type === 'keydown') {
                this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);
              } else {
                POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
                  _this5.adapter_.registerDocumentInteractionHandler(type, _this5.deactivateHandler_);
                });
              }
            }
            /** @private */

          }, {
            key: 'deregisterRootHandlers_',
            value: function deregisterRootHandlers_() {
              var _this6 = this;

              ACTIVATION_EVENT_TYPES.forEach(function (type) {
                _this6.adapter_.deregisterInteractionHandler(type, _this6.activateHandler_);
              });
              this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);
              this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);

              if (this.adapter_.isUnbounded()) {
                this.adapter_.deregisterResizeHandler(this.resizeHandler_);
              }
            }
            /** @private */

          }, {
            key: 'deregisterDeactivationHandlers_',
            value: function deregisterDeactivationHandlers_() {
              var _this7 = this;

              this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);
              POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
                _this7.adapter_.deregisterDocumentInteractionHandler(type, _this7.deactivateHandler_);
              });
            }
            /** @private */

          }, {
            key: 'removeCssVars_',
            value: function removeCssVars_() {
              var _this8 = this;

              var strings = MDCRippleFoundation.strings;
              Object.keys(strings).forEach(function (k) {
                if (k.indexOf('VAR_') === 0) {
                  _this8.adapter_.updateCssVariable(strings[k], null);
                }
              });
            }
            /**
             * @param {!Event=} e
             * @private
             */

          }, {
            key: 'activate_',
            value: function activate_(e) {
              var _this9 = this;

              if (this.adapter_.isSurfaceDisabled()) {
                return;
              }

              var activationState = this.activationState_;

              if (activationState.isActivated) {
                return;
              } // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction


              var previousActivationEvent = this.previousActivationEvent_;
              var isSameInteraction = previousActivationEvent && e !== undefined && previousActivationEvent.type !== e.type;

              if (isSameInteraction) {
                return;
              }

              activationState.isActivated = true;
              activationState.isProgrammatic = e === undefined;
              activationState.activationEvent = e;
              activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e !== undefined && (e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown');
              var hasActivatedChild = e !== undefined && activatedTargets.length > 0 && activatedTargets.some(function (target) {
                return _this9.adapter_.containsEventTarget(target);
              });

              if (hasActivatedChild) {
                // Immediately reset activation state, while preserving logic that prevents touch follow-on events
                this.resetActivationState_();
                return;
              }

              if (e !== undefined) {
                activatedTargets.push(
                /** @type {!EventTarget} */
                e.target);
                this.registerDeactivationHandlers_(e);
              }

              activationState.wasElementMadeActive = this.checkElementMadeActive_(e);

              if (activationState.wasElementMadeActive) {
                this.animateActivation_();
              }

              requestAnimationFrame(function () {
                // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples
                activatedTargets = [];

                if (!activationState.wasElementMadeActive && e !== undefined && (e.key === ' ' || e.keyCode === 32)) {
                  // If space was pressed, try again within an rAF call to detect :active, because different UAs report
                  // active states inconsistently when they're called within event handling code:
                  // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971
                  // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741
                  // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS
                  // variable is set within a rAF callback for a submit button interaction (#2241).
                  activationState.wasElementMadeActive = _this9.checkElementMadeActive_(e);

                  if (activationState.wasElementMadeActive) {
                    _this9.animateActivation_();
                  }
                }

                if (!activationState.wasElementMadeActive) {
                  // Reset activation state immediately if element was not made active.
                  _this9.activationState_ = _this9.defaultActivationState_();
                }
              });
            }
            /**
             * @param {!Event=} e
             * @private
             */

          }, {
            key: 'checkElementMadeActive_',
            value: function checkElementMadeActive_(e) {
              return e !== undefined && e.type === 'keydown' ? this.adapter_.isSurfaceActive() : true;
            }
            /**
             * @param {!Event=} event Optional event containing position information.
             */

          }, {
            key: 'activate',
            value: function activate(event) {
              this.activate_(event);
            }
            /** @private */

          }, {
            key: 'animateActivation_',
            value: function animateActivation_() {
              var _this10 = this;

              var _MDCRippleFoundation$3 = MDCRippleFoundation.strings,
                  VAR_FG_TRANSLATE_START = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_START,
                  VAR_FG_TRANSLATE_END = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_END;
              var _MDCRippleFoundation$4 = MDCRippleFoundation.cssClasses,
                  FG_DEACTIVATION = _MDCRippleFoundation$4.FG_DEACTIVATION,
                  FG_ACTIVATION = _MDCRippleFoundation$4.FG_ACTIVATION;
              var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;
              this.layoutInternal_();
              var translateStart = '';
              var translateEnd = '';

              if (!this.adapter_.isUnbounded()) {
                var _getFgTranslationCoor = this.getFgTranslationCoordinates_(),
                    startPoint = _getFgTranslationCoor.startPoint,
                    endPoint = _getFgTranslationCoor.endPoint;

                translateStart = startPoint.x + 'px, ' + startPoint.y + 'px';
                translateEnd = endPoint.x + 'px, ' + endPoint.y + 'px';
              }

              this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);
              this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd); // Cancel any ongoing activation/deactivation animations

              clearTimeout(this.activationTimer_);
              clearTimeout(this.fgDeactivationRemovalTimer_);
              this.rmBoundedActivationClasses_();
              this.adapter_.removeClass(FG_DEACTIVATION); // Force layout in order to re-trigger the animation.

              this.adapter_.computeBoundingRect();
              this.adapter_.addClass(FG_ACTIVATION);
              this.activationTimer_ = setTimeout(function () {
                return _this10.activationTimerCallback_();
              }, DEACTIVATION_TIMEOUT_MS);
            }
            /**
             * @private
             * @return {{startPoint: PointType, endPoint: PointType}}
             */

          }, {
            key: 'getFgTranslationCoordinates_',
            value: function getFgTranslationCoordinates_() {
              var _activationState_ = this.activationState_,
                  activationEvent = _activationState_.activationEvent,
                  wasActivatedByPointer = _activationState_.wasActivatedByPointer;
              var startPoint = void 0;

              if (wasActivatedByPointer) {
                startPoint = Object(__WEBPACK_IMPORTED_MODULE_3__util__["getNormalizedEventCoords"])(
                /** @type {!Event} */
                activationEvent, this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect());
              } else {
                startPoint = {
                  x: this.frame_.width / 2,
                  y: this.frame_.height / 2
                };
              } // Center the element around the start point.


              startPoint = {
                x: startPoint.x - this.initialSize_ / 2,
                y: startPoint.y - this.initialSize_ / 2
              };
              var endPoint = {
                x: this.frame_.width / 2 - this.initialSize_ / 2,
                y: this.frame_.height / 2 - this.initialSize_ / 2
              };
              return {
                startPoint: startPoint,
                endPoint: endPoint
              };
            }
            /** @private */

          }, {
            key: 'runDeactivationUXLogicIfReady_',
            value: function runDeactivationUXLogicIfReady_() {
              var _this11 = this; // This method is called both when a pointing device is released, and when the activation animation ends.
              // The deactivation animation should only run after both of those occur.


              var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;
              var _activationState_2 = this.activationState_,
                  hasDeactivationUXRun = _activationState_2.hasDeactivationUXRun,
                  isActivated = _activationState_2.isActivated;
              var activationHasEnded = hasDeactivationUXRun || !isActivated;

              if (activationHasEnded && this.activationAnimationHasEnded_) {
                this.rmBoundedActivationClasses_();
                this.adapter_.addClass(FG_DEACTIVATION);
                this.fgDeactivationRemovalTimer_ = setTimeout(function () {
                  _this11.adapter_.removeClass(FG_DEACTIVATION);
                }, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
                /* numbers */
                ].FG_DEACTIVATION_MS);
              }
            }
            /** @private */

          }, {
            key: 'rmBoundedActivationClasses_',
            value: function rmBoundedActivationClasses_() {
              var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;
              this.adapter_.removeClass(FG_ACTIVATION);
              this.activationAnimationHasEnded_ = false;
              this.adapter_.computeBoundingRect();
            }
          }, {
            key: 'resetActivationState_',
            value: function resetActivationState_() {
              var _this12 = this;

              this.previousActivationEvent_ = this.activationState_.activationEvent;
              this.activationState_ = this.defaultActivationState_(); // Touch devices may fire additional events for the same interaction within a short time.
              // Store the previous event until it's safe to assume that subsequent events are for new interactions.

              setTimeout(function () {
                return _this12.previousActivationEvent_ = undefined;
              }, MDCRippleFoundation.numbers.TAP_DELAY_MS);
            }
            /**
             * @private
             */

          }, {
            key: 'deactivate_',
            value: function deactivate_() {
              var _this13 = this;

              var activationState = this.activationState_; // This can happen in scenarios such as when you have a keyup event that blurs the element.

              if (!activationState.isActivated) {
                return;
              }

              var state =
              /** @type {!ActivationStateType} */
              _extends({}, activationState);

              if (activationState.isProgrammatic) {
                requestAnimationFrame(function () {
                  return _this13.animateDeactivation_(state);
                });
                this.resetActivationState_();
              } else {
                this.deregisterDeactivationHandlers_();
                requestAnimationFrame(function () {
                  _this13.activationState_.hasDeactivationUXRun = true;

                  _this13.animateDeactivation_(state);

                  _this13.resetActivationState_();
                });
              }
            }
          }, {
            key: 'deactivate',
            value: function deactivate() {
              this.deactivate_();
            }
            /**
             * @param {!ActivationStateType} options
             * @private
             */

          }, {
            key: 'animateDeactivation_',
            value: function animateDeactivation_(_ref) {
              var wasActivatedByPointer = _ref.wasActivatedByPointer,
                  wasElementMadeActive = _ref.wasElementMadeActive;

              if (wasActivatedByPointer || wasElementMadeActive) {
                this.runDeactivationUXLogicIfReady_();
              }
            }
          }, {
            key: 'layout',
            value: function layout() {
              var _this14 = this;

              if (this.layoutFrame_) {
                cancelAnimationFrame(this.layoutFrame_);
              }

              this.layoutFrame_ = requestAnimationFrame(function () {
                _this14.layoutInternal_();

                _this14.layoutFrame_ = 0;
              });
            }
            /** @private */

          }, {
            key: 'layoutInternal_',
            value: function layoutInternal_() {
              var _this15 = this;

              this.frame_ = this.adapter_.computeBoundingRect();
              var maxDim = Math.max(this.frame_.height, this.frame_.width); // Surface diameter is treated differently for unbounded vs. bounded ripples.
              // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately
              // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically
              // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter
              // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via
              // `overflow: hidden`.

              var getBoundedRadius = function getBoundedRadius() {
                var hypotenuse = Math.sqrt(Math.pow(_this15.frame_.width, 2) + Math.pow(_this15.frame_.height, 2));
                return hypotenuse + MDCRippleFoundation.numbers.PADDING;
              };

              this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius(); // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform

              this.initialSize_ = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);
              this.fgScale_ = this.maxRadius_ / this.initialSize_;
              this.updateLayoutCssVars_();
            }
            /** @private */

          }, {
            key: 'updateLayoutCssVars_',
            value: function updateLayoutCssVars_() {
              var _MDCRippleFoundation$5 = MDCRippleFoundation.strings,
                  VAR_FG_SIZE = _MDCRippleFoundation$5.VAR_FG_SIZE,
                  VAR_LEFT = _MDCRippleFoundation$5.VAR_LEFT,
                  VAR_TOP = _MDCRippleFoundation$5.VAR_TOP,
                  VAR_FG_SCALE = _MDCRippleFoundation$5.VAR_FG_SCALE;
              this.adapter_.updateCssVariable(VAR_FG_SIZE, this.initialSize_ + 'px');
              this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);

              if (this.adapter_.isUnbounded()) {
                this.unboundedCoords_ = {
                  left: Math.round(this.frame_.width / 2 - this.initialSize_ / 2),
                  top: Math.round(this.frame_.height / 2 - this.initialSize_ / 2)
                };
                this.adapter_.updateCssVariable(VAR_LEFT, this.unboundedCoords_.left + 'px');
                this.adapter_.updateCssVariable(VAR_TOP, this.unboundedCoords_.top + 'px');
              }
            }
            /** @param {boolean} unbounded */

          }, {
            key: 'setUnbounded',
            value: function setUnbounded(unbounded) {
              var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;

              if (unbounded) {
                this.adapter_.addClass(UNBOUNDED);
              } else {
                this.adapter_.removeClass(UNBOUNDED);
              }
            }
          }, {
            key: 'handleFocus',
            value: function handleFocus() {
              var _this16 = this;

              requestAnimationFrame(function () {
                return _this16.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
              });
            }
          }, {
            key: 'handleBlur',
            value: function handleBlur() {
              var _this17 = this;

              requestAnimationFrame(function () {
                return _this17.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
              });
            }
          }]);

          return MDCRippleFoundation;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
        /* default */
        ]);
        /* harmony default export */


        __webpack_exports__["a"] = MDCRippleFoundation;
        /***/
      },

      /***/
      6:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "a", function () {
          return cssClasses;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "c", function () {
          return strings;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "b", function () {
          return numbers;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */


        var cssClasses = {
          // Ripple is a special case where the "root" component is really a "mixin" of sorts,
          // given that it's an 'upgrade' to an existing component. That being said it is the root
          // CSS class that all other CSS classes derive from.
          ROOT: 'mdc-ripple-upgraded',
          UNBOUNDED: 'mdc-ripple-upgraded--unbounded',
          BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',
          FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',
          FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation'
        };
        var strings = {
          VAR_LEFT: '--mdc-ripple-left',
          VAR_TOP: '--mdc-ripple-top',
          VAR_FG_SIZE: '--mdc-ripple-fg-size',
          VAR_FG_SCALE: '--mdc-ripple-fg-scale',
          VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',
          VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end'
        };
        var numbers = {
          PADDING: 10,
          INITIAL_ORIGIN_SCALE: 0.6,
          DEACTIVATION_TIMEOUT_MS: 225,
          // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)
          FG_DEACTIVATION_MS: 150,
          // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)
          TAP_DELAY_MS: 300
        };
        /***/
      },

      /***/
      7:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "MDCSelectionControlState", function () {
          return MDCSelectionControlState;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCSelectionControl", function () {
          return MDCSelectionControl;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_ripple_index__ = __webpack_require__(4);

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint-disable no-unused-vars */

        /* eslint-enable no-unused-vars */

        /**
         * @typedef {{
         *   checked: boolean,
         *   indeterminate: boolean,
         *   disabled: boolean,
         *   value: ?string
         * }}
         */


        var MDCSelectionControlState = void 0;
        /**
         * @record
         */

        var MDCSelectionControl = function () {
          function MDCSelectionControl() {
            _classCallCheck(this, MDCSelectionControl);
          }

          _createClass(MDCSelectionControl, [{
            key: 'ripple',

            /** @return {?MDCRipple} */
            get: function get() {}
          }]);

          return MDCSelectionControl;
        }();
        /***/

      },

      /***/
      88:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "MDCCheckbox", function () {
          return MDCCheckbox;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_animation_index__ = __webpack_require__(14);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__material_base_component__ = __webpack_require__(1);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__material_selection_control_index__ = __webpack_require__(7);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__foundation__ = __webpack_require__(89);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__ = __webpack_require__(4);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_5__material_ripple_util__ = __webpack_require__(2);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCCheckboxFoundation", function () {
          return __WEBPACK_IMPORTED_MODULE_3__foundation__["a"];
        });

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _get = function get(object, property, receiver) {
          if (object === null) object = Function.prototype;
          var desc = Object.getOwnPropertyDescriptor(object, property);

          if (desc === undefined) {
            var parent = Object.getPrototypeOf(object);

            if (parent === null) {
              return undefined;
            } else {
              return get(parent, property, receiver);
            }
          } else if ("value" in desc) {
            return desc.value;
          } else {
            var getter = desc.get;

            if (getter === undefined) {
              return undefined;
            }

            return getter.call(receiver);
          }
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint-disable no-unused-vars */

        /* eslint-enable no-unused-vars */

        /** @const {!Array<string>} */


        var CB_PROTO_PROPS = ['checked', 'indeterminate'];
        /**
         * @extends MDCComponent<!MDCCheckboxFoundation>
         * @implements {MDCSelectionControl}
         */

        var MDCCheckbox = function (_MDCComponent) {
          _inherits(MDCCheckbox, _MDCComponent);

          _createClass(MDCCheckbox, [{
            key: 'nativeCb_',

            /**
             * Returns the state of the native control element, or null if the native control element is not present.
             * @return {!MDCSelectionControlState}
             * @private
             */
            get: function get() {
              var NATIVE_CONTROL_SELECTOR = __WEBPACK_IMPORTED_MODULE_3__foundation__["a"
              /* default */
              ].strings.NATIVE_CONTROL_SELECTOR;
              var cbEl =
              /** @type {!MDCSelectionControlState} */
              this.root_.querySelector(NATIVE_CONTROL_SELECTOR);
              return cbEl;
            }
          }], [{
            key: 'attachTo',
            value: function attachTo(root) {
              return new MDCCheckbox(root);
            }
          }]);

          function MDCCheckbox() {
            var _ref;

            _classCallCheck(this, MDCCheckbox);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            /** @private {!MDCRipple} */


            var _this = _possibleConstructorReturn(this, (_ref = MDCCheckbox.__proto__ || Object.getPrototypeOf(MDCCheckbox)).call.apply(_ref, [this].concat(args)));

            _this.ripple_ = _this.initRipple_();
            /** @private {!Function} */

            _this.handleChange_;
            /** @private {!Function} */

            _this.handleAnimationEnd_;
            return _this;
          }

          _createClass(MDCCheckbox, [{
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {
              var _this2 = this;

              this.handleChange_ = function () {
                return _this2.foundation_.handleChange();
              };

              this.handleAnimationEnd_ = function () {
                return _this2.foundation_.handleAnimationEnd();
              };

              this.nativeCb_.addEventListener('change', this.handleChange_);
              this.listen(Object(__WEBPACK_IMPORTED_MODULE_0__material_animation_index__["getCorrectEventName"])(window, 'animationend'), this.handleAnimationEnd_);
              this.installPropertyChangeHooks_();
            }
            /**
             * @return {!MDCRipple}
             * @private
             */

          }, {
            key: 'initRipple_',
            value: function initRipple_() {
              var _this3 = this;

              var MATCHES = Object(__WEBPACK_IMPORTED_MODULE_5__material_ripple_util__["getMatchesProperty"])(HTMLElement.prototype);

              var adapter = _extends(__WEBPACK_IMPORTED_MODULE_4__material_ripple_index__["MDCRipple"].createAdapter(this), {
                isUnbounded: function isUnbounded() {
                  return true;
                },
                isSurfaceActive: function isSurfaceActive() {
                  return _this3.nativeCb_[MATCHES](':active');
                },
                registerInteractionHandler: function registerInteractionHandler(type, handler) {
                  return _this3.nativeCb_.addEventListener(type, handler);
                },
                deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
                  return _this3.nativeCb_.removeEventListener(type, handler);
                }
              });

              var foundation = new __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__["MDCRippleFoundation"](adapter);
              return new __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__["MDCRipple"](this.root_, foundation);
            }
            /** @private */

          }, {
            key: 'installPropertyChangeHooks_',
            value: function installPropertyChangeHooks_() {
              var _this4 = this;

              var nativeCb = this.nativeCb_;
              var cbProto = Object.getPrototypeOf(nativeCb);
              CB_PROTO_PROPS.forEach(function (controlState) {
                var desc = Object.getOwnPropertyDescriptor(cbProto, controlState); // We have to check for this descriptor, since some browsers (Safari) don't support its return.
                // See: https://bugs.webkit.org/show_bug.cgi?id=49739

                if (validDescriptor(desc)) {
                  var nativeCbDesc =
                  /** @type {!ObjectPropertyDescriptor} */
                  {
                    get: desc.get,
                    set: function set(state) {
                      desc.set.call(nativeCb, state);

                      _this4.foundation_.handleChange();
                    },
                    configurable: desc.configurable,
                    enumerable: desc.enumerable
                  };
                  Object.defineProperty(nativeCb, controlState, nativeCbDesc);
                }
              });
            }
            /** @private */

          }, {
            key: 'uninstallPropertyChangeHooks_',
            value: function uninstallPropertyChangeHooks_() {
              var nativeCb = this.nativeCb_;
              var cbProto = Object.getPrototypeOf(nativeCb);
              CB_PROTO_PROPS.forEach(function (controlState) {
                var desc =
                /** @type {!ObjectPropertyDescriptor} */
                Object.getOwnPropertyDescriptor(cbProto, controlState);

                if (validDescriptor(desc)) {
                  Object.defineProperty(nativeCb, controlState, desc);
                }
              });
            }
            /** @return {!MDCCheckboxFoundation} */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              var _this5 = this;

              return new __WEBPACK_IMPORTED_MODULE_3__foundation__["a"
              /* default */
              ]({
                addClass: function addClass(className) {
                  return _this5.root_.classList.add(className);
                },
                removeClass: function removeClass(className) {
                  return _this5.root_.classList.remove(className);
                },
                setNativeControlAttr: function setNativeControlAttr(attr, value) {
                  return _this5.nativeCb_.setAttribute(attr, value);
                },
                removeNativeControlAttr: function removeNativeControlAttr(attr) {
                  return _this5.nativeCb_.removeAttribute(attr);
                },
                isIndeterminate: function isIndeterminate() {
                  return _this5.indeterminate;
                },
                isChecked: function isChecked() {
                  return _this5.checked;
                },
                hasNativeControl: function hasNativeControl() {
                  return !!_this5.nativeCb_;
                },
                setNativeControlDisabled: function setNativeControlDisabled(disabled) {
                  return _this5.nativeCb_.disabled = disabled;
                },
                forceLayout: function forceLayout() {
                  return _this5.root_.offsetWidth;
                },
                isAttachedToDOM: function isAttachedToDOM() {
                  return Boolean(_this5.root_.parentNode);
                }
              });
            }
            /** @return {!MDCRipple} */

          }, {
            key: 'destroy',
            value: function destroy() {
              this.ripple_.destroy();
              this.nativeCb_.removeEventListener('change', this.handleChange_);
              this.unlisten(Object(__WEBPACK_IMPORTED_MODULE_0__material_animation_index__["getCorrectEventName"])(window, 'animationend'), this.handleAnimationEnd_);
              this.uninstallPropertyChangeHooks_();

              _get(MDCCheckbox.prototype.__proto__ || Object.getPrototypeOf(MDCCheckbox.prototype), 'destroy', this).call(this);
            }
          }, {
            key: 'ripple',
            get: function get() {
              return this.ripple_;
            }
            /** @return {boolean} */

          }, {
            key: 'checked',
            get: function get() {
              return this.nativeCb_.checked;
            }
            /** @param {boolean} checked */
            ,
            set: function set(checked) {
              this.nativeCb_.checked = checked;
            }
            /** @return {boolean} */

          }, {
            key: 'indeterminate',
            get: function get() {
              return this.nativeCb_.indeterminate;
            }
            /** @param {boolean} indeterminate */
            ,
            set: function set(indeterminate) {
              this.nativeCb_.indeterminate = indeterminate;
            }
            /** @return {boolean} */

          }, {
            key: 'disabled',
            get: function get() {
              return this.nativeCb_.disabled;
            }
            /** @param {boolean} disabled */
            ,
            set: function set(disabled) {
              this.foundation_.setDisabled(disabled);
            }
            /** @return {?string} */

          }, {
            key: 'value',
            get: function get() {
              return this.nativeCb_.value;
            }
            /** @param {?string} value */
            ,
            set: function set(value) {
              this.nativeCb_.value = value;
            }
          }]);

          return MDCCheckbox;
        }(__WEBPACK_IMPORTED_MODULE_1__material_base_component__["a"
        /* default */
        ]);
        /**
         * @param {ObjectPropertyDescriptor|undefined} inputPropDesc
         * @return {boolean}
         */


        function validDescriptor(inputPropDesc) {
          return !!inputPropDesc && typeof inputPropDesc.set === 'function';
        }
        /***/

      },

      /***/
      89:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__material_selection_control_index__ = __webpack_require__(7);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__adapter__ = __webpack_require__(90);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__constants__ = __webpack_require__(91);

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint-disable no-unused-vars */

        /* eslint-enable no-unused-vars */

        /**
         * @extends {MDCFoundation<!MDCCheckboxAdapter>}
         */


        var MDCCheckboxFoundation = function (_MDCFoundation) {
          _inherits(MDCCheckboxFoundation, _MDCFoundation);

          _createClass(MDCCheckboxFoundation, null, [{
            key: 'cssClasses',

            /** @return enum {cssClasses} */
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_3__constants__["a"
              /* cssClasses */
              ];
            }
            /** @return enum {strings} */

          }, {
            key: 'strings',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_3__constants__["c"
              /* strings */
              ];
            }
            /** @return enum {numbers} */

          }, {
            key: 'numbers',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_3__constants__["b"
              /* numbers */
              ];
            }
            /** @return {!MDCCheckboxAdapter} */

          }, {
            key: 'defaultAdapter',
            get: function get() {
              return (
                /** @type {!MDCCheckboxAdapter} */
                {
                  addClass: function addClass()
                  /* className: string */
                  {},
                  removeClass: function removeClass()
                  /* className: string */
                  {},
                  setNativeControlAttr: function setNativeControlAttr()
                  /* attr: string, value: string */
                  {},
                  removeNativeControlAttr: function removeNativeControlAttr()
                  /* attr: string */
                  {},
                  forceLayout: function forceLayout() {},
                  isAttachedToDOM: function isAttachedToDOM()
                  /* boolean */
                  {},
                  isIndeterminate: function isIndeterminate()
                  /* boolean */
                  {},
                  isChecked: function isChecked()
                  /* boolean */
                  {},
                  hasNativeControl: function hasNativeControl()
                  /* boolean */
                  {},
                  setNativeControlDisabled: function setNativeControlDisabled()
                  /* disabled: boolean */
                  {}
                }
              );
            }
          }]);

          function MDCCheckboxFoundation(adapter) {
            _classCallCheck(this, MDCCheckboxFoundation);
            /** @private {string} */


            var _this = _possibleConstructorReturn(this, (MDCCheckboxFoundation.__proto__ || Object.getPrototypeOf(MDCCheckboxFoundation)).call(this, _extends(MDCCheckboxFoundation.defaultAdapter, adapter)));

            _this.currentCheckState_ = __WEBPACK_IMPORTED_MODULE_3__constants__["c"
            /* strings */
            ].TRANSITION_STATE_INIT;
            /** @private {string} */

            _this.currentAnimationClass_ = '';
            /** @private {number} */

            _this.animEndLatchTimer_ = 0;
            /** @private {boolean} */

            _this.enableAnimationEndHandler_ = false;
            return _this;
          }
          /** @override */


          _createClass(MDCCheckboxFoundation, [{
            key: 'init',
            value: function init() {
              this.currentCheckState_ = this.determineCheckState_();
              this.updateAriaChecked_();
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_3__constants__["a"
              /* cssClasses */
              ].UPGRADED);
            }
            /** @override */

          }, {
            key: 'destroy',
            value: function destroy() {
              clearTimeout(this.animEndLatchTimer_);
            }
            /** @param {boolean} disabled */

          }, {
            key: 'setDisabled',
            value: function setDisabled(disabled) {
              this.adapter_.setNativeControlDisabled(disabled);

              if (disabled) {
                this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_3__constants__["a"
                /* cssClasses */
                ].DISABLED);
              } else {
                this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_3__constants__["a"
                /* cssClasses */
                ].DISABLED);
              }
            }
            /**
             * Handles the animationend event for the checkbox
             */

          }, {
            key: 'handleAnimationEnd',
            value: function handleAnimationEnd() {
              var _this2 = this;

              if (!this.enableAnimationEndHandler_) return;
              clearTimeout(this.animEndLatchTimer_);
              this.animEndLatchTimer_ = setTimeout(function () {
                _this2.adapter_.removeClass(_this2.currentAnimationClass_);

                _this2.enableAnimationEndHandler_ = false;
              }, __WEBPACK_IMPORTED_MODULE_3__constants__["b"
              /* numbers */
              ].ANIM_END_LATCH_MS);
            }
            /**
             * Handles the change event for the checkbox
             */

          }, {
            key: 'handleChange',
            value: function handleChange() {
              this.transitionCheckState_();
            }
            /** @private */

          }, {
            key: 'transitionCheckState_',
            value: function transitionCheckState_() {
              if (!this.adapter_.hasNativeControl()) {
                return;
              }

              var oldState = this.currentCheckState_;
              var newState = this.determineCheckState_();

              if (oldState === newState) {
                return;
              }

              this.updateAriaChecked_(); // Check to ensure that there isn't a previously existing animation class, in case for example
              // the user interacted with the checkbox before the animation was finished.

              if (this.currentAnimationClass_.length > 0) {
                clearTimeout(this.animEndLatchTimer_);
                this.adapter_.forceLayout();
                this.adapter_.removeClass(this.currentAnimationClass_);
              }

              this.currentAnimationClass_ = this.getTransitionAnimationClass_(oldState, newState);
              this.currentCheckState_ = newState; // Check for parentNode so that animations are only run when the element is attached
              // to the DOM.

              if (this.adapter_.isAttachedToDOM() && this.currentAnimationClass_.length > 0) {
                this.adapter_.addClass(this.currentAnimationClass_);
                this.enableAnimationEndHandler_ = true;
              }
            }
            /**
             * @return {string}
             * @private
             */

          }, {
            key: 'determineCheckState_',
            value: function determineCheckState_() {
              var TRANSITION_STATE_INDETERMINATE = __WEBPACK_IMPORTED_MODULE_3__constants__["c"
              /* strings */
              ].TRANSITION_STATE_INDETERMINATE,
                  TRANSITION_STATE_CHECKED = __WEBPACK_IMPORTED_MODULE_3__constants__["c"
              /* strings */
              ].TRANSITION_STATE_CHECKED,
                  TRANSITION_STATE_UNCHECKED = __WEBPACK_IMPORTED_MODULE_3__constants__["c"
              /* strings */
              ].TRANSITION_STATE_UNCHECKED;

              if (this.adapter_.isIndeterminate()) {
                return TRANSITION_STATE_INDETERMINATE;
              }

              return this.adapter_.isChecked() ? TRANSITION_STATE_CHECKED : TRANSITION_STATE_UNCHECKED;
            }
            /**
             * @param {string} oldState
             * @param {string} newState
             * @return {string}
             */

          }, {
            key: 'getTransitionAnimationClass_',
            value: function getTransitionAnimationClass_(oldState, newState) {
              var TRANSITION_STATE_INIT = __WEBPACK_IMPORTED_MODULE_3__constants__["c"
              /* strings */
              ].TRANSITION_STATE_INIT,
                  TRANSITION_STATE_CHECKED = __WEBPACK_IMPORTED_MODULE_3__constants__["c"
              /* strings */
              ].TRANSITION_STATE_CHECKED,
                  TRANSITION_STATE_UNCHECKED = __WEBPACK_IMPORTED_MODULE_3__constants__["c"
              /* strings */
              ].TRANSITION_STATE_UNCHECKED;
              var _MDCCheckboxFoundatio = MDCCheckboxFoundation.cssClasses,
                  ANIM_UNCHECKED_CHECKED = _MDCCheckboxFoundatio.ANIM_UNCHECKED_CHECKED,
                  ANIM_UNCHECKED_INDETERMINATE = _MDCCheckboxFoundatio.ANIM_UNCHECKED_INDETERMINATE,
                  ANIM_CHECKED_UNCHECKED = _MDCCheckboxFoundatio.ANIM_CHECKED_UNCHECKED,
                  ANIM_CHECKED_INDETERMINATE = _MDCCheckboxFoundatio.ANIM_CHECKED_INDETERMINATE,
                  ANIM_INDETERMINATE_CHECKED = _MDCCheckboxFoundatio.ANIM_INDETERMINATE_CHECKED,
                  ANIM_INDETERMINATE_UNCHECKED = _MDCCheckboxFoundatio.ANIM_INDETERMINATE_UNCHECKED;

              switch (oldState) {
                case TRANSITION_STATE_INIT:
                  if (newState === TRANSITION_STATE_UNCHECKED) {
                    return '';
                  }

                // fallthrough

                case TRANSITION_STATE_UNCHECKED:
                  return newState === TRANSITION_STATE_CHECKED ? ANIM_UNCHECKED_CHECKED : ANIM_UNCHECKED_INDETERMINATE;

                case TRANSITION_STATE_CHECKED:
                  return newState === TRANSITION_STATE_UNCHECKED ? ANIM_CHECKED_UNCHECKED : ANIM_CHECKED_INDETERMINATE;
                // TRANSITION_STATE_INDETERMINATE

                default:
                  return newState === TRANSITION_STATE_CHECKED ? ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;
              }
            }
          }, {
            key: 'updateAriaChecked_',
            value: function updateAriaChecked_() {
              // Ensure aria-checked is set to mixed if checkbox is in indeterminate state.
              if (this.adapter_.isIndeterminate()) {
                this.adapter_.setNativeControlAttr(__WEBPACK_IMPORTED_MODULE_3__constants__["c"
                /* strings */
                ].ARIA_CHECKED_ATTR, __WEBPACK_IMPORTED_MODULE_3__constants__["c"
                /* strings */
                ].ARIA_CHECKED_INDETERMINATE_VALUE);
              } else {
                // The on/off state does not need to keep track of aria-checked, since
                // the screenreader uses the checked property on the checkbox element.
                this.adapter_.removeNativeControlAttr(__WEBPACK_IMPORTED_MODULE_3__constants__["c"
                /* strings */
                ].ARIA_CHECKED_ATTR);
              }
            }
          }]);

          return MDCCheckboxFoundation;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
        /* default */
        ]);
        /* harmony default export */


        __webpack_exports__["a"] = MDCCheckboxFoundation;
        /***/
      },

      /***/
      90:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__material_selection_control_index__ = __webpack_require__(7);

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint-disable no-unused-vars */

        /* eslint no-unused-vars: [2, {"args": "none"}] */

        /**
         * Adapter for MDC Checkbox. Provides an interface for managing
         * - classes
         * - dom
         * - event handlers
         *
         * Additionally, provides type information for the adapter to the Closure
         * compiler.
         *
         * Implement this adapter for your framework of choice to delegate updates to
         * the component in your framework of choice. See architecture documentation
         * for more details.
         * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
         *
         * @record
         */


        var MDCCheckboxAdapter = function () {
          function MDCCheckboxAdapter() {
            _classCallCheck(this, MDCCheckboxAdapter);
          }

          _createClass(MDCCheckboxAdapter, [{
            key: 'addClass',

            /** @param {string} className */
            value: function addClass(className) {}
            /** @param {string} className */

          }, {
            key: 'removeClass',
            value: function removeClass(className) {}
            /**
             * Sets an attribute with a given value on the input element.
             * @param {string} attr
             * @param {string} value
             */

          }, {
            key: 'setNativeControlAttr',
            value: function setNativeControlAttr(attr, value) {}
            /**
             * Removes an attribute from the input element.
             * @param {string} attr
             */

          }, {
            key: 'removeNativeControlAttr',
            value: function removeNativeControlAttr(attr) {}
          }, {
            key: 'forceLayout',
            value: function forceLayout() {}
            /** @return {boolean} */

          }, {
            key: 'isAttachedToDOM',
            value: function isAttachedToDOM() {}
            /** @return {boolean} */

          }, {
            key: 'isIndeterminate',
            value: function isIndeterminate() {}
            /** @return {boolean} */

          }, {
            key: 'isChecked',
            value: function isChecked() {}
            /** @return {boolean} */

          }, {
            key: 'hasNativeControl',
            value: function hasNativeControl() {}
            /** @param {boolean} disabled */

          }, {
            key: 'setNativeControlDisabled',
            value: function setNativeControlDisabled(disabled) {}
          }]);

          return MDCCheckboxAdapter;
        }();
        /* unused harmony default export */


        var _unused_webpack_default_export = MDCCheckboxAdapter;
        /***/
      },

      /***/
      91:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "a", function () {
          return cssClasses;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "c", function () {
          return strings;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "b", function () {
          return numbers;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /** @const {string} */


        var ROOT = 'mdc-checkbox';
        /** @enum {string} */

        var cssClasses = {
          UPGRADED: 'mdc-checkbox--upgraded',
          CHECKED: 'mdc-checkbox--checked',
          INDETERMINATE: 'mdc-checkbox--indeterminate',
          DISABLED: 'mdc-checkbox--disabled',
          ANIM_UNCHECKED_CHECKED: 'mdc-checkbox--anim-unchecked-checked',
          ANIM_UNCHECKED_INDETERMINATE: 'mdc-checkbox--anim-unchecked-indeterminate',
          ANIM_CHECKED_UNCHECKED: 'mdc-checkbox--anim-checked-unchecked',
          ANIM_CHECKED_INDETERMINATE: 'mdc-checkbox--anim-checked-indeterminate',
          ANIM_INDETERMINATE_CHECKED: 'mdc-checkbox--anim-indeterminate-checked',
          ANIM_INDETERMINATE_UNCHECKED: 'mdc-checkbox--anim-indeterminate-unchecked'
        };
        /** @enum {string} */

        var strings = {
          NATIVE_CONTROL_SELECTOR: '.' + ROOT + '__native-control',
          TRANSITION_STATE_INIT: 'init',
          TRANSITION_STATE_CHECKED: 'checked',
          TRANSITION_STATE_UNCHECKED: 'unchecked',
          TRANSITION_STATE_INDETERMINATE: 'indeterminate',
          ARIA_CHECKED_ATTR: 'aria-checked',
          ARIA_CHECKED_INDETERMINATE_VALUE: 'mixed'
        };
        /** @enum {number} */

        var numbers = {
          ANIM_END_LATCH_MS: 250
        };
        /***/
      }
      /******/

    })
  );
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/@material/chips/dist/mdc.chips.js":
/*!********************************************************!*\
  !*** ./node_modules/@material/chips/dist/mdc.chips.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 Material Components for the Web
 Copyright (c) 2019 Google Inc.
 License: MIT
*/
(function webpackUniversalModuleDefinition(root, factory) {
  if (( false ? undefined : _typeof(exports)) === 'object' && ( false ? undefined : _typeof(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}
})(this, function () {
  return (
    /******/
    function (modules) {
      // webpackBootstrap

      /******/
      // The module cache

      /******/
      var installedModules = {};
      /******/

      /******/
      // The require function

      /******/

      function __webpack_require__(moduleId) {
        /******/

        /******/
        // Check if module is in cache

        /******/
        if (installedModules[moduleId]) {
          /******/
          return installedModules[moduleId].exports;
          /******/
        }
        /******/
        // Create a new module (and put it into the cache)

        /******/


        var module = installedModules[moduleId] = {
          /******/
          i: moduleId,

          /******/
          l: false,

          /******/
          exports: {}
          /******/

        };
        /******/

        /******/
        // Execute the module function

        /******/

        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/

        /******/
        // Flag the module as loaded

        /******/

        module.l = true;
        /******/

        /******/
        // Return the exports of the module

        /******/

        return module.exports;
        /******/
      }
      /******/

      /******/

      /******/
      // expose the modules object (__webpack_modules__)

      /******/


      __webpack_require__.m = modules;
      /******/

      /******/
      // expose the module cache

      /******/

      __webpack_require__.c = installedModules;
      /******/

      /******/
      // define getter function for harmony exports

      /******/

      __webpack_require__.d = function (exports, name, getter) {
        /******/
        if (!__webpack_require__.o(exports, name)) {
          /******/
          Object.defineProperty(exports, name, {
            /******/
            configurable: false,

            /******/
            enumerable: true,

            /******/
            get: getter
            /******/

          });
          /******/
        }
        /******/

      };
      /******/

      /******/
      // getDefaultExport function for compatibility with non-harmony modules

      /******/


      __webpack_require__.n = function (module) {
        /******/
        var getter = module && module.__esModule ?
        /******/
        function getDefault() {
          return module['default'];
        } :
        /******/
        function getModuleExports() {
          return module;
        };
        /******/

        __webpack_require__.d(getter, 'a', getter);
        /******/


        return getter;
        /******/
      };
      /******/

      /******/
      // Object.prototype.hasOwnProperty.call

      /******/


      __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      /******/

      /******/
      // __webpack_public_path__

      /******/


      __webpack_require__.p = "";
      /******/

      /******/
      // Load entry module and return exports

      /******/

      return __webpack_require__(__webpack_require__.s = 92);
      /******/
    }(
    /************************************************************************/

    /******/
    {
      /***/
      0:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @template A
         */


        var MDCFoundation = function () {
          _createClass(MDCFoundation, null, [{
            key: "cssClasses",

            /** @return enum{cssClasses} */
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports every
              // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}
              return {};
            }
            /** @return enum{strings} */

          }, {
            key: "strings",
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports all
              // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}
              return {};
            }
            /** @return enum{numbers} */

          }, {
            key: "numbers",
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports all
              // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}
              return {};
            }
            /** @return {!Object} */

          }, {
            key: "defaultAdapter",
            get: function get() {
              // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient
              // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter
              // validation.
              return {};
            }
            /**
             * @param {A=} adapter
             */

          }]);

          function MDCFoundation() {
            var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

            _classCallCheck(this, MDCFoundation);
            /** @protected {!A} */


            this.adapter_ = adapter;
          }

          _createClass(MDCFoundation, [{
            key: "init",
            value: function init() {// Subclasses should override this method to perform initialization routines (registering events, etc.)
            }
          }, {
            key: "destroy",
            value: function destroy() {// Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)
            }
          }]);

          return MDCFoundation;
        }();
        /* harmony default export */


        __webpack_exports__["a"] = MDCFoundation;
        /***/
      },

      /***/
      1:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0);

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @template F
         */


        var MDCComponent = function () {
          _createClass(MDCComponent, null, [{
            key: 'attachTo',

            /**
             * @param {!Element} root
             * @return {!MDCComponent}
             */
            value: function attachTo(root) {
              // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and
              // returns an instantiated component with its root set to that element. Also note that in the cases of
              // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized
              // from getDefaultFoundation().
              return new MDCComponent(root, new __WEBPACK_IMPORTED_MODULE_0__foundation__["a"
              /* default */
              ]());
            }
            /**
             * @param {!Element} root
             * @param {F=} foundation
             * @param {...?} args
             */

          }]);

          function MDCComponent(root) {
            var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

            _classCallCheck(this, MDCComponent);
            /** @protected {!Element} */


            this.root_ = root;

            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              args[_key - 2] = arguments[_key];
            }

            this.initialize.apply(this, args); // Note that we initialize foundation here and not within the constructor's default param so that
            // this.root_ is defined and can be used within the foundation class.

            /** @protected {!F} */

            this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;
            this.foundation_.init();
            this.initialSyncWithDOM();
          }

          _createClass(MDCComponent, [{
            key: 'initialize',
            value: function initialize()
            /* ...args */
            {} // Subclasses can override this to do any additional setup work that would be considered part of a
            // "constructor". Essentially, it is a hook into the parent constructor before the foundation is
            // initialized. Any additional arguments besides root and foundation will be passed in here.

            /**
             * @return {!F} foundation
             */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              // Subclasses must override this method to return a properly configured foundation class for the
              // component.
              throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');
            }
          }, {
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {// Subclasses should override this method if they need to perform work to synchronize with a host DOM
              // object. An example of this would be a form control wrapper that needs to synchronize its internal state
              // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM
              // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.
            }
          }, {
            key: 'destroy',
            value: function destroy() {
              // Subclasses may implement this method to release any resources / deregister any listeners they have
              // attached. An example of this might be deregistering a resize event from the window object.
              this.foundation_.destroy();
            }
            /**
             * Wrapper method to add an event listener to the component's root element. This is most useful when
             * listening for custom events.
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: 'listen',
            value: function listen(evtType, handler) {
              this.root_.addEventListener(evtType, handler);
            }
            /**
             * Wrapper method to remove an event listener to the component's root element. This is most useful when
             * unlistening for custom events.
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: 'unlisten',
            value: function unlisten(evtType, handler) {
              this.root_.removeEventListener(evtType, handler);
            }
            /**
             * Fires a cross-browser-compatible custom event from the component root of the given type,
             * with the given data.
             * @param {string} evtType
             * @param {!Object} evtData
             * @param {boolean=} shouldBubble
             */

          }, {
            key: 'emit',
            value: function emit(evtType, evtData) {
              var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
              var evt = void 0;

              if (typeof CustomEvent === 'function') {
                evt = new CustomEvent(evtType, {
                  detail: evtData,
                  bubbles: shouldBubble
                });
              } else {
                evt = document.createEvent('CustomEvent');
                evt.initCustomEvent(evtType, shouldBubble, false, evtData);
              }

              this.root_.dispatchEvent(evt);
            }
          }]);

          return MDCComponent;
        }();
        /* harmony default export */


        __webpack_exports__["a"] = MDCComponent;
        /***/
      },

      /***/
      2:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "supportsCssVariables", function () {
          return supportsCssVariables;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "applyPassive", function () {
          return applyPassive;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "getMatchesProperty", function () {
          return getMatchesProperty;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "getNormalizedEventCoords", function () {
          return getNormalizedEventCoords;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.
         * @private {boolean|undefined}
         */


        var supportsCssVariables_ = void 0;
        /**
         * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.
         * @private {boolean|undefined}
         */

        var supportsPassive_ = void 0;
        /**
         * @param {!Window} windowObj
         * @return {boolean}
         */

        function detectEdgePseudoVarBug(windowObj) {
          // Detect versions of Edge with buggy var() support
          // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/
          var document = windowObj.document;
          var node = document.createElement('div');
          node.className = 'mdc-ripple-surface--test-edge-var-bug';
          document.body.appendChild(node); // The bug exists if ::before style ends up propagating to the parent element.
          // Additionally, getComputedStyle returns null in iframes with display: "none" in Firefox,
          // but Firefox is known to support CSS custom properties correctly.
          // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397

          var computedStyle = windowObj.getComputedStyle(node);
          var hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';
          node.remove();
          return hasPseudoVarBug;
        }
        /**
         * @param {!Window} windowObj
         * @param {boolean=} forceRefresh
         * @return {boolean|undefined}
         */


        function supportsCssVariables(windowObj) {
          var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          var supportsCssVariables = supportsCssVariables_;

          if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {
            return supportsCssVariables;
          }

          var supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';

          if (!supportsFunctionPresent) {
            return;
          }

          var explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes'); // See: https://bugs.webkit.org/show_bug.cgi?id=154669
          // See: README section on Safari

          var weAreFeatureDetectingSafari10plus = windowObj.CSS.supports('(--css-vars: yes)') && windowObj.CSS.supports('color', '#00000000');

          if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {
            supportsCssVariables = !detectEdgePseudoVarBug(windowObj);
          } else {
            supportsCssVariables = false;
          }

          if (!forceRefresh) {
            supportsCssVariables_ = supportsCssVariables;
          }

          return supportsCssVariables;
        } //

        /**
         * Determine whether the current browser supports passive event listeners, and if so, use them.
         * @param {!Window=} globalObj
         * @param {boolean=} forceRefresh
         * @return {boolean|!EventListenerOptions}
         */


        function applyPassive() {
          var globalObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
          var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

          if (supportsPassive_ === undefined || forceRefresh) {
            var isSupported = false;

            try {
              globalObj.document.addEventListener('test', null, {
                get passive() {
                  isSupported = true;
                  return isSupported;
                }

              });
            } catch (e) {}

            supportsPassive_ = isSupported;
          }

          return supportsPassive_ ?
          /** @type {!EventListenerOptions} */
          {
            passive: true
          } : false;
        }
        /**
         * @param {!Object} HTMLElementPrototype
         * @return {string}
         */


        function getMatchesProperty(HTMLElementPrototype) {
          /**
           * Order is important because we return the first existing method we find.
           * Do not change the order of the items in the below array.
           */
          var matchesMethods = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'];
          var method = 'matches';

          for (var i = 0; i < matchesMethods.length; i++) {
            var matchesMethod = matchesMethods[i];

            if (matchesMethod in HTMLElementPrototype) {
              method = matchesMethod;
              break;
            }
          }

          return method;
        }
        /**
         * @param {!Event} ev
         * @param {{x: number, y: number}} pageOffset
         * @param {!ClientRect} clientRect
         * @return {{x: number, y: number}}
         */


        function getNormalizedEventCoords(ev, pageOffset, clientRect) {
          var x = pageOffset.x,
              y = pageOffset.y;
          var documentX = x + clientRect.left;
          var documentY = y + clientRect.top;
          var normalizedX = void 0;
          var normalizedY = void 0; // Determine touch point relative to the ripple container.

          if (ev.type === 'touchstart') {
            ev =
            /** @type {!TouchEvent} */
            ev;
            normalizedX = ev.changedTouches[0].pageX - documentX;
            normalizedY = ev.changedTouches[0].pageY - documentY;
          } else {
            ev =
            /** @type {!MouseEvent} */
            ev;
            normalizedX = ev.pageX - documentX;
            normalizedY = ev.pageY - documentY;
          }

          return {
            x: normalizedX,
            y: normalizedY
          };
        }
        /***/

      },

      /***/
      3:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint no-unused-vars: [2, {"args": "none"}] */

        /**
         * Adapter for MDC Ripple. Provides an interface for managing
         * - classes
         * - dom
         * - CSS variables
         * - position
         * - dimensions
         * - scroll position
         * - event handlers
         * - unbounded, active and disabled states
         *
         * Additionally, provides type information for the adapter to the Closure
         * compiler.
         *
         * Implement this adapter for your framework of choice to delegate updates to
         * the component in your framework of choice. See architecture documentation
         * for more details.
         * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
         *
         * @record
         */


        var MDCRippleAdapter = function () {
          function MDCRippleAdapter() {
            _classCallCheck(this, MDCRippleAdapter);
          }

          _createClass(MDCRippleAdapter, [{
            key: "browserSupportsCssVars",

            /** @return {boolean} */
            value: function browserSupportsCssVars() {}
            /** @return {boolean} */

          }, {
            key: "isUnbounded",
            value: function isUnbounded() {}
            /** @return {boolean} */

          }, {
            key: "isSurfaceActive",
            value: function isSurfaceActive() {}
            /** @return {boolean} */

          }, {
            key: "isSurfaceDisabled",
            value: function isSurfaceDisabled() {}
            /** @param {string} className */

          }, {
            key: "addClass",
            value: function addClass(className) {}
            /** @param {string} className */

          }, {
            key: "removeClass",
            value: function removeClass(className) {}
            /** @param {!EventTarget} target */

          }, {
            key: "containsEventTarget",
            value: function containsEventTarget(target) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "registerInteractionHandler",
            value: function registerInteractionHandler(evtType, handler) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "deregisterInteractionHandler",
            value: function deregisterInteractionHandler(evtType, handler) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "registerDocumentInteractionHandler",
            value: function registerDocumentInteractionHandler(evtType, handler) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "deregisterDocumentInteractionHandler",
            value: function deregisterDocumentInteractionHandler(evtType, handler) {}
            /**
             * @param {!Function} handler
             */

          }, {
            key: "registerResizeHandler",
            value: function registerResizeHandler(handler) {}
            /**
             * @param {!Function} handler
             */

          }, {
            key: "deregisterResizeHandler",
            value: function deregisterResizeHandler(handler) {}
            /**
             * @param {string} varName
             * @param {?number|string} value
             */

          }, {
            key: "updateCssVariable",
            value: function updateCssVariable(varName, value) {}
            /** @return {!ClientRect} */

          }, {
            key: "computeBoundingRect",
            value: function computeBoundingRect() {}
            /** @return {{x: number, y: number}} */

          }, {
            key: "getWindowPageOffset",
            value: function getWindowPageOffset() {}
          }]);

          return MDCRippleAdapter;
        }();
        /* unused harmony default export */


        var _unused_webpack_default_export = MDCRippleAdapter;
        /***/
      },

      /***/
      4:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "MDCRipple", function () {
          return MDCRipple;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "RippleCapableSurface", function () {
          return RippleCapableSurface;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(3);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(5);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(2);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCRippleFoundation", function () {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
        });
        /* harmony reexport (module object) */


        __webpack_require__.d(__webpack_exports__, "util", function () {
          return __WEBPACK_IMPORTED_MODULE_3__util__;
        });

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @extends MDCComponent<!MDCRippleFoundation>
         */


        var MDCRipple = function (_MDCComponent) {
          _inherits(MDCRipple, _MDCComponent);
          /** @param {...?} args */


          function MDCRipple() {
            var _ref;

            _classCallCheck(this, MDCRipple);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            /** @type {boolean} */


            var _this = _possibleConstructorReturn(this, (_ref = MDCRipple.__proto__ || Object.getPrototypeOf(MDCRipple)).call.apply(_ref, [this].concat(args)));

            _this.disabled = false;
            /** @private {boolean} */

            _this.unbounded_;
            return _this;
          }
          /**
           * @param {!Element} root
           * @param {{isUnbounded: (boolean|undefined)}=} options
           * @return {!MDCRipple}
           */


          _createClass(MDCRipple, [{
            key: 'setUnbounded_',

            /**
             * Closure Compiler throws an access control error when directly accessing a
             * protected or private property inside a getter/setter, like unbounded above.
             * By accessing the protected property inside a method, we solve that problem.
             * That's why this function exists.
             * @private
             */
            value: function setUnbounded_() {
              this.foundation_.setUnbounded(this.unbounded_);
            }
          }, {
            key: 'activate',
            value: function activate() {
              this.foundation_.activate();
            }
          }, {
            key: 'deactivate',
            value: function deactivate() {
              this.foundation_.deactivate();
            }
          }, {
            key: 'layout',
            value: function layout() {
              this.foundation_.layout();
            }
            /**
             * @return {!MDCRippleFoundation}
             * @override
             */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
              /* default */
              ](MDCRipple.createAdapter(this));
            }
            /** @override */

          }, {
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {
              this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;
            }
          }, {
            key: 'unbounded',

            /** @return {boolean} */
            get: function get() {
              return this.unbounded_;
            }
            /** @param {boolean} unbounded */
            ,
            set: function set(unbounded) {
              this.unbounded_ = Boolean(unbounded);
              this.setUnbounded_();
            }
          }], [{
            key: 'attachTo',
            value: function attachTo(root) {
              var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
                  _ref2$isUnbounded = _ref2.isUnbounded,
                  isUnbounded = _ref2$isUnbounded === undefined ? undefined : _ref2$isUnbounded;

              var ripple = new MDCRipple(root); // Only override unbounded behavior if option is explicitly specified

              if (isUnbounded !== undefined) {
                ripple.unbounded =
                /** @type {boolean} */
                isUnbounded;
              }

              return ripple;
            }
            /**
             * @param {!RippleCapableSurface} instance
             * @return {!MDCRippleAdapter}
             */

          }, {
            key: 'createAdapter',
            value: function createAdapter(instance) {
              var MATCHES = __WEBPACK_IMPORTED_MODULE_3__util__["getMatchesProperty"](HTMLElement.prototype);

              return {
                browserSupportsCssVars: function browserSupportsCssVars() {
                  return __WEBPACK_IMPORTED_MODULE_3__util__["supportsCssVariables"](window);
                },
                isUnbounded: function isUnbounded() {
                  return instance.unbounded;
                },
                isSurfaceActive: function isSurfaceActive() {
                  return instance.root_[MATCHES](':active');
                },
                isSurfaceDisabled: function isSurfaceDisabled() {
                  return instance.disabled;
                },
                addClass: function addClass(className) {
                  return instance.root_.classList.add(className);
                },
                removeClass: function removeClass(className) {
                  return instance.root_.classList.remove(className);
                },
                containsEventTarget: function containsEventTarget(target) {
                  return instance.root_.contains(target);
                },
                registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
                  return instance.root_.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
                  return instance.root_.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                registerDocumentInteractionHandler: function registerDocumentInteractionHandler(evtType, handler) {
                  return document.documentElement.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler(evtType, handler) {
                  return document.documentElement.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                registerResizeHandler: function registerResizeHandler(handler) {
                  return window.addEventListener('resize', handler);
                },
                deregisterResizeHandler: function deregisterResizeHandler(handler) {
                  return window.removeEventListener('resize', handler);
                },
                updateCssVariable: function updateCssVariable(varName, value) {
                  return instance.root_.style.setProperty(varName, value);
                },
                computeBoundingRect: function computeBoundingRect() {
                  return instance.root_.getBoundingClientRect();
                },
                getWindowPageOffset: function getWindowPageOffset() {
                  return {
                    x: window.pageXOffset,
                    y: window.pageYOffset
                  };
                }
              };
            }
          }]);

          return MDCRipple;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
        /* default */
        ]);
        /**
         * See Material Design spec for more details on when to use ripples.
         * https://material.io/guidelines/motion/choreography.html#choreography-creation
         * @record
         */


        var RippleCapableSurface = function RippleCapableSurface() {
          _classCallCheck(this, RippleCapableSurface);
        };
        /** @protected {!Element} */


        RippleCapableSurface.prototype.root_;
        /**
         * Whether or not the ripple bleeds out of the bounds of the element.
         * @type {boolean|undefined}
         */

        RippleCapableSurface.prototype.unbounded;
        /**
         * Whether or not the ripple is attached to a disabled component.
         * @type {boolean|undefined}
         */

        RippleCapableSurface.prototype.disabled;
        /***/
      },

      /***/
      5:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(3);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(6);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(2);

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @typedef {{
         *   isActivated: (boolean|undefined),
         *   hasDeactivationUXRun: (boolean|undefined),
         *   wasActivatedByPointer: (boolean|undefined),
         *   wasElementMadeActive: (boolean|undefined),
         *   activationEvent: (!Event|undefined),
         *   isProgrammatic: (boolean|undefined)
         * }}
         */


        var ActivationStateType = void 0;
        /**
         * @typedef {{
         *   activate: (string|undefined),
         *   deactivate: (string|undefined),
         *   focus: (string|undefined),
         *   blur: (string|undefined)
         * }}
         */

        var ListenerInfoType = void 0;
        /**
         * @typedef {{
         *   activate: function(!Event),
         *   deactivate: function(!Event=),
         *   focus: function(),
         *   blur: function()
         * }}
         */

        var ListenersType = void 0;
        /**
         * @typedef {{
         *   x: number,
         *   y: number
         * }}
         */

        var PointType = void 0; // Activation events registered on the root element of each instance for activation

        var ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown']; // Deactivation events registered on documentElement when a pointer-related down event occurs

        var POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu']; // Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations

        /** @type {!Array<!EventTarget>} */

        var activatedTargets = [];
        /**
         * @extends {MDCFoundation<!MDCRippleAdapter>}
         */

        var MDCRippleFoundation = function (_MDCFoundation) {
          _inherits(MDCRippleFoundation, _MDCFoundation);

          _createClass(MDCRippleFoundation, null, [{
            key: 'cssClasses',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ];
            }
          }, {
            key: 'strings',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["c"
              /* strings */
              ];
            }
          }, {
            key: 'numbers',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ];
            }
          }, {
            key: 'defaultAdapter',
            get: function get() {
              return {
                browserSupportsCssVars: function browserSupportsCssVars()
                /* boolean - cached */
                {},
                isUnbounded: function isUnbounded()
                /* boolean */
                {},
                isSurfaceActive: function isSurfaceActive()
                /* boolean */
                {},
                isSurfaceDisabled: function isSurfaceDisabled()
                /* boolean */
                {},
                addClass: function addClass()
                /* className: string */
                {},
                removeClass: function removeClass()
                /* className: string */
                {},
                containsEventTarget: function containsEventTarget()
                /* target: !EventTarget */
                {},
                registerInteractionHandler: function registerInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                deregisterInteractionHandler: function deregisterInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                registerDocumentInteractionHandler: function registerDocumentInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                registerResizeHandler: function registerResizeHandler()
                /* handler: EventListener */
                {},
                deregisterResizeHandler: function deregisterResizeHandler()
                /* handler: EventListener */
                {},
                updateCssVariable: function updateCssVariable()
                /* varName: string, value: string */
                {},
                computeBoundingRect: function computeBoundingRect()
                /* ClientRect */
                {},
                getWindowPageOffset: function getWindowPageOffset()
                /* {x: number, y: number} */
                {}
              };
            }
          }]);

          function MDCRippleFoundation(adapter) {
            _classCallCheck(this, MDCRippleFoundation);
            /** @private {number} */


            var _this = _possibleConstructorReturn(this, (MDCRippleFoundation.__proto__ || Object.getPrototypeOf(MDCRippleFoundation)).call(this, _extends(MDCRippleFoundation.defaultAdapter, adapter)));

            _this.layoutFrame_ = 0;
            /** @private {!ClientRect} */

            _this.frame_ =
            /** @type {!ClientRect} */
            {
              width: 0,
              height: 0
            };
            /** @private {!ActivationStateType} */

            _this.activationState_ = _this.defaultActivationState_();
            /** @private {number} */

            _this.initialSize_ = 0;
            /** @private {number} */

            _this.maxRadius_ = 0;
            /** @private {function(!Event)} */

            _this.activateHandler_ = function (e) {
              return _this.activate_(e);
            };
            /** @private {function(!Event=)} */


            _this.deactivateHandler_ = function () {
              return _this.deactivate_();
            };
            /** @private {function(!Event=)} */


            _this.focusHandler_ = function () {
              return _this.handleFocus();
            };
            /** @private {function(!Event=)} */


            _this.blurHandler_ = function () {
              return _this.handleBlur();
            };
            /** @private {!Function} */


            _this.resizeHandler_ = function () {
              return _this.layout();
            };
            /** @private {{left: number, top:number}} */


            _this.unboundedCoords_ = {
              left: 0,
              top: 0
            };
            /** @private {number} */

            _this.fgScale_ = 0;
            /** @private {number} */

            _this.activationTimer_ = 0;
            /** @private {number} */

            _this.fgDeactivationRemovalTimer_ = 0;
            /** @private {boolean} */

            _this.activationAnimationHasEnded_ = false;
            /** @private {!Function} */

            _this.activationTimerCallback_ = function () {
              _this.activationAnimationHasEnded_ = true;

              _this.runDeactivationUXLogicIfReady_();
            };
            /** @private {!Event|undefined} */


            _this.previousActivationEvent_;
            return _this;
          }
          /**
           * We compute this property so that we are not querying information about the client
           * until the point in time where the foundation requests it. This prevents scenarios where
           * client-side feature-detection may happen too early, such as when components are rendered on the server
           * and then initialized at mount time on the client.
           * @return {boolean}
           * @private
           */


          _createClass(MDCRippleFoundation, [{
            key: 'supportsPressRipple_',
            value: function supportsPressRipple_() {
              return this.adapter_.browserSupportsCssVars();
            }
            /**
             * @return {!ActivationStateType}
             */

          }, {
            key: 'defaultActivationState_',
            value: function defaultActivationState_() {
              return {
                isActivated: false,
                hasDeactivationUXRun: false,
                wasActivatedByPointer: false,
                wasElementMadeActive: false,
                activationEvent: undefined,
                isProgrammatic: false
              };
            }
            /** @override */

          }, {
            key: 'init',
            value: function init() {
              var _this2 = this;

              var supportsPressRipple = this.supportsPressRipple_();
              this.registerRootHandlers_(supportsPressRipple);

              if (supportsPressRipple) {
                var _MDCRippleFoundation$ = MDCRippleFoundation.cssClasses,
                    ROOT = _MDCRippleFoundation$.ROOT,
                    UNBOUNDED = _MDCRippleFoundation$.UNBOUNDED;
                requestAnimationFrame(function () {
                  _this2.adapter_.addClass(ROOT);

                  if (_this2.adapter_.isUnbounded()) {
                    _this2.adapter_.addClass(UNBOUNDED); // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple


                    _this2.layoutInternal_();
                  }
                });
              }
            }
            /** @override */

          }, {
            key: 'destroy',
            value: function destroy() {
              var _this3 = this;

              if (this.supportsPressRipple_()) {
                if (this.activationTimer_) {
                  clearTimeout(this.activationTimer_);
                  this.activationTimer_ = 0;
                  this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);
                }

                if (this.fgDeactivationRemovalTimer_) {
                  clearTimeout(this.fgDeactivationRemovalTimer_);
                  this.fgDeactivationRemovalTimer_ = 0;
                  this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);
                }

                var _MDCRippleFoundation$2 = MDCRippleFoundation.cssClasses,
                    ROOT = _MDCRippleFoundation$2.ROOT,
                    UNBOUNDED = _MDCRippleFoundation$2.UNBOUNDED;
                requestAnimationFrame(function () {
                  _this3.adapter_.removeClass(ROOT);

                  _this3.adapter_.removeClass(UNBOUNDED);

                  _this3.removeCssVars_();
                });
              }

              this.deregisterRootHandlers_();
              this.deregisterDeactivationHandlers_();
            }
            /**
             * @param {boolean} supportsPressRipple Passed from init to save a redundant function call
             * @private
             */

          }, {
            key: 'registerRootHandlers_',
            value: function registerRootHandlers_(supportsPressRipple) {
              var _this4 = this;

              if (supportsPressRipple) {
                ACTIVATION_EVENT_TYPES.forEach(function (type) {
                  _this4.adapter_.registerInteractionHandler(type, _this4.activateHandler_);
                });

                if (this.adapter_.isUnbounded()) {
                  this.adapter_.registerResizeHandler(this.resizeHandler_);
                }
              }

              this.adapter_.registerInteractionHandler('focus', this.focusHandler_);
              this.adapter_.registerInteractionHandler('blur', this.blurHandler_);
            }
            /**
             * @param {!Event} e
             * @private
             */

          }, {
            key: 'registerDeactivationHandlers_',
            value: function registerDeactivationHandlers_(e) {
              var _this5 = this;

              if (e.type === 'keydown') {
                this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);
              } else {
                POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
                  _this5.adapter_.registerDocumentInteractionHandler(type, _this5.deactivateHandler_);
                });
              }
            }
            /** @private */

          }, {
            key: 'deregisterRootHandlers_',
            value: function deregisterRootHandlers_() {
              var _this6 = this;

              ACTIVATION_EVENT_TYPES.forEach(function (type) {
                _this6.adapter_.deregisterInteractionHandler(type, _this6.activateHandler_);
              });
              this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);
              this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);

              if (this.adapter_.isUnbounded()) {
                this.adapter_.deregisterResizeHandler(this.resizeHandler_);
              }
            }
            /** @private */

          }, {
            key: 'deregisterDeactivationHandlers_',
            value: function deregisterDeactivationHandlers_() {
              var _this7 = this;

              this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);
              POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
                _this7.adapter_.deregisterDocumentInteractionHandler(type, _this7.deactivateHandler_);
              });
            }
            /** @private */

          }, {
            key: 'removeCssVars_',
            value: function removeCssVars_() {
              var _this8 = this;

              var strings = MDCRippleFoundation.strings;
              Object.keys(strings).forEach(function (k) {
                if (k.indexOf('VAR_') === 0) {
                  _this8.adapter_.updateCssVariable(strings[k], null);
                }
              });
            }
            /**
             * @param {!Event=} e
             * @private
             */

          }, {
            key: 'activate_',
            value: function activate_(e) {
              var _this9 = this;

              if (this.adapter_.isSurfaceDisabled()) {
                return;
              }

              var activationState = this.activationState_;

              if (activationState.isActivated) {
                return;
              } // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction


              var previousActivationEvent = this.previousActivationEvent_;
              var isSameInteraction = previousActivationEvent && e !== undefined && previousActivationEvent.type !== e.type;

              if (isSameInteraction) {
                return;
              }

              activationState.isActivated = true;
              activationState.isProgrammatic = e === undefined;
              activationState.activationEvent = e;
              activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e !== undefined && (e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown');
              var hasActivatedChild = e !== undefined && activatedTargets.length > 0 && activatedTargets.some(function (target) {
                return _this9.adapter_.containsEventTarget(target);
              });

              if (hasActivatedChild) {
                // Immediately reset activation state, while preserving logic that prevents touch follow-on events
                this.resetActivationState_();
                return;
              }

              if (e !== undefined) {
                activatedTargets.push(
                /** @type {!EventTarget} */
                e.target);
                this.registerDeactivationHandlers_(e);
              }

              activationState.wasElementMadeActive = this.checkElementMadeActive_(e);

              if (activationState.wasElementMadeActive) {
                this.animateActivation_();
              }

              requestAnimationFrame(function () {
                // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples
                activatedTargets = [];

                if (!activationState.wasElementMadeActive && e !== undefined && (e.key === ' ' || e.keyCode === 32)) {
                  // If space was pressed, try again within an rAF call to detect :active, because different UAs report
                  // active states inconsistently when they're called within event handling code:
                  // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971
                  // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741
                  // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS
                  // variable is set within a rAF callback for a submit button interaction (#2241).
                  activationState.wasElementMadeActive = _this9.checkElementMadeActive_(e);

                  if (activationState.wasElementMadeActive) {
                    _this9.animateActivation_();
                  }
                }

                if (!activationState.wasElementMadeActive) {
                  // Reset activation state immediately if element was not made active.
                  _this9.activationState_ = _this9.defaultActivationState_();
                }
              });
            }
            /**
             * @param {!Event=} e
             * @private
             */

          }, {
            key: 'checkElementMadeActive_',
            value: function checkElementMadeActive_(e) {
              return e !== undefined && e.type === 'keydown' ? this.adapter_.isSurfaceActive() : true;
            }
            /**
             * @param {!Event=} event Optional event containing position information.
             */

          }, {
            key: 'activate',
            value: function activate(event) {
              this.activate_(event);
            }
            /** @private */

          }, {
            key: 'animateActivation_',
            value: function animateActivation_() {
              var _this10 = this;

              var _MDCRippleFoundation$3 = MDCRippleFoundation.strings,
                  VAR_FG_TRANSLATE_START = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_START,
                  VAR_FG_TRANSLATE_END = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_END;
              var _MDCRippleFoundation$4 = MDCRippleFoundation.cssClasses,
                  FG_DEACTIVATION = _MDCRippleFoundation$4.FG_DEACTIVATION,
                  FG_ACTIVATION = _MDCRippleFoundation$4.FG_ACTIVATION;
              var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;
              this.layoutInternal_();
              var translateStart = '';
              var translateEnd = '';

              if (!this.adapter_.isUnbounded()) {
                var _getFgTranslationCoor = this.getFgTranslationCoordinates_(),
                    startPoint = _getFgTranslationCoor.startPoint,
                    endPoint = _getFgTranslationCoor.endPoint;

                translateStart = startPoint.x + 'px, ' + startPoint.y + 'px';
                translateEnd = endPoint.x + 'px, ' + endPoint.y + 'px';
              }

              this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);
              this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd); // Cancel any ongoing activation/deactivation animations

              clearTimeout(this.activationTimer_);
              clearTimeout(this.fgDeactivationRemovalTimer_);
              this.rmBoundedActivationClasses_();
              this.adapter_.removeClass(FG_DEACTIVATION); // Force layout in order to re-trigger the animation.

              this.adapter_.computeBoundingRect();
              this.adapter_.addClass(FG_ACTIVATION);
              this.activationTimer_ = setTimeout(function () {
                return _this10.activationTimerCallback_();
              }, DEACTIVATION_TIMEOUT_MS);
            }
            /**
             * @private
             * @return {{startPoint: PointType, endPoint: PointType}}
             */

          }, {
            key: 'getFgTranslationCoordinates_',
            value: function getFgTranslationCoordinates_() {
              var _activationState_ = this.activationState_,
                  activationEvent = _activationState_.activationEvent,
                  wasActivatedByPointer = _activationState_.wasActivatedByPointer;
              var startPoint = void 0;

              if (wasActivatedByPointer) {
                startPoint = Object(__WEBPACK_IMPORTED_MODULE_3__util__["getNormalizedEventCoords"])(
                /** @type {!Event} */
                activationEvent, this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect());
              } else {
                startPoint = {
                  x: this.frame_.width / 2,
                  y: this.frame_.height / 2
                };
              } // Center the element around the start point.


              startPoint = {
                x: startPoint.x - this.initialSize_ / 2,
                y: startPoint.y - this.initialSize_ / 2
              };
              var endPoint = {
                x: this.frame_.width / 2 - this.initialSize_ / 2,
                y: this.frame_.height / 2 - this.initialSize_ / 2
              };
              return {
                startPoint: startPoint,
                endPoint: endPoint
              };
            }
            /** @private */

          }, {
            key: 'runDeactivationUXLogicIfReady_',
            value: function runDeactivationUXLogicIfReady_() {
              var _this11 = this; // This method is called both when a pointing device is released, and when the activation animation ends.
              // The deactivation animation should only run after both of those occur.


              var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;
              var _activationState_2 = this.activationState_,
                  hasDeactivationUXRun = _activationState_2.hasDeactivationUXRun,
                  isActivated = _activationState_2.isActivated;
              var activationHasEnded = hasDeactivationUXRun || !isActivated;

              if (activationHasEnded && this.activationAnimationHasEnded_) {
                this.rmBoundedActivationClasses_();
                this.adapter_.addClass(FG_DEACTIVATION);
                this.fgDeactivationRemovalTimer_ = setTimeout(function () {
                  _this11.adapter_.removeClass(FG_DEACTIVATION);
                }, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
                /* numbers */
                ].FG_DEACTIVATION_MS);
              }
            }
            /** @private */

          }, {
            key: 'rmBoundedActivationClasses_',
            value: function rmBoundedActivationClasses_() {
              var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;
              this.adapter_.removeClass(FG_ACTIVATION);
              this.activationAnimationHasEnded_ = false;
              this.adapter_.computeBoundingRect();
            }
          }, {
            key: 'resetActivationState_',
            value: function resetActivationState_() {
              var _this12 = this;

              this.previousActivationEvent_ = this.activationState_.activationEvent;
              this.activationState_ = this.defaultActivationState_(); // Touch devices may fire additional events for the same interaction within a short time.
              // Store the previous event until it's safe to assume that subsequent events are for new interactions.

              setTimeout(function () {
                return _this12.previousActivationEvent_ = undefined;
              }, MDCRippleFoundation.numbers.TAP_DELAY_MS);
            }
            /**
             * @private
             */

          }, {
            key: 'deactivate_',
            value: function deactivate_() {
              var _this13 = this;

              var activationState = this.activationState_; // This can happen in scenarios such as when you have a keyup event that blurs the element.

              if (!activationState.isActivated) {
                return;
              }

              var state =
              /** @type {!ActivationStateType} */
              _extends({}, activationState);

              if (activationState.isProgrammatic) {
                requestAnimationFrame(function () {
                  return _this13.animateDeactivation_(state);
                });
                this.resetActivationState_();
              } else {
                this.deregisterDeactivationHandlers_();
                requestAnimationFrame(function () {
                  _this13.activationState_.hasDeactivationUXRun = true;

                  _this13.animateDeactivation_(state);

                  _this13.resetActivationState_();
                });
              }
            }
          }, {
            key: 'deactivate',
            value: function deactivate() {
              this.deactivate_();
            }
            /**
             * @param {!ActivationStateType} options
             * @private
             */

          }, {
            key: 'animateDeactivation_',
            value: function animateDeactivation_(_ref) {
              var wasActivatedByPointer = _ref.wasActivatedByPointer,
                  wasElementMadeActive = _ref.wasElementMadeActive;

              if (wasActivatedByPointer || wasElementMadeActive) {
                this.runDeactivationUXLogicIfReady_();
              }
            }
          }, {
            key: 'layout',
            value: function layout() {
              var _this14 = this;

              if (this.layoutFrame_) {
                cancelAnimationFrame(this.layoutFrame_);
              }

              this.layoutFrame_ = requestAnimationFrame(function () {
                _this14.layoutInternal_();

                _this14.layoutFrame_ = 0;
              });
            }
            /** @private */

          }, {
            key: 'layoutInternal_',
            value: function layoutInternal_() {
              var _this15 = this;

              this.frame_ = this.adapter_.computeBoundingRect();
              var maxDim = Math.max(this.frame_.height, this.frame_.width); // Surface diameter is treated differently for unbounded vs. bounded ripples.
              // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately
              // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically
              // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter
              // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via
              // `overflow: hidden`.

              var getBoundedRadius = function getBoundedRadius() {
                var hypotenuse = Math.sqrt(Math.pow(_this15.frame_.width, 2) + Math.pow(_this15.frame_.height, 2));
                return hypotenuse + MDCRippleFoundation.numbers.PADDING;
              };

              this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius(); // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform

              this.initialSize_ = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);
              this.fgScale_ = this.maxRadius_ / this.initialSize_;
              this.updateLayoutCssVars_();
            }
            /** @private */

          }, {
            key: 'updateLayoutCssVars_',
            value: function updateLayoutCssVars_() {
              var _MDCRippleFoundation$5 = MDCRippleFoundation.strings,
                  VAR_FG_SIZE = _MDCRippleFoundation$5.VAR_FG_SIZE,
                  VAR_LEFT = _MDCRippleFoundation$5.VAR_LEFT,
                  VAR_TOP = _MDCRippleFoundation$5.VAR_TOP,
                  VAR_FG_SCALE = _MDCRippleFoundation$5.VAR_FG_SCALE;
              this.adapter_.updateCssVariable(VAR_FG_SIZE, this.initialSize_ + 'px');
              this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);

              if (this.adapter_.isUnbounded()) {
                this.unboundedCoords_ = {
                  left: Math.round(this.frame_.width / 2 - this.initialSize_ / 2),
                  top: Math.round(this.frame_.height / 2 - this.initialSize_ / 2)
                };
                this.adapter_.updateCssVariable(VAR_LEFT, this.unboundedCoords_.left + 'px');
                this.adapter_.updateCssVariable(VAR_TOP, this.unboundedCoords_.top + 'px');
              }
            }
            /** @param {boolean} unbounded */

          }, {
            key: 'setUnbounded',
            value: function setUnbounded(unbounded) {
              var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;

              if (unbounded) {
                this.adapter_.addClass(UNBOUNDED);
              } else {
                this.adapter_.removeClass(UNBOUNDED);
              }
            }
          }, {
            key: 'handleFocus',
            value: function handleFocus() {
              var _this16 = this;

              requestAnimationFrame(function () {
                return _this16.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
              });
            }
          }, {
            key: 'handleBlur',
            value: function handleBlur() {
              var _this17 = this;

              requestAnimationFrame(function () {
                return _this17.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
              });
            }
          }]);

          return MDCRippleFoundation;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
        /* default */
        ]);
        /* harmony default export */


        __webpack_exports__["a"] = MDCRippleFoundation;
        /***/
      },

      /***/
      6:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "a", function () {
          return cssClasses;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "c", function () {
          return strings;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "b", function () {
          return numbers;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */


        var cssClasses = {
          // Ripple is a special case where the "root" component is really a "mixin" of sorts,
          // given that it's an 'upgrade' to an existing component. That being said it is the root
          // CSS class that all other CSS classes derive from.
          ROOT: 'mdc-ripple-upgraded',
          UNBOUNDED: 'mdc-ripple-upgraded--unbounded',
          BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',
          FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',
          FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation'
        };
        var strings = {
          VAR_LEFT: '--mdc-ripple-left',
          VAR_TOP: '--mdc-ripple-top',
          VAR_FG_SIZE: '--mdc-ripple-fg-size',
          VAR_FG_SCALE: '--mdc-ripple-fg-scale',
          VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',
          VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end'
        };
        var numbers = {
          PADDING: 10,
          INITIAL_ORIGIN_SCALE: 0.6,
          DEACTIVATION_TIMEOUT_MS: 225,
          // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)
          FG_DEACTIVATION_MS: 150,
          // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)
          TAP_DELAY_MS: 300
        };
        /***/
      },

      /***/
      63:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "a", function () {
          return MDCChip;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__ = __webpack_require__(4);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__adapter__ = __webpack_require__(64);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__foundation__ = __webpack_require__(65);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(66);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "b", function () {
          return __WEBPACK_IMPORTED_MODULE_3__foundation__["a"];
        });

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        var _get = function get(object, property, receiver) {
          if (object === null) object = Function.prototype;
          var desc = Object.getOwnPropertyDescriptor(object, property);

          if (desc === undefined) {
            var parent = Object.getPrototypeOf(object);

            if (parent === null) {
              return undefined;
            } else {
              return get(parent, property, receiver);
            }
          } else if ("value" in desc) {
            return desc.value;
          } else {
            var getter = desc.get;

            if (getter === undefined) {
              return undefined;
            }

            return getter.call(receiver);
          }
        };

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */


        var INTERACTION_EVENTS = ['click', 'keydown'];
        /**
         * @extends {MDCComponent<!MDCChipFoundation>}
         * @final
         */

        var MDCChip = function (_MDCComponent) {
          _inherits(MDCChip, _MDCComponent);
          /**
           * @param {...?} args
           */


          function MDCChip() {
            var _ref;

            _classCallCheck(this, MDCChip);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            /** @type {string} */


            var _this = _possibleConstructorReturn(this, (_ref = MDCChip.__proto__ || Object.getPrototypeOf(MDCChip)).call.apply(_ref, [this].concat(args)));

            _this.id;
            /** @private {?Element} */

            _this.leadingIcon_;
            /** @private {?Element} */

            _this.trailingIcon_;
            /** @private {!MDCRipple} */

            _this.ripple_;
            /** @private {?function(?Event): undefined} */

            _this.handleInteraction_;
            /** @private {?function(!Event): undefined} */

            _this.handleTransitionEnd_;
            /** @private {function(!Event): undefined} */

            _this.handleTrailingIconInteraction_;
            return _this;
          }
          /**
           * @param {!Element} root
           * @return {!MDCChip}
           */


          _createClass(MDCChip, [{
            key: 'initialize',
            value: function initialize() {
              var _this2 = this;

              var rippleFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (el, foundation) {
                return new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__["MDCRipple"](el, foundation);
              };
              this.id = this.root_.id;
              this.leadingIcon_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
              /* strings */
              ].LEADING_ICON_SELECTOR);
              this.trailingIcon_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
              /* strings */
              ].TRAILING_ICON_SELECTOR); // Adjust ripple size for chips with animated growing width. This applies when filter chips without
              // a leading icon are selected, and a leading checkmark will cause the chip width to expand.

              var checkmarkEl = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
              /* strings */
              ].CHECKMARK_SELECTOR);

              if (checkmarkEl && !this.leadingIcon_) {
                var adapter = _extends(__WEBPACK_IMPORTED_MODULE_1__material_ripple_index__["MDCRipple"].createAdapter(this), {
                  computeBoundingRect: function computeBoundingRect() {
                    var height = _this2.root_.getBoundingClientRect().height; // The checkmark's width is initially set to 0, so use the checkmark's height as a proxy since the
                    // checkmark should always be square.


                    var width = _this2.root_.getBoundingClientRect().width + checkmarkEl.getBoundingClientRect().height;
                    return {
                      height: height,
                      width: width
                    };
                  }
                });

                this.ripple_ = rippleFactory(this.root_, new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__["MDCRippleFoundation"](adapter));
              } else {
                this.ripple_ = rippleFactory(this.root_);
              }
            }
          }, {
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {
              var _this3 = this;

              this.handleInteraction_ = function (evt) {
                return _this3.foundation_.handleInteraction(evt);
              };

              this.handleTransitionEnd_ = function (evt) {
                return _this3.foundation_.handleTransitionEnd(evt);
              };

              this.handleTrailingIconInteraction_ = function (evt) {
                return _this3.foundation_.handleTrailingIconInteraction(evt);
              };

              INTERACTION_EVENTS.forEach(function (evtType) {
                _this3.root_.addEventListener(evtType, _this3.handleInteraction_);
              });
              this.root_.addEventListener('transitionend', this.handleTransitionEnd_);

              if (this.trailingIcon_) {
                INTERACTION_EVENTS.forEach(function (evtType) {
                  _this3.trailingIcon_.addEventListener(evtType, _this3.handleTrailingIconInteraction_);
                });
              }
            }
          }, {
            key: 'destroy',
            value: function destroy() {
              var _this4 = this;

              this.ripple_.destroy();
              INTERACTION_EVENTS.forEach(function (evtType) {
                _this4.root_.removeEventListener(evtType, _this4.handleInteraction_);
              });
              this.root_.removeEventListener('transitionend', this.handleTransitionEnd_);

              if (this.trailingIcon_) {
                INTERACTION_EVENTS.forEach(function (evtType) {
                  _this4.trailingIcon_.removeEventListener(evtType, _this4.handleTrailingIconInteraction_);
                });
              }

              _get(MDCChip.prototype.__proto__ || Object.getPrototypeOf(MDCChip.prototype), 'destroy', this).call(this);
            }
            /**
             * Returns whether the chip is selected.
             * @return {boolean}
             */

          }, {
            key: 'beginExit',

            /**
             * Begins the exit animation which leads to removal of the chip.
             */
            value: function beginExit() {
              this.foundation_.beginExit();
            }
            /**
             * @return {!MDCChipFoundation}
             */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              var _this5 = this;

              return new __WEBPACK_IMPORTED_MODULE_3__foundation__["a"
              /* MDCChipFoundation */
              ](
              /** @type {!MDCChipAdapter} */
              _extends({
                addClass: function addClass(className) {
                  return _this5.root_.classList.add(className);
                },
                removeClass: function removeClass(className) {
                  return _this5.root_.classList.remove(className);
                },
                hasClass: function hasClass(className) {
                  return _this5.root_.classList.contains(className);
                },
                addClassToLeadingIcon: function addClassToLeadingIcon(className) {
                  if (_this5.leadingIcon_) {
                    _this5.leadingIcon_.classList.add(className);
                  }
                },
                removeClassFromLeadingIcon: function removeClassFromLeadingIcon(className) {
                  if (_this5.leadingIcon_) {
                    _this5.leadingIcon_.classList.remove(className);
                  }
                },
                eventTargetHasClass: function eventTargetHasClass(target, className) {
                  return target.classList.contains(className);
                },
                notifyInteraction: function notifyInteraction() {
                  return _this5.emit(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                  /* strings */
                  ].INTERACTION_EVENT, {
                    chipId: _this5.id
                  }, true
                  /* shouldBubble */
                  );
                },
                notifySelection: function notifySelection(selected) {
                  return _this5.emit(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                  /* strings */
                  ].SELECTION_EVENT, {
                    chipId: _this5.id,
                    selected: selected
                  }, true
                  /* shouldBubble */
                  );
                },
                notifyTrailingIconInteraction: function notifyTrailingIconInteraction() {
                  return _this5.emit(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                  /* strings */
                  ].TRAILING_ICON_INTERACTION_EVENT, {
                    chipId: _this5.id
                  }, true
                  /* shouldBubble */
                  );
                },
                notifyRemoval: function notifyRemoval() {
                  return _this5.emit(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                  /* strings */
                  ].REMOVAL_EVENT, {
                    chipId: _this5.id,
                    root: _this5.root_
                  }, true
                  /* shouldBubble */
                  );
                },
                getComputedStyleValue: function getComputedStyleValue(propertyName) {
                  return window.getComputedStyle(_this5.root_).getPropertyValue(propertyName);
                },
                setStyleProperty: function setStyleProperty(propertyName, value) {
                  return _this5.root_.style.setProperty(propertyName, value);
                }
              }));
            }
            /** @return {!MDCRipple} */

          }, {
            key: 'selected',
            get: function get() {
              return this.foundation_.isSelected();
            }
            /**
             * Sets selected state on the chip.
             * @param {boolean} selected
             */
            ,
            set: function set(selected) {
              this.foundation_.setSelected(selected);
            }
            /**
             * Returns whether a trailing icon click should trigger exit/removal of the chip.
             * @return {boolean}
             */

          }, {
            key: 'shouldRemoveOnTrailingIconClick',
            get: function get() {
              return this.foundation_.getShouldRemoveOnTrailingIconClick();
            }
            /**
             * Sets whether a trailing icon click should trigger exit/removal of the chip.
             * @param {boolean} shouldRemove
             */
            ,
            set: function set(shouldRemove) {
              this.foundation_.setShouldRemoveOnTrailingIconClick(shouldRemove);
            }
          }, {
            key: 'ripple',
            get: function get() {
              return this.ripple_;
            }
          }], [{
            key: 'attachTo',
            value: function attachTo(root) {
              return new MDCChip(root);
            }
          }]);

          return MDCChip;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
        /* default */
        ]);
        /***/

      },

      /***/
      64:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint no-unused-vars: [2, {"args": "none"}] */

        /**
         * Adapter for MDC Chip.
         *
         * Defines the shape of the adapter expected by the foundation. Implement this
         * adapter to integrate the Chip into your framework. See
         * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
         * for more information.
         *
         * @record
         */


        var MDCChipAdapter = function () {
          function MDCChipAdapter() {
            _classCallCheck(this, MDCChipAdapter);
          }

          _createClass(MDCChipAdapter, [{
            key: "addClass",

            /**
             * Adds a class to the root element.
             * @param {string} className
             */
            value: function addClass(className) {}
            /**
             * Removes a class from the root element.
             * @param {string} className
             */

          }, {
            key: "removeClass",
            value: function removeClass(className) {}
            /**
             * Returns true if the root element contains the given class.
             * @param {string} className
             * @return {boolean}
             */

          }, {
            key: "hasClass",
            value: function hasClass(className) {}
            /**
             * Adds a class to the leading icon element.
             * @param {string} className
             */

          }, {
            key: "addClassToLeadingIcon",
            value: function addClassToLeadingIcon(className) {}
            /**
             * Removes a class from the leading icon element.
             * @param {string} className
             */

          }, {
            key: "removeClassFromLeadingIcon",
            value: function removeClassFromLeadingIcon(className) {}
            /**
             * Returns true if target has className, false otherwise.
             * @param {!EventTarget} target
             * @param {string} className
             * @return {boolean}
             */

          }, {
            key: "eventTargetHasClass",
            value: function eventTargetHasClass(target, className) {}
            /**
             * Emits a custom "MDCChip:interaction" event denoting the chip has been
             * interacted with (typically on click or keydown).
             */

          }, {
            key: "notifyInteraction",
            value: function notifyInteraction() {}
            /**
             * Emits a custom "MDCChip:selection" event denoting the chip has been selected or deselected.
             * @param {boolean} selected
             */

          }, {
            key: "notifySelection",
            value: function notifySelection(selected) {}
            /**
             * Emits a custom "MDCChip:trailingIconInteraction" event denoting the trailing icon has been
             * interacted with (typically on click or keydown).
             */

          }, {
            key: "notifyTrailingIconInteraction",
            value: function notifyTrailingIconInteraction() {}
            /**
             * Emits a custom event "MDCChip:removal" denoting the chip will be removed.
             */

          }, {
            key: "notifyRemoval",
            value: function notifyRemoval() {}
            /**
             * Returns the computed property value of the given style property on the root element.
             * @param {string} propertyName
             * @return {string}
             */

          }, {
            key: "getComputedStyleValue",
            value: function getComputedStyleValue(propertyName) {}
            /**
             * Sets the property value of the given style property on the root element.
             * @param {string} propertyName
             * @param {string} value
             */

          }, {
            key: "setStyleProperty",
            value: function setStyleProperty(propertyName, value) {}
          }]);

          return MDCChipAdapter;
        }();
        /* unused harmony default export */


        var _unused_webpack_default_export = MDCChipAdapter;
        /***/
      },

      /***/
      65:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "a", function () {
          return MDCChipFoundation;
        });
        /* unused harmony export MDCChipInteractionEventType */

        /* unused harmony export MDCChipSelectionEventType */

        /* unused harmony export MDCChipRemovalEventType */

        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(64);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(66);

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @extends {MDCFoundation<!MDCChipAdapter>}
         * @final
         */


        var MDCChipFoundation = function (_MDCFoundation) {
          _inherits(MDCChipFoundation, _MDCFoundation);

          _createClass(MDCChipFoundation, null, [{
            key: 'strings',

            /** @return enum {string} */
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ];
            }
            /** @return enum {string} */

          }, {
            key: 'cssClasses',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ];
            }
            /**
             * {@see MDCChipAdapter} for typing information on parameters and return
             * types.
             * @return {!MDCChipAdapter}
             */

          }, {
            key: 'defaultAdapter',
            get: function get() {
              return (
                /** @type {!MDCChipAdapter} */
                {
                  addClass: function addClass() {},
                  removeClass: function removeClass() {},
                  hasClass: function hasClass() {},
                  addClassToLeadingIcon: function addClassToLeadingIcon() {},
                  removeClassFromLeadingIcon: function removeClassFromLeadingIcon() {},
                  eventTargetHasClass: function eventTargetHasClass() {},
                  notifyInteraction: function notifyInteraction() {},
                  notifySelection: function notifySelection() {},
                  notifyTrailingIconInteraction: function notifyTrailingIconInteraction() {},
                  notifyRemoval: function notifyRemoval() {},
                  getComputedStyleValue: function getComputedStyleValue() {},
                  setStyleProperty: function setStyleProperty() {}
                }
              );
            }
            /**
             * @param {!MDCChipAdapter} adapter
             */

          }]);

          function MDCChipFoundation(adapter) {
            _classCallCheck(this, MDCChipFoundation);
            /**
             * Whether a trailing icon click should immediately trigger exit/removal of the chip.
             * @private {boolean}
             * */


            var _this = _possibleConstructorReturn(this, (MDCChipFoundation.__proto__ || Object.getPrototypeOf(MDCChipFoundation)).call(this, _extends(MDCChipFoundation.defaultAdapter, adapter)));

            _this.shouldRemoveOnTrailingIconClick_ = true;
            return _this;
          }
          /**
           * @return {boolean}
           */


          _createClass(MDCChipFoundation, [{
            key: 'isSelected',
            value: function isSelected() {
              return this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].SELECTED);
            }
            /**
             * @param {boolean} selected
             */

          }, {
            key: 'setSelected',
            value: function setSelected(selected) {
              if (selected) {
                this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].SELECTED);
              } else {
                this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].SELECTED);
              }

              this.adapter_.notifySelection(selected);
            }
            /**
             * @return {boolean}
             */

          }, {
            key: 'getShouldRemoveOnTrailingIconClick',
            value: function getShouldRemoveOnTrailingIconClick() {
              return this.shouldRemoveOnTrailingIconClick_;
            }
            /**
             * @param {boolean} shouldRemove
             */

          }, {
            key: 'setShouldRemoveOnTrailingIconClick',
            value: function setShouldRemoveOnTrailingIconClick(shouldRemove) {
              this.shouldRemoveOnTrailingIconClick_ = shouldRemove;
            }
            /**
             * Begins the exit animation which leads to removal of the chip.
             */

          }, {
            key: 'beginExit',
            value: function beginExit() {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].CHIP_EXIT);
            }
            /**
             * Handles an interaction event on the root element.
             * @param {!Event} evt
             */

          }, {
            key: 'handleInteraction',
            value: function handleInteraction(evt) {
              if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {
                this.adapter_.notifyInteraction();
              }
            }
            /**
             * Handles a transition end event on the root element.
             * @param {!Event} evt
             */

          }, {
            key: 'handleTransitionEnd',
            value: function handleTransitionEnd(evt) {
              var _this2 = this; // Handle transition end event on the chip when it is about to be removed.


              if (this.adapter_.eventTargetHasClass(
              /** @type {!EventTarget} */
              evt.target, __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].CHIP_EXIT)) {
                if (evt.propertyName === 'width') {
                  this.adapter_.notifyRemoval();
                } else if (evt.propertyName === 'opacity') {
                  // See: https://css-tricks.com/using-css-transitions-auto-dimensions/#article-header-id-5
                  var chipWidth = this.adapter_.getComputedStyleValue('width'); // On the next frame (once we get the computed width), explicitly set the chip's width
                  // to its current pixel width, so we aren't transitioning out of 'auto'.

                  requestAnimationFrame(function () {
                    _this2.adapter_.setStyleProperty('width', chipWidth); // To mitigate jitter, start transitioning padding and margin before width.


                    _this2.adapter_.setStyleProperty('padding', '0');

                    _this2.adapter_.setStyleProperty('margin', '0'); // On the next frame (once width is explicitly set), transition width to 0.


                    requestAnimationFrame(function () {
                      _this2.adapter_.setStyleProperty('width', '0');
                    });
                  });
                }

                return;
              } // Handle a transition end event on the leading icon or checkmark, since the transition end event bubbles.


              if (evt.propertyName !== 'opacity') {
                return;
              }

              if (this.adapter_.eventTargetHasClass(
              /** @type {!EventTarget} */
              evt.target, __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].LEADING_ICON) && this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].SELECTED)) {
                this.adapter_.addClassToLeadingIcon(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].HIDDEN_LEADING_ICON);
              } else if (this.adapter_.eventTargetHasClass(
              /** @type {!EventTarget} */
              evt.target, __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].CHECKMARK) && !this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].SELECTED)) {
                this.adapter_.removeClassFromLeadingIcon(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].HIDDEN_LEADING_ICON);
              }
            }
            /**
             * Handles an interaction event on the trailing icon element. This is used to
             * prevent the ripple from activating on interaction with the trailing icon.
             * @param {!Event} evt
             */

          }, {
            key: 'handleTrailingIconInteraction',
            value: function handleTrailingIconInteraction(evt) {
              evt.stopPropagation();

              if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {
                this.adapter_.notifyTrailingIconInteraction();

                if (this.shouldRemoveOnTrailingIconClick_) {
                  this.beginExit();
                }
              }
            }
          }]);

          return MDCChipFoundation;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
        /* default */
        ]);
        /**
         * @typedef {{
         *   detail: {
         *     chipId: string,
         *   },
         *   bubbles: boolean,
         * }}
         */


        var MDCChipInteractionEventType = void 0;
        /**
         * @typedef {{
         *   detail: {
         *     chipId: string,
         *     selected: boolean,
         *   },
         *   bubbles: boolean,
         * }}
         */

        var MDCChipSelectionEventType = void 0;
        /**
         * @typedef {{
         *   detail: {
         *     chipId: string,
         *     root: Element,
         *   },
         *   bubbles: boolean,
         * }}
         */

        var MDCChipRemovalEventType = void 0;
        /***/
      },

      /***/
      66:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "b", function () {
          return strings;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "a", function () {
          return cssClasses;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /** @enum {string} */


        var strings = {
          ENTRY_ANIMATION_NAME: 'mdc-chip-entry',
          INTERACTION_EVENT: 'MDCChip:interaction',
          SELECTION_EVENT: 'MDCChip:selection',
          TRAILING_ICON_INTERACTION_EVENT: 'MDCChip:trailingIconInteraction',
          REMOVAL_EVENT: 'MDCChip:removal',
          CHECKMARK_SELECTOR: '.mdc-chip__checkmark',
          LEADING_ICON_SELECTOR: '.mdc-chip__icon--leading',
          TRAILING_ICON_SELECTOR: '.mdc-chip__icon--trailing'
        };
        /** @enum {string} */

        var cssClasses = {
          CHECKMARK: 'mdc-chip__checkmark',
          CHIP_EXIT: 'mdc-chip--exit',
          HIDDEN_LEADING_ICON: 'mdc-chip__icon--leading-hidden',
          LEADING_ICON: 'mdc-chip__icon--leading',
          TRAILING_ICON: 'mdc-chip__icon--trailing',
          SELECTED: 'mdc-chip--selected'
        };
        /***/
      },

      /***/
      67:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint no-unused-vars: [2, {"args": "none"}] */

        /**
         * Adapter for MDC Chip Set.
         *
         * Defines the shape of the adapter expected by the foundation. Implement this
         * adapter to integrate the Chip Set into your framework. See
         * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
         * for more information.
         *
         * @record
         */


        var MDCChipSetAdapter = function () {
          function MDCChipSetAdapter() {
            _classCallCheck(this, MDCChipSetAdapter);
          }

          _createClass(MDCChipSetAdapter, [{
            key: "hasClass",

            /**
             * Returns true if the root element contains the given class name.
             * @param {string} className
             * @return {boolean}
             */
            value: function hasClass(className) {}
            /**
             * Removes the chip with the given id from the chip set.
             * @param {string} chipId
             */

          }, {
            key: "removeChip",
            value: function removeChip(chipId) {}
            /**
             * Sets the selected state of the chip with the given id.
             * @param {string} chipId
             * @param {boolean} selected
             */

          }, {
            key: "setSelected",
            value: function setSelected(chipId, selected) {}
          }]);

          return MDCChipSetAdapter;
        }();
        /* unused harmony default export */


        var _unused_webpack_default_export = MDCChipSetAdapter;
        /***/
      },

      /***/
      92:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__chip_index__ = __webpack_require__(63);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__chip_set_index__ = __webpack_require__(93);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCChipFoundation", function () {
          return __WEBPACK_IMPORTED_MODULE_0__chip_index__["b"];
        });
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCChip", function () {
          return __WEBPACK_IMPORTED_MODULE_0__chip_index__["a"];
        });
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCChipSetFoundation", function () {
          return __WEBPACK_IMPORTED_MODULE_1__chip_set_index__["b"];
        });
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCChipSet", function () {
          return __WEBPACK_IMPORTED_MODULE_1__chip_set_index__["a"];
        });
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /***/

      },

      /***/
      93:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "a", function () {
          return MDCChipSet;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(67);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(94);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__chip_index__ = __webpack_require__(63);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "b", function () {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
        });

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        var _get = function get(object, property, receiver) {
          if (object === null) object = Function.prototype;
          var desc = Object.getOwnPropertyDescriptor(object, property);

          if (desc === undefined) {
            var parent = Object.getPrototypeOf(object);

            if (parent === null) {
              return undefined;
            } else {
              return get(parent, property, receiver);
            }
          } else if ("value" in desc) {
            return desc.value;
          } else {
            var getter = desc.get;

            if (getter === undefined) {
              return undefined;
            }

            return getter.call(receiver);
          }
        };

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */


        var idCounter = 0;
        /**
         * @extends {MDCComponent<!MDCChipSetFoundation>}
         * @final
         */

        var MDCChipSet = function (_MDCComponent) {
          _inherits(MDCChipSet, _MDCComponent);
          /**
           * @param {...?} args
           */


          function MDCChipSet() {
            var _ref;

            _classCallCheck(this, MDCChipSet);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            /** @type {!Array<!MDCChip>} */


            var _this = _possibleConstructorReturn(this, (_ref = MDCChipSet.__proto__ || Object.getPrototypeOf(MDCChipSet)).call.apply(_ref, [this].concat(args)));

            _this.chips;
            /** @private {(function(!Element): !MDCChip)} */

            _this.chipFactory_;
            /** @private {?function(?Event): undefined} */

            _this.handleChipInteraction_;
            /** @private {?function(?Event): undefined} */

            _this.handleChipSelection_;
            /** @private {?function(?Event): undefined} */

            _this.handleChipRemoval_;
            return _this;
          }
          /**
           * @param {!Element} root
           * @return {!MDCChipSet}
           */


          _createClass(MDCChipSet, [{
            key: 'initialize',

            /**
             * @param {(function(!Element): !MDCChip)=} chipFactory A function which
             * creates a new MDCChip.
             */
            value: function initialize() {
              var chipFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (el) {
                return new __WEBPACK_IMPORTED_MODULE_3__chip_index__["a"
                /* MDCChip */
                ](el);
              };
              this.chipFactory_ = chipFactory;
              this.chips = this.instantiateChips_(this.chipFactory_);
            }
          }, {
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {
              var _this2 = this;

              this.chips.forEach(function (chip) {
                if (chip.selected) {
                  _this2.foundation_.select(chip.id);
                }
              });

              this.handleChipInteraction_ = function (evt) {
                return _this2.foundation_.handleChipInteraction(evt.detail.chipId);
              };

              this.handleChipSelection_ = function (evt) {
                return _this2.foundation_.handleChipSelection(evt.detail.chipId, evt.detail.selected);
              };

              this.handleChipRemoval_ = function (evt) {
                return _this2.foundation_.handleChipRemoval(evt.detail.chipId);
              };

              this.root_.addEventListener(__WEBPACK_IMPORTED_MODULE_3__chip_index__["b"
              /* MDCChipFoundation */
              ].strings.INTERACTION_EVENT, this.handleChipInteraction_);
              this.root_.addEventListener(__WEBPACK_IMPORTED_MODULE_3__chip_index__["b"
              /* MDCChipFoundation */
              ].strings.SELECTION_EVENT, this.handleChipSelection_);
              this.root_.addEventListener(__WEBPACK_IMPORTED_MODULE_3__chip_index__["b"
              /* MDCChipFoundation */
              ].strings.REMOVAL_EVENT, this.handleChipRemoval_);
            }
          }, {
            key: 'destroy',
            value: function destroy() {
              this.chips.forEach(function (chip) {
                chip.destroy();
              });
              this.root_.removeEventListener(__WEBPACK_IMPORTED_MODULE_3__chip_index__["b"
              /* MDCChipFoundation */
              ].strings.INTERACTION_EVENT, this.handleChipInteraction_);
              this.root_.removeEventListener(__WEBPACK_IMPORTED_MODULE_3__chip_index__["b"
              /* MDCChipFoundation */
              ].strings.SELECTION_EVENT, this.handleChipSelection_);
              this.root_.removeEventListener(__WEBPACK_IMPORTED_MODULE_3__chip_index__["b"
              /* MDCChipFoundation */
              ].strings.REMOVAL_EVENT, this.handleChipRemoval_);

              _get(MDCChipSet.prototype.__proto__ || Object.getPrototypeOf(MDCChipSet.prototype), 'destroy', this).call(this);
            }
            /**
             * Adds a new chip object to the chip set from the given chip element.
             * @param {!Element} chipEl
             */

          }, {
            key: 'addChip',
            value: function addChip(chipEl) {
              chipEl.id = chipEl.id || 'mdc-chip-' + ++idCounter;
              this.chips.push(this.chipFactory_(chipEl));
            }
            /**
             * Returns an array of the IDs of all selected chips.
             * @return {!Array<string>}
             */

          }, {
            key: 'getDefaultFoundation',

            /**
             * @return {!MDCChipSetFoundation}
             */
            value: function getDefaultFoundation() {
              var _this3 = this;

              return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
              /* default */
              ](
              /** @type {!MDCChipSetAdapter} */
              _extends({
                hasClass: function hasClass(className) {
                  return _this3.root_.classList.contains(className);
                },
                removeChip: function removeChip(chipId) {
                  var index = _this3.findChipIndex_(chipId);

                  if (index >= 0) {
                    _this3.chips[index].destroy();

                    _this3.chips.splice(index, 1);
                  }
                },
                setSelected: function setSelected(chipId, selected) {
                  var index = _this3.findChipIndex_(chipId);

                  if (index >= 0) {
                    _this3.chips[index].selected = selected;
                  }
                }
              }));
            }
            /**
             * Instantiates chip components on all of the chip set's child chip elements.
             * @param {(function(!Element): !MDCChip)} chipFactory
             * @return {!Array<!MDCChip>}
             */

          }, {
            key: 'instantiateChips_',
            value: function instantiateChips_(chipFactory) {
              var chipElements = [].slice.call(this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_2__foundation__["a"
              /* default */
              ].strings.CHIP_SELECTOR));
              return chipElements.map(function (el) {
                el.id = el.id || 'mdc-chip-' + ++idCounter;
                return chipFactory(el);
              });
            }
            /**
             * Returns the index of the chip with the given id, or -1 if the chip does not exist.
             * @param {string} chipId
             * @return {number}
             */

          }, {
            key: 'findChipIndex_',
            value: function findChipIndex_(chipId) {
              for (var i = 0; i < this.chips.length; i++) {
                if (this.chips[i].id === chipId) {
                  return i;
                }
              }

              return -1;
            }
          }, {
            key: 'selectedChipIds',
            get: function get() {
              return this.foundation_.getSelectedChipIds();
            }
          }], [{
            key: 'attachTo',
            value: function attachTo(root) {
              return new MDCChipSet(root);
            }
          }]);

          return MDCChipSet;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
        /* default */
        ]);
        /***/

      },

      /***/
      94:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(67);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__chip_foundation__ = __webpack_require__(65);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__constants__ = __webpack_require__(95);

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */
        // eslint-disable-next-line no-unused-vars

        /**
         * @extends {MDCFoundation<!MDCChipSetAdapter>}
         * @final
         */


        var MDCChipSetFoundation = function (_MDCFoundation) {
          _inherits(MDCChipSetFoundation, _MDCFoundation);

          _createClass(MDCChipSetFoundation, null, [{
            key: 'strings',

            /** @return enum {string} */
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_3__constants__["b"
              /* strings */
              ];
            }
            /** @return enum {string} */

          }, {
            key: 'cssClasses',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_3__constants__["a"
              /* cssClasses */
              ];
            }
            /**
             * {@see MDCChipSetAdapter} for typing information on parameters and return
             * types.
             * @return {!MDCChipSetAdapter}
             */

          }, {
            key: 'defaultAdapter',
            get: function get() {
              return (
                /** @type {!MDCChipSetAdapter} */
                {
                  hasClass: function hasClass() {},
                  removeChip: function removeChip() {},
                  setSelected: function setSelected() {}
                }
              );
            }
            /**
             * @param {!MDCChipSetAdapter} adapter
             */

          }]);

          function MDCChipSetFoundation(adapter) {
            _classCallCheck(this, MDCChipSetFoundation);
            /**
             * The ids of the selected chips in the set. Only used for choice chip set or filter chip set.
             * @private {!Array<string>}
             */


            var _this = _possibleConstructorReturn(this, (MDCChipSetFoundation.__proto__ || Object.getPrototypeOf(MDCChipSetFoundation)).call(this, _extends(MDCChipSetFoundation.defaultAdapter, adapter)));

            _this.selectedChipIds_ = [];
            return _this;
          }
          /**
           * Returns an array of the IDs of all selected chips.
           * @return {!Array<string>}
           */


          _createClass(MDCChipSetFoundation, [{
            key: 'getSelectedChipIds',
            value: function getSelectedChipIds() {
              return this.selectedChipIds_;
            }
            /**
             * Toggles selection of the chip with the given id.
             * @private
             * @param {string} chipId
             */

          }, {
            key: 'toggleSelect_',
            value: function toggleSelect_(chipId) {
              if (this.selectedChipIds_.indexOf(chipId) >= 0) {
                this.deselect_(chipId);
              } else {
                this.select(chipId);
              }
            }
            /**
             * Selects the chip with the given id. Deselects all other chips if the chip set is of the choice variant.
             * @param {string} chipId
             */

          }, {
            key: 'select',
            value: function select(chipId) {
              if (this.selectedChipIds_.indexOf(chipId) >= 0) {
                return;
              }

              if (this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_3__constants__["a"
              /* cssClasses */
              ].CHOICE) && this.selectedChipIds_.length > 0) {
                var previouslySelectedChip = this.selectedChipIds_[0];
                this.selectedChipIds_.length = 0;
                this.adapter_.setSelected(previouslySelectedChip, false);
              }

              this.selectedChipIds_.push(chipId);
              this.adapter_.setSelected(chipId, true);
            }
            /**
             * Deselects the chip with the given id.
             * @private
             * @param {string} chipId
             */

          }, {
            key: 'deselect_',
            value: function deselect_(chipId) {
              var index = this.selectedChipIds_.indexOf(chipId);

              if (index >= 0) {
                this.selectedChipIds_.splice(index, 1);
                this.adapter_.setSelected(chipId, false);
              }
            }
            /**
             * Handles a chip interaction event
             * @param {string} chipId
             */

          }, {
            key: 'handleChipInteraction',
            value: function handleChipInteraction(chipId) {
              if (this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_3__constants__["a"
              /* cssClasses */
              ].CHOICE) || this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_3__constants__["a"
              /* cssClasses */
              ].FILTER)) {
                this.toggleSelect_(chipId);
              }
            }
            /**
             * Handles a chip selection event, used to handle discrepancy when selection state is set directly on the Chip.
             * @param {string} chipId
             * @param {boolean} selected
             */

          }, {
            key: 'handleChipSelection',
            value: function handleChipSelection(chipId, selected) {
              var chipIsSelected = this.selectedChipIds_.indexOf(chipId) >= 0;

              if (selected && !chipIsSelected) {
                this.select(chipId);
              } else if (!selected && chipIsSelected) {
                this.deselect_(chipId);
              }
            }
            /**
             * Handles the event when a chip is removed.
             * @param {string} chipId
             */

          }, {
            key: 'handleChipRemoval',
            value: function handleChipRemoval(chipId) {
              this.deselect_(chipId);
              this.adapter_.removeChip(chipId);
            }
          }]);

          return MDCChipSetFoundation;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
        /* default */
        ]);
        /* harmony default export */


        __webpack_exports__["a"] = MDCChipSetFoundation;
        /***/
      },

      /***/
      95:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "b", function () {
          return strings;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "a", function () {
          return cssClasses;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /** @enum {string} */


        var strings = {
          CHIP_SELECTOR: '.mdc-chip'
        };
        /** @enum {string} */

        var cssClasses = {
          CHOICE: 'mdc-chip-set--choice',
          FILTER: 'mdc-chip-set--filter'
        };
        /***/
      }
      /******/

    })
  );
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/@material/dialog/dist/mdc.dialog.js":
/*!**********************************************************!*\
  !*** ./node_modules/@material/dialog/dist/mdc.dialog.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 Material Components for the Web
 Copyright (c) 2019 Google Inc.
 License: MIT
*/
(function webpackUniversalModuleDefinition(root, factory) {
  if (( false ? undefined : _typeof(exports)) === 'object' && ( false ? undefined : _typeof(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}
})(this, function () {
  return (
    /******/
    function (modules) {
      // webpackBootstrap

      /******/
      // The module cache

      /******/
      var installedModules = {};
      /******/

      /******/
      // The require function

      /******/

      function __webpack_require__(moduleId) {
        /******/

        /******/
        // Check if module is in cache

        /******/
        if (installedModules[moduleId]) {
          /******/
          return installedModules[moduleId].exports;
          /******/
        }
        /******/
        // Create a new module (and put it into the cache)

        /******/


        var module = installedModules[moduleId] = {
          /******/
          i: moduleId,

          /******/
          l: false,

          /******/
          exports: {}
          /******/

        };
        /******/

        /******/
        // Execute the module function

        /******/

        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/

        /******/
        // Flag the module as loaded

        /******/

        module.l = true;
        /******/

        /******/
        // Return the exports of the module

        /******/

        return module.exports;
        /******/
      }
      /******/

      /******/

      /******/
      // expose the modules object (__webpack_modules__)

      /******/


      __webpack_require__.m = modules;
      /******/

      /******/
      // expose the module cache

      /******/

      __webpack_require__.c = installedModules;
      /******/

      /******/
      // define getter function for harmony exports

      /******/

      __webpack_require__.d = function (exports, name, getter) {
        /******/
        if (!__webpack_require__.o(exports, name)) {
          /******/
          Object.defineProperty(exports, name, {
            /******/
            configurable: false,

            /******/
            enumerable: true,

            /******/
            get: getter
            /******/

          });
          /******/
        }
        /******/

      };
      /******/

      /******/
      // getDefaultExport function for compatibility with non-harmony modules

      /******/


      __webpack_require__.n = function (module) {
        /******/
        var getter = module && module.__esModule ?
        /******/
        function getDefault() {
          return module['default'];
        } :
        /******/
        function getModuleExports() {
          return module;
        };
        /******/

        __webpack_require__.d(getter, 'a', getter);
        /******/


        return getter;
        /******/
      };
      /******/

      /******/
      // Object.prototype.hasOwnProperty.call

      /******/


      __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      /******/

      /******/
      // __webpack_public_path__

      /******/


      __webpack_require__.p = "";
      /******/

      /******/
      // Load entry module and return exports

      /******/

      return __webpack_require__(__webpack_require__.s = 96);
      /******/
    }(
    /************************************************************************/

    /******/
    {
      /***/
      0:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @template A
         */


        var MDCFoundation = function () {
          _createClass(MDCFoundation, null, [{
            key: "cssClasses",

            /** @return enum{cssClasses} */
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports every
              // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}
              return {};
            }
            /** @return enum{strings} */

          }, {
            key: "strings",
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports all
              // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}
              return {};
            }
            /** @return enum{numbers} */

          }, {
            key: "numbers",
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports all
              // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}
              return {};
            }
            /** @return {!Object} */

          }, {
            key: "defaultAdapter",
            get: function get() {
              // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient
              // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter
              // validation.
              return {};
            }
            /**
             * @param {A=} adapter
             */

          }]);

          function MDCFoundation() {
            var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

            _classCallCheck(this, MDCFoundation);
            /** @protected {!A} */


            this.adapter_ = adapter;
          }

          _createClass(MDCFoundation, [{
            key: "init",
            value: function init() {// Subclasses should override this method to perform initialization routines (registering events, etc.)
            }
          }, {
            key: "destroy",
            value: function destroy() {// Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)
            }
          }]);

          return MDCFoundation;
        }();
        /* harmony default export */


        __webpack_exports__["a"] = MDCFoundation;
        /***/
      },

      /***/
      1:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0);

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @template F
         */


        var MDCComponent = function () {
          _createClass(MDCComponent, null, [{
            key: 'attachTo',

            /**
             * @param {!Element} root
             * @return {!MDCComponent}
             */
            value: function attachTo(root) {
              // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and
              // returns an instantiated component with its root set to that element. Also note that in the cases of
              // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized
              // from getDefaultFoundation().
              return new MDCComponent(root, new __WEBPACK_IMPORTED_MODULE_0__foundation__["a"
              /* default */
              ]());
            }
            /**
             * @param {!Element} root
             * @param {F=} foundation
             * @param {...?} args
             */

          }]);

          function MDCComponent(root) {
            var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

            _classCallCheck(this, MDCComponent);
            /** @protected {!Element} */


            this.root_ = root;

            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              args[_key - 2] = arguments[_key];
            }

            this.initialize.apply(this, args); // Note that we initialize foundation here and not within the constructor's default param so that
            // this.root_ is defined and can be used within the foundation class.

            /** @protected {!F} */

            this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;
            this.foundation_.init();
            this.initialSyncWithDOM();
          }

          _createClass(MDCComponent, [{
            key: 'initialize',
            value: function initialize()
            /* ...args */
            {} // Subclasses can override this to do any additional setup work that would be considered part of a
            // "constructor". Essentially, it is a hook into the parent constructor before the foundation is
            // initialized. Any additional arguments besides root and foundation will be passed in here.

            /**
             * @return {!F} foundation
             */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              // Subclasses must override this method to return a properly configured foundation class for the
              // component.
              throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');
            }
          }, {
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {// Subclasses should override this method if they need to perform work to synchronize with a host DOM
              // object. An example of this would be a form control wrapper that needs to synchronize its internal state
              // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM
              // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.
            }
          }, {
            key: 'destroy',
            value: function destroy() {
              // Subclasses may implement this method to release any resources / deregister any listeners they have
              // attached. An example of this might be deregistering a resize event from the window object.
              this.foundation_.destroy();
            }
            /**
             * Wrapper method to add an event listener to the component's root element. This is most useful when
             * listening for custom events.
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: 'listen',
            value: function listen(evtType, handler) {
              this.root_.addEventListener(evtType, handler);
            }
            /**
             * Wrapper method to remove an event listener to the component's root element. This is most useful when
             * unlistening for custom events.
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: 'unlisten',
            value: function unlisten(evtType, handler) {
              this.root_.removeEventListener(evtType, handler);
            }
            /**
             * Fires a cross-browser-compatible custom event from the component root of the given type,
             * with the given data.
             * @param {string} evtType
             * @param {!Object} evtData
             * @param {boolean=} shouldBubble
             */

          }, {
            key: 'emit',
            value: function emit(evtType, evtData) {
              var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
              var evt = void 0;

              if (typeof CustomEvent === 'function') {
                evt = new CustomEvent(evtType, {
                  detail: evtData,
                  bubbles: shouldBubble
                });
              } else {
                evt = document.createEvent('CustomEvent');
                evt.initCustomEvent(evtType, shouldBubble, false, evtData);
              }

              this.root_.dispatchEvent(evt);
            }
          }]);

          return MDCComponent;
        }();
        /* harmony default export */


        __webpack_exports__["a"] = MDCComponent;
        /***/
      },

      /***/
      100:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "createFocusTrapInstance", function () {
          return createFocusTrapInstance;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "isScrollable", function () {
          return isScrollable;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "areTopsMisaligned", function () {
          return areTopsMisaligned;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0_focus_trap__ = __webpack_require__(68);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0_focus_trap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_focus_trap__);
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @param {!Element} surfaceEl
         * @param {?Element=} initialFocusEl
         * @param {function(!Element, !FocusTrapCreateOptions): !FocusTrapInstance} focusTrapFactory
         * @return {!FocusTrapInstance}
         */


        function createFocusTrapInstance(surfaceEl) {
          var focusTrapFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : __WEBPACK_IMPORTED_MODULE_0_focus_trap___default.a;
          var initialFocusEl = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
          return focusTrapFactory(surfaceEl, {
            initialFocus: initialFocusEl,
            escapeDeactivates: false,
            // Dialog foundation handles escape key
            clickOutsideDeactivates: true
          });
        }
        /**
         * @param {!Element} el
         * @return {boolean}
         */


        function isScrollable(el) {
          return el.scrollHeight > el.offsetHeight;
        }
        /**
         * @param {!Array<!Element>|!NodeList} els
         * @return {boolean}
         */


        function areTopsMisaligned(els) {
          var tops = new Set();
          [].forEach.call(els, function (el) {
            return tops.add(el.offsetTop);
          });
          return tops.size > 1;
        }
        /***/

      },

      /***/
      101:
      /***/
      function _(module, exports) {
        var candidateSelectors = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable="false"])'];
        var candidateSelector = candidateSelectors.join(',');
        var matches = typeof Element === 'undefined' ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;

        function tabbable(el, options) {
          options = options || {};
          var elementDocument = el.ownerDocument || el;
          var regularTabbables = [];
          var orderedTabbables = [];
          var untouchabilityChecker = new UntouchabilityChecker(elementDocument);
          var candidates = el.querySelectorAll(candidateSelector);

          if (options.includeContainer) {
            if (matches.call(el, candidateSelector)) {
              candidates = Array.prototype.slice.apply(candidates);
              candidates.unshift(el);
            }
          }

          var i, candidate, candidateTabindex;

          for (i = 0; i < candidates.length; i++) {
            candidate = candidates[i];
            if (!isNodeMatchingSelectorTabbable(candidate, untouchabilityChecker)) continue;
            candidateTabindex = getTabindex(candidate);

            if (candidateTabindex === 0) {
              regularTabbables.push(candidate);
            } else {
              orderedTabbables.push({
                documentOrder: i,
                tabIndex: candidateTabindex,
                node: candidate
              });
            }
          }

          var tabbableNodes = orderedTabbables.sort(sortOrderedTabbables).map(function (a) {
            return a.node;
          }).concat(regularTabbables);
          return tabbableNodes;
        }

        tabbable.isTabbable = isTabbable;
        tabbable.isFocusable = isFocusable;

        function isNodeMatchingSelectorTabbable(node, untouchabilityChecker) {
          if (!isNodeMatchingSelectorFocusable(node, untouchabilityChecker) || isNonTabbableRadio(node) || getTabindex(node) < 0) {
            return false;
          }

          return true;
        }

        function isTabbable(node, untouchabilityChecker) {
          if (!node) throw new Error('No node provided');
          if (matches.call(node, candidateSelector) === false) return false;
          return isNodeMatchingSelectorTabbable(node, untouchabilityChecker);
        }

        function isNodeMatchingSelectorFocusable(node, untouchabilityChecker) {
          untouchabilityChecker = untouchabilityChecker || new UntouchabilityChecker(node.ownerDocument || node);

          if (node.disabled || isHiddenInput(node) || untouchabilityChecker.isUntouchable(node)) {
            return false;
          }

          return true;
        }

        var focusableCandidateSelector = candidateSelectors.concat('iframe').join(',');

        function isFocusable(node, untouchabilityChecker) {
          if (!node) throw new Error('No node provided');
          if (matches.call(node, focusableCandidateSelector) === false) return false;
          return isNodeMatchingSelectorFocusable(node, untouchabilityChecker);
        }

        function getTabindex(node) {
          var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);
          if (!isNaN(tabindexAttr)) return tabindexAttr; // Browsers do not return `tabIndex` correctly for contentEditable nodes;
          // so if they don't have a tabindex attribute specifically set, assume it's 0.

          if (isContentEditable(node)) return 0;
          return node.tabIndex;
        }

        function sortOrderedTabbables(a, b) {
          return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;
        } // Array.prototype.find not available in IE.


        function find(list, predicate) {
          for (var i = 0, length = list.length; i < length; i++) {
            if (predicate(list[i])) return list[i];
          }
        }

        function isContentEditable(node) {
          return node.contentEditable === 'true';
        }

        function isInput(node) {
          return node.tagName === 'INPUT';
        }

        function isHiddenInput(node) {
          return isInput(node) && node.type === 'hidden';
        }

        function isRadio(node) {
          return isInput(node) && node.type === 'radio';
        }

        function isNonTabbableRadio(node) {
          return isRadio(node) && !isTabbableRadio(node);
        }

        function getCheckedRadio(nodes) {
          for (var i = 0; i < nodes.length; i++) {
            if (nodes[i].checked) {
              return nodes[i];
            }
          }
        }

        function isTabbableRadio(node) {
          if (!node.name) return true; // This won't account for the edge case where you have radio groups with the same
          // in separate forms on the same page.

          var radioSet = node.ownerDocument.querySelectorAll('input[type="radio"][name="' + node.name + '"]');
          var checked = getCheckedRadio(radioSet);
          return !checked || checked === node;
        } // An element is "untouchable" if *it or one of its ancestors* has
        // `visibility: hidden` or `display: none`.


        function UntouchabilityChecker(elementDocument) {
          this.doc = elementDocument; // Node cache must be refreshed on every check, in case
          // the content of the element has changed. The cache contains tuples
          // mapping nodes to their boolean result.

          this.cache = [];
        } // getComputedStyle accurately reflects `visibility: hidden` of ancestors
        // but not `display: none`, so we need to recursively check parents.


        UntouchabilityChecker.prototype.hasDisplayNone = function hasDisplayNone(node, nodeComputedStyle) {
          if (node.nodeType !== Node.ELEMENT_NODE) return false; // Search for a cached result.

          var cached = find(this.cache, function (item) {
            return item === node;
          });
          if (cached) return cached[1];
          nodeComputedStyle = nodeComputedStyle || this.doc.defaultView.getComputedStyle(node);
          var result = false;

          if (nodeComputedStyle.display === 'none') {
            result = true;
          } else if (node.parentNode) {
            result = this.hasDisplayNone(node.parentNode);
          }

          this.cache.push([node, result]);
          return result;
        };

        UntouchabilityChecker.prototype.isUntouchable = function isUntouchable(node) {
          if (node === this.doc.documentElement) return false;
          var computedStyle = this.doc.defaultView.getComputedStyle(node);
          if (this.hasDisplayNone(node, computedStyle)) return true;
          return computedStyle.visibility === 'hidden';
        };

        module.exports = tabbable;
        /***/
      },

      /***/
      102:
      /***/
      function _(module, exports) {
        module.exports = extend;
        var hasOwnProperty = Object.prototype.hasOwnProperty;

        function extend() {
          var target = {};

          for (var i = 0; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        }
        /***/

      },

      /***/
      2:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "supportsCssVariables", function () {
          return supportsCssVariables;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "applyPassive", function () {
          return applyPassive;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "getMatchesProperty", function () {
          return getMatchesProperty;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "getNormalizedEventCoords", function () {
          return getNormalizedEventCoords;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.
         * @private {boolean|undefined}
         */


        var supportsCssVariables_ = void 0;
        /**
         * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.
         * @private {boolean|undefined}
         */

        var supportsPassive_ = void 0;
        /**
         * @param {!Window} windowObj
         * @return {boolean}
         */

        function detectEdgePseudoVarBug(windowObj) {
          // Detect versions of Edge with buggy var() support
          // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/
          var document = windowObj.document;
          var node = document.createElement('div');
          node.className = 'mdc-ripple-surface--test-edge-var-bug';
          document.body.appendChild(node); // The bug exists if ::before style ends up propagating to the parent element.
          // Additionally, getComputedStyle returns null in iframes with display: "none" in Firefox,
          // but Firefox is known to support CSS custom properties correctly.
          // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397

          var computedStyle = windowObj.getComputedStyle(node);
          var hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';
          node.remove();
          return hasPseudoVarBug;
        }
        /**
         * @param {!Window} windowObj
         * @param {boolean=} forceRefresh
         * @return {boolean|undefined}
         */


        function supportsCssVariables(windowObj) {
          var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          var supportsCssVariables = supportsCssVariables_;

          if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {
            return supportsCssVariables;
          }

          var supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';

          if (!supportsFunctionPresent) {
            return;
          }

          var explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes'); // See: https://bugs.webkit.org/show_bug.cgi?id=154669
          // See: README section on Safari

          var weAreFeatureDetectingSafari10plus = windowObj.CSS.supports('(--css-vars: yes)') && windowObj.CSS.supports('color', '#00000000');

          if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {
            supportsCssVariables = !detectEdgePseudoVarBug(windowObj);
          } else {
            supportsCssVariables = false;
          }

          if (!forceRefresh) {
            supportsCssVariables_ = supportsCssVariables;
          }

          return supportsCssVariables;
        } //

        /**
         * Determine whether the current browser supports passive event listeners, and if so, use them.
         * @param {!Window=} globalObj
         * @param {boolean=} forceRefresh
         * @return {boolean|!EventListenerOptions}
         */


        function applyPassive() {
          var globalObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
          var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

          if (supportsPassive_ === undefined || forceRefresh) {
            var isSupported = false;

            try {
              globalObj.document.addEventListener('test', null, {
                get passive() {
                  isSupported = true;
                  return isSupported;
                }

              });
            } catch (e) {}

            supportsPassive_ = isSupported;
          }

          return supportsPassive_ ?
          /** @type {!EventListenerOptions} */
          {
            passive: true
          } : false;
        }
        /**
         * @param {!Object} HTMLElementPrototype
         * @return {string}
         */


        function getMatchesProperty(HTMLElementPrototype) {
          /**
           * Order is important because we return the first existing method we find.
           * Do not change the order of the items in the below array.
           */
          var matchesMethods = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'];
          var method = 'matches';

          for (var i = 0; i < matchesMethods.length; i++) {
            var matchesMethod = matchesMethods[i];

            if (matchesMethod in HTMLElementPrototype) {
              method = matchesMethod;
              break;
            }
          }

          return method;
        }
        /**
         * @param {!Event} ev
         * @param {{x: number, y: number}} pageOffset
         * @param {!ClientRect} clientRect
         * @return {{x: number, y: number}}
         */


        function getNormalizedEventCoords(ev, pageOffset, clientRect) {
          var x = pageOffset.x,
              y = pageOffset.y;
          var documentX = x + clientRect.left;
          var documentY = y + clientRect.top;
          var normalizedX = void 0;
          var normalizedY = void 0; // Determine touch point relative to the ripple container.

          if (ev.type === 'touchstart') {
            ev =
            /** @type {!TouchEvent} */
            ev;
            normalizedX = ev.changedTouches[0].pageX - documentX;
            normalizedY = ev.changedTouches[0].pageY - documentY;
          } else {
            ev =
            /** @type {!MouseEvent} */
            ev;
            normalizedX = ev.pageX - documentX;
            normalizedY = ev.pageY - documentY;
          }

          return {
            x: normalizedX,
            y: normalizedY
          };
        }
        /***/

      },

      /***/
      3:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint no-unused-vars: [2, {"args": "none"}] */

        /**
         * Adapter for MDC Ripple. Provides an interface for managing
         * - classes
         * - dom
         * - CSS variables
         * - position
         * - dimensions
         * - scroll position
         * - event handlers
         * - unbounded, active and disabled states
         *
         * Additionally, provides type information for the adapter to the Closure
         * compiler.
         *
         * Implement this adapter for your framework of choice to delegate updates to
         * the component in your framework of choice. See architecture documentation
         * for more details.
         * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
         *
         * @record
         */


        var MDCRippleAdapter = function () {
          function MDCRippleAdapter() {
            _classCallCheck(this, MDCRippleAdapter);
          }

          _createClass(MDCRippleAdapter, [{
            key: "browserSupportsCssVars",

            /** @return {boolean} */
            value: function browserSupportsCssVars() {}
            /** @return {boolean} */

          }, {
            key: "isUnbounded",
            value: function isUnbounded() {}
            /** @return {boolean} */

          }, {
            key: "isSurfaceActive",
            value: function isSurfaceActive() {}
            /** @return {boolean} */

          }, {
            key: "isSurfaceDisabled",
            value: function isSurfaceDisabled() {}
            /** @param {string} className */

          }, {
            key: "addClass",
            value: function addClass(className) {}
            /** @param {string} className */

          }, {
            key: "removeClass",
            value: function removeClass(className) {}
            /** @param {!EventTarget} target */

          }, {
            key: "containsEventTarget",
            value: function containsEventTarget(target) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "registerInteractionHandler",
            value: function registerInteractionHandler(evtType, handler) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "deregisterInteractionHandler",
            value: function deregisterInteractionHandler(evtType, handler) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "registerDocumentInteractionHandler",
            value: function registerDocumentInteractionHandler(evtType, handler) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "deregisterDocumentInteractionHandler",
            value: function deregisterDocumentInteractionHandler(evtType, handler) {}
            /**
             * @param {!Function} handler
             */

          }, {
            key: "registerResizeHandler",
            value: function registerResizeHandler(handler) {}
            /**
             * @param {!Function} handler
             */

          }, {
            key: "deregisterResizeHandler",
            value: function deregisterResizeHandler(handler) {}
            /**
             * @param {string} varName
             * @param {?number|string} value
             */

          }, {
            key: "updateCssVariable",
            value: function updateCssVariable(varName, value) {}
            /** @return {!ClientRect} */

          }, {
            key: "computeBoundingRect",
            value: function computeBoundingRect() {}
            /** @return {{x: number, y: number}} */

          }, {
            key: "getWindowPageOffset",
            value: function getWindowPageOffset() {}
          }]);

          return MDCRippleAdapter;
        }();
        /* unused harmony default export */


        var _unused_webpack_default_export = MDCRippleAdapter;
        /***/
      },

      /***/
      4:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "MDCRipple", function () {
          return MDCRipple;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "RippleCapableSurface", function () {
          return RippleCapableSurface;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(3);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(5);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(2);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCRippleFoundation", function () {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
        });
        /* harmony reexport (module object) */


        __webpack_require__.d(__webpack_exports__, "util", function () {
          return __WEBPACK_IMPORTED_MODULE_3__util__;
        });

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @extends MDCComponent<!MDCRippleFoundation>
         */


        var MDCRipple = function (_MDCComponent) {
          _inherits(MDCRipple, _MDCComponent);
          /** @param {...?} args */


          function MDCRipple() {
            var _ref;

            _classCallCheck(this, MDCRipple);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            /** @type {boolean} */


            var _this = _possibleConstructorReturn(this, (_ref = MDCRipple.__proto__ || Object.getPrototypeOf(MDCRipple)).call.apply(_ref, [this].concat(args)));

            _this.disabled = false;
            /** @private {boolean} */

            _this.unbounded_;
            return _this;
          }
          /**
           * @param {!Element} root
           * @param {{isUnbounded: (boolean|undefined)}=} options
           * @return {!MDCRipple}
           */


          _createClass(MDCRipple, [{
            key: 'setUnbounded_',

            /**
             * Closure Compiler throws an access control error when directly accessing a
             * protected or private property inside a getter/setter, like unbounded above.
             * By accessing the protected property inside a method, we solve that problem.
             * That's why this function exists.
             * @private
             */
            value: function setUnbounded_() {
              this.foundation_.setUnbounded(this.unbounded_);
            }
          }, {
            key: 'activate',
            value: function activate() {
              this.foundation_.activate();
            }
          }, {
            key: 'deactivate',
            value: function deactivate() {
              this.foundation_.deactivate();
            }
          }, {
            key: 'layout',
            value: function layout() {
              this.foundation_.layout();
            }
            /**
             * @return {!MDCRippleFoundation}
             * @override
             */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
              /* default */
              ](MDCRipple.createAdapter(this));
            }
            /** @override */

          }, {
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {
              this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;
            }
          }, {
            key: 'unbounded',

            /** @return {boolean} */
            get: function get() {
              return this.unbounded_;
            }
            /** @param {boolean} unbounded */
            ,
            set: function set(unbounded) {
              this.unbounded_ = Boolean(unbounded);
              this.setUnbounded_();
            }
          }], [{
            key: 'attachTo',
            value: function attachTo(root) {
              var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
                  _ref2$isUnbounded = _ref2.isUnbounded,
                  isUnbounded = _ref2$isUnbounded === undefined ? undefined : _ref2$isUnbounded;

              var ripple = new MDCRipple(root); // Only override unbounded behavior if option is explicitly specified

              if (isUnbounded !== undefined) {
                ripple.unbounded =
                /** @type {boolean} */
                isUnbounded;
              }

              return ripple;
            }
            /**
             * @param {!RippleCapableSurface} instance
             * @return {!MDCRippleAdapter}
             */

          }, {
            key: 'createAdapter',
            value: function createAdapter(instance) {
              var MATCHES = __WEBPACK_IMPORTED_MODULE_3__util__["getMatchesProperty"](HTMLElement.prototype);

              return {
                browserSupportsCssVars: function browserSupportsCssVars() {
                  return __WEBPACK_IMPORTED_MODULE_3__util__["supportsCssVariables"](window);
                },
                isUnbounded: function isUnbounded() {
                  return instance.unbounded;
                },
                isSurfaceActive: function isSurfaceActive() {
                  return instance.root_[MATCHES](':active');
                },
                isSurfaceDisabled: function isSurfaceDisabled() {
                  return instance.disabled;
                },
                addClass: function addClass(className) {
                  return instance.root_.classList.add(className);
                },
                removeClass: function removeClass(className) {
                  return instance.root_.classList.remove(className);
                },
                containsEventTarget: function containsEventTarget(target) {
                  return instance.root_.contains(target);
                },
                registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
                  return instance.root_.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
                  return instance.root_.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                registerDocumentInteractionHandler: function registerDocumentInteractionHandler(evtType, handler) {
                  return document.documentElement.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler(evtType, handler) {
                  return document.documentElement.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                registerResizeHandler: function registerResizeHandler(handler) {
                  return window.addEventListener('resize', handler);
                },
                deregisterResizeHandler: function deregisterResizeHandler(handler) {
                  return window.removeEventListener('resize', handler);
                },
                updateCssVariable: function updateCssVariable(varName, value) {
                  return instance.root_.style.setProperty(varName, value);
                },
                computeBoundingRect: function computeBoundingRect() {
                  return instance.root_.getBoundingClientRect();
                },
                getWindowPageOffset: function getWindowPageOffset() {
                  return {
                    x: window.pageXOffset,
                    y: window.pageYOffset
                  };
                }
              };
            }
          }]);

          return MDCRipple;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
        /* default */
        ]);
        /**
         * See Material Design spec for more details on when to use ripples.
         * https://material.io/guidelines/motion/choreography.html#choreography-creation
         * @record
         */


        var RippleCapableSurface = function RippleCapableSurface() {
          _classCallCheck(this, RippleCapableSurface);
        };
        /** @protected {!Element} */


        RippleCapableSurface.prototype.root_;
        /**
         * Whether or not the ripple bleeds out of the bounds of the element.
         * @type {boolean|undefined}
         */

        RippleCapableSurface.prototype.unbounded;
        /**
         * Whether or not the ripple is attached to a disabled component.
         * @type {boolean|undefined}
         */

        RippleCapableSurface.prototype.disabled;
        /***/
      },

      /***/
      5:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(3);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(6);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(2);

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @typedef {{
         *   isActivated: (boolean|undefined),
         *   hasDeactivationUXRun: (boolean|undefined),
         *   wasActivatedByPointer: (boolean|undefined),
         *   wasElementMadeActive: (boolean|undefined),
         *   activationEvent: (!Event|undefined),
         *   isProgrammatic: (boolean|undefined)
         * }}
         */


        var ActivationStateType = void 0;
        /**
         * @typedef {{
         *   activate: (string|undefined),
         *   deactivate: (string|undefined),
         *   focus: (string|undefined),
         *   blur: (string|undefined)
         * }}
         */

        var ListenerInfoType = void 0;
        /**
         * @typedef {{
         *   activate: function(!Event),
         *   deactivate: function(!Event=),
         *   focus: function(),
         *   blur: function()
         * }}
         */

        var ListenersType = void 0;
        /**
         * @typedef {{
         *   x: number,
         *   y: number
         * }}
         */

        var PointType = void 0; // Activation events registered on the root element of each instance for activation

        var ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown']; // Deactivation events registered on documentElement when a pointer-related down event occurs

        var POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu']; // Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations

        /** @type {!Array<!EventTarget>} */

        var activatedTargets = [];
        /**
         * @extends {MDCFoundation<!MDCRippleAdapter>}
         */

        var MDCRippleFoundation = function (_MDCFoundation) {
          _inherits(MDCRippleFoundation, _MDCFoundation);

          _createClass(MDCRippleFoundation, null, [{
            key: 'cssClasses',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ];
            }
          }, {
            key: 'strings',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["c"
              /* strings */
              ];
            }
          }, {
            key: 'numbers',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ];
            }
          }, {
            key: 'defaultAdapter',
            get: function get() {
              return {
                browserSupportsCssVars: function browserSupportsCssVars()
                /* boolean - cached */
                {},
                isUnbounded: function isUnbounded()
                /* boolean */
                {},
                isSurfaceActive: function isSurfaceActive()
                /* boolean */
                {},
                isSurfaceDisabled: function isSurfaceDisabled()
                /* boolean */
                {},
                addClass: function addClass()
                /* className: string */
                {},
                removeClass: function removeClass()
                /* className: string */
                {},
                containsEventTarget: function containsEventTarget()
                /* target: !EventTarget */
                {},
                registerInteractionHandler: function registerInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                deregisterInteractionHandler: function deregisterInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                registerDocumentInteractionHandler: function registerDocumentInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                registerResizeHandler: function registerResizeHandler()
                /* handler: EventListener */
                {},
                deregisterResizeHandler: function deregisterResizeHandler()
                /* handler: EventListener */
                {},
                updateCssVariable: function updateCssVariable()
                /* varName: string, value: string */
                {},
                computeBoundingRect: function computeBoundingRect()
                /* ClientRect */
                {},
                getWindowPageOffset: function getWindowPageOffset()
                /* {x: number, y: number} */
                {}
              };
            }
          }]);

          function MDCRippleFoundation(adapter) {
            _classCallCheck(this, MDCRippleFoundation);
            /** @private {number} */


            var _this = _possibleConstructorReturn(this, (MDCRippleFoundation.__proto__ || Object.getPrototypeOf(MDCRippleFoundation)).call(this, _extends(MDCRippleFoundation.defaultAdapter, adapter)));

            _this.layoutFrame_ = 0;
            /** @private {!ClientRect} */

            _this.frame_ =
            /** @type {!ClientRect} */
            {
              width: 0,
              height: 0
            };
            /** @private {!ActivationStateType} */

            _this.activationState_ = _this.defaultActivationState_();
            /** @private {number} */

            _this.initialSize_ = 0;
            /** @private {number} */

            _this.maxRadius_ = 0;
            /** @private {function(!Event)} */

            _this.activateHandler_ = function (e) {
              return _this.activate_(e);
            };
            /** @private {function(!Event=)} */


            _this.deactivateHandler_ = function () {
              return _this.deactivate_();
            };
            /** @private {function(!Event=)} */


            _this.focusHandler_ = function () {
              return _this.handleFocus();
            };
            /** @private {function(!Event=)} */


            _this.blurHandler_ = function () {
              return _this.handleBlur();
            };
            /** @private {!Function} */


            _this.resizeHandler_ = function () {
              return _this.layout();
            };
            /** @private {{left: number, top:number}} */


            _this.unboundedCoords_ = {
              left: 0,
              top: 0
            };
            /** @private {number} */

            _this.fgScale_ = 0;
            /** @private {number} */

            _this.activationTimer_ = 0;
            /** @private {number} */

            _this.fgDeactivationRemovalTimer_ = 0;
            /** @private {boolean} */

            _this.activationAnimationHasEnded_ = false;
            /** @private {!Function} */

            _this.activationTimerCallback_ = function () {
              _this.activationAnimationHasEnded_ = true;

              _this.runDeactivationUXLogicIfReady_();
            };
            /** @private {!Event|undefined} */


            _this.previousActivationEvent_;
            return _this;
          }
          /**
           * We compute this property so that we are not querying information about the client
           * until the point in time where the foundation requests it. This prevents scenarios where
           * client-side feature-detection may happen too early, such as when components are rendered on the server
           * and then initialized at mount time on the client.
           * @return {boolean}
           * @private
           */


          _createClass(MDCRippleFoundation, [{
            key: 'supportsPressRipple_',
            value: function supportsPressRipple_() {
              return this.adapter_.browserSupportsCssVars();
            }
            /**
             * @return {!ActivationStateType}
             */

          }, {
            key: 'defaultActivationState_',
            value: function defaultActivationState_() {
              return {
                isActivated: false,
                hasDeactivationUXRun: false,
                wasActivatedByPointer: false,
                wasElementMadeActive: false,
                activationEvent: undefined,
                isProgrammatic: false
              };
            }
            /** @override */

          }, {
            key: 'init',
            value: function init() {
              var _this2 = this;

              var supportsPressRipple = this.supportsPressRipple_();
              this.registerRootHandlers_(supportsPressRipple);

              if (supportsPressRipple) {
                var _MDCRippleFoundation$ = MDCRippleFoundation.cssClasses,
                    ROOT = _MDCRippleFoundation$.ROOT,
                    UNBOUNDED = _MDCRippleFoundation$.UNBOUNDED;
                requestAnimationFrame(function () {
                  _this2.adapter_.addClass(ROOT);

                  if (_this2.adapter_.isUnbounded()) {
                    _this2.adapter_.addClass(UNBOUNDED); // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple


                    _this2.layoutInternal_();
                  }
                });
              }
            }
            /** @override */

          }, {
            key: 'destroy',
            value: function destroy() {
              var _this3 = this;

              if (this.supportsPressRipple_()) {
                if (this.activationTimer_) {
                  clearTimeout(this.activationTimer_);
                  this.activationTimer_ = 0;
                  this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);
                }

                if (this.fgDeactivationRemovalTimer_) {
                  clearTimeout(this.fgDeactivationRemovalTimer_);
                  this.fgDeactivationRemovalTimer_ = 0;
                  this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);
                }

                var _MDCRippleFoundation$2 = MDCRippleFoundation.cssClasses,
                    ROOT = _MDCRippleFoundation$2.ROOT,
                    UNBOUNDED = _MDCRippleFoundation$2.UNBOUNDED;
                requestAnimationFrame(function () {
                  _this3.adapter_.removeClass(ROOT);

                  _this3.adapter_.removeClass(UNBOUNDED);

                  _this3.removeCssVars_();
                });
              }

              this.deregisterRootHandlers_();
              this.deregisterDeactivationHandlers_();
            }
            /**
             * @param {boolean} supportsPressRipple Passed from init to save a redundant function call
             * @private
             */

          }, {
            key: 'registerRootHandlers_',
            value: function registerRootHandlers_(supportsPressRipple) {
              var _this4 = this;

              if (supportsPressRipple) {
                ACTIVATION_EVENT_TYPES.forEach(function (type) {
                  _this4.adapter_.registerInteractionHandler(type, _this4.activateHandler_);
                });

                if (this.adapter_.isUnbounded()) {
                  this.adapter_.registerResizeHandler(this.resizeHandler_);
                }
              }

              this.adapter_.registerInteractionHandler('focus', this.focusHandler_);
              this.adapter_.registerInteractionHandler('blur', this.blurHandler_);
            }
            /**
             * @param {!Event} e
             * @private
             */

          }, {
            key: 'registerDeactivationHandlers_',
            value: function registerDeactivationHandlers_(e) {
              var _this5 = this;

              if (e.type === 'keydown') {
                this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);
              } else {
                POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
                  _this5.adapter_.registerDocumentInteractionHandler(type, _this5.deactivateHandler_);
                });
              }
            }
            /** @private */

          }, {
            key: 'deregisterRootHandlers_',
            value: function deregisterRootHandlers_() {
              var _this6 = this;

              ACTIVATION_EVENT_TYPES.forEach(function (type) {
                _this6.adapter_.deregisterInteractionHandler(type, _this6.activateHandler_);
              });
              this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);
              this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);

              if (this.adapter_.isUnbounded()) {
                this.adapter_.deregisterResizeHandler(this.resizeHandler_);
              }
            }
            /** @private */

          }, {
            key: 'deregisterDeactivationHandlers_',
            value: function deregisterDeactivationHandlers_() {
              var _this7 = this;

              this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);
              POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
                _this7.adapter_.deregisterDocumentInteractionHandler(type, _this7.deactivateHandler_);
              });
            }
            /** @private */

          }, {
            key: 'removeCssVars_',
            value: function removeCssVars_() {
              var _this8 = this;

              var strings = MDCRippleFoundation.strings;
              Object.keys(strings).forEach(function (k) {
                if (k.indexOf('VAR_') === 0) {
                  _this8.adapter_.updateCssVariable(strings[k], null);
                }
              });
            }
            /**
             * @param {!Event=} e
             * @private
             */

          }, {
            key: 'activate_',
            value: function activate_(e) {
              var _this9 = this;

              if (this.adapter_.isSurfaceDisabled()) {
                return;
              }

              var activationState = this.activationState_;

              if (activationState.isActivated) {
                return;
              } // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction


              var previousActivationEvent = this.previousActivationEvent_;
              var isSameInteraction = previousActivationEvent && e !== undefined && previousActivationEvent.type !== e.type;

              if (isSameInteraction) {
                return;
              }

              activationState.isActivated = true;
              activationState.isProgrammatic = e === undefined;
              activationState.activationEvent = e;
              activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e !== undefined && (e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown');
              var hasActivatedChild = e !== undefined && activatedTargets.length > 0 && activatedTargets.some(function (target) {
                return _this9.adapter_.containsEventTarget(target);
              });

              if (hasActivatedChild) {
                // Immediately reset activation state, while preserving logic that prevents touch follow-on events
                this.resetActivationState_();
                return;
              }

              if (e !== undefined) {
                activatedTargets.push(
                /** @type {!EventTarget} */
                e.target);
                this.registerDeactivationHandlers_(e);
              }

              activationState.wasElementMadeActive = this.checkElementMadeActive_(e);

              if (activationState.wasElementMadeActive) {
                this.animateActivation_();
              }

              requestAnimationFrame(function () {
                // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples
                activatedTargets = [];

                if (!activationState.wasElementMadeActive && e !== undefined && (e.key === ' ' || e.keyCode === 32)) {
                  // If space was pressed, try again within an rAF call to detect :active, because different UAs report
                  // active states inconsistently when they're called within event handling code:
                  // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971
                  // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741
                  // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS
                  // variable is set within a rAF callback for a submit button interaction (#2241).
                  activationState.wasElementMadeActive = _this9.checkElementMadeActive_(e);

                  if (activationState.wasElementMadeActive) {
                    _this9.animateActivation_();
                  }
                }

                if (!activationState.wasElementMadeActive) {
                  // Reset activation state immediately if element was not made active.
                  _this9.activationState_ = _this9.defaultActivationState_();
                }
              });
            }
            /**
             * @param {!Event=} e
             * @private
             */

          }, {
            key: 'checkElementMadeActive_',
            value: function checkElementMadeActive_(e) {
              return e !== undefined && e.type === 'keydown' ? this.adapter_.isSurfaceActive() : true;
            }
            /**
             * @param {!Event=} event Optional event containing position information.
             */

          }, {
            key: 'activate',
            value: function activate(event) {
              this.activate_(event);
            }
            /** @private */

          }, {
            key: 'animateActivation_',
            value: function animateActivation_() {
              var _this10 = this;

              var _MDCRippleFoundation$3 = MDCRippleFoundation.strings,
                  VAR_FG_TRANSLATE_START = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_START,
                  VAR_FG_TRANSLATE_END = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_END;
              var _MDCRippleFoundation$4 = MDCRippleFoundation.cssClasses,
                  FG_DEACTIVATION = _MDCRippleFoundation$4.FG_DEACTIVATION,
                  FG_ACTIVATION = _MDCRippleFoundation$4.FG_ACTIVATION;
              var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;
              this.layoutInternal_();
              var translateStart = '';
              var translateEnd = '';

              if (!this.adapter_.isUnbounded()) {
                var _getFgTranslationCoor = this.getFgTranslationCoordinates_(),
                    startPoint = _getFgTranslationCoor.startPoint,
                    endPoint = _getFgTranslationCoor.endPoint;

                translateStart = startPoint.x + 'px, ' + startPoint.y + 'px';
                translateEnd = endPoint.x + 'px, ' + endPoint.y + 'px';
              }

              this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);
              this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd); // Cancel any ongoing activation/deactivation animations

              clearTimeout(this.activationTimer_);
              clearTimeout(this.fgDeactivationRemovalTimer_);
              this.rmBoundedActivationClasses_();
              this.adapter_.removeClass(FG_DEACTIVATION); // Force layout in order to re-trigger the animation.

              this.adapter_.computeBoundingRect();
              this.adapter_.addClass(FG_ACTIVATION);
              this.activationTimer_ = setTimeout(function () {
                return _this10.activationTimerCallback_();
              }, DEACTIVATION_TIMEOUT_MS);
            }
            /**
             * @private
             * @return {{startPoint: PointType, endPoint: PointType}}
             */

          }, {
            key: 'getFgTranslationCoordinates_',
            value: function getFgTranslationCoordinates_() {
              var _activationState_ = this.activationState_,
                  activationEvent = _activationState_.activationEvent,
                  wasActivatedByPointer = _activationState_.wasActivatedByPointer;
              var startPoint = void 0;

              if (wasActivatedByPointer) {
                startPoint = Object(__WEBPACK_IMPORTED_MODULE_3__util__["getNormalizedEventCoords"])(
                /** @type {!Event} */
                activationEvent, this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect());
              } else {
                startPoint = {
                  x: this.frame_.width / 2,
                  y: this.frame_.height / 2
                };
              } // Center the element around the start point.


              startPoint = {
                x: startPoint.x - this.initialSize_ / 2,
                y: startPoint.y - this.initialSize_ / 2
              };
              var endPoint = {
                x: this.frame_.width / 2 - this.initialSize_ / 2,
                y: this.frame_.height / 2 - this.initialSize_ / 2
              };
              return {
                startPoint: startPoint,
                endPoint: endPoint
              };
            }
            /** @private */

          }, {
            key: 'runDeactivationUXLogicIfReady_',
            value: function runDeactivationUXLogicIfReady_() {
              var _this11 = this; // This method is called both when a pointing device is released, and when the activation animation ends.
              // The deactivation animation should only run after both of those occur.


              var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;
              var _activationState_2 = this.activationState_,
                  hasDeactivationUXRun = _activationState_2.hasDeactivationUXRun,
                  isActivated = _activationState_2.isActivated;
              var activationHasEnded = hasDeactivationUXRun || !isActivated;

              if (activationHasEnded && this.activationAnimationHasEnded_) {
                this.rmBoundedActivationClasses_();
                this.adapter_.addClass(FG_DEACTIVATION);
                this.fgDeactivationRemovalTimer_ = setTimeout(function () {
                  _this11.adapter_.removeClass(FG_DEACTIVATION);
                }, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
                /* numbers */
                ].FG_DEACTIVATION_MS);
              }
            }
            /** @private */

          }, {
            key: 'rmBoundedActivationClasses_',
            value: function rmBoundedActivationClasses_() {
              var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;
              this.adapter_.removeClass(FG_ACTIVATION);
              this.activationAnimationHasEnded_ = false;
              this.adapter_.computeBoundingRect();
            }
          }, {
            key: 'resetActivationState_',
            value: function resetActivationState_() {
              var _this12 = this;

              this.previousActivationEvent_ = this.activationState_.activationEvent;
              this.activationState_ = this.defaultActivationState_(); // Touch devices may fire additional events for the same interaction within a short time.
              // Store the previous event until it's safe to assume that subsequent events are for new interactions.

              setTimeout(function () {
                return _this12.previousActivationEvent_ = undefined;
              }, MDCRippleFoundation.numbers.TAP_DELAY_MS);
            }
            /**
             * @private
             */

          }, {
            key: 'deactivate_',
            value: function deactivate_() {
              var _this13 = this;

              var activationState = this.activationState_; // This can happen in scenarios such as when you have a keyup event that blurs the element.

              if (!activationState.isActivated) {
                return;
              }

              var state =
              /** @type {!ActivationStateType} */
              _extends({}, activationState);

              if (activationState.isProgrammatic) {
                requestAnimationFrame(function () {
                  return _this13.animateDeactivation_(state);
                });
                this.resetActivationState_();
              } else {
                this.deregisterDeactivationHandlers_();
                requestAnimationFrame(function () {
                  _this13.activationState_.hasDeactivationUXRun = true;

                  _this13.animateDeactivation_(state);

                  _this13.resetActivationState_();
                });
              }
            }
          }, {
            key: 'deactivate',
            value: function deactivate() {
              this.deactivate_();
            }
            /**
             * @param {!ActivationStateType} options
             * @private
             */

          }, {
            key: 'animateDeactivation_',
            value: function animateDeactivation_(_ref) {
              var wasActivatedByPointer = _ref.wasActivatedByPointer,
                  wasElementMadeActive = _ref.wasElementMadeActive;

              if (wasActivatedByPointer || wasElementMadeActive) {
                this.runDeactivationUXLogicIfReady_();
              }
            }
          }, {
            key: 'layout',
            value: function layout() {
              var _this14 = this;

              if (this.layoutFrame_) {
                cancelAnimationFrame(this.layoutFrame_);
              }

              this.layoutFrame_ = requestAnimationFrame(function () {
                _this14.layoutInternal_();

                _this14.layoutFrame_ = 0;
              });
            }
            /** @private */

          }, {
            key: 'layoutInternal_',
            value: function layoutInternal_() {
              var _this15 = this;

              this.frame_ = this.adapter_.computeBoundingRect();
              var maxDim = Math.max(this.frame_.height, this.frame_.width); // Surface diameter is treated differently for unbounded vs. bounded ripples.
              // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately
              // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically
              // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter
              // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via
              // `overflow: hidden`.

              var getBoundedRadius = function getBoundedRadius() {
                var hypotenuse = Math.sqrt(Math.pow(_this15.frame_.width, 2) + Math.pow(_this15.frame_.height, 2));
                return hypotenuse + MDCRippleFoundation.numbers.PADDING;
              };

              this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius(); // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform

              this.initialSize_ = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);
              this.fgScale_ = this.maxRadius_ / this.initialSize_;
              this.updateLayoutCssVars_();
            }
            /** @private */

          }, {
            key: 'updateLayoutCssVars_',
            value: function updateLayoutCssVars_() {
              var _MDCRippleFoundation$5 = MDCRippleFoundation.strings,
                  VAR_FG_SIZE = _MDCRippleFoundation$5.VAR_FG_SIZE,
                  VAR_LEFT = _MDCRippleFoundation$5.VAR_LEFT,
                  VAR_TOP = _MDCRippleFoundation$5.VAR_TOP,
                  VAR_FG_SCALE = _MDCRippleFoundation$5.VAR_FG_SCALE;
              this.adapter_.updateCssVariable(VAR_FG_SIZE, this.initialSize_ + 'px');
              this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);

              if (this.adapter_.isUnbounded()) {
                this.unboundedCoords_ = {
                  left: Math.round(this.frame_.width / 2 - this.initialSize_ / 2),
                  top: Math.round(this.frame_.height / 2 - this.initialSize_ / 2)
                };
                this.adapter_.updateCssVariable(VAR_LEFT, this.unboundedCoords_.left + 'px');
                this.adapter_.updateCssVariable(VAR_TOP, this.unboundedCoords_.top + 'px');
              }
            }
            /** @param {boolean} unbounded */

          }, {
            key: 'setUnbounded',
            value: function setUnbounded(unbounded) {
              var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;

              if (unbounded) {
                this.adapter_.addClass(UNBOUNDED);
              } else {
                this.adapter_.removeClass(UNBOUNDED);
              }
            }
          }, {
            key: 'handleFocus',
            value: function handleFocus() {
              var _this16 = this;

              requestAnimationFrame(function () {
                return _this16.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
              });
            }
          }, {
            key: 'handleBlur',
            value: function handleBlur() {
              var _this17 = this;

              requestAnimationFrame(function () {
                return _this17.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
              });
            }
          }]);

          return MDCRippleFoundation;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
        /* default */
        ]);
        /* harmony default export */


        __webpack_exports__["a"] = MDCRippleFoundation;
        /***/
      },

      /***/
      6:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "a", function () {
          return cssClasses;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "c", function () {
          return strings;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "b", function () {
          return numbers;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */


        var cssClasses = {
          // Ripple is a special case where the "root" component is really a "mixin" of sorts,
          // given that it's an 'upgrade' to an existing component. That being said it is the root
          // CSS class that all other CSS classes derive from.
          ROOT: 'mdc-ripple-upgraded',
          UNBOUNDED: 'mdc-ripple-upgraded--unbounded',
          BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',
          FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',
          FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation'
        };
        var strings = {
          VAR_LEFT: '--mdc-ripple-left',
          VAR_TOP: '--mdc-ripple-top',
          VAR_FG_SIZE: '--mdc-ripple-fg-size',
          VAR_FG_SCALE: '--mdc-ripple-fg-scale',
          VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',
          VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end'
        };
        var numbers = {
          PADDING: 10,
          INITIAL_ORIGIN_SCALE: 0.6,
          DEACTIVATION_TIMEOUT_MS: 225,
          // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)
          FG_DEACTIVATION_MS: 150,
          // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)
          TAP_DELAY_MS: 300
        };
        /***/
      },

      /***/
      68:
      /***/
      function _(module, exports, __webpack_require__) {
        var tabbable = __webpack_require__(101);

        var xtend = __webpack_require__(102);

        var activeFocusTraps = function () {
          var trapQueue = [];
          return {
            activateTrap: function activateTrap(trap) {
              if (trapQueue.length > 0) {
                var activeTrap = trapQueue[trapQueue.length - 1];

                if (activeTrap !== trap) {
                  activeTrap.pause();
                }
              }

              var trapIndex = trapQueue.indexOf(trap);

              if (trapIndex === -1) {
                trapQueue.push(trap);
              } else {
                // move this existing trap to the front of the queue
                trapQueue.splice(trapIndex, 1);
                trapQueue.push(trap);
              }
            },
            deactivateTrap: function deactivateTrap(trap) {
              var trapIndex = trapQueue.indexOf(trap);

              if (trapIndex !== -1) {
                trapQueue.splice(trapIndex, 1);
              }

              if (trapQueue.length > 0) {
                trapQueue[trapQueue.length - 1].unpause();
              }
            }
          };
        }();

        function focusTrap(element, userOptions) {
          var doc = document;
          var container = typeof element === 'string' ? doc.querySelector(element) : element;
          var config = xtend({
            returnFocusOnDeactivate: true,
            escapeDeactivates: true
          }, userOptions);
          var state = {
            firstTabbableNode: null,
            lastTabbableNode: null,
            nodeFocusedBeforeActivation: null,
            mostRecentlyFocusedNode: null,
            active: false,
            paused: false
          };
          var trap = {
            activate: activate,
            deactivate: deactivate,
            pause: pause,
            unpause: unpause
          };
          return trap;

          function activate(activateOptions) {
            if (state.active) return;
            updateTabbableNodes();
            state.active = true;
            state.paused = false;
            state.nodeFocusedBeforeActivation = doc.activeElement;
            var onActivate = activateOptions && activateOptions.onActivate ? activateOptions.onActivate : config.onActivate;

            if (onActivate) {
              onActivate();
            }

            addListeners();
            return trap;
          }

          function deactivate(deactivateOptions) {
            if (!state.active) return;
            removeListeners();
            state.active = false;
            state.paused = false;
            activeFocusTraps.deactivateTrap(trap);
            var onDeactivate = deactivateOptions && deactivateOptions.onDeactivate !== undefined ? deactivateOptions.onDeactivate : config.onDeactivate;

            if (onDeactivate) {
              onDeactivate();
            }

            var returnFocus = deactivateOptions && deactivateOptions.returnFocus !== undefined ? deactivateOptions.returnFocus : config.returnFocusOnDeactivate;

            if (returnFocus) {
              delay(function () {
                tryFocus(state.nodeFocusedBeforeActivation);
              });
            }

            return trap;
          }

          function pause() {
            if (state.paused || !state.active) return;
            state.paused = true;
            removeListeners();
          }

          function unpause() {
            if (!state.paused || !state.active) return;
            state.paused = false;
            addListeners();
          }

          function addListeners() {
            if (!state.active) return; // There can be only one listening focus trap at a time

            activeFocusTraps.activateTrap(trap);
            updateTabbableNodes(); // Delay ensures that the focused element doesn't capture the event
            // that caused the focus trap activation.

            delay(function () {
              tryFocus(getInitialFocusNode());
            });
            doc.addEventListener('focusin', checkFocusIn, true);
            doc.addEventListener('mousedown', checkPointerDown, true);
            doc.addEventListener('touchstart', checkPointerDown, true);
            doc.addEventListener('click', checkClick, true);
            doc.addEventListener('keydown', checkKey, true);
            return trap;
          }

          function removeListeners() {
            if (!state.active) return;
            doc.removeEventListener('focusin', checkFocusIn, true);
            doc.removeEventListener('mousedown', checkPointerDown, true);
            doc.removeEventListener('touchstart', checkPointerDown, true);
            doc.removeEventListener('click', checkClick, true);
            doc.removeEventListener('keydown', checkKey, true);
            return trap;
          }

          function getNodeForOption(optionName) {
            var optionValue = config[optionName];
            var node = optionValue;

            if (!optionValue) {
              return null;
            }

            if (typeof optionValue === 'string') {
              node = doc.querySelector(optionValue);

              if (!node) {
                throw new Error('`' + optionName + '` refers to no known node');
              }
            }

            if (typeof optionValue === 'function') {
              node = optionValue();

              if (!node) {
                throw new Error('`' + optionName + '` did not return a node');
              }
            }

            return node;
          }

          function getInitialFocusNode() {
            var node;

            if (getNodeForOption('initialFocus') !== null) {
              node = getNodeForOption('initialFocus');
            } else if (container.contains(doc.activeElement)) {
              node = doc.activeElement;
            } else {
              node = state.firstTabbableNode || getNodeForOption('fallbackFocus');
            }

            if (!node) {
              throw new Error("You can't have a focus-trap without at least one focusable element");
            }

            return node;
          } // This needs to be done on mousedown and touchstart instead of click
          // so that it precedes the focus event.


          function checkPointerDown(e) {
            if (container.contains(e.target)) return;

            if (config.clickOutsideDeactivates) {
              deactivate({
                returnFocus: !tabbable.isFocusable(e.target)
              });
            } else {
              e.preventDefault();
            }
          } // In case focus escapes the trap for some strange reason, pull it back in.


          function checkFocusIn(e) {
            // In Firefox when you Tab out of an iframe the Document is briefly focused.
            if (container.contains(e.target) || e.target instanceof Document) {
              return;
            }

            e.stopImmediatePropagation();
            tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());
          }

          function checkKey(e) {
            if (config.escapeDeactivates !== false && isEscapeEvent(e)) {
              e.preventDefault();
              deactivate();
              return;
            }

            if (isTabEvent(e)) {
              checkTab(e);
              return;
            }
          } // Hijack Tab events on the first and last focusable nodes of the trap,
          // in order to prevent focus from escaping. If it escapes for even a
          // moment it can end up scrolling the page and causing confusion so we
          // kind of need to capture the action at the keydown phase.


          function checkTab(e) {
            updateTabbableNodes();

            if (e.shiftKey && e.target === state.firstTabbableNode) {
              e.preventDefault();
              tryFocus(state.lastTabbableNode);
              return;
            }

            if (!e.shiftKey && e.target === state.lastTabbableNode) {
              e.preventDefault();
              tryFocus(state.firstTabbableNode);
              return;
            }
          }

          function checkClick(e) {
            if (config.clickOutsideDeactivates) return;
            if (container.contains(e.target)) return;
            e.preventDefault();
            e.stopImmediatePropagation();
          }

          function updateTabbableNodes() {
            var tabbableNodes = tabbable(container);
            state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();
            state.lastTabbableNode = tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();
          }

          function tryFocus(node) {
            if (node === doc.activeElement) return;

            if (!node || !node.focus) {
              tryFocus(getInitialFocusNode());
              return;
            }

            node.focus();
            state.mostRecentlyFocusedNode = node;

            if (isSelectableInput(node)) {
              node.select();
            }
          }
        }

        function isSelectableInput(node) {
          return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';
        }

        function isEscapeEvent(e) {
          return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;
        }

        function isTabEvent(e) {
          return e.key === 'Tab' || e.keyCode === 9;
        }

        function delay(fn) {
          return setTimeout(fn, 0);
        }

        module.exports = focusTrap;
        /***/
      },

      /***/
      8:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "closest", function () {
          return closest;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "matches", function () {
          return matches;
        });
        /**
         * @license
         * Copyright 2018 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @fileoverview A "ponyfill" is a polyfill that doesn't modify the global prototype chain.
         * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.
         */

        /**
         * @param {!Element} element
         * @param {string} selector
         * @return {?Element}
         */


        function closest(element, selector) {
          if (element.closest) {
            return element.closest(selector);
          }

          var el = element;

          while (el) {
            if (matches(el, selector)) {
              return el;
            }

            el = el.parentElement;
          }

          return null;
        }
        /**
         * @param {!Element} element
         * @param {string} selector
         * @return {boolean}
         */


        function matches(element, selector) {
          var nativeMatches = element.matches || element.webkitMatchesSelector || element.msMatchesSelector;
          return nativeMatches.call(element, selector);
        }
        /***/

      },

      /***/
      96:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "MDCDialog", function () {
          return MDCDialog;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__ = __webpack_require__(4);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(97);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(100);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_4__material_dom_ponyfill__ = __webpack_require__(8);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_5_focus_trap__ = __webpack_require__(68);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_5_focus_trap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_focus_trap__);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCDialogFoundation", function () {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
        });
        /* harmony reexport (module object) */


        __webpack_require__.d(__webpack_exports__, "util", function () {
          return __WEBPACK_IMPORTED_MODULE_3__util__;
        });

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        var _get = function get(object, property, receiver) {
          if (object === null) object = Function.prototype;
          var desc = Object.getOwnPropertyDescriptor(object, property);

          if (desc === undefined) {
            var parent = Object.getPrototypeOf(object);

            if (parent === null) {
              return undefined;
            } else {
              return get(parent, property, receiver);
            }
          } else if ("value" in desc) {
            return desc.value;
          } else {
            var getter = desc.get;

            if (getter === undefined) {
              return undefined;
            }

            return getter.call(receiver);
          }
        };

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */


        var strings = __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
        /* default */
        ].strings;

        var MDCDialog = function (_MDCComponent) {
          _inherits(MDCDialog, _MDCComponent);

          function MDCDialog() {
            var _ref;

            _classCallCheck(this, MDCDialog);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            /**
             * @type {!Array<!MDCRipple>}
             * @private
             */


            var _this = _possibleConstructorReturn(this, (_ref = MDCDialog.__proto__ || Object.getPrototypeOf(MDCDialog)).call.apply(_ref, [this].concat(args)));

            _this.buttonRipples_;
            /** @private {!Array<!Element>} */

            _this.buttons_;
            /** @private {?Element} */

            _this.defaultButton_;
            /** @private {!Element} */

            _this.container_;
            /** @private {?Element} */

            _this.content_;
            /** @private {?Element} */

            _this.initialFocusEl_;
            /** @private {!Function} */

            _this.focusTrapFactory_;
            /** @private {!FocusTrapInstance} */

            _this.focusTrap_;
            /** @private {!Function} */

            _this.handleInteraction_;
            /** @private {!Function} */

            _this.handleDocumentKeydown_;
            /** @private {!Function} */

            _this.handleOpening_;
            /** @private {!Function} */

            _this.handleClosing_;
            /** @private {Function} */

            _this.layout_;
            return _this;
          }

          _createClass(MDCDialog, [{
            key: 'initialize',
            value: function initialize() {
              var focusTrapFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : __WEBPACK_IMPORTED_MODULE_5_focus_trap___default.a;
              var initialFocusEl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
              this.container_ =
              /** @type {!Element} */
              this.root_.querySelector(strings.CONTAINER_SELECTOR);
              this.content_ = this.root_.querySelector(strings.CONTENT_SELECTOR);
              this.buttons_ = [].slice.call(this.root_.querySelectorAll(strings.BUTTON_SELECTOR));
              this.defaultButton_ = this.root_.querySelector(strings.DEFAULT_BUTTON_SELECTOR);
              this.buttonRipples_ = [];
              this.focusTrapFactory_ = focusTrapFactory;
              this.initialFocusEl_ = initialFocusEl;

              for (var i = 0, buttonEl; buttonEl = this.buttons_[i]; i++) {
                this.buttonRipples_.push(new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__["MDCRipple"](buttonEl));
              }
            }
          }, {
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {
              var _this2 = this;

              this.focusTrap_ = __WEBPACK_IMPORTED_MODULE_3__util__["createFocusTrapInstance"](this.container_, this.focusTrapFactory_, this.initialFocusEl_);
              this.handleInteraction_ = this.foundation_.handleInteraction.bind(this.foundation_);
              this.handleDocumentKeydown_ = this.foundation_.handleDocumentKeydown.bind(this.foundation_);
              this.layout_ = this.layout.bind(this);
              var LAYOUT_EVENTS = ['resize', 'orientationchange'];

              this.handleOpening_ = function () {
                LAYOUT_EVENTS.forEach(function (type) {
                  return window.addEventListener(type, _this2.layout_);
                });
                document.addEventListener('keydown', _this2.handleDocumentKeydown_);
              };

              this.handleClosing_ = function () {
                LAYOUT_EVENTS.forEach(function (type) {
                  return window.removeEventListener(type, _this2.layout_);
                });
                document.removeEventListener('keydown', _this2.handleDocumentKeydown_);
              };

              this.listen('click', this.handleInteraction_);
              this.listen('keydown', this.handleInteraction_);
              this.listen(strings.OPENING_EVENT, this.handleOpening_);
              this.listen(strings.CLOSING_EVENT, this.handleClosing_);
            }
          }, {
            key: 'destroy',
            value: function destroy() {
              this.unlisten('click', this.handleInteraction_);
              this.unlisten('keydown', this.handleInteraction_);
              this.unlisten(strings.OPENING_EVENT, this.handleOpening_);
              this.unlisten(strings.CLOSING_EVENT, this.handleClosing_);
              this.handleClosing_();
              this.buttonRipples_.forEach(function (ripple) {
                return ripple.destroy();
              });

              _get(MDCDialog.prototype.__proto__ || Object.getPrototypeOf(MDCDialog.prototype), 'destroy', this).call(this);
            }
          }, {
            key: 'layout',
            value: function layout() {
              this.foundation_.layout();
            }
          }, {
            key: 'open',
            value: function open() {
              this.foundation_.open();
            }
            /**
             * @param {string=} action
             */

          }, {
            key: 'close',
            value: function close() {
              var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
              this.foundation_.close(action);
            }
          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              var _this3 = this;

              return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
              /* default */
              ]({
                addClass: function addClass(className) {
                  return _this3.root_.classList.add(className);
                },
                removeClass: function removeClass(className) {
                  return _this3.root_.classList.remove(className);
                },
                hasClass: function hasClass(className) {
                  return _this3.root_.classList.contains(className);
                },
                addBodyClass: function addBodyClass(className) {
                  return document.body.classList.add(className);
                },
                removeBodyClass: function removeBodyClass(className) {
                  return document.body.classList.remove(className);
                },
                eventTargetMatches: function eventTargetMatches(target, selector) {
                  return Object(__WEBPACK_IMPORTED_MODULE_4__material_dom_ponyfill__["matches"])(target, selector);
                },
                trapFocus: function trapFocus() {
                  return _this3.focusTrap_.activate();
                },
                releaseFocus: function releaseFocus() {
                  return _this3.focusTrap_.deactivate();
                },
                isContentScrollable: function isContentScrollable() {
                  return !!_this3.content_ && __WEBPACK_IMPORTED_MODULE_3__util__["isScrollable"](
                  /** @type {!Element} */
                  _this3.content_);
                },
                areButtonsStacked: function areButtonsStacked() {
                  return __WEBPACK_IMPORTED_MODULE_3__util__["areTopsMisaligned"](_this3.buttons_);
                },
                getActionFromEvent: function getActionFromEvent(event) {
                  var element = Object(__WEBPACK_IMPORTED_MODULE_4__material_dom_ponyfill__["closest"])(event.target, '[' + strings.ACTION_ATTRIBUTE + ']');
                  return element && element.getAttribute(strings.ACTION_ATTRIBUTE);
                },
                clickDefaultButton: function clickDefaultButton() {
                  if (_this3.defaultButton_) {
                    _this3.defaultButton_.click();
                  }
                },
                reverseButtons: function reverseButtons() {
                  _this3.buttons_.reverse();

                  _this3.buttons_.forEach(function (button) {
                    return button.parentElement.appendChild(button);
                  });
                },
                notifyOpening: function notifyOpening() {
                  return _this3.emit(strings.OPENING_EVENT, {});
                },
                notifyOpened: function notifyOpened() {
                  return _this3.emit(strings.OPENED_EVENT, {});
                },
                notifyClosing: function notifyClosing(action) {
                  return _this3.emit(strings.CLOSING_EVENT, action ? {
                    action: action
                  } : {});
                },
                notifyClosed: function notifyClosed(action) {
                  return _this3.emit(strings.CLOSED_EVENT, action ? {
                    action: action
                  } : {});
                }
              });
            }
          }, {
            key: 'isOpen',
            get: function get() {
              return this.foundation_.isOpen();
            }
          }, {
            key: 'escapeKeyAction',
            get: function get() {
              return this.foundation_.getEscapeKeyAction();
            },
            set: function set(action) {
              this.foundation_.setEscapeKeyAction(action);
            }
          }, {
            key: 'scrimClickAction',
            get: function get() {
              return this.foundation_.getScrimClickAction();
            },
            set: function set(action) {
              this.foundation_.setScrimClickAction(action);
            }
          }, {
            key: 'autoStackButtons',
            get: function get() {
              return this.foundation_.getAutoStackButtons();
            },
            set: function set(autoStack) {
              this.foundation_.setAutoStackButtons(autoStack);
            }
          }], [{
            key: 'attachTo',
            value: function attachTo(root) {
              return new MDCDialog(root);
            }
          }]);

          return MDCDialog;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
        /* default */
        ]);
        /***/

      },

      /***/
      97:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(98);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(99);

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */


        var MDCDialogFoundation = function (_MDCFoundation) {
          _inherits(MDCDialogFoundation, _MDCFoundation);

          _createClass(MDCDialogFoundation, null, [{
            key: 'cssClasses',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ];
            }
          }, {
            key: 'strings',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["c"
              /* strings */
              ];
            }
          }, {
            key: 'numbers',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ];
            }
          }, {
            key: 'defaultAdapter',
            get: function get() {
              return (
                /** @type {!MDCDialogAdapter} */
                {
                  addClass: function addClass()
                  /* className: string */
                  {},
                  removeClass: function removeClass()
                  /* className: string */
                  {},
                  hasClass: function hasClass()
                  /* className: string */
                  {},
                  addBodyClass: function addBodyClass()
                  /* className: string */
                  {},
                  removeBodyClass: function removeBodyClass()
                  /* className: string */
                  {},
                  eventTargetMatches: function eventTargetMatches()
                  /* target: !EventTarget, selector: string */
                  {},
                  trapFocus: function trapFocus() {},
                  releaseFocus: function releaseFocus() {},
                  isContentScrollable: function isContentScrollable() {},
                  areButtonsStacked: function areButtonsStacked() {},
                  getActionFromEvent: function getActionFromEvent()
                  /* event: !Event */
                  {},
                  clickDefaultButton: function clickDefaultButton() {},
                  reverseButtons: function reverseButtons() {},
                  notifyOpening: function notifyOpening() {},
                  notifyOpened: function notifyOpened() {},
                  notifyClosing: function notifyClosing()
                  /* action: ?string */
                  {},
                  notifyClosed: function notifyClosed()
                  /* action: ?string */
                  {}
                }
              );
            }
            /**
             * @param {!MDCDialogAdapter=} adapter
             */

          }]);

          function MDCDialogFoundation(adapter) {
            _classCallCheck(this, MDCDialogFoundation);
            /** @private {boolean} */


            var _this = _possibleConstructorReturn(this, (MDCDialogFoundation.__proto__ || Object.getPrototypeOf(MDCDialogFoundation)).call(this, _extends(MDCDialogFoundation.defaultAdapter, adapter)));

            _this.isOpen_ = false;
            /** @private {number} */

            _this.animationFrame_ = 0;
            /** @private {number} */

            _this.animationTimer_ = 0;
            /** @private {number} */

            _this.layoutFrame_ = 0;
            /** @private {string} */

            _this.escapeKeyAction_ = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
            /* strings */
            ].CLOSE_ACTION;
            /** @private {string} */

            _this.scrimClickAction_ = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
            /* strings */
            ].CLOSE_ACTION;
            /** @private {boolean} */

            _this.autoStackButtons_ = true;
            /** @private {boolean} */

            _this.areButtonsStacked_ = false;
            return _this;
          }

          _createClass(MDCDialogFoundation, [{
            key: 'init',
            value: function init() {
              if (this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].STACKED)) {
                this.setAutoStackButtons(false);
              }
            }
          }, {
            key: 'destroy',
            value: function destroy() {
              if (this.isOpen_) {
                this.close(__WEBPACK_IMPORTED_MODULE_2__constants__["c"
                /* strings */
                ].DESTROY_ACTION);
              }

              if (this.animationTimer_) {
                clearTimeout(this.animationTimer_);
                this.handleAnimationTimerEnd_();
              }

              if (this.layoutFrame_) {
                cancelAnimationFrame(this.layoutFrame_);
                this.layoutFrame_ = 0;
              }
            }
          }, {
            key: 'open',
            value: function open() {
              var _this2 = this;

              this.isOpen_ = true;
              this.adapter_.notifyOpening();
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].OPENING); // Wait a frame once display is no longer "none", to establish basis for animation

              this.runNextAnimationFrame_(function () {
                _this2.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].OPEN);

                _this2.adapter_.addBodyClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].SCROLL_LOCK);

                _this2.layout();

                _this2.animationTimer_ = setTimeout(function () {
                  _this2.handleAnimationTimerEnd_();

                  _this2.adapter_.trapFocus();

                  _this2.adapter_.notifyOpened();
                }, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
                /* numbers */
                ].DIALOG_ANIMATION_OPEN_TIME_MS);
              });
            }
            /**
             * @param {string=} action
             */

          }, {
            key: 'close',
            value: function close() {
              var _this3 = this;

              var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

              if (!this.isOpen_) {
                // Avoid redundant close calls (and events), e.g. from keydown on elements that inherently emit click
                return;
              }

              this.isOpen_ = false;
              this.adapter_.notifyClosing(action);
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].CLOSING);
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].OPEN);
              this.adapter_.removeBodyClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].SCROLL_LOCK);
              cancelAnimationFrame(this.animationFrame_);
              this.animationFrame_ = 0;
              clearTimeout(this.animationTimer_);
              this.animationTimer_ = setTimeout(function () {
                _this3.adapter_.releaseFocus();

                _this3.handleAnimationTimerEnd_();

                _this3.adapter_.notifyClosed(action);
              }, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ].DIALOG_ANIMATION_CLOSE_TIME_MS);
            }
          }, {
            key: 'isOpen',
            value: function isOpen() {
              return this.isOpen_;
            }
            /** @return {string} */

          }, {
            key: 'getEscapeKeyAction',
            value: function getEscapeKeyAction() {
              return this.escapeKeyAction_;
            }
            /** @param {string} action */

          }, {
            key: 'setEscapeKeyAction',
            value: function setEscapeKeyAction(action) {
              this.escapeKeyAction_ = action;
            }
            /** @return {string} */

          }, {
            key: 'getScrimClickAction',
            value: function getScrimClickAction() {
              return this.scrimClickAction_;
            }
            /** @param {string} action */

          }, {
            key: 'setScrimClickAction',
            value: function setScrimClickAction(action) {
              this.scrimClickAction_ = action;
            }
            /** @return {boolean} */

          }, {
            key: 'getAutoStackButtons',
            value: function getAutoStackButtons() {
              return this.autoStackButtons_;
            }
            /** @param {boolean} autoStack */

          }, {
            key: 'setAutoStackButtons',
            value: function setAutoStackButtons(autoStack) {
              this.autoStackButtons_ = autoStack;
            }
          }, {
            key: 'layout',
            value: function layout() {
              var _this4 = this;

              if (this.layoutFrame_) {
                cancelAnimationFrame(this.layoutFrame_);
              }

              this.layoutFrame_ = requestAnimationFrame(function () {
                _this4.layoutInternal_();

                _this4.layoutFrame_ = 0;
              });
            }
          }, {
            key: 'layoutInternal_',
            value: function layoutInternal_() {
              if (this.autoStackButtons_) {
                this.detectStackedButtons_();
              }

              this.detectScrollableContent_();
            }
            /** @private */

          }, {
            key: 'detectStackedButtons_',
            value: function detectStackedButtons_() {
              // Remove the class first to let us measure the buttons' natural positions.
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].STACKED);
              var areButtonsStacked = this.adapter_.areButtonsStacked();

              if (areButtonsStacked) {
                this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].STACKED);
              }

              if (areButtonsStacked !== this.areButtonsStacked_) {
                this.adapter_.reverseButtons();
                this.areButtonsStacked_ = areButtonsStacked;
              }
            }
            /** @private */

          }, {
            key: 'detectScrollableContent_',
            value: function detectScrollableContent_() {
              // Remove the class first to let us measure the natural height of the content.
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].SCROLLABLE);

              if (this.adapter_.isContentScrollable()) {
                this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].SCROLLABLE);
              }
            }
            /**
             * @param {!Event} evt
             * @private
             */

          }, {
            key: 'handleInteraction',
            value: function handleInteraction(evt) {
              var isClick = evt.type === 'click';
              var isEnter = evt.key === 'Enter' || evt.keyCode === 13; // Check for scrim click first since it doesn't require querying ancestors

              if (isClick && this.adapter_.eventTargetMatches(evt.target, __WEBPACK_IMPORTED_MODULE_2__constants__["c"
              /* strings */
              ].SCRIM_SELECTOR) && this.scrimClickAction_ !== '') {
                this.close(this.scrimClickAction_);
              } else if (isClick || evt.key === 'Space' || evt.keyCode === 32 || isEnter) {
                var action = this.adapter_.getActionFromEvent(evt);

                if (action) {
                  this.close(action);
                } else if (isEnter && !this.adapter_.eventTargetMatches(evt.target, __WEBPACK_IMPORTED_MODULE_2__constants__["c"
                /* strings */
                ].SUPPRESS_DEFAULT_PRESS_SELECTOR)) {
                  this.adapter_.clickDefaultButton();
                }
              }
            }
            /**
             * @param {!KeyboardEvent} evt
             * @private
             */

          }, {
            key: 'handleDocumentKeydown',
            value: function handleDocumentKeydown(evt) {
              if ((evt.key === 'Escape' || evt.keyCode === 27) && this.escapeKeyAction_ !== '') {
                this.close(this.escapeKeyAction_);
              }
            }
            /** @private */

          }, {
            key: 'handleAnimationTimerEnd_',
            value: function handleAnimationTimerEnd_() {
              this.animationTimer_ = 0;
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].OPENING);
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].CLOSING);
            }
            /**
             * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.
             * @param {Function} callback
             * @private
             */

          }, {
            key: 'runNextAnimationFrame_',
            value: function runNextAnimationFrame_(callback) {
              var _this5 = this;

              cancelAnimationFrame(this.animationFrame_);
              this.animationFrame_ = requestAnimationFrame(function () {
                _this5.animationFrame_ = 0;
                clearTimeout(_this5.animationTimer_);
                _this5.animationTimer_ = setTimeout(callback, 0);
              });
            }
          }]);

          return MDCDialogFoundation;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
        /* default */
        ]);
        /* harmony default export */


        __webpack_exports__["a"] = MDCDialogFoundation;
        /***/
      },

      /***/
      98:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2018 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint no-unused-vars: [2, {"args": "none"}] */

        /**
         * Adapter for MDC Dialog. Provides an interface for managing:
         * - CSS classes
         * - DOM
         * - Event handlers
         *
         * Additionally, provides type information for the adapter to the Closure
         * compiler.
         *
         * Implement this adapter for your framework of choice to delegate updates to
         * the component in your framework of choice. See architecture documentation
         * for more details.
         * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
         *
         * @record
         */


        var MDCDialogAdapter = function () {
          function MDCDialogAdapter() {
            _classCallCheck(this, MDCDialogAdapter);
          }

          _createClass(MDCDialogAdapter, [{
            key: "addClass",

            /** @param {string} className */
            value: function addClass(className) {}
            /** @param {string} className */

          }, {
            key: "removeClass",
            value: function removeClass(className) {}
            /**
             * @param {string} className
             * @return {boolean}
             */

          }, {
            key: "hasClass",
            value: function hasClass(className) {}
            /** @param {string} className */

          }, {
            key: "addBodyClass",
            value: function addBodyClass(className) {}
            /** @param {string} className */

          }, {
            key: "removeBodyClass",
            value: function removeBodyClass(className) {}
            /**
             * @param {!EventTarget} target
             * @param {string} selector
             * @return {boolean}
             */

          }, {
            key: "eventTargetMatches",
            value: function eventTargetMatches(target, selector) {}
          }, {
            key: "trapFocus",
            value: function trapFocus() {}
          }, {
            key: "releaseFocus",
            value: function releaseFocus() {}
            /** @return {boolean} */

          }, {
            key: "isContentScrollable",
            value: function isContentScrollable() {}
            /** @return {boolean} */

          }, {
            key: "areButtonsStacked",
            value: function areButtonsStacked() {}
            /**
             * @param {!Event} event
             * @return {?string}
             */

          }, {
            key: "getActionFromEvent",
            value: function getActionFromEvent(event) {}
          }, {
            key: "clickDefaultButton",
            value: function clickDefaultButton() {}
          }, {
            key: "reverseButtons",
            value: function reverseButtons() {}
          }, {
            key: "notifyOpening",
            value: function notifyOpening() {}
          }, {
            key: "notifyOpened",
            value: function notifyOpened() {}
            /**
             * @param {string} action
             */

          }, {
            key: "notifyClosing",
            value: function notifyClosing(action) {}
            /**
             * @param {string} action
             */

          }, {
            key: "notifyClosed",
            value: function notifyClosed(action) {}
          }]);

          return MDCDialogAdapter;
        }();
        /* unused harmony default export */


        var _unused_webpack_default_export = MDCDialogAdapter;
        /***/
      },

      /***/
      99:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "a", function () {
          return cssClasses;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "c", function () {
          return strings;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "b", function () {
          return numbers;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */


        var cssClasses = {
          OPEN: 'mdc-dialog--open',
          OPENING: 'mdc-dialog--opening',
          CLOSING: 'mdc-dialog--closing',
          SCROLLABLE: 'mdc-dialog--scrollable',
          STACKED: 'mdc-dialog--stacked',
          SCROLL_LOCK: 'mdc-dialog-scroll-lock'
        };
        var strings = {
          SCRIM_SELECTOR: '.mdc-dialog__scrim',
          CONTAINER_SELECTOR: '.mdc-dialog__container',
          SURFACE_SELECTOR: '.mdc-dialog__surface',
          CONTENT_SELECTOR: '.mdc-dialog__content',
          BUTTON_SELECTOR: '.mdc-dialog__button',
          DEFAULT_BUTTON_SELECTOR: '.mdc-dialog__button--default',
          SUPPRESS_DEFAULT_PRESS_SELECTOR: ['textarea', '.mdc-menu .mdc-list-item'].join(', '),
          OPENING_EVENT: 'MDCDialog:opening',
          OPENED_EVENT: 'MDCDialog:opened',
          CLOSING_EVENT: 'MDCDialog:closing',
          CLOSED_EVENT: 'MDCDialog:closed',
          ACTION_ATTRIBUTE: 'data-mdc-dialog-action',
          CLOSE_ACTION: 'close',
          DESTROY_ACTION: 'destroy'
        };
        var numbers = {
          DIALOG_ANIMATION_OPEN_TIME_MS: 150,
          DIALOG_ANIMATION_CLOSE_TIME_MS: 75
        };
        /***/
      }
      /******/

    })
  );
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/@material/form-field/dist/mdc.formField.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@material/form-field/dist/mdc.formField.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 Material Components for the Web
 Copyright (c) 2019 Google Inc.
 License: MIT
*/
(function webpackUniversalModuleDefinition(root, factory) {
  if (( false ? undefined : _typeof(exports)) === 'object' && ( false ? undefined : _typeof(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}
})(this, function () {
  return (
    /******/
    function (modules) {
      // webpackBootstrap

      /******/
      // The module cache

      /******/
      var installedModules = {};
      /******/

      /******/
      // The require function

      /******/

      function __webpack_require__(moduleId) {
        /******/

        /******/
        // Check if module is in cache

        /******/
        if (installedModules[moduleId]) {
          /******/
          return installedModules[moduleId].exports;
          /******/
        }
        /******/
        // Create a new module (and put it into the cache)

        /******/


        var module = installedModules[moduleId] = {
          /******/
          i: moduleId,

          /******/
          l: false,

          /******/
          exports: {}
          /******/

        };
        /******/

        /******/
        // Execute the module function

        /******/

        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/

        /******/
        // Flag the module as loaded

        /******/

        module.l = true;
        /******/

        /******/
        // Return the exports of the module

        /******/

        return module.exports;
        /******/
      }
      /******/

      /******/

      /******/
      // expose the modules object (__webpack_modules__)

      /******/


      __webpack_require__.m = modules;
      /******/

      /******/
      // expose the module cache

      /******/

      __webpack_require__.c = installedModules;
      /******/

      /******/
      // define getter function for harmony exports

      /******/

      __webpack_require__.d = function (exports, name, getter) {
        /******/
        if (!__webpack_require__.o(exports, name)) {
          /******/
          Object.defineProperty(exports, name, {
            /******/
            configurable: false,

            /******/
            enumerable: true,

            /******/
            get: getter
            /******/

          });
          /******/
        }
        /******/

      };
      /******/

      /******/
      // getDefaultExport function for compatibility with non-harmony modules

      /******/


      __webpack_require__.n = function (module) {
        /******/
        var getter = module && module.__esModule ?
        /******/
        function getDefault() {
          return module['default'];
        } :
        /******/
        function getModuleExports() {
          return module;
        };
        /******/

        __webpack_require__.d(getter, 'a', getter);
        /******/


        return getter;
        /******/
      };
      /******/

      /******/
      // Object.prototype.hasOwnProperty.call

      /******/


      __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      /******/

      /******/
      // __webpack_public_path__

      /******/


      __webpack_require__.p = "";
      /******/

      /******/
      // Load entry module and return exports

      /******/

      return __webpack_require__(__webpack_require__.s = 109);
      /******/
    }(
    /************************************************************************/

    /******/
    {
      /***/
      0:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @template A
         */


        var MDCFoundation = function () {
          _createClass(MDCFoundation, null, [{
            key: "cssClasses",

            /** @return enum{cssClasses} */
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports every
              // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}
              return {};
            }
            /** @return enum{strings} */

          }, {
            key: "strings",
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports all
              // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}
              return {};
            }
            /** @return enum{numbers} */

          }, {
            key: "numbers",
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports all
              // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}
              return {};
            }
            /** @return {!Object} */

          }, {
            key: "defaultAdapter",
            get: function get() {
              // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient
              // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter
              // validation.
              return {};
            }
            /**
             * @param {A=} adapter
             */

          }]);

          function MDCFoundation() {
            var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

            _classCallCheck(this, MDCFoundation);
            /** @protected {!A} */


            this.adapter_ = adapter;
          }

          _createClass(MDCFoundation, [{
            key: "init",
            value: function init() {// Subclasses should override this method to perform initialization routines (registering events, etc.)
            }
          }, {
            key: "destroy",
            value: function destroy() {// Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)
            }
          }]);

          return MDCFoundation;
        }();
        /* harmony default export */


        __webpack_exports__["a"] = MDCFoundation;
        /***/
      },

      /***/
      1:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0);

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @template F
         */


        var MDCComponent = function () {
          _createClass(MDCComponent, null, [{
            key: 'attachTo',

            /**
             * @param {!Element} root
             * @return {!MDCComponent}
             */
            value: function attachTo(root) {
              // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and
              // returns an instantiated component with its root set to that element. Also note that in the cases of
              // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized
              // from getDefaultFoundation().
              return new MDCComponent(root, new __WEBPACK_IMPORTED_MODULE_0__foundation__["a"
              /* default */
              ]());
            }
            /**
             * @param {!Element} root
             * @param {F=} foundation
             * @param {...?} args
             */

          }]);

          function MDCComponent(root) {
            var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

            _classCallCheck(this, MDCComponent);
            /** @protected {!Element} */


            this.root_ = root;

            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              args[_key - 2] = arguments[_key];
            }

            this.initialize.apply(this, args); // Note that we initialize foundation here and not within the constructor's default param so that
            // this.root_ is defined and can be used within the foundation class.

            /** @protected {!F} */

            this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;
            this.foundation_.init();
            this.initialSyncWithDOM();
          }

          _createClass(MDCComponent, [{
            key: 'initialize',
            value: function initialize()
            /* ...args */
            {} // Subclasses can override this to do any additional setup work that would be considered part of a
            // "constructor". Essentially, it is a hook into the parent constructor before the foundation is
            // initialized. Any additional arguments besides root and foundation will be passed in here.

            /**
             * @return {!F} foundation
             */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              // Subclasses must override this method to return a properly configured foundation class for the
              // component.
              throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');
            }
          }, {
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {// Subclasses should override this method if they need to perform work to synchronize with a host DOM
              // object. An example of this would be a form control wrapper that needs to synchronize its internal state
              // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM
              // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.
            }
          }, {
            key: 'destroy',
            value: function destroy() {
              // Subclasses may implement this method to release any resources / deregister any listeners they have
              // attached. An example of this might be deregistering a resize event from the window object.
              this.foundation_.destroy();
            }
            /**
             * Wrapper method to add an event listener to the component's root element. This is most useful when
             * listening for custom events.
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: 'listen',
            value: function listen(evtType, handler) {
              this.root_.addEventListener(evtType, handler);
            }
            /**
             * Wrapper method to remove an event listener to the component's root element. This is most useful when
             * unlistening for custom events.
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: 'unlisten',
            value: function unlisten(evtType, handler) {
              this.root_.removeEventListener(evtType, handler);
            }
            /**
             * Fires a cross-browser-compatible custom event from the component root of the given type,
             * with the given data.
             * @param {string} evtType
             * @param {!Object} evtData
             * @param {boolean=} shouldBubble
             */

          }, {
            key: 'emit',
            value: function emit(evtType, evtData) {
              var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
              var evt = void 0;

              if (typeof CustomEvent === 'function') {
                evt = new CustomEvent(evtType, {
                  detail: evtData,
                  bubbles: shouldBubble
                });
              } else {
                evt = document.createEvent('CustomEvent');
                evt.initCustomEvent(evtType, shouldBubble, false, evtData);
              }

              this.root_.dispatchEvent(evt);
            }
          }]);

          return MDCComponent;
        }();
        /* harmony default export */


        __webpack_exports__["a"] = MDCComponent;
        /***/
      },

      /***/
      109:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "MDCFormField", function () {
          return MDCFormField;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(110);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__material_selection_control_index__ = __webpack_require__(7);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCFormFieldFoundation", function () {
          return __WEBPACK_IMPORTED_MODULE_1__foundation__["a"];
        });

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint-disable no-unused-vars */

        /* eslint-enable no-unused-vars */

        /**
         * @extends MDCComponent<!MDCFormFieldFoundation>
         */


        var MDCFormField = function (_MDCComponent) {
          _inherits(MDCFormField, _MDCComponent);

          _createClass(MDCFormField, [{
            key: 'input',

            /** @param {?MDCSelectionControl} input */
            set: function set(input) {
              this.input_ = input;
            }
            /** @return {?MDCSelectionControl} */
            ,
            get: function get() {
              return this.input_;
            }
          }], [{
            key: 'attachTo',
            value: function attachTo(root) {
              return new MDCFormField(root);
            }
          }]);

          function MDCFormField() {
            var _ref;

            _classCallCheck(this, MDCFormField);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            /** @private {?MDCSelectionControl} */


            var _this = _possibleConstructorReturn(this, (_ref = MDCFormField.__proto__ || Object.getPrototypeOf(MDCFormField)).call.apply(_ref, [this].concat(args)));

            _this.input_;
            return _this;
          }
          /**
           * @return {!Element}
           * @private
           */


          _createClass(MDCFormField, [{
            key: 'getDefaultFoundation',

            /** @return {!MDCFormFieldFoundation} */
            value: function getDefaultFoundation() {
              var _this2 = this;

              return new __WEBPACK_IMPORTED_MODULE_1__foundation__["a"
              /* default */
              ]({
                registerInteractionHandler: function registerInteractionHandler(type, handler) {
                  return _this2.label_.addEventListener(type, handler);
                },
                deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
                  return _this2.label_.removeEventListener(type, handler);
                },
                activateInputRipple: function activateInputRipple() {
                  if (_this2.input_ && _this2.input_.ripple) {
                    _this2.input_.ripple.activate();
                  }
                },
                deactivateInputRipple: function deactivateInputRipple() {
                  if (_this2.input_ && _this2.input_.ripple) {
                    _this2.input_.ripple.deactivate();
                  }
                }
              });
            }
          }, {
            key: 'label_',
            get: function get() {
              var LABEL_SELECTOR = __WEBPACK_IMPORTED_MODULE_1__foundation__["a"
              /* default */
              ].strings.LABEL_SELECTOR;
              return (
                /** @type {!Element} */
                this.root_.querySelector(LABEL_SELECTOR)
              );
            }
          }]);

          return MDCFormField;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
        /* default */
        ]);
        /***/

      },

      /***/
      110:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(111);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(112);

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @extends {MDCFoundation<!MDCFormFieldAdapter>}
         */


        var MDCFormFieldFoundation = function (_MDCFoundation) {
          _inherits(MDCFormFieldFoundation, _MDCFoundation);

          _createClass(MDCFormFieldFoundation, null, [{
            key: 'cssClasses',

            /** @return enum {cssClasses} */
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ];
            }
            /** @return enum {strings} */

          }, {
            key: 'strings',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ];
            }
            /** @return {!MDCFormFieldAdapter} */

          }, {
            key: 'defaultAdapter',
            get: function get() {
              return {
                registerInteractionHandler: function registerInteractionHandler()
                /* type: string, handler: EventListener */
                {},
                deregisterInteractionHandler: function deregisterInteractionHandler()
                /* type: string, handler: EventListener */
                {},
                activateInputRipple: function activateInputRipple() {},
                deactivateInputRipple: function deactivateInputRipple() {}
              };
            }
          }]);

          function MDCFormFieldFoundation(adapter) {
            _classCallCheck(this, MDCFormFieldFoundation);
            /** @private {!EventListener} */


            var _this = _possibleConstructorReturn(this, (MDCFormFieldFoundation.__proto__ || Object.getPrototypeOf(MDCFormFieldFoundation)).call(this, _extends(MDCFormFieldFoundation.defaultAdapter, adapter)));

            _this.clickHandler_ =
            /** @type {!EventListener} */
            function () {
              return _this.handleClick_();
            };

            return _this;
          }

          _createClass(MDCFormFieldFoundation, [{
            key: 'init',
            value: function init() {
              this.adapter_.registerInteractionHandler('click', this.clickHandler_);
            }
          }, {
            key: 'destroy',
            value: function destroy() {
              this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);
            }
            /** @private */

          }, {
            key: 'handleClick_',
            value: function handleClick_() {
              var _this2 = this;

              this.adapter_.activateInputRipple();
              requestAnimationFrame(function () {
                return _this2.adapter_.deactivateInputRipple();
              });
            }
          }]);

          return MDCFormFieldFoundation;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
        /* default */
        ]);
        /* harmony default export */


        __webpack_exports__["a"] = MDCFormFieldFoundation;
        /***/
      },

      /***/
      111:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint no-unused-vars: [2, {"args": "none"}] */

        /**
         * Adapter for MDC Form Field. Provides an interface for managing
         * - event handlers
         * - ripple activation
         *
         * Additionally, provides type information for the adapter to the Closure
         * compiler.
         *
         * Implement this adapter for your framework of choice to delegate updates to
         * the component in your framework of choice. See architecture documentation
         * for more details.
         * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
         *
         * @record
         */


        var MDCFormFieldAdapter = function () {
          function MDCFormFieldAdapter() {
            _classCallCheck(this, MDCFormFieldAdapter);
          }

          _createClass(MDCFormFieldAdapter, [{
            key: "registerInteractionHandler",

            /**
             * @param {string} type
             * @param {!EventListener} handler
             */
            value: function registerInteractionHandler(type, handler) {}
            /**
             * @param {string} type
             * @param {!EventListener} handler
             */

          }, {
            key: "deregisterInteractionHandler",
            value: function deregisterInteractionHandler(type, handler) {}
          }, {
            key: "activateInputRipple",
            value: function activateInputRipple() {}
          }, {
            key: "deactivateInputRipple",
            value: function deactivateInputRipple() {}
          }]);

          return MDCFormFieldAdapter;
        }();
        /* unused harmony default export */


        var _unused_webpack_default_export = MDCFormFieldAdapter;
        /***/
      },

      /***/
      112:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "a", function () {
          return cssClasses;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "b", function () {
          return strings;
        });
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /** @enum {string} */


        var cssClasses = {
          ROOT: 'mdc-form-field'
        };
        /** @enum {string} */

        var strings = {
          LABEL_SELECTOR: '.mdc-form-field > label'
        };
        /***/
      },

      /***/
      2:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "supportsCssVariables", function () {
          return supportsCssVariables;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "applyPassive", function () {
          return applyPassive;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "getMatchesProperty", function () {
          return getMatchesProperty;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "getNormalizedEventCoords", function () {
          return getNormalizedEventCoords;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.
         * @private {boolean|undefined}
         */


        var supportsCssVariables_ = void 0;
        /**
         * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.
         * @private {boolean|undefined}
         */

        var supportsPassive_ = void 0;
        /**
         * @param {!Window} windowObj
         * @return {boolean}
         */

        function detectEdgePseudoVarBug(windowObj) {
          // Detect versions of Edge with buggy var() support
          // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/
          var document = windowObj.document;
          var node = document.createElement('div');
          node.className = 'mdc-ripple-surface--test-edge-var-bug';
          document.body.appendChild(node); // The bug exists if ::before style ends up propagating to the parent element.
          // Additionally, getComputedStyle returns null in iframes with display: "none" in Firefox,
          // but Firefox is known to support CSS custom properties correctly.
          // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397

          var computedStyle = windowObj.getComputedStyle(node);
          var hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';
          node.remove();
          return hasPseudoVarBug;
        }
        /**
         * @param {!Window} windowObj
         * @param {boolean=} forceRefresh
         * @return {boolean|undefined}
         */


        function supportsCssVariables(windowObj) {
          var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          var supportsCssVariables = supportsCssVariables_;

          if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {
            return supportsCssVariables;
          }

          var supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';

          if (!supportsFunctionPresent) {
            return;
          }

          var explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes'); // See: https://bugs.webkit.org/show_bug.cgi?id=154669
          // See: README section on Safari

          var weAreFeatureDetectingSafari10plus = windowObj.CSS.supports('(--css-vars: yes)') && windowObj.CSS.supports('color', '#00000000');

          if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {
            supportsCssVariables = !detectEdgePseudoVarBug(windowObj);
          } else {
            supportsCssVariables = false;
          }

          if (!forceRefresh) {
            supportsCssVariables_ = supportsCssVariables;
          }

          return supportsCssVariables;
        } //

        /**
         * Determine whether the current browser supports passive event listeners, and if so, use them.
         * @param {!Window=} globalObj
         * @param {boolean=} forceRefresh
         * @return {boolean|!EventListenerOptions}
         */


        function applyPassive() {
          var globalObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
          var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

          if (supportsPassive_ === undefined || forceRefresh) {
            var isSupported = false;

            try {
              globalObj.document.addEventListener('test', null, {
                get passive() {
                  isSupported = true;
                  return isSupported;
                }

              });
            } catch (e) {}

            supportsPassive_ = isSupported;
          }

          return supportsPassive_ ?
          /** @type {!EventListenerOptions} */
          {
            passive: true
          } : false;
        }
        /**
         * @param {!Object} HTMLElementPrototype
         * @return {string}
         */


        function getMatchesProperty(HTMLElementPrototype) {
          /**
           * Order is important because we return the first existing method we find.
           * Do not change the order of the items in the below array.
           */
          var matchesMethods = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'];
          var method = 'matches';

          for (var i = 0; i < matchesMethods.length; i++) {
            var matchesMethod = matchesMethods[i];

            if (matchesMethod in HTMLElementPrototype) {
              method = matchesMethod;
              break;
            }
          }

          return method;
        }
        /**
         * @param {!Event} ev
         * @param {{x: number, y: number}} pageOffset
         * @param {!ClientRect} clientRect
         * @return {{x: number, y: number}}
         */


        function getNormalizedEventCoords(ev, pageOffset, clientRect) {
          var x = pageOffset.x,
              y = pageOffset.y;
          var documentX = x + clientRect.left;
          var documentY = y + clientRect.top;
          var normalizedX = void 0;
          var normalizedY = void 0; // Determine touch point relative to the ripple container.

          if (ev.type === 'touchstart') {
            ev =
            /** @type {!TouchEvent} */
            ev;
            normalizedX = ev.changedTouches[0].pageX - documentX;
            normalizedY = ev.changedTouches[0].pageY - documentY;
          } else {
            ev =
            /** @type {!MouseEvent} */
            ev;
            normalizedX = ev.pageX - documentX;
            normalizedY = ev.pageY - documentY;
          }

          return {
            x: normalizedX,
            y: normalizedY
          };
        }
        /***/

      },

      /***/
      3:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint no-unused-vars: [2, {"args": "none"}] */

        /**
         * Adapter for MDC Ripple. Provides an interface for managing
         * - classes
         * - dom
         * - CSS variables
         * - position
         * - dimensions
         * - scroll position
         * - event handlers
         * - unbounded, active and disabled states
         *
         * Additionally, provides type information for the adapter to the Closure
         * compiler.
         *
         * Implement this adapter for your framework of choice to delegate updates to
         * the component in your framework of choice. See architecture documentation
         * for more details.
         * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
         *
         * @record
         */


        var MDCRippleAdapter = function () {
          function MDCRippleAdapter() {
            _classCallCheck(this, MDCRippleAdapter);
          }

          _createClass(MDCRippleAdapter, [{
            key: "browserSupportsCssVars",

            /** @return {boolean} */
            value: function browserSupportsCssVars() {}
            /** @return {boolean} */

          }, {
            key: "isUnbounded",
            value: function isUnbounded() {}
            /** @return {boolean} */

          }, {
            key: "isSurfaceActive",
            value: function isSurfaceActive() {}
            /** @return {boolean} */

          }, {
            key: "isSurfaceDisabled",
            value: function isSurfaceDisabled() {}
            /** @param {string} className */

          }, {
            key: "addClass",
            value: function addClass(className) {}
            /** @param {string} className */

          }, {
            key: "removeClass",
            value: function removeClass(className) {}
            /** @param {!EventTarget} target */

          }, {
            key: "containsEventTarget",
            value: function containsEventTarget(target) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "registerInteractionHandler",
            value: function registerInteractionHandler(evtType, handler) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "deregisterInteractionHandler",
            value: function deregisterInteractionHandler(evtType, handler) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "registerDocumentInteractionHandler",
            value: function registerDocumentInteractionHandler(evtType, handler) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "deregisterDocumentInteractionHandler",
            value: function deregisterDocumentInteractionHandler(evtType, handler) {}
            /**
             * @param {!Function} handler
             */

          }, {
            key: "registerResizeHandler",
            value: function registerResizeHandler(handler) {}
            /**
             * @param {!Function} handler
             */

          }, {
            key: "deregisterResizeHandler",
            value: function deregisterResizeHandler(handler) {}
            /**
             * @param {string} varName
             * @param {?number|string} value
             */

          }, {
            key: "updateCssVariable",
            value: function updateCssVariable(varName, value) {}
            /** @return {!ClientRect} */

          }, {
            key: "computeBoundingRect",
            value: function computeBoundingRect() {}
            /** @return {{x: number, y: number}} */

          }, {
            key: "getWindowPageOffset",
            value: function getWindowPageOffset() {}
          }]);

          return MDCRippleAdapter;
        }();
        /* unused harmony default export */


        var _unused_webpack_default_export = MDCRippleAdapter;
        /***/
      },

      /***/
      4:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "MDCRipple", function () {
          return MDCRipple;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "RippleCapableSurface", function () {
          return RippleCapableSurface;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(3);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(5);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(2);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCRippleFoundation", function () {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
        });
        /* harmony reexport (module object) */


        __webpack_require__.d(__webpack_exports__, "util", function () {
          return __WEBPACK_IMPORTED_MODULE_3__util__;
        });

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @extends MDCComponent<!MDCRippleFoundation>
         */


        var MDCRipple = function (_MDCComponent) {
          _inherits(MDCRipple, _MDCComponent);
          /** @param {...?} args */


          function MDCRipple() {
            var _ref;

            _classCallCheck(this, MDCRipple);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            /** @type {boolean} */


            var _this = _possibleConstructorReturn(this, (_ref = MDCRipple.__proto__ || Object.getPrototypeOf(MDCRipple)).call.apply(_ref, [this].concat(args)));

            _this.disabled = false;
            /** @private {boolean} */

            _this.unbounded_;
            return _this;
          }
          /**
           * @param {!Element} root
           * @param {{isUnbounded: (boolean|undefined)}=} options
           * @return {!MDCRipple}
           */


          _createClass(MDCRipple, [{
            key: 'setUnbounded_',

            /**
             * Closure Compiler throws an access control error when directly accessing a
             * protected or private property inside a getter/setter, like unbounded above.
             * By accessing the protected property inside a method, we solve that problem.
             * That's why this function exists.
             * @private
             */
            value: function setUnbounded_() {
              this.foundation_.setUnbounded(this.unbounded_);
            }
          }, {
            key: 'activate',
            value: function activate() {
              this.foundation_.activate();
            }
          }, {
            key: 'deactivate',
            value: function deactivate() {
              this.foundation_.deactivate();
            }
          }, {
            key: 'layout',
            value: function layout() {
              this.foundation_.layout();
            }
            /**
             * @return {!MDCRippleFoundation}
             * @override
             */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
              /* default */
              ](MDCRipple.createAdapter(this));
            }
            /** @override */

          }, {
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {
              this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;
            }
          }, {
            key: 'unbounded',

            /** @return {boolean} */
            get: function get() {
              return this.unbounded_;
            }
            /** @param {boolean} unbounded */
            ,
            set: function set(unbounded) {
              this.unbounded_ = Boolean(unbounded);
              this.setUnbounded_();
            }
          }], [{
            key: 'attachTo',
            value: function attachTo(root) {
              var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
                  _ref2$isUnbounded = _ref2.isUnbounded,
                  isUnbounded = _ref2$isUnbounded === undefined ? undefined : _ref2$isUnbounded;

              var ripple = new MDCRipple(root); // Only override unbounded behavior if option is explicitly specified

              if (isUnbounded !== undefined) {
                ripple.unbounded =
                /** @type {boolean} */
                isUnbounded;
              }

              return ripple;
            }
            /**
             * @param {!RippleCapableSurface} instance
             * @return {!MDCRippleAdapter}
             */

          }, {
            key: 'createAdapter',
            value: function createAdapter(instance) {
              var MATCHES = __WEBPACK_IMPORTED_MODULE_3__util__["getMatchesProperty"](HTMLElement.prototype);

              return {
                browserSupportsCssVars: function browserSupportsCssVars() {
                  return __WEBPACK_IMPORTED_MODULE_3__util__["supportsCssVariables"](window);
                },
                isUnbounded: function isUnbounded() {
                  return instance.unbounded;
                },
                isSurfaceActive: function isSurfaceActive() {
                  return instance.root_[MATCHES](':active');
                },
                isSurfaceDisabled: function isSurfaceDisabled() {
                  return instance.disabled;
                },
                addClass: function addClass(className) {
                  return instance.root_.classList.add(className);
                },
                removeClass: function removeClass(className) {
                  return instance.root_.classList.remove(className);
                },
                containsEventTarget: function containsEventTarget(target) {
                  return instance.root_.contains(target);
                },
                registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
                  return instance.root_.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
                  return instance.root_.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                registerDocumentInteractionHandler: function registerDocumentInteractionHandler(evtType, handler) {
                  return document.documentElement.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler(evtType, handler) {
                  return document.documentElement.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                registerResizeHandler: function registerResizeHandler(handler) {
                  return window.addEventListener('resize', handler);
                },
                deregisterResizeHandler: function deregisterResizeHandler(handler) {
                  return window.removeEventListener('resize', handler);
                },
                updateCssVariable: function updateCssVariable(varName, value) {
                  return instance.root_.style.setProperty(varName, value);
                },
                computeBoundingRect: function computeBoundingRect() {
                  return instance.root_.getBoundingClientRect();
                },
                getWindowPageOffset: function getWindowPageOffset() {
                  return {
                    x: window.pageXOffset,
                    y: window.pageYOffset
                  };
                }
              };
            }
          }]);

          return MDCRipple;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
        /* default */
        ]);
        /**
         * See Material Design spec for more details on when to use ripples.
         * https://material.io/guidelines/motion/choreography.html#choreography-creation
         * @record
         */


        var RippleCapableSurface = function RippleCapableSurface() {
          _classCallCheck(this, RippleCapableSurface);
        };
        /** @protected {!Element} */


        RippleCapableSurface.prototype.root_;
        /**
         * Whether or not the ripple bleeds out of the bounds of the element.
         * @type {boolean|undefined}
         */

        RippleCapableSurface.prototype.unbounded;
        /**
         * Whether or not the ripple is attached to a disabled component.
         * @type {boolean|undefined}
         */

        RippleCapableSurface.prototype.disabled;
        /***/
      },

      /***/
      5:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(3);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(6);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(2);

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @typedef {{
         *   isActivated: (boolean|undefined),
         *   hasDeactivationUXRun: (boolean|undefined),
         *   wasActivatedByPointer: (boolean|undefined),
         *   wasElementMadeActive: (boolean|undefined),
         *   activationEvent: (!Event|undefined),
         *   isProgrammatic: (boolean|undefined)
         * }}
         */


        var ActivationStateType = void 0;
        /**
         * @typedef {{
         *   activate: (string|undefined),
         *   deactivate: (string|undefined),
         *   focus: (string|undefined),
         *   blur: (string|undefined)
         * }}
         */

        var ListenerInfoType = void 0;
        /**
         * @typedef {{
         *   activate: function(!Event),
         *   deactivate: function(!Event=),
         *   focus: function(),
         *   blur: function()
         * }}
         */

        var ListenersType = void 0;
        /**
         * @typedef {{
         *   x: number,
         *   y: number
         * }}
         */

        var PointType = void 0; // Activation events registered on the root element of each instance for activation

        var ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown']; // Deactivation events registered on documentElement when a pointer-related down event occurs

        var POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu']; // Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations

        /** @type {!Array<!EventTarget>} */

        var activatedTargets = [];
        /**
         * @extends {MDCFoundation<!MDCRippleAdapter>}
         */

        var MDCRippleFoundation = function (_MDCFoundation) {
          _inherits(MDCRippleFoundation, _MDCFoundation);

          _createClass(MDCRippleFoundation, null, [{
            key: 'cssClasses',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ];
            }
          }, {
            key: 'strings',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["c"
              /* strings */
              ];
            }
          }, {
            key: 'numbers',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ];
            }
          }, {
            key: 'defaultAdapter',
            get: function get() {
              return {
                browserSupportsCssVars: function browserSupportsCssVars()
                /* boolean - cached */
                {},
                isUnbounded: function isUnbounded()
                /* boolean */
                {},
                isSurfaceActive: function isSurfaceActive()
                /* boolean */
                {},
                isSurfaceDisabled: function isSurfaceDisabled()
                /* boolean */
                {},
                addClass: function addClass()
                /* className: string */
                {},
                removeClass: function removeClass()
                /* className: string */
                {},
                containsEventTarget: function containsEventTarget()
                /* target: !EventTarget */
                {},
                registerInteractionHandler: function registerInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                deregisterInteractionHandler: function deregisterInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                registerDocumentInteractionHandler: function registerDocumentInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                registerResizeHandler: function registerResizeHandler()
                /* handler: EventListener */
                {},
                deregisterResizeHandler: function deregisterResizeHandler()
                /* handler: EventListener */
                {},
                updateCssVariable: function updateCssVariable()
                /* varName: string, value: string */
                {},
                computeBoundingRect: function computeBoundingRect()
                /* ClientRect */
                {},
                getWindowPageOffset: function getWindowPageOffset()
                /* {x: number, y: number} */
                {}
              };
            }
          }]);

          function MDCRippleFoundation(adapter) {
            _classCallCheck(this, MDCRippleFoundation);
            /** @private {number} */


            var _this = _possibleConstructorReturn(this, (MDCRippleFoundation.__proto__ || Object.getPrototypeOf(MDCRippleFoundation)).call(this, _extends(MDCRippleFoundation.defaultAdapter, adapter)));

            _this.layoutFrame_ = 0;
            /** @private {!ClientRect} */

            _this.frame_ =
            /** @type {!ClientRect} */
            {
              width: 0,
              height: 0
            };
            /** @private {!ActivationStateType} */

            _this.activationState_ = _this.defaultActivationState_();
            /** @private {number} */

            _this.initialSize_ = 0;
            /** @private {number} */

            _this.maxRadius_ = 0;
            /** @private {function(!Event)} */

            _this.activateHandler_ = function (e) {
              return _this.activate_(e);
            };
            /** @private {function(!Event=)} */


            _this.deactivateHandler_ = function () {
              return _this.deactivate_();
            };
            /** @private {function(!Event=)} */


            _this.focusHandler_ = function () {
              return _this.handleFocus();
            };
            /** @private {function(!Event=)} */


            _this.blurHandler_ = function () {
              return _this.handleBlur();
            };
            /** @private {!Function} */


            _this.resizeHandler_ = function () {
              return _this.layout();
            };
            /** @private {{left: number, top:number}} */


            _this.unboundedCoords_ = {
              left: 0,
              top: 0
            };
            /** @private {number} */

            _this.fgScale_ = 0;
            /** @private {number} */

            _this.activationTimer_ = 0;
            /** @private {number} */

            _this.fgDeactivationRemovalTimer_ = 0;
            /** @private {boolean} */

            _this.activationAnimationHasEnded_ = false;
            /** @private {!Function} */

            _this.activationTimerCallback_ = function () {
              _this.activationAnimationHasEnded_ = true;

              _this.runDeactivationUXLogicIfReady_();
            };
            /** @private {!Event|undefined} */


            _this.previousActivationEvent_;
            return _this;
          }
          /**
           * We compute this property so that we are not querying information about the client
           * until the point in time where the foundation requests it. This prevents scenarios where
           * client-side feature-detection may happen too early, such as when components are rendered on the server
           * and then initialized at mount time on the client.
           * @return {boolean}
           * @private
           */


          _createClass(MDCRippleFoundation, [{
            key: 'supportsPressRipple_',
            value: function supportsPressRipple_() {
              return this.adapter_.browserSupportsCssVars();
            }
            /**
             * @return {!ActivationStateType}
             */

          }, {
            key: 'defaultActivationState_',
            value: function defaultActivationState_() {
              return {
                isActivated: false,
                hasDeactivationUXRun: false,
                wasActivatedByPointer: false,
                wasElementMadeActive: false,
                activationEvent: undefined,
                isProgrammatic: false
              };
            }
            /** @override */

          }, {
            key: 'init',
            value: function init() {
              var _this2 = this;

              var supportsPressRipple = this.supportsPressRipple_();
              this.registerRootHandlers_(supportsPressRipple);

              if (supportsPressRipple) {
                var _MDCRippleFoundation$ = MDCRippleFoundation.cssClasses,
                    ROOT = _MDCRippleFoundation$.ROOT,
                    UNBOUNDED = _MDCRippleFoundation$.UNBOUNDED;
                requestAnimationFrame(function () {
                  _this2.adapter_.addClass(ROOT);

                  if (_this2.adapter_.isUnbounded()) {
                    _this2.adapter_.addClass(UNBOUNDED); // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple


                    _this2.layoutInternal_();
                  }
                });
              }
            }
            /** @override */

          }, {
            key: 'destroy',
            value: function destroy() {
              var _this3 = this;

              if (this.supportsPressRipple_()) {
                if (this.activationTimer_) {
                  clearTimeout(this.activationTimer_);
                  this.activationTimer_ = 0;
                  this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);
                }

                if (this.fgDeactivationRemovalTimer_) {
                  clearTimeout(this.fgDeactivationRemovalTimer_);
                  this.fgDeactivationRemovalTimer_ = 0;
                  this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);
                }

                var _MDCRippleFoundation$2 = MDCRippleFoundation.cssClasses,
                    ROOT = _MDCRippleFoundation$2.ROOT,
                    UNBOUNDED = _MDCRippleFoundation$2.UNBOUNDED;
                requestAnimationFrame(function () {
                  _this3.adapter_.removeClass(ROOT);

                  _this3.adapter_.removeClass(UNBOUNDED);

                  _this3.removeCssVars_();
                });
              }

              this.deregisterRootHandlers_();
              this.deregisterDeactivationHandlers_();
            }
            /**
             * @param {boolean} supportsPressRipple Passed from init to save a redundant function call
             * @private
             */

          }, {
            key: 'registerRootHandlers_',
            value: function registerRootHandlers_(supportsPressRipple) {
              var _this4 = this;

              if (supportsPressRipple) {
                ACTIVATION_EVENT_TYPES.forEach(function (type) {
                  _this4.adapter_.registerInteractionHandler(type, _this4.activateHandler_);
                });

                if (this.adapter_.isUnbounded()) {
                  this.adapter_.registerResizeHandler(this.resizeHandler_);
                }
              }

              this.adapter_.registerInteractionHandler('focus', this.focusHandler_);
              this.adapter_.registerInteractionHandler('blur', this.blurHandler_);
            }
            /**
             * @param {!Event} e
             * @private
             */

          }, {
            key: 'registerDeactivationHandlers_',
            value: function registerDeactivationHandlers_(e) {
              var _this5 = this;

              if (e.type === 'keydown') {
                this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);
              } else {
                POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
                  _this5.adapter_.registerDocumentInteractionHandler(type, _this5.deactivateHandler_);
                });
              }
            }
            /** @private */

          }, {
            key: 'deregisterRootHandlers_',
            value: function deregisterRootHandlers_() {
              var _this6 = this;

              ACTIVATION_EVENT_TYPES.forEach(function (type) {
                _this6.adapter_.deregisterInteractionHandler(type, _this6.activateHandler_);
              });
              this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);
              this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);

              if (this.adapter_.isUnbounded()) {
                this.adapter_.deregisterResizeHandler(this.resizeHandler_);
              }
            }
            /** @private */

          }, {
            key: 'deregisterDeactivationHandlers_',
            value: function deregisterDeactivationHandlers_() {
              var _this7 = this;

              this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);
              POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
                _this7.adapter_.deregisterDocumentInteractionHandler(type, _this7.deactivateHandler_);
              });
            }
            /** @private */

          }, {
            key: 'removeCssVars_',
            value: function removeCssVars_() {
              var _this8 = this;

              var strings = MDCRippleFoundation.strings;
              Object.keys(strings).forEach(function (k) {
                if (k.indexOf('VAR_') === 0) {
                  _this8.adapter_.updateCssVariable(strings[k], null);
                }
              });
            }
            /**
             * @param {!Event=} e
             * @private
             */

          }, {
            key: 'activate_',
            value: function activate_(e) {
              var _this9 = this;

              if (this.adapter_.isSurfaceDisabled()) {
                return;
              }

              var activationState = this.activationState_;

              if (activationState.isActivated) {
                return;
              } // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction


              var previousActivationEvent = this.previousActivationEvent_;
              var isSameInteraction = previousActivationEvent && e !== undefined && previousActivationEvent.type !== e.type;

              if (isSameInteraction) {
                return;
              }

              activationState.isActivated = true;
              activationState.isProgrammatic = e === undefined;
              activationState.activationEvent = e;
              activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e !== undefined && (e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown');
              var hasActivatedChild = e !== undefined && activatedTargets.length > 0 && activatedTargets.some(function (target) {
                return _this9.adapter_.containsEventTarget(target);
              });

              if (hasActivatedChild) {
                // Immediately reset activation state, while preserving logic that prevents touch follow-on events
                this.resetActivationState_();
                return;
              }

              if (e !== undefined) {
                activatedTargets.push(
                /** @type {!EventTarget} */
                e.target);
                this.registerDeactivationHandlers_(e);
              }

              activationState.wasElementMadeActive = this.checkElementMadeActive_(e);

              if (activationState.wasElementMadeActive) {
                this.animateActivation_();
              }

              requestAnimationFrame(function () {
                // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples
                activatedTargets = [];

                if (!activationState.wasElementMadeActive && e !== undefined && (e.key === ' ' || e.keyCode === 32)) {
                  // If space was pressed, try again within an rAF call to detect :active, because different UAs report
                  // active states inconsistently when they're called within event handling code:
                  // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971
                  // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741
                  // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS
                  // variable is set within a rAF callback for a submit button interaction (#2241).
                  activationState.wasElementMadeActive = _this9.checkElementMadeActive_(e);

                  if (activationState.wasElementMadeActive) {
                    _this9.animateActivation_();
                  }
                }

                if (!activationState.wasElementMadeActive) {
                  // Reset activation state immediately if element was not made active.
                  _this9.activationState_ = _this9.defaultActivationState_();
                }
              });
            }
            /**
             * @param {!Event=} e
             * @private
             */

          }, {
            key: 'checkElementMadeActive_',
            value: function checkElementMadeActive_(e) {
              return e !== undefined && e.type === 'keydown' ? this.adapter_.isSurfaceActive() : true;
            }
            /**
             * @param {!Event=} event Optional event containing position information.
             */

          }, {
            key: 'activate',
            value: function activate(event) {
              this.activate_(event);
            }
            /** @private */

          }, {
            key: 'animateActivation_',
            value: function animateActivation_() {
              var _this10 = this;

              var _MDCRippleFoundation$3 = MDCRippleFoundation.strings,
                  VAR_FG_TRANSLATE_START = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_START,
                  VAR_FG_TRANSLATE_END = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_END;
              var _MDCRippleFoundation$4 = MDCRippleFoundation.cssClasses,
                  FG_DEACTIVATION = _MDCRippleFoundation$4.FG_DEACTIVATION,
                  FG_ACTIVATION = _MDCRippleFoundation$4.FG_ACTIVATION;
              var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;
              this.layoutInternal_();
              var translateStart = '';
              var translateEnd = '';

              if (!this.adapter_.isUnbounded()) {
                var _getFgTranslationCoor = this.getFgTranslationCoordinates_(),
                    startPoint = _getFgTranslationCoor.startPoint,
                    endPoint = _getFgTranslationCoor.endPoint;

                translateStart = startPoint.x + 'px, ' + startPoint.y + 'px';
                translateEnd = endPoint.x + 'px, ' + endPoint.y + 'px';
              }

              this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);
              this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd); // Cancel any ongoing activation/deactivation animations

              clearTimeout(this.activationTimer_);
              clearTimeout(this.fgDeactivationRemovalTimer_);
              this.rmBoundedActivationClasses_();
              this.adapter_.removeClass(FG_DEACTIVATION); // Force layout in order to re-trigger the animation.

              this.adapter_.computeBoundingRect();
              this.adapter_.addClass(FG_ACTIVATION);
              this.activationTimer_ = setTimeout(function () {
                return _this10.activationTimerCallback_();
              }, DEACTIVATION_TIMEOUT_MS);
            }
            /**
             * @private
             * @return {{startPoint: PointType, endPoint: PointType}}
             */

          }, {
            key: 'getFgTranslationCoordinates_',
            value: function getFgTranslationCoordinates_() {
              var _activationState_ = this.activationState_,
                  activationEvent = _activationState_.activationEvent,
                  wasActivatedByPointer = _activationState_.wasActivatedByPointer;
              var startPoint = void 0;

              if (wasActivatedByPointer) {
                startPoint = Object(__WEBPACK_IMPORTED_MODULE_3__util__["getNormalizedEventCoords"])(
                /** @type {!Event} */
                activationEvent, this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect());
              } else {
                startPoint = {
                  x: this.frame_.width / 2,
                  y: this.frame_.height / 2
                };
              } // Center the element around the start point.


              startPoint = {
                x: startPoint.x - this.initialSize_ / 2,
                y: startPoint.y - this.initialSize_ / 2
              };
              var endPoint = {
                x: this.frame_.width / 2 - this.initialSize_ / 2,
                y: this.frame_.height / 2 - this.initialSize_ / 2
              };
              return {
                startPoint: startPoint,
                endPoint: endPoint
              };
            }
            /** @private */

          }, {
            key: 'runDeactivationUXLogicIfReady_',
            value: function runDeactivationUXLogicIfReady_() {
              var _this11 = this; // This method is called both when a pointing device is released, and when the activation animation ends.
              // The deactivation animation should only run after both of those occur.


              var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;
              var _activationState_2 = this.activationState_,
                  hasDeactivationUXRun = _activationState_2.hasDeactivationUXRun,
                  isActivated = _activationState_2.isActivated;
              var activationHasEnded = hasDeactivationUXRun || !isActivated;

              if (activationHasEnded && this.activationAnimationHasEnded_) {
                this.rmBoundedActivationClasses_();
                this.adapter_.addClass(FG_DEACTIVATION);
                this.fgDeactivationRemovalTimer_ = setTimeout(function () {
                  _this11.adapter_.removeClass(FG_DEACTIVATION);
                }, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
                /* numbers */
                ].FG_DEACTIVATION_MS);
              }
            }
            /** @private */

          }, {
            key: 'rmBoundedActivationClasses_',
            value: function rmBoundedActivationClasses_() {
              var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;
              this.adapter_.removeClass(FG_ACTIVATION);
              this.activationAnimationHasEnded_ = false;
              this.adapter_.computeBoundingRect();
            }
          }, {
            key: 'resetActivationState_',
            value: function resetActivationState_() {
              var _this12 = this;

              this.previousActivationEvent_ = this.activationState_.activationEvent;
              this.activationState_ = this.defaultActivationState_(); // Touch devices may fire additional events for the same interaction within a short time.
              // Store the previous event until it's safe to assume that subsequent events are for new interactions.

              setTimeout(function () {
                return _this12.previousActivationEvent_ = undefined;
              }, MDCRippleFoundation.numbers.TAP_DELAY_MS);
            }
            /**
             * @private
             */

          }, {
            key: 'deactivate_',
            value: function deactivate_() {
              var _this13 = this;

              var activationState = this.activationState_; // This can happen in scenarios such as when you have a keyup event that blurs the element.

              if (!activationState.isActivated) {
                return;
              }

              var state =
              /** @type {!ActivationStateType} */
              _extends({}, activationState);

              if (activationState.isProgrammatic) {
                requestAnimationFrame(function () {
                  return _this13.animateDeactivation_(state);
                });
                this.resetActivationState_();
              } else {
                this.deregisterDeactivationHandlers_();
                requestAnimationFrame(function () {
                  _this13.activationState_.hasDeactivationUXRun = true;

                  _this13.animateDeactivation_(state);

                  _this13.resetActivationState_();
                });
              }
            }
          }, {
            key: 'deactivate',
            value: function deactivate() {
              this.deactivate_();
            }
            /**
             * @param {!ActivationStateType} options
             * @private
             */

          }, {
            key: 'animateDeactivation_',
            value: function animateDeactivation_(_ref) {
              var wasActivatedByPointer = _ref.wasActivatedByPointer,
                  wasElementMadeActive = _ref.wasElementMadeActive;

              if (wasActivatedByPointer || wasElementMadeActive) {
                this.runDeactivationUXLogicIfReady_();
              }
            }
          }, {
            key: 'layout',
            value: function layout() {
              var _this14 = this;

              if (this.layoutFrame_) {
                cancelAnimationFrame(this.layoutFrame_);
              }

              this.layoutFrame_ = requestAnimationFrame(function () {
                _this14.layoutInternal_();

                _this14.layoutFrame_ = 0;
              });
            }
            /** @private */

          }, {
            key: 'layoutInternal_',
            value: function layoutInternal_() {
              var _this15 = this;

              this.frame_ = this.adapter_.computeBoundingRect();
              var maxDim = Math.max(this.frame_.height, this.frame_.width); // Surface diameter is treated differently for unbounded vs. bounded ripples.
              // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately
              // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically
              // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter
              // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via
              // `overflow: hidden`.

              var getBoundedRadius = function getBoundedRadius() {
                var hypotenuse = Math.sqrt(Math.pow(_this15.frame_.width, 2) + Math.pow(_this15.frame_.height, 2));
                return hypotenuse + MDCRippleFoundation.numbers.PADDING;
              };

              this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius(); // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform

              this.initialSize_ = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);
              this.fgScale_ = this.maxRadius_ / this.initialSize_;
              this.updateLayoutCssVars_();
            }
            /** @private */

          }, {
            key: 'updateLayoutCssVars_',
            value: function updateLayoutCssVars_() {
              var _MDCRippleFoundation$5 = MDCRippleFoundation.strings,
                  VAR_FG_SIZE = _MDCRippleFoundation$5.VAR_FG_SIZE,
                  VAR_LEFT = _MDCRippleFoundation$5.VAR_LEFT,
                  VAR_TOP = _MDCRippleFoundation$5.VAR_TOP,
                  VAR_FG_SCALE = _MDCRippleFoundation$5.VAR_FG_SCALE;
              this.adapter_.updateCssVariable(VAR_FG_SIZE, this.initialSize_ + 'px');
              this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);

              if (this.adapter_.isUnbounded()) {
                this.unboundedCoords_ = {
                  left: Math.round(this.frame_.width / 2 - this.initialSize_ / 2),
                  top: Math.round(this.frame_.height / 2 - this.initialSize_ / 2)
                };
                this.adapter_.updateCssVariable(VAR_LEFT, this.unboundedCoords_.left + 'px');
                this.adapter_.updateCssVariable(VAR_TOP, this.unboundedCoords_.top + 'px');
              }
            }
            /** @param {boolean} unbounded */

          }, {
            key: 'setUnbounded',
            value: function setUnbounded(unbounded) {
              var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;

              if (unbounded) {
                this.adapter_.addClass(UNBOUNDED);
              } else {
                this.adapter_.removeClass(UNBOUNDED);
              }
            }
          }, {
            key: 'handleFocus',
            value: function handleFocus() {
              var _this16 = this;

              requestAnimationFrame(function () {
                return _this16.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
              });
            }
          }, {
            key: 'handleBlur',
            value: function handleBlur() {
              var _this17 = this;

              requestAnimationFrame(function () {
                return _this17.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
              });
            }
          }]);

          return MDCRippleFoundation;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
        /* default */
        ]);
        /* harmony default export */


        __webpack_exports__["a"] = MDCRippleFoundation;
        /***/
      },

      /***/
      6:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "a", function () {
          return cssClasses;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "c", function () {
          return strings;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "b", function () {
          return numbers;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */


        var cssClasses = {
          // Ripple is a special case where the "root" component is really a "mixin" of sorts,
          // given that it's an 'upgrade' to an existing component. That being said it is the root
          // CSS class that all other CSS classes derive from.
          ROOT: 'mdc-ripple-upgraded',
          UNBOUNDED: 'mdc-ripple-upgraded--unbounded',
          BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',
          FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',
          FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation'
        };
        var strings = {
          VAR_LEFT: '--mdc-ripple-left',
          VAR_TOP: '--mdc-ripple-top',
          VAR_FG_SIZE: '--mdc-ripple-fg-size',
          VAR_FG_SCALE: '--mdc-ripple-fg-scale',
          VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',
          VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end'
        };
        var numbers = {
          PADDING: 10,
          INITIAL_ORIGIN_SCALE: 0.6,
          DEACTIVATION_TIMEOUT_MS: 225,
          // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)
          FG_DEACTIVATION_MS: 150,
          // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)
          TAP_DELAY_MS: 300
        };
        /***/
      },

      /***/
      7:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "MDCSelectionControlState", function () {
          return MDCSelectionControlState;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCSelectionControl", function () {
          return MDCSelectionControl;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_ripple_index__ = __webpack_require__(4);

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint-disable no-unused-vars */

        /* eslint-enable no-unused-vars */

        /**
         * @typedef {{
         *   checked: boolean,
         *   indeterminate: boolean,
         *   disabled: boolean,
         *   value: ?string
         * }}
         */


        var MDCSelectionControlState = void 0;
        /**
         * @record
         */

        var MDCSelectionControl = function () {
          function MDCSelectionControl() {
            _classCallCheck(this, MDCSelectionControl);
          }

          _createClass(MDCSelectionControl, [{
            key: 'ripple',

            /** @return {?MDCRipple} */
            get: function get() {}
          }]);

          return MDCSelectionControl;
        }();
        /***/

      }
      /******/

    })
  );
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/@material/list/dist/mdc.list.js":
/*!******************************************************!*\
  !*** ./node_modules/@material/list/dist/mdc.list.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 Material Components for the Web
 Copyright (c) 2019 Google Inc.
 License: MIT
*/
(function webpackUniversalModuleDefinition(root, factory) {
  if (( false ? undefined : _typeof(exports)) === 'object' && ( false ? undefined : _typeof(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}
})(this, function () {
  return (
    /******/
    function (modules) {
      // webpackBootstrap

      /******/
      // The module cache

      /******/
      var installedModules = {};
      /******/

      /******/
      // The require function

      /******/

      function __webpack_require__(moduleId) {
        /******/

        /******/
        // Check if module is in cache

        /******/
        if (installedModules[moduleId]) {
          /******/
          return installedModules[moduleId].exports;
          /******/
        }
        /******/
        // Create a new module (and put it into the cache)

        /******/


        var module = installedModules[moduleId] = {
          /******/
          i: moduleId,

          /******/
          l: false,

          /******/
          exports: {}
          /******/

        };
        /******/

        /******/
        // Execute the module function

        /******/

        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/

        /******/
        // Flag the module as loaded

        /******/

        module.l = true;
        /******/

        /******/
        // Return the exports of the module

        /******/

        return module.exports;
        /******/
      }
      /******/

      /******/

      /******/
      // expose the modules object (__webpack_modules__)

      /******/


      __webpack_require__.m = modules;
      /******/

      /******/
      // expose the module cache

      /******/

      __webpack_require__.c = installedModules;
      /******/

      /******/
      // define getter function for harmony exports

      /******/

      __webpack_require__.d = function (exports, name, getter) {
        /******/
        if (!__webpack_require__.o(exports, name)) {
          /******/
          Object.defineProperty(exports, name, {
            /******/
            configurable: false,

            /******/
            enumerable: true,

            /******/
            get: getter
            /******/

          });
          /******/
        }
        /******/

      };
      /******/

      /******/
      // getDefaultExport function for compatibility with non-harmony modules

      /******/


      __webpack_require__.n = function (module) {
        /******/
        var getter = module && module.__esModule ?
        /******/
        function getDefault() {
          return module['default'];
        } :
        /******/
        function getModuleExports() {
          return module;
        };
        /******/

        __webpack_require__.d(getter, 'a', getter);
        /******/


        return getter;
        /******/
      };
      /******/

      /******/
      // Object.prototype.hasOwnProperty.call

      /******/


      __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      /******/

      /******/
      // __webpack_public_path__

      /******/


      __webpack_require__.p = "";
      /******/

      /******/
      // Load entry module and return exports

      /******/

      return __webpack_require__(__webpack_require__.s = 25);
      /******/
    }(
    /************************************************************************/

    /******/
    {
      /***/
      0:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @template A
         */


        var MDCFoundation = function () {
          _createClass(MDCFoundation, null, [{
            key: "cssClasses",

            /** @return enum{cssClasses} */
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports every
              // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}
              return {};
            }
            /** @return enum{strings} */

          }, {
            key: "strings",
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports all
              // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}
              return {};
            }
            /** @return enum{numbers} */

          }, {
            key: "numbers",
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports all
              // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}
              return {};
            }
            /** @return {!Object} */

          }, {
            key: "defaultAdapter",
            get: function get() {
              // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient
              // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter
              // validation.
              return {};
            }
            /**
             * @param {A=} adapter
             */

          }]);

          function MDCFoundation() {
            var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

            _classCallCheck(this, MDCFoundation);
            /** @protected {!A} */


            this.adapter_ = adapter;
          }

          _createClass(MDCFoundation, [{
            key: "init",
            value: function init() {// Subclasses should override this method to perform initialization routines (registering events, etc.)
            }
          }, {
            key: "destroy",
            value: function destroy() {// Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)
            }
          }]);

          return MDCFoundation;
        }();
        /* harmony default export */


        __webpack_exports__["a"] = MDCFoundation;
        /***/
      },

      /***/
      1:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0);

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @template F
         */


        var MDCComponent = function () {
          _createClass(MDCComponent, null, [{
            key: 'attachTo',

            /**
             * @param {!Element} root
             * @return {!MDCComponent}
             */
            value: function attachTo(root) {
              // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and
              // returns an instantiated component with its root set to that element. Also note that in the cases of
              // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized
              // from getDefaultFoundation().
              return new MDCComponent(root, new __WEBPACK_IMPORTED_MODULE_0__foundation__["a"
              /* default */
              ]());
            }
            /**
             * @param {!Element} root
             * @param {F=} foundation
             * @param {...?} args
             */

          }]);

          function MDCComponent(root) {
            var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

            _classCallCheck(this, MDCComponent);
            /** @protected {!Element} */


            this.root_ = root;

            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              args[_key - 2] = arguments[_key];
            }

            this.initialize.apply(this, args); // Note that we initialize foundation here and not within the constructor's default param so that
            // this.root_ is defined and can be used within the foundation class.

            /** @protected {!F} */

            this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;
            this.foundation_.init();
            this.initialSyncWithDOM();
          }

          _createClass(MDCComponent, [{
            key: 'initialize',
            value: function initialize()
            /* ...args */
            {} // Subclasses can override this to do any additional setup work that would be considered part of a
            // "constructor". Essentially, it is a hook into the parent constructor before the foundation is
            // initialized. Any additional arguments besides root and foundation will be passed in here.

            /**
             * @return {!F} foundation
             */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              // Subclasses must override this method to return a properly configured foundation class for the
              // component.
              throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');
            }
          }, {
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {// Subclasses should override this method if they need to perform work to synchronize with a host DOM
              // object. An example of this would be a form control wrapper that needs to synchronize its internal state
              // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM
              // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.
            }
          }, {
            key: 'destroy',
            value: function destroy() {
              // Subclasses may implement this method to release any resources / deregister any listeners they have
              // attached. An example of this might be deregistering a resize event from the window object.
              this.foundation_.destroy();
            }
            /**
             * Wrapper method to add an event listener to the component's root element. This is most useful when
             * listening for custom events.
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: 'listen',
            value: function listen(evtType, handler) {
              this.root_.addEventListener(evtType, handler);
            }
            /**
             * Wrapper method to remove an event listener to the component's root element. This is most useful when
             * unlistening for custom events.
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: 'unlisten',
            value: function unlisten(evtType, handler) {
              this.root_.removeEventListener(evtType, handler);
            }
            /**
             * Fires a cross-browser-compatible custom event from the component root of the given type,
             * with the given data.
             * @param {string} evtType
             * @param {!Object} evtData
             * @param {boolean=} shouldBubble
             */

          }, {
            key: 'emit',
            value: function emit(evtType, evtData) {
              var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
              var evt = void 0;

              if (typeof CustomEvent === 'function') {
                evt = new CustomEvent(evtType, {
                  detail: evtData,
                  bubbles: shouldBubble
                });
              } else {
                evt = document.createEvent('CustomEvent');
                evt.initCustomEvent(evtType, shouldBubble, false, evtData);
              }

              this.root_.dispatchEvent(evt);
            }
          }]);

          return MDCComponent;
        }();
        /* harmony default export */


        __webpack_exports__["a"] = MDCComponent;
        /***/
      },

      /***/
      10:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2018 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint no-unused-vars: [2, {"args": "none"}] */

        /**
         * Adapter for MDC List. Provides an interface for managing focus.
         *
         * Additionally, provides type information for the adapter to the Closure
         * compiler.
         *
         * Implement this adapter for your framework of choice to delegate updates to
         * the component in your framework of choice. See architecture documentation
         * for more details.
         * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
         *
         * @record
         */


        var MDCListAdapter = function () {
          function MDCListAdapter() {
            _classCallCheck(this, MDCListAdapter);
          }

          _createClass(MDCListAdapter, [{
            key: "getListItemCount",

            /** @return {number} */
            value: function getListItemCount() {}
            /**
             * @return {number} */

          }, {
            key: "getFocusedElementIndex",
            value: function getFocusedElementIndex() {}
            /**
             * @param {number} index
             * @param {string} attribute
             * @param {string} value
             */

          }, {
            key: "setAttributeForElementIndex",
            value: function setAttributeForElementIndex(index, attribute, value) {}
            /**
             * @param {number} index
             * @param {string} attribute
             */

          }, {
            key: "removeAttributeForElementIndex",
            value: function removeAttributeForElementIndex(index, attribute) {}
            /**
             * @param {number} index
             * @param {string} className
             */

          }, {
            key: "addClassForElementIndex",
            value: function addClassForElementIndex(index, className) {}
            /**
             * @param {number} index
             * @param {string} className
             */

          }, {
            key: "removeClassForElementIndex",
            value: function removeClassForElementIndex(index, className) {}
            /**
             * Focuses list item at the index specified.
             * @param {number} index
             */

          }, {
            key: "focusItemAtIndex",
            value: function focusItemAtIndex(index) {}
            /**
             * Sets the tabindex to the value specified for all button/a element children of
             * the list item at the index specified.
             * @param {number} listItemIndex
             * @param {number} tabIndexValue
             */

          }, {
            key: "setTabIndexForListItemChildren",
            value: function setTabIndexForListItemChildren(listItemIndex, tabIndexValue) {}
            /**
             * If the given element has an href, follows the link.
             * @param {!Element} ele
             */

          }, {
            key: "followHref",
            value: function followHref(ele) {}
            /**
             * @param {number} index
             * @return {boolean} Returns true if radio button is present at given list item index.
             */

          }, {
            key: "hasRadioAtIndex",
            value: function hasRadioAtIndex(index) {}
            /**
             * @param {number} index
             * @return {boolean} Returns true if checkbox is present at given list item index.
             */

          }, {
            key: "hasCheckboxAtIndex",
            value: function hasCheckboxAtIndex(index) {}
            /**
             * @param {number} index
             * @return {boolean} Returns true if checkbox inside a list item is checked.
             */

          }, {
            key: "isCheckboxCheckedAtIndex",
            value: function isCheckboxCheckedAtIndex(index) {}
            /**
             * Sets the checked status of checkbox or radio at given list item index.
             * @param {number} index
             * @param {boolean} isChecked
             */

          }, {
            key: "setCheckedCheckboxOrRadioAtIndex",
            value: function setCheckedCheckboxOrRadioAtIndex(index, isChecked) {}
            /**
             * @return {boolean} Returns true when the current focused element is inside list root.
             */

          }, {
            key: "isFocusInsideList",
            value: function isFocusInsideList() {}
          }]);

          return MDCListAdapter;
        }();
        /* unused harmony default export */


        var _unused_webpack_default_export = MDCListAdapter;
        /***/
      },

      /***/
      11:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "b", function () {
          return strings;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "a", function () {
          return cssClasses;
        });
        /* unused harmony export Index */

        /**
         * @license
         * Copyright 2018 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /** @enum {string} */


        var cssClasses = {
          ROOT: 'mdc-list',
          LIST_ITEM_CLASS: 'mdc-list-item',
          LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',
          LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated'
        };
        /** @enum {string} */

        var strings = {
          ARIA_ORIENTATION: 'aria-orientation',
          ARIA_ORIENTATION_HORIZONTAL: 'horizontal',
          ARIA_SELECTED: 'aria-selected',
          ARIA_CHECKED: 'aria-checked',
          ARIA_CHECKED_RADIO_SELECTOR: '[role="radio"][aria-checked="true"]',
          ARIA_ROLE_CHECKBOX_SELECTOR: '[role="checkbox"]',
          ARIA_CHECKED_CHECKBOX_SELECTOR: '[role="checkbox"][aria-checked="true"]',
          RADIO_SELECTOR: 'input[type="radio"]:not(:disabled)',
          CHECKBOX_SELECTOR: 'input[type="checkbox"]:not(:disabled)',
          CHECKBOX_RADIO_SELECTOR: 'input[type="checkbox"]:not(:disabled), input[type="radio"]:not(:disabled)',
          CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: '.' + cssClasses.LIST_ITEM_CLASS + ' button:not(:disabled),\n  .' + cssClasses.LIST_ITEM_CLASS + ' a',
          FOCUSABLE_CHILD_ELEMENTS: '.' + cssClasses.LIST_ITEM_CLASS + ' button:not(:disabled), .' + cssClasses.LIST_ITEM_CLASS + ' a,\n  .' + cssClasses.LIST_ITEM_CLASS + ' input[type="radio"]:not(:disabled),\n  .' + cssClasses.LIST_ITEM_CLASS + ' input[type="checkbox"]:not(:disabled)',
          ENABLED_ITEMS_SELECTOR: '.mdc-list-item:not(.mdc-list-item--disabled)'
        };
        /** @typedef {number|!Array<number>} */

        var Index = void 0;
        /***/
      },

      /***/
      15:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(10);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(11);

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2018 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */
        // eslint-disable-line no-unused-vars


        var ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];

        var MDCListFoundation = function (_MDCFoundation) {
          _inherits(MDCListFoundation, _MDCFoundation);

          _createClass(MDCListFoundation, null, [{
            key: 'strings',

            /** @return enum {string} */
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ];
            }
            /** @return enum {string} */

          }, {
            key: 'cssClasses',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ];
            }
            /**
             * {@see MDCListAdapter} for typing information on parameters and return
             * types.
             * @return {!MDCListAdapter}
             */

          }, {
            key: 'defaultAdapter',
            get: function get() {
              return (
                /** @type {!MDCListAdapter} */
                {
                  getListItemCount: function getListItemCount() {},
                  getFocusedElementIndex: function getFocusedElementIndex() {},
                  setAttributeForElementIndex: function setAttributeForElementIndex() {},
                  removeAttributeForElementIndex: function removeAttributeForElementIndex() {},
                  addClassForElementIndex: function addClassForElementIndex() {},
                  removeClassForElementIndex: function removeClassForElementIndex() {},
                  focusItemAtIndex: function focusItemAtIndex() {},
                  setTabIndexForListItemChildren: function setTabIndexForListItemChildren() {},
                  followHref: function followHref() {},
                  hasRadioAtIndex: function hasRadioAtIndex() {},
                  hasCheckboxAtIndex: function hasCheckboxAtIndex() {},
                  isCheckboxCheckedAtIndex: function isCheckboxCheckedAtIndex() {},
                  setCheckedCheckboxOrRadioAtIndex: function setCheckedCheckboxOrRadioAtIndex() {},
                  isFocusInsideList: function isFocusInsideList() {}
                }
              );
            }
            /**
             * @param {!MDCListAdapter=} adapter
             */

          }]);

          function MDCListFoundation(adapter) {
            _classCallCheck(this, MDCListFoundation);
            /** @private {boolean} */


            var _this = _possibleConstructorReturn(this, (MDCListFoundation.__proto__ || Object.getPrototypeOf(MDCListFoundation)).call(this, _extends(MDCListFoundation.defaultAdapter, adapter)));

            _this.wrapFocus_ = false;
            /** @private {boolean} */

            _this.isVertical_ = true;
            /** @private {boolean} */

            _this.isSingleSelectionList_ = false;
            /** @private {!Index} */

            _this.selectedIndex_ = -1;
            /** @private {number} */

            _this.focusedItemIndex_ = -1;
            /** @private {boolean} */

            _this.useActivatedClass_ = false;
            /** @private {boolean} */

            _this.isCheckboxList_ = false;
            /** @private {boolean} */

            _this.isRadioList_ = false;
            return _this;
          }

          _createClass(MDCListFoundation, [{
            key: 'layout',
            value: function layout() {
              if (this.adapter_.getListItemCount() === 0) return;

              if (this.adapter_.hasCheckboxAtIndex(0)) {
                this.isCheckboxList_ = true;
              } else if (this.adapter_.hasRadioAtIndex(0)) {
                this.isRadioList_ = true;
              }
            }
            /**
             * Sets the private wrapFocus_ variable.
             * @param {boolean} value
             */

          }, {
            key: 'setWrapFocus',
            value: function setWrapFocus(value) {
              this.wrapFocus_ = value;
            }
            /**
             * Sets the isVertical_ private variable.
             * @param {boolean} value
             */

          }, {
            key: 'setVerticalOrientation',
            value: function setVerticalOrientation(value) {
              this.isVertical_ = value;
            }
            /**
             * Sets the isSingleSelectionList_ private variable.
             * @param {boolean} value
             */

          }, {
            key: 'setSingleSelection',
            value: function setSingleSelection(value) {
              this.isSingleSelectionList_ = value;
            }
            /**
             * Sets the useActivatedClass_ private variable.
             * @param {boolean} useActivated
             */

          }, {
            key: 'setUseActivatedClass',
            value: function setUseActivatedClass(useActivated) {
              this.useActivatedClass_ = useActivated;
            }
            /** @return {!Index} */

          }, {
            key: 'getSelectedIndex',
            value: function getSelectedIndex() {
              return this.selectedIndex_;
            }
            /** @param {!Index} index */

          }, {
            key: 'setSelectedIndex',
            value: function setSelectedIndex(index) {
              if (!this.isIndexValid_(index)) return;

              if (this.isCheckboxList_) {
                this.setCheckboxAtIndex_(
                /** @type {!Array<number>} */
                index);
              } else if (this.isRadioList_) {
                this.setRadioAtIndex_(
                /** @type {number} */
                index);
              } else {
                this.setSingleSelectionAtIndex_(
                /** @type {number} */
                index);
              }
            }
            /**
             * Focus in handler for the list items.
             * @param evt
             * @param {number} listItemIndex
             */

          }, {
            key: 'handleFocusIn',
            value: function handleFocusIn(evt, listItemIndex) {
              if (listItemIndex >= 0) {
                this.adapter_.setTabIndexForListItemChildren(listItemIndex, 0);
              }
            }
            /**
             * Focus out handler for the list items.
             * @param {Event} evt
             * @param {number} listItemIndex
             */

          }, {
            key: 'handleFocusOut',
            value: function handleFocusOut(evt, listItemIndex) {
              var _this2 = this;

              if (listItemIndex >= 0) {
                this.adapter_.setTabIndexForListItemChildren(listItemIndex, -1);
              }
              /**
               * Between Focusout & Focusin some browsers do not have focus on any element. Setting a delay to wait till the focus
               * is moved to next element.
               */


              setTimeout(function () {
                if (!_this2.adapter_.isFocusInsideList()) {
                  _this2.setTabindexToFirstSelectedItem_();
                }
              }, 0);
            }
            /**
             * Key handler for the list.
             * @param {Event} evt
             * @param {boolean} isRootListItem
             * @param {number} listItemIndex
             */

          }, {
            key: 'handleKeydown',
            value: function handleKeydown(evt, isRootListItem, listItemIndex) {
              var arrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;
              var arrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;
              var arrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;
              var arrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;
              var isHome = evt.key === 'Home' || evt.keyCode === 36;
              var isEnd = evt.key === 'End' || evt.keyCode === 35;
              var isEnter = evt.key === 'Enter' || evt.keyCode === 13;
              var isSpace = evt.key === 'Space' || evt.keyCode === 32;
              var currentIndex = this.adapter_.getFocusedElementIndex();
              var nextIndex = -1;

              if (currentIndex === -1) {
                currentIndex = listItemIndex;

                if (currentIndex < 0) {
                  // If this event doesn't have a mdc-list-item ancestor from the
                  // current list (not from a sublist), return early.
                  return;
                }
              }

              if (this.isVertical_ && arrowDown || !this.isVertical_ && arrowRight) {
                this.preventDefaultEvent_(evt);
                nextIndex = this.focusNextElement(currentIndex);
              } else if (this.isVertical_ && arrowUp || !this.isVertical_ && arrowLeft) {
                this.preventDefaultEvent_(evt);
                nextIndex = this.focusPrevElement(currentIndex);
              } else if (isHome) {
                this.preventDefaultEvent_(evt);
                nextIndex = this.focusFirstElement();
              } else if (isEnd) {
                this.preventDefaultEvent_(evt);
                nextIndex = this.focusLastElement();
              } else if (isEnter || isSpace) {
                if (isRootListItem) {
                  if (this.isSelectableList_()) {
                    this.setSelectedIndexOnAction_(currentIndex);
                    this.preventDefaultEvent_(evt);
                  } // Explicitly activate links, since we're preventing default on Enter, and Space doesn't activate them.


                  this.adapter_.followHref(currentIndex);
                }
              }

              this.focusedItemIndex_ = currentIndex;

              if (nextIndex >= 0) {
                this.setTabindexAtIndex_(nextIndex);
                this.focusedItemIndex_ = nextIndex;
              }
            }
            /**
             * Click handler for the list.
             * @param {number} index
             * @param {boolean} toggleCheckbox
             */

          }, {
            key: 'handleClick',
            value: function handleClick(index, toggleCheckbox) {
              if (index === -1) return;

              if (this.isSelectableList_()) {
                this.setSelectedIndexOnAction_(index, toggleCheckbox);
              }

              this.setTabindexAtIndex_(index);
              this.focusedItemIndex_ = index;
            }
            /**
             * Ensures that preventDefault is only called if the containing element doesn't
             * consume the event, and it will cause an unintended scroll.
             * @param {Event} evt
             * @private
             */

          }, {
            key: 'preventDefaultEvent_',
            value: function preventDefaultEvent_(evt) {
              var tagName = ('' + evt.target.tagName).toLowerCase();

              if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {
                evt.preventDefault();
              }
            }
            /**
             * Focuses the next element on the list.
             * @param {number} index
             * @return {number}
             */

          }, {
            key: 'focusNextElement',
            value: function focusNextElement(index) {
              var count = this.adapter_.getListItemCount();
              var nextIndex = index + 1;

              if (nextIndex >= count) {
                if (this.wrapFocus_) {
                  nextIndex = 0;
                } else {
                  // Return early because last item is already focused.
                  return index;
                }
              }

              this.adapter_.focusItemAtIndex(nextIndex);
              return nextIndex;
            }
            /**
             * Focuses the previous element on the list.
             * @param {number} index
             * @return {number}
             */

          }, {
            key: 'focusPrevElement',
            value: function focusPrevElement(index) {
              var prevIndex = index - 1;

              if (prevIndex < 0) {
                if (this.wrapFocus_) {
                  prevIndex = this.adapter_.getListItemCount() - 1;
                } else {
                  // Return early because first item is already focused.
                  return index;
                }
              }

              this.adapter_.focusItemAtIndex(prevIndex);
              return prevIndex;
            }
            /**
             * @return {number}
             */

          }, {
            key: 'focusFirstElement',
            value: function focusFirstElement() {
              this.adapter_.focusItemAtIndex(0);
              return 0;
            }
            /**
             * @return {number}
             */

          }, {
            key: 'focusLastElement',
            value: function focusLastElement() {
              var lastIndex = this.adapter_.getListItemCount() - 1;
              this.adapter_.focusItemAtIndex(lastIndex);
              return lastIndex;
            }
            /**
             * @param {number} index
             * @private
             */

          }, {
            key: 'setSingleSelectionAtIndex_',
            value: function setSingleSelectionAtIndex_(index) {
              var selectedClassName = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].LIST_ITEM_SELECTED_CLASS;

              if (this.useActivatedClass_) {
                selectedClassName = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].LIST_ITEM_ACTIVATED_CLASS;
              }

              if (this.selectedIndex_ >= 0 && this.selectedIndex_ !== index) {
                this.adapter_.removeClassForElementIndex(this.selectedIndex_, selectedClassName);
                this.adapter_.setAttributeForElementIndex(this.selectedIndex_, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
                /* strings */
                ].ARIA_SELECTED, 'false');
              }

              this.adapter_.addClassForElementIndex(index, selectedClassName);
              this.adapter_.setAttributeForElementIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ARIA_SELECTED, 'true');
              this.selectedIndex_ = index;
            }
            /**
             * Toggles radio at give index. Radio doesn't change the checked state if it is already checked.
             * @param {number} index
             * @private
             */

          }, {
            key: 'setRadioAtIndex_',
            value: function setRadioAtIndex_(index) {
              this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, true);

              if (this.selectedIndex_ >= 0) {
                this.adapter_.setAttributeForElementIndex(this.selectedIndex_, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
                /* strings */
                ].ARIA_CHECKED, 'false');
              }

              this.adapter_.setAttributeForElementIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ARIA_CHECKED, 'true');
              this.selectedIndex_ = index;
            }
            /**
             * @param {!Array<number>} index
             * @private
             */

          }, {
            key: 'setCheckboxAtIndex_',
            value: function setCheckboxAtIndex_(index) {
              for (var i = 0; i < this.adapter_.getListItemCount(); i++) {
                var isChecked = false;

                if (index.indexOf(i) >= 0) {
                  isChecked = true;
                }

                this.adapter_.setCheckedCheckboxOrRadioAtIndex(i, isChecked);
                this.adapter_.setAttributeForElementIndex(i, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
                /* strings */
                ].ARIA_CHECKED, isChecked ? 'true' : 'false');
              }

              this.selectedIndex_ = index;
            }
            /**
             * @param {number} index
             * @private
             */

          }, {
            key: 'setTabindexAtIndex_',
            value: function setTabindexAtIndex_(index) {
              if (this.focusedItemIndex_ === -1 && index !== 0) {
                // If no list item was selected set first list item's tabindex to -1.
                // Generally, tabindex is set to 0 on first list item of list that has no preselected items.
                this.adapter_.setAttributeForElementIndex(0, 'tabindex', -1);
              } else if (this.focusedItemIndex_ >= 0 && this.focusedItemIndex_ !== index) {
                this.adapter_.setAttributeForElementIndex(this.focusedItemIndex_, 'tabindex', -1);
              }

              this.adapter_.setAttributeForElementIndex(index, 'tabindex', 0);
            }
            /**
             * @return {boolean} Return true if it is single selectin list, checkbox list or radio list.
             * @private
             */

          }, {
            key: 'isSelectableList_',
            value: function isSelectableList_() {
              return this.isSingleSelectionList_ || this.isCheckboxList_ || this.isRadioList_;
            }
            /** @private */

          }, {
            key: 'setTabindexToFirstSelectedItem_',
            value: function setTabindexToFirstSelectedItem_() {
              var targetIndex = 0;

              if (this.isSelectableList_()) {
                if (typeof this.selectedIndex_ === 'number' && this.selectedIndex_ !== -1) {
                  targetIndex = this.selectedIndex_;
                } else if (this.selectedIndex_ instanceof Array && this.selectedIndex_.length > 0) {
                  targetIndex = this.selectedIndex_.reduce(function (currentIndex, minIndex) {
                    return Math.min(currentIndex, minIndex);
                  });
                }
              }

              this.setTabindexAtIndex_(targetIndex);
            }
            /**
             * @param {!Index} index
             * @return {boolean}
             * @private
             */

          }, {
            key: 'isIndexValid_',
            value: function isIndexValid_(index) {
              var _this3 = this;

              if (index instanceof Array) {
                if (!this.isCheckboxList_) {
                  throw new Error('MDCListFoundation: Array of index is only supported for checkbox based list');
                }

                if (index.length === 0) {
                  return true;
                } else {
                  return index.some(function (i) {
                    return _this3.isIndexInRange_(i);
                  });
                }
              } else if (typeof index === 'number') {
                if (this.isCheckboxList_) {
                  throw new Error('MDCListFoundation: Expected array of index for checkbox based list but got number: ' + index);
                }

                return this.isIndexInRange_(index);
              } else {
                return false;
              }
            }
            /**
             * @param {number} index
             * @return {boolean}
             * @private
             */

          }, {
            key: 'isIndexInRange_',
            value: function isIndexInRange_(index) {
              var listSize = this.adapter_.getListItemCount();
              return index >= 0 && index < listSize;
            }
            /**
             * @param {number} index
             * @param {boolean=} toggleCheckbox
             * @private
             */

          }, {
            key: 'setSelectedIndexOnAction_',
            value: function setSelectedIndexOnAction_(index) {
              var toggleCheckbox = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

              if (this.isCheckboxList_) {
                this.toggleCheckboxAtIndex_(index, toggleCheckbox);
              } else {
                this.setSelectedIndex(index);
              }
            }
            /**
             * @param {number} index
             * @param {boolean} toggleCheckbox
             * @private
             */

          }, {
            key: 'toggleCheckboxAtIndex_',
            value: function toggleCheckboxAtIndex_(index, toggleCheckbox) {
              var isChecked = this.adapter_.isCheckboxCheckedAtIndex(index);

              if (toggleCheckbox) {
                isChecked = !isChecked;
                this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, isChecked);
              }

              this.adapter_.setAttributeForElementIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ARIA_CHECKED, isChecked ? 'true' : 'false'); // If none of the checkbox items are selected and selectedIndex is not initialized then provide a default value.

              if (this.selectedIndex_ === -1) {
                this.selectedIndex_ = [];
              }

              if (isChecked) {
                this.selectedIndex_.push(index);
              } else {
                this.selectedIndex_ = this.selectedIndex_.filter(function (i) {
                  return i !== index;
                });
              }
            }
          }]);

          return MDCListFoundation;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
        /* default */
        ]);
        /* harmony default export */


        __webpack_exports__["a"] = MDCListFoundation;
        /***/
      },

      /***/
      25:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "MDCList", function () {
          return MDCList;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(15);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__adapter__ = __webpack_require__(10);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__material_dom_ponyfill__ = __webpack_require__(8);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(11);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCListFoundation", function () {
          return __WEBPACK_IMPORTED_MODULE_1__foundation__["a"];
        });

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2018 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */
        // eslint-disable-line no-unused-vars

        /**
         * @extends MDCComponent<!MDCListFoundation>
         */


        var MDCList = function (_MDCComponent) {
          _inherits(MDCList, _MDCComponent);
          /** @param {...?} args */


          function MDCList() {
            var _ref;

            _classCallCheck(this, MDCList);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            /** @private {!Function} */


            var _this = _possibleConstructorReturn(this, (_ref = MDCList.__proto__ || Object.getPrototypeOf(MDCList)).call.apply(_ref, [this].concat(args)));

            _this.handleKeydown_;
            /** @private {!Function} */

            _this.handleClick_;
            /** @private {!Function} */

            _this.focusInEventListener_;
            /** @private {!Function} */

            _this.focusOutEventListener_;
            return _this;
          }
          /**
           * @param {!Element} root
           * @return {!MDCList}
           */


          _createClass(MDCList, [{
            key: 'destroy',
            value: function destroy() {
              this.root_.removeEventListener('keydown', this.handleKeydown_);
              this.root_.removeEventListener('click', this.handleClick_);
              this.root_.removeEventListener('focusin', this.focusInEventListener_);
              this.root_.removeEventListener('focusout', this.focusOutEventListener_);
            }
          }, {
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {
              this.handleClick_ = this.handleClickEvent_.bind(this);
              this.handleKeydown_ = this.handleKeydownEvent_.bind(this);
              this.focusInEventListener_ = this.handleFocusInEvent_.bind(this);
              this.focusOutEventListener_ = this.handleFocusOutEvent_.bind(this);
              this.root_.addEventListener('keydown', this.handleKeydown_);
              this.root_.addEventListener('focusin', this.focusInEventListener_);
              this.root_.addEventListener('focusout', this.focusOutEventListener_);
              this.root_.addEventListener('click', this.handleClick_);
              this.layout();
              this.initializeListType();
            }
          }, {
            key: 'layout',
            value: function layout() {
              var direction = this.root_.getAttribute(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
              /* strings */
              ].ARIA_ORIENTATION);
              this.vertical = direction !== __WEBPACK_IMPORTED_MODULE_4__constants__["b"
              /* strings */
              ].ARIA_ORIENTATION_HORIZONTAL; // List items need to have at least tabindex=-1 to be focusable.

              [].slice.call(this.root_.querySelectorAll('.mdc-list-item:not([tabindex])')).forEach(function (ele) {
                ele.setAttribute('tabindex', -1);
              }); // Child button/a elements are not tabbable until the list item is focused.

              [].slice.call(this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
              /* strings */
              ].FOCUSABLE_CHILD_ELEMENTS)).forEach(function (ele) {
                return ele.setAttribute('tabindex', -1);
              });
              this.foundation_.layout();
            }
            /**
             * Used to figure out which list item this event is targetting. Or returns -1 if
             * there is no list item
             * @param {Event} evt
             * @private
             */

          }, {
            key: 'getListItemIndex_',
            value: function getListItemIndex_(evt) {
              var eventTarget =
              /** @type {HTMLElement} */
              evt.target;
              var index = -1; // Find the first ancestor that is a list item or the list.

              while (!eventTarget.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
              /* cssClasses */
              ].LIST_ITEM_CLASS) && !eventTarget.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
              /* cssClasses */
              ].ROOT)) {
                eventTarget = eventTarget.parentElement;
              } // Get the index of the element if it is a list item.


              if (eventTarget.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
              /* cssClasses */
              ].LIST_ITEM_CLASS)) {
                index = this.listElements.indexOf(eventTarget);
              }

              return index;
            }
            /**
             * Used to figure out which element was clicked before sending the event to the foundation.
             * @param {Event} evt
             * @private
             */

          }, {
            key: 'handleFocusInEvent_',
            value: function handleFocusInEvent_(evt) {
              var index = this.getListItemIndex_(evt);
              this.foundation_.handleFocusIn(evt, index);
            }
            /**
             * Used to figure out which element was clicked before sending the event to the foundation.
             * @param {Event} evt
             * @private
             */

          }, {
            key: 'handleFocusOutEvent_',
            value: function handleFocusOutEvent_(evt) {
              var index = this.getListItemIndex_(evt);
              this.foundation_.handleFocusOut(evt, index);
            }
            /**
             * Used to figure out which element was focused when keydown event occurred before sending the event to the
             * foundation.
             * @param {Event} evt
             * @private
             */

          }, {
            key: 'handleKeydownEvent_',
            value: function handleKeydownEvent_(evt) {
              var index = this.getListItemIndex_(evt);

              if (index >= 0) {
                this.foundation_.handleKeydown(evt, evt.target.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
                /* cssClasses */
                ].LIST_ITEM_CLASS), index);
              }
            }
            /**
             * Used to figure out which element was clicked before sending the event to the foundation.
             * @param {Event} evt
             * @private
             */

          }, {
            key: 'handleClickEvent_',
            value: function handleClickEvent_(evt) {
              var index = this.getListItemIndex_(evt); // Toggle the checkbox only if it's not the target of the event, or the checkbox will have 2 change events.

              var toggleCheckbox = !Object(__WEBPACK_IMPORTED_MODULE_3__material_dom_ponyfill__["matches"])(
              /** @type {!Element} */
              evt.target, __WEBPACK_IMPORTED_MODULE_4__constants__["b"
              /* strings */
              ].CHECKBOX_RADIO_SELECTOR);
              this.foundation_.handleClick(index, toggleCheckbox);
            }
            /**
             * Initialize selectedIndex value based on pre-selected checkbox list items, single selection or radio.
             */

          }, {
            key: 'initializeListType',
            value: function initializeListType() {
              var _this2 = this;

              var checkboxListItems = this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
              /* strings */
              ].ARIA_ROLE_CHECKBOX_SELECTOR);
              var singleSelectedListItem = this.root_.querySelector('.' + __WEBPACK_IMPORTED_MODULE_4__constants__["a"
              /* cssClasses */
              ].LIST_ITEM_ACTIVATED_CLASS + ',\n        .' + __WEBPACK_IMPORTED_MODULE_4__constants__["a"
              /* cssClasses */
              ].LIST_ITEM_SELECTED_CLASS);
              var radioSelectedListItem = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
              /* strings */
              ].ARIA_CHECKED_RADIO_SELECTOR);

              if (checkboxListItems.length) {
                var preselectedItems = this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].ARIA_CHECKED_CHECKBOX_SELECTOR);
                this.selectedIndex = [].map.call(preselectedItems, function (listItem) {
                  return _this2.listElements.indexOf(listItem);
                });
              } else if (singleSelectedListItem) {
                if (singleSelectedListItem.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
                /* cssClasses */
                ].LIST_ITEM_ACTIVATED_CLASS)) {
                  this.foundation_.setUseActivatedClass(true);
                }

                this.singleSelection = true;
                this.selectedIndex = this.listElements.indexOf(singleSelectedListItem);
              } else if (radioSelectedListItem) {
                this.selectedIndex = this.listElements.indexOf(radioSelectedListItem);
              }
            }
            /** @param {boolean} value */

          }, {
            key: 'getDefaultFoundation',

            /** @return {!MDCListFoundation} */
            value: function getDefaultFoundation() {
              var _this3 = this;

              return new __WEBPACK_IMPORTED_MODULE_1__foundation__["a"
              /* default */
              ](
              /** @type {!MDCListAdapter} */
              _extends({
                getListItemCount: function getListItemCount() {
                  return _this3.listElements.length;
                },
                getFocusedElementIndex: function getFocusedElementIndex() {
                  return _this3.listElements.indexOf(document.activeElement);
                },
                setAttributeForElementIndex: function setAttributeForElementIndex(index, attr, value) {
                  var element = _this3.listElements[index];

                  if (element) {
                    element.setAttribute(attr, value);
                  }
                },
                removeAttributeForElementIndex: function removeAttributeForElementIndex(index, attr) {
                  var element = _this3.listElements[index];

                  if (element) {
                    element.removeAttribute(attr);
                  }
                },
                addClassForElementIndex: function addClassForElementIndex(index, className) {
                  var element = _this3.listElements[index];

                  if (element) {
                    element.classList.add(className);
                  }
                },
                removeClassForElementIndex: function removeClassForElementIndex(index, className) {
                  var element = _this3.listElements[index];

                  if (element) {
                    element.classList.remove(className);
                  }
                },
                focusItemAtIndex: function focusItemAtIndex(index) {
                  var element = _this3.listElements[index];

                  if (element) {
                    element.focus();
                  }
                },
                setTabIndexForListItemChildren: function setTabIndexForListItemChildren(listItemIndex, tabIndexValue) {
                  var element = _this3.listElements[listItemIndex];
                  var listItemChildren = [].slice.call(element.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                  /* strings */
                  ].CHILD_ELEMENTS_TO_TOGGLE_TABINDEX));
                  listItemChildren.forEach(function (ele) {
                    return ele.setAttribute('tabindex', tabIndexValue);
                  });
                },
                followHref: function followHref(index) {
                  var listItem = _this3.listElements[index];

                  if (listItem && listItem.href) {
                    listItem.click();
                  }
                },
                hasCheckboxAtIndex: function hasCheckboxAtIndex(index) {
                  var listItem = _this3.listElements[index];
                  return !!listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                  /* strings */
                  ].CHECKBOX_SELECTOR);
                },
                hasRadioAtIndex: function hasRadioAtIndex(index) {
                  var listItem = _this3.listElements[index];
                  return !!listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                  /* strings */
                  ].RADIO_SELECTOR);
                },
                isCheckboxCheckedAtIndex: function isCheckboxCheckedAtIndex(index) {
                  var listItem = _this3.listElements[index];
                  var toggleEl = listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                  /* strings */
                  ].CHECKBOX_SELECTOR);
                  return toggleEl.checked;
                },
                setCheckedCheckboxOrRadioAtIndex: function setCheckedCheckboxOrRadioAtIndex(index, isChecked) {
                  var listItem = _this3.listElements[index];
                  var toggleEl = listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                  /* strings */
                  ].CHECKBOX_RADIO_SELECTOR);
                  toggleEl.checked = isChecked;
                  var event = document.createEvent('Event');
                  event.initEvent('change', true, true);
                  toggleEl.dispatchEvent(event);
                },
                isFocusInsideList: function isFocusInsideList() {
                  return _this3.root_.contains(document.activeElement);
                }
              }));
            }
          }, {
            key: 'vertical',
            set: function set(value) {
              this.foundation_.setVerticalOrientation(value);
            }
            /** @return Array<!Element>*/

          }, {
            key: 'listElements',
            get: function get() {
              return [].slice.call(this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
              /* strings */
              ].ENABLED_ITEMS_SELECTOR));
            }
            /** @param {boolean} value */

          }, {
            key: 'wrapFocus',
            set: function set(value) {
              this.foundation_.setWrapFocus(value);
            }
            /** @param {boolean} isSingleSelectionList */

          }, {
            key: 'singleSelection',
            set: function set(isSingleSelectionList) {
              this.foundation_.setSingleSelection(isSingleSelectionList);
            }
            /** @return {!Index} */

          }, {
            key: 'selectedIndex',
            get: function get() {
              return this.foundation_.getSelectedIndex();
            }
            /** @param {!Index} index */
            ,
            set: function set(index) {
              this.foundation_.setSelectedIndex(index);
            }
          }], [{
            key: 'attachTo',
            value: function attachTo(root) {
              return new MDCList(root);
            }
          }]);

          return MDCList;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
        /* default */
        ]);
        /***/

      },

      /***/
      8:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "closest", function () {
          return closest;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "matches", function () {
          return matches;
        });
        /**
         * @license
         * Copyright 2018 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @fileoverview A "ponyfill" is a polyfill that doesn't modify the global prototype chain.
         * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.
         */

        /**
         * @param {!Element} element
         * @param {string} selector
         * @return {?Element}
         */


        function closest(element, selector) {
          if (element.closest) {
            return element.closest(selector);
          }

          var el = element;

          while (el) {
            if (matches(el, selector)) {
              return el;
            }

            el = el.parentElement;
          }

          return null;
        }
        /**
         * @param {!Element} element
         * @param {string} selector
         * @return {boolean}
         */


        function matches(element, selector) {
          var nativeMatches = element.matches || element.webkitMatchesSelector || element.msMatchesSelector;
          return nativeMatches.call(element, selector);
        }
        /***/

      }
      /******/

    })
  );
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/@material/menu/dist/mdc.menu.js":
/*!******************************************************!*\
  !*** ./node_modules/@material/menu/dist/mdc.menu.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 Material Components for the Web
 Copyright (c) 2019 Google Inc.
 License: MIT
*/
(function webpackUniversalModuleDefinition(root, factory) {
  if (( false ? undefined : _typeof(exports)) === 'object' && ( false ? undefined : _typeof(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}
})(this, function () {
  return (
    /******/
    function (modules) {
      // webpackBootstrap

      /******/
      // The module cache

      /******/
      var installedModules = {};
      /******/

      /******/
      // The require function

      /******/

      function __webpack_require__(moduleId) {
        /******/

        /******/
        // Check if module is in cache

        /******/
        if (installedModules[moduleId]) {
          /******/
          return installedModules[moduleId].exports;
          /******/
        }
        /******/
        // Create a new module (and put it into the cache)

        /******/


        var module = installedModules[moduleId] = {
          /******/
          i: moduleId,

          /******/
          l: false,

          /******/
          exports: {}
          /******/

        };
        /******/

        /******/
        // Execute the module function

        /******/

        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/

        /******/
        // Flag the module as loaded

        /******/

        module.l = true;
        /******/

        /******/
        // Return the exports of the module

        /******/

        return module.exports;
        /******/
      }
      /******/

      /******/

      /******/
      // expose the modules object (__webpack_modules__)

      /******/


      __webpack_require__.m = modules;
      /******/

      /******/
      // expose the module cache

      /******/

      __webpack_require__.c = installedModules;
      /******/

      /******/
      // define getter function for harmony exports

      /******/

      __webpack_require__.d = function (exports, name, getter) {
        /******/
        if (!__webpack_require__.o(exports, name)) {
          /******/
          Object.defineProperty(exports, name, {
            /******/
            configurable: false,

            /******/
            enumerable: true,

            /******/
            get: getter
            /******/

          });
          /******/
        }
        /******/

      };
      /******/

      /******/
      // getDefaultExport function for compatibility with non-harmony modules

      /******/


      __webpack_require__.n = function (module) {
        /******/
        var getter = module && module.__esModule ?
        /******/
        function getDefault() {
          return module['default'];
        } :
        /******/
        function getModuleExports() {
          return module;
        };
        /******/

        __webpack_require__.d(getter, 'a', getter);
        /******/


        return getter;
        /******/
      };
      /******/

      /******/
      // Object.prototype.hasOwnProperty.call

      /******/


      __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      /******/

      /******/
      // __webpack_public_path__

      /******/


      __webpack_require__.p = "";
      /******/

      /******/
      // Load entry module and return exports

      /******/

      return __webpack_require__(__webpack_require__.s = 46);
      /******/
    }(
    /************************************************************************/

    /******/
    [
    /* 0 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @template A
       */


      var MDCFoundation = function () {
        _createClass(MDCFoundation, null, [{
          key: "cssClasses",

          /** @return enum{cssClasses} */
          get: function get() {
            // Classes extending MDCFoundation should implement this method to return an object which exports every
            // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}
            return {};
          }
          /** @return enum{strings} */

        }, {
          key: "strings",
          get: function get() {
            // Classes extending MDCFoundation should implement this method to return an object which exports all
            // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}
            return {};
          }
          /** @return enum{numbers} */

        }, {
          key: "numbers",
          get: function get() {
            // Classes extending MDCFoundation should implement this method to return an object which exports all
            // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}
            return {};
          }
          /** @return {!Object} */

        }, {
          key: "defaultAdapter",
          get: function get() {
            // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient
            // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter
            // validation.
            return {};
          }
          /**
           * @param {A=} adapter
           */

        }]);

        function MDCFoundation() {
          var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

          _classCallCheck(this, MDCFoundation);
          /** @protected {!A} */


          this.adapter_ = adapter;
        }

        _createClass(MDCFoundation, [{
          key: "init",
          value: function init() {// Subclasses should override this method to perform initialization routines (registering events, etc.)
          }
        }, {
          key: "destroy",
          value: function destroy() {// Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)
          }
        }]);

        return MDCFoundation;
      }();
      /* harmony default export */


      __webpack_exports__["a"] = MDCFoundation;
      /***/
    },
    /* 1 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @template F
       */


      var MDCComponent = function () {
        _createClass(MDCComponent, null, [{
          key: 'attachTo',

          /**
           * @param {!Element} root
           * @return {!MDCComponent}
           */
          value: function attachTo(root) {
            // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and
            // returns an instantiated component with its root set to that element. Also note that in the cases of
            // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized
            // from getDefaultFoundation().
            return new MDCComponent(root, new __WEBPACK_IMPORTED_MODULE_0__foundation__["a"
            /* default */
            ]());
          }
          /**
           * @param {!Element} root
           * @param {F=} foundation
           * @param {...?} args
           */

        }]);

        function MDCComponent(root) {
          var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

          _classCallCheck(this, MDCComponent);
          /** @protected {!Element} */


          this.root_ = root;

          for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
            args[_key - 2] = arguments[_key];
          }

          this.initialize.apply(this, args); // Note that we initialize foundation here and not within the constructor's default param so that
          // this.root_ is defined and can be used within the foundation class.

          /** @protected {!F} */

          this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;
          this.foundation_.init();
          this.initialSyncWithDOM();
        }

        _createClass(MDCComponent, [{
          key: 'initialize',
          value: function initialize()
          /* ...args */
          {} // Subclasses can override this to do any additional setup work that would be considered part of a
          // "constructor". Essentially, it is a hook into the parent constructor before the foundation is
          // initialized. Any additional arguments besides root and foundation will be passed in here.

          /**
           * @return {!F} foundation
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            // Subclasses must override this method to return a properly configured foundation class for the
            // component.
            throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {// Subclasses should override this method if they need to perform work to synchronize with a host DOM
            // object. An example of this would be a form control wrapper that needs to synchronize its internal state
            // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM
            // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            // Subclasses may implement this method to release any resources / deregister any listeners they have
            // attached. An example of this might be deregistering a resize event from the window object.
            this.foundation_.destroy();
          }
          /**
           * Wrapper method to add an event listener to the component's root element. This is most useful when
           * listening for custom events.
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: 'listen',
          value: function listen(evtType, handler) {
            this.root_.addEventListener(evtType, handler);
          }
          /**
           * Wrapper method to remove an event listener to the component's root element. This is most useful when
           * unlistening for custom events.
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: 'unlisten',
          value: function unlisten(evtType, handler) {
            this.root_.removeEventListener(evtType, handler);
          }
          /**
           * Fires a cross-browser-compatible custom event from the component root of the given type,
           * with the given data.
           * @param {string} evtType
           * @param {!Object} evtData
           * @param {boolean=} shouldBubble
           */

        }, {
          key: 'emit',
          value: function emit(evtType, evtData) {
            var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var evt = void 0;

            if (typeof CustomEvent === 'function') {
              evt = new CustomEvent(evtType, {
                detail: evtData,
                bubbles: shouldBubble
              });
            } else {
              evt = document.createEvent('CustomEvent');
              evt.initCustomEvent(evtType, shouldBubble, false, evtData);
            }

            this.root_.dispatchEvent(evt);
          }
        }]);

        return MDCComponent;
      }();
      /* harmony default export */


      __webpack_exports__["a"] = MDCComponent;
      /***/
    },,,,,,,
    /* 2 */

    /* 3 */

    /* 4 */

    /* 5 */

    /* 6 */

    /* 7 */

    /* 8 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "closest", function () {
        return closest;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "matches", function () {
        return matches;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @fileoverview A "ponyfill" is a polyfill that doesn't modify the global prototype chain.
       * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.
       */

      /**
       * @param {!Element} element
       * @param {string} selector
       * @return {?Element}
       */


      function closest(element, selector) {
        if (element.closest) {
          return element.closest(selector);
        }

        var el = element;

        while (el) {
          if (matches(el, selector)) {
            return el;
          }

          el = el.parentElement;
        }

        return null;
      }
      /**
       * @param {!Element} element
       * @param {string} selector
       * @return {boolean}
       */


      function matches(element, selector) {
        var nativeMatches = element.matches || element.webkitMatchesSelector || element.msMatchesSelector;
        return nativeMatches.call(element, selector);
      }
      /***/

    },,
    /* 9 */

    /* 10 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC List. Provides an interface for managing focus.
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCListAdapter = function () {
        function MDCListAdapter() {
          _classCallCheck(this, MDCListAdapter);
        }

        _createClass(MDCListAdapter, [{
          key: "getListItemCount",

          /** @return {number} */
          value: function getListItemCount() {}
          /**
           * @return {number} */

        }, {
          key: "getFocusedElementIndex",
          value: function getFocusedElementIndex() {}
          /**
           * @param {number} index
           * @param {string} attribute
           * @param {string} value
           */

        }, {
          key: "setAttributeForElementIndex",
          value: function setAttributeForElementIndex(index, attribute, value) {}
          /**
           * @param {number} index
           * @param {string} attribute
           */

        }, {
          key: "removeAttributeForElementIndex",
          value: function removeAttributeForElementIndex(index, attribute) {}
          /**
           * @param {number} index
           * @param {string} className
           */

        }, {
          key: "addClassForElementIndex",
          value: function addClassForElementIndex(index, className) {}
          /**
           * @param {number} index
           * @param {string} className
           */

        }, {
          key: "removeClassForElementIndex",
          value: function removeClassForElementIndex(index, className) {}
          /**
           * Focuses list item at the index specified.
           * @param {number} index
           */

        }, {
          key: "focusItemAtIndex",
          value: function focusItemAtIndex(index) {}
          /**
           * Sets the tabindex to the value specified for all button/a element children of
           * the list item at the index specified.
           * @param {number} listItemIndex
           * @param {number} tabIndexValue
           */

        }, {
          key: "setTabIndexForListItemChildren",
          value: function setTabIndexForListItemChildren(listItemIndex, tabIndexValue) {}
          /**
           * If the given element has an href, follows the link.
           * @param {!Element} ele
           */

        }, {
          key: "followHref",
          value: function followHref(ele) {}
          /**
           * @param {number} index
           * @return {boolean} Returns true if radio button is present at given list item index.
           */

        }, {
          key: "hasRadioAtIndex",
          value: function hasRadioAtIndex(index) {}
          /**
           * @param {number} index
           * @return {boolean} Returns true if checkbox is present at given list item index.
           */

        }, {
          key: "hasCheckboxAtIndex",
          value: function hasCheckboxAtIndex(index) {}
          /**
           * @param {number} index
           * @return {boolean} Returns true if checkbox inside a list item is checked.
           */

        }, {
          key: "isCheckboxCheckedAtIndex",
          value: function isCheckboxCheckedAtIndex(index) {}
          /**
           * Sets the checked status of checkbox or radio at given list item index.
           * @param {number} index
           * @param {boolean} isChecked
           */

        }, {
          key: "setCheckedCheckboxOrRadioAtIndex",
          value: function setCheckedCheckboxOrRadioAtIndex(index, isChecked) {}
          /**
           * @return {boolean} Returns true when the current focused element is inside list root.
           */

        }, {
          key: "isFocusInsideList",
          value: function isFocusInsideList() {}
        }]);

        return MDCListAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCListAdapter;
      /***/
    },
    /* 11 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* unused harmony export Index */

      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        ROOT: 'mdc-list',
        LIST_ITEM_CLASS: 'mdc-list-item',
        LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',
        LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated'
      };
      /** @enum {string} */

      var strings = {
        ARIA_ORIENTATION: 'aria-orientation',
        ARIA_ORIENTATION_HORIZONTAL: 'horizontal',
        ARIA_SELECTED: 'aria-selected',
        ARIA_CHECKED: 'aria-checked',
        ARIA_CHECKED_RADIO_SELECTOR: '[role="radio"][aria-checked="true"]',
        ARIA_ROLE_CHECKBOX_SELECTOR: '[role="checkbox"]',
        ARIA_CHECKED_CHECKBOX_SELECTOR: '[role="checkbox"][aria-checked="true"]',
        RADIO_SELECTOR: 'input[type="radio"]:not(:disabled)',
        CHECKBOX_SELECTOR: 'input[type="checkbox"]:not(:disabled)',
        CHECKBOX_RADIO_SELECTOR: 'input[type="checkbox"]:not(:disabled), input[type="radio"]:not(:disabled)',
        CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: '.' + cssClasses.LIST_ITEM_CLASS + ' button:not(:disabled),\n  .' + cssClasses.LIST_ITEM_CLASS + ' a',
        FOCUSABLE_CHILD_ELEMENTS: '.' + cssClasses.LIST_ITEM_CLASS + ' button:not(:disabled), .' + cssClasses.LIST_ITEM_CLASS + ' a,\n  .' + cssClasses.LIST_ITEM_CLASS + ' input[type="radio"]:not(:disabled),\n  .' + cssClasses.LIST_ITEM_CLASS + ' input[type="checkbox"]:not(:disabled)',
        ENABLED_ITEMS_SELECTOR: '.mdc-list-item:not(.mdc-list-item--disabled)'
      };
      /** @typedef {number|!Array<number>} */

      var Index = void 0;
      /***/
    },,,,
    /* 12 */

    /* 13 */

    /* 14 */

    /* 15 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(10);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(11);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */
      // eslint-disable-line no-unused-vars


      var ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];

      var MDCListFoundation = function (_MDCFoundation) {
        _inherits(MDCListFoundation, _MDCFoundation);

        _createClass(MDCListFoundation, null, [{
          key: 'strings',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /**
           * {@see MDCListAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCListAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCListAdapter} */
              {
                getListItemCount: function getListItemCount() {},
                getFocusedElementIndex: function getFocusedElementIndex() {},
                setAttributeForElementIndex: function setAttributeForElementIndex() {},
                removeAttributeForElementIndex: function removeAttributeForElementIndex() {},
                addClassForElementIndex: function addClassForElementIndex() {},
                removeClassForElementIndex: function removeClassForElementIndex() {},
                focusItemAtIndex: function focusItemAtIndex() {},
                setTabIndexForListItemChildren: function setTabIndexForListItemChildren() {},
                followHref: function followHref() {},
                hasRadioAtIndex: function hasRadioAtIndex() {},
                hasCheckboxAtIndex: function hasCheckboxAtIndex() {},
                isCheckboxCheckedAtIndex: function isCheckboxCheckedAtIndex() {},
                setCheckedCheckboxOrRadioAtIndex: function setCheckedCheckboxOrRadioAtIndex() {},
                isFocusInsideList: function isFocusInsideList() {}
              }
            );
          }
          /**
           * @param {!MDCListAdapter=} adapter
           */

        }]);

        function MDCListFoundation(adapter) {
          _classCallCheck(this, MDCListFoundation);
          /** @private {boolean} */


          var _this = _possibleConstructorReturn(this, (MDCListFoundation.__proto__ || Object.getPrototypeOf(MDCListFoundation)).call(this, _extends(MDCListFoundation.defaultAdapter, adapter)));

          _this.wrapFocus_ = false;
          /** @private {boolean} */

          _this.isVertical_ = true;
          /** @private {boolean} */

          _this.isSingleSelectionList_ = false;
          /** @private {!Index} */

          _this.selectedIndex_ = -1;
          /** @private {number} */

          _this.focusedItemIndex_ = -1;
          /** @private {boolean} */

          _this.useActivatedClass_ = false;
          /** @private {boolean} */

          _this.isCheckboxList_ = false;
          /** @private {boolean} */

          _this.isRadioList_ = false;
          return _this;
        }

        _createClass(MDCListFoundation, [{
          key: 'layout',
          value: function layout() {
            if (this.adapter_.getListItemCount() === 0) return;

            if (this.adapter_.hasCheckboxAtIndex(0)) {
              this.isCheckboxList_ = true;
            } else if (this.adapter_.hasRadioAtIndex(0)) {
              this.isRadioList_ = true;
            }
          }
          /**
           * Sets the private wrapFocus_ variable.
           * @param {boolean} value
           */

        }, {
          key: 'setWrapFocus',
          value: function setWrapFocus(value) {
            this.wrapFocus_ = value;
          }
          /**
           * Sets the isVertical_ private variable.
           * @param {boolean} value
           */

        }, {
          key: 'setVerticalOrientation',
          value: function setVerticalOrientation(value) {
            this.isVertical_ = value;
          }
          /**
           * Sets the isSingleSelectionList_ private variable.
           * @param {boolean} value
           */

        }, {
          key: 'setSingleSelection',
          value: function setSingleSelection(value) {
            this.isSingleSelectionList_ = value;
          }
          /**
           * Sets the useActivatedClass_ private variable.
           * @param {boolean} useActivated
           */

        }, {
          key: 'setUseActivatedClass',
          value: function setUseActivatedClass(useActivated) {
            this.useActivatedClass_ = useActivated;
          }
          /** @return {!Index} */

        }, {
          key: 'getSelectedIndex',
          value: function getSelectedIndex() {
            return this.selectedIndex_;
          }
          /** @param {!Index} index */

        }, {
          key: 'setSelectedIndex',
          value: function setSelectedIndex(index) {
            if (!this.isIndexValid_(index)) return;

            if (this.isCheckboxList_) {
              this.setCheckboxAtIndex_(
              /** @type {!Array<number>} */
              index);
            } else if (this.isRadioList_) {
              this.setRadioAtIndex_(
              /** @type {number} */
              index);
            } else {
              this.setSingleSelectionAtIndex_(
              /** @type {number} */
              index);
            }
          }
          /**
           * Focus in handler for the list items.
           * @param evt
           * @param {number} listItemIndex
           */

        }, {
          key: 'handleFocusIn',
          value: function handleFocusIn(evt, listItemIndex) {
            if (listItemIndex >= 0) {
              this.adapter_.setTabIndexForListItemChildren(listItemIndex, 0);
            }
          }
          /**
           * Focus out handler for the list items.
           * @param {Event} evt
           * @param {number} listItemIndex
           */

        }, {
          key: 'handleFocusOut',
          value: function handleFocusOut(evt, listItemIndex) {
            var _this2 = this;

            if (listItemIndex >= 0) {
              this.adapter_.setTabIndexForListItemChildren(listItemIndex, -1);
            }
            /**
             * Between Focusout & Focusin some browsers do not have focus on any element. Setting a delay to wait till the focus
             * is moved to next element.
             */


            setTimeout(function () {
              if (!_this2.adapter_.isFocusInsideList()) {
                _this2.setTabindexToFirstSelectedItem_();
              }
            }, 0);
          }
          /**
           * Key handler for the list.
           * @param {Event} evt
           * @param {boolean} isRootListItem
           * @param {number} listItemIndex
           */

        }, {
          key: 'handleKeydown',
          value: function handleKeydown(evt, isRootListItem, listItemIndex) {
            var arrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;
            var arrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;
            var arrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;
            var arrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;
            var isHome = evt.key === 'Home' || evt.keyCode === 36;
            var isEnd = evt.key === 'End' || evt.keyCode === 35;
            var isEnter = evt.key === 'Enter' || evt.keyCode === 13;
            var isSpace = evt.key === 'Space' || evt.keyCode === 32;
            var currentIndex = this.adapter_.getFocusedElementIndex();
            var nextIndex = -1;

            if (currentIndex === -1) {
              currentIndex = listItemIndex;

              if (currentIndex < 0) {
                // If this event doesn't have a mdc-list-item ancestor from the
                // current list (not from a sublist), return early.
                return;
              }
            }

            if (this.isVertical_ && arrowDown || !this.isVertical_ && arrowRight) {
              this.preventDefaultEvent_(evt);
              nextIndex = this.focusNextElement(currentIndex);
            } else if (this.isVertical_ && arrowUp || !this.isVertical_ && arrowLeft) {
              this.preventDefaultEvent_(evt);
              nextIndex = this.focusPrevElement(currentIndex);
            } else if (isHome) {
              this.preventDefaultEvent_(evt);
              nextIndex = this.focusFirstElement();
            } else if (isEnd) {
              this.preventDefaultEvent_(evt);
              nextIndex = this.focusLastElement();
            } else if (isEnter || isSpace) {
              if (isRootListItem) {
                if (this.isSelectableList_()) {
                  this.setSelectedIndexOnAction_(currentIndex);
                  this.preventDefaultEvent_(evt);
                } // Explicitly activate links, since we're preventing default on Enter, and Space doesn't activate them.


                this.adapter_.followHref(currentIndex);
              }
            }

            this.focusedItemIndex_ = currentIndex;

            if (nextIndex >= 0) {
              this.setTabindexAtIndex_(nextIndex);
              this.focusedItemIndex_ = nextIndex;
            }
          }
          /**
           * Click handler for the list.
           * @param {number} index
           * @param {boolean} toggleCheckbox
           */

        }, {
          key: 'handleClick',
          value: function handleClick(index, toggleCheckbox) {
            if (index === -1) return;

            if (this.isSelectableList_()) {
              this.setSelectedIndexOnAction_(index, toggleCheckbox);
            }

            this.setTabindexAtIndex_(index);
            this.focusedItemIndex_ = index;
          }
          /**
           * Ensures that preventDefault is only called if the containing element doesn't
           * consume the event, and it will cause an unintended scroll.
           * @param {Event} evt
           * @private
           */

        }, {
          key: 'preventDefaultEvent_',
          value: function preventDefaultEvent_(evt) {
            var tagName = ('' + evt.target.tagName).toLowerCase();

            if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {
              evt.preventDefault();
            }
          }
          /**
           * Focuses the next element on the list.
           * @param {number} index
           * @return {number}
           */

        }, {
          key: 'focusNextElement',
          value: function focusNextElement(index) {
            var count = this.adapter_.getListItemCount();
            var nextIndex = index + 1;

            if (nextIndex >= count) {
              if (this.wrapFocus_) {
                nextIndex = 0;
              } else {
                // Return early because last item is already focused.
                return index;
              }
            }

            this.adapter_.focusItemAtIndex(nextIndex);
            return nextIndex;
          }
          /**
           * Focuses the previous element on the list.
           * @param {number} index
           * @return {number}
           */

        }, {
          key: 'focusPrevElement',
          value: function focusPrevElement(index) {
            var prevIndex = index - 1;

            if (prevIndex < 0) {
              if (this.wrapFocus_) {
                prevIndex = this.adapter_.getListItemCount() - 1;
              } else {
                // Return early because first item is already focused.
                return index;
              }
            }

            this.adapter_.focusItemAtIndex(prevIndex);
            return prevIndex;
          }
          /**
           * @return {number}
           */

        }, {
          key: 'focusFirstElement',
          value: function focusFirstElement() {
            this.adapter_.focusItemAtIndex(0);
            return 0;
          }
          /**
           * @return {number}
           */

        }, {
          key: 'focusLastElement',
          value: function focusLastElement() {
            var lastIndex = this.adapter_.getListItemCount() - 1;
            this.adapter_.focusItemAtIndex(lastIndex);
            return lastIndex;
          }
          /**
           * @param {number} index
           * @private
           */

        }, {
          key: 'setSingleSelectionAtIndex_',
          value: function setSingleSelectionAtIndex_(index) {
            var selectedClassName = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].LIST_ITEM_SELECTED_CLASS;

            if (this.useActivatedClass_) {
              selectedClassName = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].LIST_ITEM_ACTIVATED_CLASS;
            }

            if (this.selectedIndex_ >= 0 && this.selectedIndex_ !== index) {
              this.adapter_.removeClassForElementIndex(this.selectedIndex_, selectedClassName);
              this.adapter_.setAttributeForElementIndex(this.selectedIndex_, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ARIA_SELECTED, 'false');
            }

            this.adapter_.addClassForElementIndex(index, selectedClassName);
            this.adapter_.setAttributeForElementIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_SELECTED, 'true');
            this.selectedIndex_ = index;
          }
          /**
           * Toggles radio at give index. Radio doesn't change the checked state if it is already checked.
           * @param {number} index
           * @private
           */

        }, {
          key: 'setRadioAtIndex_',
          value: function setRadioAtIndex_(index) {
            this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, true);

            if (this.selectedIndex_ >= 0) {
              this.adapter_.setAttributeForElementIndex(this.selectedIndex_, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ARIA_CHECKED, 'false');
            }

            this.adapter_.setAttributeForElementIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_CHECKED, 'true');
            this.selectedIndex_ = index;
          }
          /**
           * @param {!Array<number>} index
           * @private
           */

        }, {
          key: 'setCheckboxAtIndex_',
          value: function setCheckboxAtIndex_(index) {
            for (var i = 0; i < this.adapter_.getListItemCount(); i++) {
              var isChecked = false;

              if (index.indexOf(i) >= 0) {
                isChecked = true;
              }

              this.adapter_.setCheckedCheckboxOrRadioAtIndex(i, isChecked);
              this.adapter_.setAttributeForElementIndex(i, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ARIA_CHECKED, isChecked ? 'true' : 'false');
            }

            this.selectedIndex_ = index;
          }
          /**
           * @param {number} index
           * @private
           */

        }, {
          key: 'setTabindexAtIndex_',
          value: function setTabindexAtIndex_(index) {
            if (this.focusedItemIndex_ === -1 && index !== 0) {
              // If no list item was selected set first list item's tabindex to -1.
              // Generally, tabindex is set to 0 on first list item of list that has no preselected items.
              this.adapter_.setAttributeForElementIndex(0, 'tabindex', -1);
            } else if (this.focusedItemIndex_ >= 0 && this.focusedItemIndex_ !== index) {
              this.adapter_.setAttributeForElementIndex(this.focusedItemIndex_, 'tabindex', -1);
            }

            this.adapter_.setAttributeForElementIndex(index, 'tabindex', 0);
          }
          /**
           * @return {boolean} Return true if it is single selectin list, checkbox list or radio list.
           * @private
           */

        }, {
          key: 'isSelectableList_',
          value: function isSelectableList_() {
            return this.isSingleSelectionList_ || this.isCheckboxList_ || this.isRadioList_;
          }
          /** @private */

        }, {
          key: 'setTabindexToFirstSelectedItem_',
          value: function setTabindexToFirstSelectedItem_() {
            var targetIndex = 0;

            if (this.isSelectableList_()) {
              if (typeof this.selectedIndex_ === 'number' && this.selectedIndex_ !== -1) {
                targetIndex = this.selectedIndex_;
              } else if (this.selectedIndex_ instanceof Array && this.selectedIndex_.length > 0) {
                targetIndex = this.selectedIndex_.reduce(function (currentIndex, minIndex) {
                  return Math.min(currentIndex, minIndex);
                });
              }
            }

            this.setTabindexAtIndex_(targetIndex);
          }
          /**
           * @param {!Index} index
           * @return {boolean}
           * @private
           */

        }, {
          key: 'isIndexValid_',
          value: function isIndexValid_(index) {
            var _this3 = this;

            if (index instanceof Array) {
              if (!this.isCheckboxList_) {
                throw new Error('MDCListFoundation: Array of index is only supported for checkbox based list');
              }

              if (index.length === 0) {
                return true;
              } else {
                return index.some(function (i) {
                  return _this3.isIndexInRange_(i);
                });
              }
            } else if (typeof index === 'number') {
              if (this.isCheckboxList_) {
                throw new Error('MDCListFoundation: Expected array of index for checkbox based list but got number: ' + index);
              }

              return this.isIndexInRange_(index);
            } else {
              return false;
            }
          }
          /**
           * @param {number} index
           * @return {boolean}
           * @private
           */

        }, {
          key: 'isIndexInRange_',
          value: function isIndexInRange_(index) {
            var listSize = this.adapter_.getListItemCount();
            return index >= 0 && index < listSize;
          }
          /**
           * @param {number} index
           * @param {boolean=} toggleCheckbox
           * @private
           */

        }, {
          key: 'setSelectedIndexOnAction_',
          value: function setSelectedIndexOnAction_(index) {
            var toggleCheckbox = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

            if (this.isCheckboxList_) {
              this.toggleCheckboxAtIndex_(index, toggleCheckbox);
            } else {
              this.setSelectedIndex(index);
            }
          }
          /**
           * @param {number} index
           * @param {boolean} toggleCheckbox
           * @private
           */

        }, {
          key: 'toggleCheckboxAtIndex_',
          value: function toggleCheckboxAtIndex_(index, toggleCheckbox) {
            var isChecked = this.adapter_.isCheckboxCheckedAtIndex(index);

            if (toggleCheckbox) {
              isChecked = !isChecked;
              this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, isChecked);
            }

            this.adapter_.setAttributeForElementIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_CHECKED, isChecked ? 'true' : 'false'); // If none of the checkbox items are selected and selectedIndex is not initialized then provide a default value.

            if (this.selectedIndex_ === -1) {
              this.selectedIndex_ = [];
            }

            if (isChecked) {
              this.selectedIndex_.push(index);
            } else {
              this.selectedIndex_ = this.selectedIndex_.filter(function (i) {
                return i !== index;
              });
            }
          }
        }]);

        return MDCListFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCListFoundation;
      /***/
    },,
    /* 16 */

    /* 17 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "b", function () {
        return MDCMenuSurfaceFoundation;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return AnchorMargin;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(21);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(18);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        } else {
          obj[key] = value;
        }

        return obj;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @typedef {{
       *   top: number,
       *   right: number,
       *   bottom: number,
       *   left: number
       * }}
       */


      var AnchorMargin = void 0;
      /* eslint-disable no-unused-vars */

      /**
       * @typedef {{
       *   viewport: { width: number, height: number },
       *   viewportDistance: {top: number, right: number, bottom: number, left: number},
       *   anchorHeight: number,
       *   anchorWidth: number,
       *   surfaceHeight: number,
       *   surfaceWidth: number,
       *   bodyDimensions,
       *   windowScroll,
       * }}
       */

      var AutoLayoutMeasurements = void 0;
      /* eslint-enable no-unused-vars */

      /**
       * @extends {MDCFoundation<!MDCMenuSurfaceAdapter>}
       */

      var MDCMenuSurfaceFoundation = function (_MDCFoundation) {
        _inherits(MDCMenuSurfaceFoundation, _MDCFoundation);

        _createClass(MDCMenuSurfaceFoundation, null, [{
          key: 'cssClasses',

          /** @return enum{cssClasses} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["c"
            /* cssClasses */
            ];
          }
          /** @return enum{string} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["e"
            /* strings */
            ];
          }
          /** @return enum {number} */

        }, {
          key: 'numbers',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["d"
            /* numbers */
            ];
          }
          /** @return enum{number} */

        }, {
          key: 'Corner',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* Corner */
            ];
          }
          /**
           * {@see MDCMenuSurfaceAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCMenuSurfaceAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCMenuSurfaceAdapter} */
              {
                addClass: function addClass() {},
                removeClass: function removeClass() {},
                hasClass: function hasClass() {
                  return false;
                },
                hasAnchor: function hasAnchor() {
                  return false;
                },
                notifyClose: function notifyClose() {},
                notifyOpen: function notifyOpen() {},
                isElementInContainer: function isElementInContainer() {
                  return false;
                },
                isRtl: function isRtl() {
                  return false;
                },
                setTransformOrigin: function setTransformOrigin() {},
                isFocused: function isFocused() {
                  return false;
                },
                saveFocus: function saveFocus() {},
                restoreFocus: function restoreFocus() {},
                isFirstElementFocused: function isFirstElementFocused() {},
                isLastElementFocused: function isLastElementFocused() {},
                focusFirstElement: function focusFirstElement() {},
                focusLastElement: function focusLastElement() {},
                getInnerDimensions: function getInnerDimensions() {
                  return {};
                },
                getAnchorDimensions: function getAnchorDimensions() {
                  return {};
                },
                getWindowDimensions: function getWindowDimensions() {
                  return {};
                },
                getBodyDimensions: function getBodyDimensions() {
                  return {};
                },
                getWindowScroll: function getWindowScroll() {
                  return {};
                },
                setPosition: function setPosition() {},
                setMaxHeight: function setMaxHeight() {}
              }
            );
          }
          /** @param {!MDCMenuSurfaceAdapter} adapter */

        }]);

        function MDCMenuSurfaceFoundation(adapter) {
          _classCallCheck(this, MDCMenuSurfaceFoundation);
          /** @private {boolean} */


          var _this = _possibleConstructorReturn(this, (MDCMenuSurfaceFoundation.__proto__ || Object.getPrototypeOf(MDCMenuSurfaceFoundation)).call(this, _extends(MDCMenuSurfaceFoundation.defaultAdapter, adapter)));

          _this.isOpen_ = false;
          /** @private {number} */

          _this.openAnimationEndTimerId_ = 0;
          /** @private {number} */

          _this.closeAnimationEndTimerId_ = 0;
          /** @private {number} */

          _this.animationRequestId_ = 0;
          /** @private {!{ width: number, height: number }} */

          _this.dimensions_;
          /** @private {!Corner} */

          _this.anchorCorner_ = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
          /* Corner */
          ].TOP_START;
          /** @private {!AnchorMargin} */

          _this.anchorMargin_ = {
            top: 0,
            right: 0,
            bottom: 0,
            left: 0
          };
          /** @private {?AutoLayoutMeasurements} */

          _this.measures_ = null;
          /** @private {boolean} */

          _this.quickOpen_ = false;
          /** @private {boolean} */

          _this.hoistedElement_ = false;
          /** @private {boolean} */

          _this.isFixedPosition_ = false;
          /** @private {!{x: number, y: number}} */

          _this.position_ = {
            x: 0,
            y: 0
          };
          return _this;
        }

        _createClass(MDCMenuSurfaceFoundation, [{
          key: 'init',
          value: function init() {
            var _MDCMenuSurfaceFounda = MDCMenuSurfaceFoundation.cssClasses,
                ROOT = _MDCMenuSurfaceFounda.ROOT,
                OPEN = _MDCMenuSurfaceFounda.OPEN;

            if (!this.adapter_.hasClass(ROOT)) {
              throw new Error(ROOT + ' class required in root element.');
            }

            if (this.adapter_.hasClass(OPEN)) {
              this.isOpen_ = true;
            }
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            clearTimeout(this.openAnimationEndTimerId_);
            clearTimeout(this.closeAnimationEndTimerId_); // Cancel any currently running animations.

            cancelAnimationFrame(this.animationRequestId_);
          }
          /**
           * @param {!Corner} corner Default anchor corner alignment of top-left menu surface corner.
           */

        }, {
          key: 'setAnchorCorner',
          value: function setAnchorCorner(corner) {
            this.anchorCorner_ = corner;
          }
          /**
           * @param {!AnchorMargin} margin set of margin values from anchor.
           */

        }, {
          key: 'setAnchorMargin',
          value: function setAnchorMargin(margin) {
            this.anchorMargin_.top = typeof margin.top === 'number' ? margin.top : 0;
            this.anchorMargin_.right = typeof margin.right === 'number' ? margin.right : 0;
            this.anchorMargin_.bottom = typeof margin.bottom === 'number' ? margin.bottom : 0;
            this.anchorMargin_.left = typeof margin.left === 'number' ? margin.left : 0;
          }
          /**
           * Used to indicate if the menu-surface is hoisted to the body.
           * @param {boolean} isHoisted
           */

        }, {
          key: 'setIsHoisted',
          value: function setIsHoisted(isHoisted) {
            this.hoistedElement_ = isHoisted;
          }
          /**
           * Used to set the menu-surface calculations based on a fixed position menu.
           * @param {boolean} isFixedPosition
           */

        }, {
          key: 'setFixedPosition',
          value: function setFixedPosition(isFixedPosition) {
            this.isFixedPosition_ = isFixedPosition;
          }
          /**
           * Sets the menu-surface position on the page.
           * @param {number} x
           * @param {number} y
           */

        }, {
          key: 'setAbsolutePosition',
          value: function setAbsolutePosition(x, y) {
            this.position_.x = this.typeCheckisFinite_(x) ? x : 0;
            this.position_.y = this.typeCheckisFinite_(y) ? y : 0;
          }
          /** @param {boolean} quickOpen */

        }, {
          key: 'setQuickOpen',
          value: function setQuickOpen(quickOpen) {
            this.quickOpen_ = quickOpen;
          }
          /**
           * Handle clicks and close if not within menu-surface element.
           * @param {!Event} evt
           */

        }, {
          key: 'handleBodyClick',
          value: function handleBodyClick(evt) {
            var el = evt.target;

            if (this.adapter_.isElementInContainer(el)) {
              return;
            }

            this.close();
          }
        }, {
          key: 'handleKeydown',

          /**
           * Handle keys that close the surface.
           * @param {!Event} evt
           */
          value: function handleKeydown(evt) {
            var keyCode = evt.keyCode,
                key = evt.key,
                shiftKey = evt.shiftKey;
            var isEscape = key === 'Escape' || keyCode === 27;
            var isTab = key === 'Tab' || keyCode === 9;

            if (isEscape) {
              this.close();
            } else if (isTab) {
              if (this.adapter_.isLastElementFocused() && !shiftKey) {
                this.adapter_.focusFirstElement();
                evt.preventDefault();
              } else if (this.adapter_.isFirstElementFocused() && shiftKey) {
                this.adapter_.focusLastElement();
                evt.preventDefault();
              }
            }
          }
          /**
           * @return {!AutoLayoutMeasurements} Measurements used to position menu surface popup.
           */

        }, {
          key: 'getAutoLayoutMeasurements_',
          value: function getAutoLayoutMeasurements_() {
            var anchorRect = this.adapter_.getAnchorDimensions();
            var viewport = this.adapter_.getWindowDimensions();
            var bodyDimensions = this.adapter_.getBodyDimensions();
            var windowScroll = this.adapter_.getWindowScroll();

            if (!anchorRect) {
              anchorRect =
              /** @type {ClientRect} */
              {
                x: this.position_.x,
                y: this.position_.y,
                top: this.position_.y,
                bottom: this.position_.y,
                left: this.position_.x,
                right: this.position_.x,
                height: 0,
                width: 0
              };
            }

            return {
              viewport: viewport,
              bodyDimensions: bodyDimensions,
              windowScroll: windowScroll,
              viewportDistance: {
                top: anchorRect.top,
                right: viewport.width - anchorRect.right,
                left: anchorRect.left,
                bottom: viewport.height - anchorRect.bottom
              },
              anchorHeight: anchorRect.height,
              anchorWidth: anchorRect.width,
              surfaceHeight: this.dimensions_.height,
              surfaceWidth: this.dimensions_.width
            };
          }
          /**
           * Computes the corner of the anchor from which to animate and position the menu surface.
           * @return {!Corner}
           * @private
           */

        }, {
          key: 'getOriginCorner_',
          value: function getOriginCorner_() {
            // Defaults: open from the top left.
            var corner = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* Corner */
            ].TOP_LEFT;
            var _measures_ = this.measures_,
                viewportDistance = _measures_.viewportDistance,
                anchorHeight = _measures_.anchorHeight,
                anchorWidth = _measures_.anchorWidth,
                surfaceHeight = _measures_.surfaceHeight,
                surfaceWidth = _measures_.surfaceWidth;
            var isBottomAligned = Boolean(this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].BOTTOM);
            var availableTop = isBottomAligned ? viewportDistance.top + anchorHeight + this.anchorMargin_.bottom : viewportDistance.top + this.anchorMargin_.top;
            var availableBottom = isBottomAligned ? viewportDistance.bottom - this.anchorMargin_.bottom : viewportDistance.bottom + anchorHeight - this.anchorMargin_.top;
            var topOverflow = surfaceHeight - availableTop;
            var bottomOverflow = surfaceHeight - availableBottom;

            if (bottomOverflow > 0 && topOverflow < bottomOverflow) {
              corner |= __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* CornerBit */
              ].BOTTOM;
            }

            var isRtl = this.adapter_.isRtl();
            var isFlipRtl = Boolean(this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].FLIP_RTL);
            var avoidHorizontalOverlap = Boolean(this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].RIGHT);
            var isAlignedRight = avoidHorizontalOverlap && !isRtl || !avoidHorizontalOverlap && isFlipRtl && isRtl;
            var availableLeft = isAlignedRight ? viewportDistance.left + anchorWidth + this.anchorMargin_.right : viewportDistance.left + this.anchorMargin_.left;
            var availableRight = isAlignedRight ? viewportDistance.right - this.anchorMargin_.right : viewportDistance.right + anchorWidth - this.anchorMargin_.left;
            var leftOverflow = surfaceWidth - availableLeft;
            var rightOverflow = surfaceWidth - availableRight;

            if (leftOverflow < 0 && isAlignedRight && isRtl || avoidHorizontalOverlap && !isAlignedRight && leftOverflow < 0 || rightOverflow > 0 && leftOverflow < rightOverflow) {
              corner |= __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* CornerBit */
              ].RIGHT;
            }

            return (
              /** @type {Corner} */
              corner
            );
          }
          /**
           * @param {!Corner} corner Origin corner of the menu surface.
           * @return {number} Horizontal offset of menu surface origin corner from corresponding anchor corner.
           * @private
           */

        }, {
          key: 'getHorizontalOriginOffset_',
          value: function getHorizontalOriginOffset_(corner) {
            var anchorWidth = this.measures_.anchorWidth; // isRightAligned corresponds to using the 'right' property on the surface.

            var isRightAligned = Boolean(corner & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].RIGHT);
            var avoidHorizontalOverlap = Boolean(this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].RIGHT);

            if (isRightAligned) {
              var rightOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.left : this.anchorMargin_.right; // For hoisted or fixed elements, adjust the offset by the difference between viewport width and body width so
              // when we calculate the right value (`adjustPositionForHoistedElement_`) based on the element position,
              // the right property is correct.

              if (this.hoistedElement_ || this.isFixedPosition_) {
                return rightOffset - (this.measures_.viewport.width - this.measures_.bodyDimensions.width);
              }

              return rightOffset;
            }

            return avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.right : this.anchorMargin_.left;
          }
          /**
           * @param {!Corner} corner Origin corner of the menu surface.
           * @return {number} Vertical offset of menu surface origin corner from corresponding anchor corner.
           * @private
           */

        }, {
          key: 'getVerticalOriginOffset_',
          value: function getVerticalOriginOffset_(corner) {
            var anchorHeight = this.measures_.anchorHeight;
            var isBottomAligned = Boolean(corner & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].BOTTOM);
            var avoidVerticalOverlap = Boolean(this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].BOTTOM);
            var y = 0;

            if (isBottomAligned) {
              y = avoidVerticalOverlap ? anchorHeight - this.anchorMargin_.top : -this.anchorMargin_.bottom;
            } else {
              y = avoidVerticalOverlap ? anchorHeight + this.anchorMargin_.bottom : this.anchorMargin_.top;
            }

            return y;
          }
          /**
           * @param {!Corner} corner Origin corner of the menu surface.
           * @return {number} Maximum height of the menu surface, based on available space. 0 indicates should not be set.
           * @private
           */

        }, {
          key: 'getMenuSurfaceMaxHeight_',
          value: function getMenuSurfaceMaxHeight_(corner) {
            var maxHeight = 0;
            var viewportDistance = this.measures_.viewportDistance;
            var isBottomAligned = Boolean(corner & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].BOTTOM);
            var MARGIN_TO_EDGE = MDCMenuSurfaceFoundation.numbers.MARGIN_TO_EDGE; // When maximum height is not specified, it is handled from css.

            if (isBottomAligned) {
              maxHeight = viewportDistance.top + this.anchorMargin_.top - MARGIN_TO_EDGE;

              if (!(this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* CornerBit */
              ].BOTTOM)) {
                maxHeight += this.measures_.anchorHeight;
              }
            } else {
              maxHeight = viewportDistance.bottom - this.anchorMargin_.bottom + this.measures_.anchorHeight - MARGIN_TO_EDGE;

              if (this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* CornerBit */
              ].BOTTOM) {
                maxHeight -= this.measures_.anchorHeight;
              }
            }

            return maxHeight;
          }
          /** @private */

        }, {
          key: 'autoPosition_',
          value: function autoPosition_() {
            var _position; // Compute measurements for autoposition methods reuse.


            this.measures_ = this.getAutoLayoutMeasurements_();
            var corner = this.getOriginCorner_();
            var maxMenuSurfaceHeight = this.getMenuSurfaceMaxHeight_(corner);
            var verticalAlignment = corner & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].BOTTOM ? 'bottom' : 'top';
            var horizontalAlignment = corner & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].RIGHT ? 'right' : 'left';
            var horizontalOffset = this.getHorizontalOriginOffset_(corner);
            var verticalOffset = this.getVerticalOriginOffset_(corner);
            var position = (_position = {}, _defineProperty(_position, horizontalAlignment, horizontalOffset ? horizontalOffset : '0'), _defineProperty(_position, verticalAlignment, verticalOffset ? verticalOffset : '0'), _position);
            var _measures_2 = this.measures_,
                anchorWidth = _measures_2.anchorWidth,
                surfaceWidth = _measures_2.surfaceWidth; // Center align when anchor width is comparable or greater than menu surface, otherwise keep corner.

            if (anchorWidth / surfaceWidth > __WEBPACK_IMPORTED_MODULE_2__constants__["d"
            /* numbers */
            ].ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO) {
              horizontalAlignment = 'center';
            } // If the menu-surface has been hoisted to the body, it's no longer relative to the anchor element


            if (this.hoistedElement_ || this.isFixedPosition_) {
              position = this.adjustPositionForHoistedElement_(position);
            }

            for (var prop in position) {
              if (position.hasOwnProperty(prop) && position[prop] !== '0') {
                position[prop] = parseInt(position[prop], 10) + 'px';
              }
            }

            this.adapter_.setTransformOrigin(horizontalAlignment + ' ' + verticalAlignment);
            this.adapter_.setPosition(position);
            this.adapter_.setMaxHeight(maxMenuSurfaceHeight ? maxMenuSurfaceHeight + 'px' : ''); // Clear measures after positioning is complete.

            this.measures_ = null;
          }
          /**
           * Calculates the offsets for positioning the menu-surface when the menu-surface has been
           * hoisted to the body.
           * @param {!{
           *   top: (string|undefined),
           *   right: (string|undefined),
           *   bottom: (string|undefined),
           *   left: (string|undefined)
           * }} position
           * @return {!{
           *   top: (string|undefined),
           *   right: (string|undefined),
           *   bottom: (string|undefined),
           *   left: (string|undefined)
           * }} position
           * @private
           */

        }, {
          key: 'adjustPositionForHoistedElement_',
          value: function adjustPositionForHoistedElement_(position) {
            var _measures_3 = this.measures_,
                windowScroll = _measures_3.windowScroll,
                viewportDistance = _measures_3.viewportDistance;

            for (var prop in position) {
              if (position.hasOwnProperty(prop)) {
                // Hoisted surfaces need to have the anchor elements location on the page added to the
                // position properties for proper alignment on the body.
                if (viewportDistance.hasOwnProperty(prop)) {
                  position[prop] = parseInt(position[prop], 10) + viewportDistance[prop];
                } // Surfaces that are absolutely positioned need to have additional calculations for scroll
                // and bottom positioning.


                if (!this.isFixedPosition_) {
                  if (prop === 'top') {
                    position[prop] = parseInt(position[prop], 10) + windowScroll.y;
                  } else if (prop === 'bottom') {
                    position[prop] = parseInt(position[prop], 10) - windowScroll.y;
                  } else if (prop === 'left') {
                    position[prop] = parseInt(position[prop], 10) + windowScroll.x;
                  } else if (prop === 'right') {
                    position[prop] = parseInt(position[prop], 10) - windowScroll.x;
                  }
                }
              }
            }

            return position;
          }
          /**
           * Open the menu surface.
           */

        }, {
          key: 'open',
          value: function open() {
            var _this2 = this;

            this.adapter_.saveFocus();

            if (!this.quickOpen_) {
              this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_OPEN);
            }

            this.animationRequestId_ = requestAnimationFrame(function () {
              _this2.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.OPEN);

              _this2.dimensions_ = _this2.adapter_.getInnerDimensions();

              _this2.autoPosition_();

              if (_this2.quickOpen_) {
                _this2.adapter_.notifyOpen();
              } else {
                _this2.openAnimationEndTimerId_ = setTimeout(function () {
                  _this2.openAnimationEndTimerId_ = 0;

                  _this2.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_OPEN);

                  _this2.adapter_.notifyOpen();
                }, __WEBPACK_IMPORTED_MODULE_2__constants__["d"
                /* numbers */
                ].TRANSITION_OPEN_DURATION);
              }
            });
            this.isOpen_ = true;
          }
          /**
           * Closes the menu surface.
           */

        }, {
          key: 'close',
          value: function close() {
            var _this3 = this;

            if (!this.quickOpen_) {
              this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_CLOSED);
            }

            requestAnimationFrame(function () {
              _this3.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.OPEN);

              if (_this3.quickOpen_) {
                _this3.adapter_.notifyClose();
              } else {
                _this3.closeAnimationEndTimerId_ = setTimeout(function () {
                  _this3.closeAnimationEndTimerId_ = 0;

                  _this3.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_CLOSED);

                  _this3.adapter_.notifyClose();
                }, __WEBPACK_IMPORTED_MODULE_2__constants__["d"
                /* numbers */
                ].TRANSITION_CLOSE_DURATION);
              }
            });
            this.isOpen_ = false;
            this.maybeRestoreFocus_();
          }
          /**
           * The last focused element when the menu surface was opened should regain focus, if the user is
           * focused on or within the menu surface when it is closed.
           * @private
           */

        }, {
          key: 'maybeRestoreFocus_',
          value: function maybeRestoreFocus_() {
            if (this.adapter_.isFocused() || this.adapter_.isElementInContainer(document.activeElement)) {
              this.adapter_.restoreFocus();
            }
          }
          /** @return {boolean} */

        }, {
          key: 'isOpen',
          value: function isOpen() {
            return this.isOpen_;
          }
          /**
           * isFinite that doesn't force conversion to number type.
           * Equivalent to Number.isFinite in ES2015, but is not included in IE11.
           * @param {number} num
           * @return {boolean}
           * @private
           */

        }, {
          key: 'typeCheckisFinite_',
          value: function typeCheckisFinite_(num) {
            return typeof num === 'number' && isFinite(num);
          }
        }]);

        return MDCMenuSurfaceFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /***/

    },
    /* 18 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "c", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "e", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "d", function () {
        return numbers;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return CornerBit;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return Corner;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        ANCHOR: 'mdc-menu-surface--anchor',
        ANIMATING_CLOSED: 'mdc-menu-surface--animating-closed',
        ANIMATING_OPEN: 'mdc-menu-surface--animating-open',
        FIXED: 'mdc-menu-surface--fixed',
        OPEN: 'mdc-menu-surface--open',
        ROOT: 'mdc-menu-surface'
      };
      /** @enum {string} */

      var strings = {
        CLOSED_EVENT: 'MDCMenuSurface:closed',
        OPENED_EVENT: 'MDCMenuSurface:opened',
        FOCUSABLE_ELEMENTS: 'button:not(:disabled), [href]:not([aria-disabled="true"]), input:not(:disabled), ' + 'select:not(:disabled), textarea:not(:disabled), [tabindex]:not([tabindex="-1"]):not([aria-disabled="true"])'
      };
      /** @enum {number} */

      var numbers = {
        // Total duration of menu-surface open animation.
        TRANSITION_OPEN_DURATION: 120,
        // Total duration of menu-surface close animation.
        TRANSITION_CLOSE_DURATION: 75,
        // Margin left to the edge of the viewport when menu-surface is at maximum possible height.
        MARGIN_TO_EDGE: 32,
        // Ratio of anchor width to menu-surface width for switching from corner positioning to center positioning.
        ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO: 0.67
      };
      /**
       * Enum for bits in the {@see Corner) bitmap.
       * @enum {number}
       */

      var CornerBit = {
        BOTTOM: 1,
        CENTER: 2,
        RIGHT: 4,
        FLIP_RTL: 8
      };
      /**
       * Enum for representing an element corner for positioning the menu-surface.
       *
       * The START constants map to LEFT if element directionality is left
       * to right and RIGHT if the directionality is right to left.
       * Likewise END maps to RIGHT or LEFT depending on the directionality.
       *
       * @enum {number}
       */

      var Corner = {
        TOP_LEFT: 0,
        TOP_RIGHT: CornerBit.RIGHT,
        BOTTOM_LEFT: CornerBit.BOTTOM,
        BOTTOM_RIGHT: CornerBit.BOTTOM | CornerBit.RIGHT,
        TOP_START: CornerBit.FLIP_RTL,
        TOP_END: CornerBit.FLIP_RTL | CornerBit.RIGHT,
        BOTTOM_START: CornerBit.BOTTOM | CornerBit.FLIP_RTL,
        BOTTOM_END: CornerBit.BOTTOM | CornerBit.RIGHT | CornerBit.FLIP_RTL
      };
      /***/
    },,,
    /* 19 */

    /* 20 */

    /* 21 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* unused harmony export MDCMenuSurfaceAdapter */

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDCMenuSurface. Provides an interface for managing
       * - classes
       * - dom
       * - focus
       * - position
       * - dimensions
       * - event handlers
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCMenuSurfaceAdapter = function () {
        function MDCMenuSurfaceAdapter() {
          _classCallCheck(this, MDCMenuSurfaceAdapter);
        }

        _createClass(MDCMenuSurfaceAdapter, [{
          key: "addClass",

          /** @param {string} className */
          value: function addClass(className) {}
          /** @param {string} className */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * @param {string} className
           * @return {boolean}
           */

        }, {
          key: "hasClass",
          value: function hasClass(className) {}
          /** @return {boolean} */

        }, {
          key: "hasAnchor",
          value: function hasAnchor() {}
          /** Emits an event when the menu surface is closed. */

        }, {
          key: "notifyClose",
          value: function notifyClose() {}
          /** Emits an event when the menu surface is opened. */

        }, {
          key: "notifyOpen",
          value: function notifyOpen() {}
          /**
           * @return {boolean}
           * @param {EventTarget} el
           */

        }, {
          key: "isElementInContainer",
          value: function isElementInContainer(el) {}
          /** @return {boolean} */

        }, {
          key: "isRtl",
          value: function isRtl() {}
          /** @param {string} origin */

        }, {
          key: "setTransformOrigin",
          value: function setTransformOrigin(origin) {}
          /** @return {boolean} */

        }, {
          key: "isFocused",
          value: function isFocused() {}
          /** Saves the element that was focused before the menu surface was opened. */

        }, {
          key: "saveFocus",
          value: function saveFocus() {}
          /** Restores focus to the element that was focused before the menu surface was opened. */

        }, {
          key: "restoreFocus",
          value: function restoreFocus() {}
          /** @return {boolean} */

        }, {
          key: "isFirstElementFocused",
          value: function isFirstElementFocused() {}
          /** @return {boolean} */

        }, {
          key: "isLastElementFocused",
          value: function isLastElementFocused() {}
          /** Focuses the first focusable element in the menu-surface. */

        }, {
          key: "focusFirstElement",
          value: function focusFirstElement() {}
          /** Focuses the first focusable element in the menu-surface. */

        }, {
          key: "focusLastElement",
          value: function focusLastElement() {}
          /** @return {!{width: number, height: number}} */

        }, {
          key: "getInnerDimensions",
          value: function getInnerDimensions() {}
          /** @return {!{width: number, height: number, top: number, right: number, bottom: number, left: number}} */

        }, {
          key: "getAnchorDimensions",
          value: function getAnchorDimensions() {}
          /** @return {!{ width: number, height: number }} */

        }, {
          key: "getWindowDimensions",
          value: function getWindowDimensions() {}
          /** @return {!{ width: number, height: number }} */

        }, {
          key: "getBodyDimensions",
          value: function getBodyDimensions() {}
          /** @return {!{ width: number, height: number }} */

        }, {
          key: "getWindowScroll",
          value: function getWindowScroll() {}
          /** @param {!{
          *   top: (string|undefined),
          *   right: (string|undefined),
          *   bottom: (string|undefined),
          *   left: (string|undefined)
          * }} position */

        }, {
          key: "setPosition",
          value: function setPosition(position) {}
          /** @param {string} height */

        }, {
          key: "setMaxHeight",
          value: function setMaxHeight(height) {}
        }]);

        return MDCMenuSurfaceAdapter;
      }();
      /***/

    },,,,
    /* 22 */

    /* 23 */

    /* 24 */

    /* 25 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCList", function () {
        return MDCList;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(15);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__adapter__ = __webpack_require__(10);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__material_dom_ponyfill__ = __webpack_require__(8);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(11);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCListFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_1__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */
      // eslint-disable-line no-unused-vars

      /**
       * @extends MDCComponent<!MDCListFoundation>
       */


      var MDCList = function (_MDCComponent) {
        _inherits(MDCList, _MDCComponent);
        /** @param {...?} args */


        function MDCList() {
          var _ref;

          _classCallCheck(this, MDCList);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {!Function} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCList.__proto__ || Object.getPrototypeOf(MDCList)).call.apply(_ref, [this].concat(args)));

          _this.handleKeydown_;
          /** @private {!Function} */

          _this.handleClick_;
          /** @private {!Function} */

          _this.focusInEventListener_;
          /** @private {!Function} */

          _this.focusOutEventListener_;
          return _this;
        }
        /**
         * @param {!Element} root
         * @return {!MDCList}
         */


        _createClass(MDCList, [{
          key: 'destroy',
          value: function destroy() {
            this.root_.removeEventListener('keydown', this.handleKeydown_);
            this.root_.removeEventListener('click', this.handleClick_);
            this.root_.removeEventListener('focusin', this.focusInEventListener_);
            this.root_.removeEventListener('focusout', this.focusOutEventListener_);
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            this.handleClick_ = this.handleClickEvent_.bind(this);
            this.handleKeydown_ = this.handleKeydownEvent_.bind(this);
            this.focusInEventListener_ = this.handleFocusInEvent_.bind(this);
            this.focusOutEventListener_ = this.handleFocusOutEvent_.bind(this);
            this.root_.addEventListener('keydown', this.handleKeydown_);
            this.root_.addEventListener('focusin', this.focusInEventListener_);
            this.root_.addEventListener('focusout', this.focusOutEventListener_);
            this.root_.addEventListener('click', this.handleClick_);
            this.layout();
            this.initializeListType();
          }
        }, {
          key: 'layout',
          value: function layout() {
            var direction = this.root_.getAttribute(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].ARIA_ORIENTATION);
            this.vertical = direction !== __WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].ARIA_ORIENTATION_HORIZONTAL; // List items need to have at least tabindex=-1 to be focusable.

            [].slice.call(this.root_.querySelectorAll('.mdc-list-item:not([tabindex])')).forEach(function (ele) {
              ele.setAttribute('tabindex', -1);
            }); // Child button/a elements are not tabbable until the list item is focused.

            [].slice.call(this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].FOCUSABLE_CHILD_ELEMENTS)).forEach(function (ele) {
              return ele.setAttribute('tabindex', -1);
            });
            this.foundation_.layout();
          }
          /**
           * Used to figure out which list item this event is targetting. Or returns -1 if
           * there is no list item
           * @param {Event} evt
           * @private
           */

        }, {
          key: 'getListItemIndex_',
          value: function getListItemIndex_(evt) {
            var eventTarget =
            /** @type {HTMLElement} */
            evt.target;
            var index = -1; // Find the first ancestor that is a list item or the list.

            while (!eventTarget.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].LIST_ITEM_CLASS) && !eventTarget.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].ROOT)) {
              eventTarget = eventTarget.parentElement;
            } // Get the index of the element if it is a list item.


            if (eventTarget.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].LIST_ITEM_CLASS)) {
              index = this.listElements.indexOf(eventTarget);
            }

            return index;
          }
          /**
           * Used to figure out which element was clicked before sending the event to the foundation.
           * @param {Event} evt
           * @private
           */

        }, {
          key: 'handleFocusInEvent_',
          value: function handleFocusInEvent_(evt) {
            var index = this.getListItemIndex_(evt);
            this.foundation_.handleFocusIn(evt, index);
          }
          /**
           * Used to figure out which element was clicked before sending the event to the foundation.
           * @param {Event} evt
           * @private
           */

        }, {
          key: 'handleFocusOutEvent_',
          value: function handleFocusOutEvent_(evt) {
            var index = this.getListItemIndex_(evt);
            this.foundation_.handleFocusOut(evt, index);
          }
          /**
           * Used to figure out which element was focused when keydown event occurred before sending the event to the
           * foundation.
           * @param {Event} evt
           * @private
           */

        }, {
          key: 'handleKeydownEvent_',
          value: function handleKeydownEvent_(evt) {
            var index = this.getListItemIndex_(evt);

            if (index >= 0) {
              this.foundation_.handleKeydown(evt, evt.target.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
              /* cssClasses */
              ].LIST_ITEM_CLASS), index);
            }
          }
          /**
           * Used to figure out which element was clicked before sending the event to the foundation.
           * @param {Event} evt
           * @private
           */

        }, {
          key: 'handleClickEvent_',
          value: function handleClickEvent_(evt) {
            var index = this.getListItemIndex_(evt); // Toggle the checkbox only if it's not the target of the event, or the checkbox will have 2 change events.

            var toggleCheckbox = !Object(__WEBPACK_IMPORTED_MODULE_3__material_dom_ponyfill__["matches"])(
            /** @type {!Element} */
            evt.target, __WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].CHECKBOX_RADIO_SELECTOR);
            this.foundation_.handleClick(index, toggleCheckbox);
          }
          /**
           * Initialize selectedIndex value based on pre-selected checkbox list items, single selection or radio.
           */

        }, {
          key: 'initializeListType',
          value: function initializeListType() {
            var _this2 = this;

            var checkboxListItems = this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].ARIA_ROLE_CHECKBOX_SELECTOR);
            var singleSelectedListItem = this.root_.querySelector('.' + __WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].LIST_ITEM_ACTIVATED_CLASS + ',\n        .' + __WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].LIST_ITEM_SELECTED_CLASS);
            var radioSelectedListItem = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].ARIA_CHECKED_RADIO_SELECTOR);

            if (checkboxListItems.length) {
              var preselectedItems = this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
              /* strings */
              ].ARIA_CHECKED_CHECKBOX_SELECTOR);
              this.selectedIndex = [].map.call(preselectedItems, function (listItem) {
                return _this2.listElements.indexOf(listItem);
              });
            } else if (singleSelectedListItem) {
              if (singleSelectedListItem.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
              /* cssClasses */
              ].LIST_ITEM_ACTIVATED_CLASS)) {
                this.foundation_.setUseActivatedClass(true);
              }

              this.singleSelection = true;
              this.selectedIndex = this.listElements.indexOf(singleSelectedListItem);
            } else if (radioSelectedListItem) {
              this.selectedIndex = this.listElements.indexOf(radioSelectedListItem);
            }
          }
          /** @param {boolean} value */

        }, {
          key: 'getDefaultFoundation',

          /** @return {!MDCListFoundation} */
          value: function getDefaultFoundation() {
            var _this3 = this;

            return new __WEBPACK_IMPORTED_MODULE_1__foundation__["a"
            /* default */
            ](
            /** @type {!MDCListAdapter} */
            _extends({
              getListItemCount: function getListItemCount() {
                return _this3.listElements.length;
              },
              getFocusedElementIndex: function getFocusedElementIndex() {
                return _this3.listElements.indexOf(document.activeElement);
              },
              setAttributeForElementIndex: function setAttributeForElementIndex(index, attr, value) {
                var element = _this3.listElements[index];

                if (element) {
                  element.setAttribute(attr, value);
                }
              },
              removeAttributeForElementIndex: function removeAttributeForElementIndex(index, attr) {
                var element = _this3.listElements[index];

                if (element) {
                  element.removeAttribute(attr);
                }
              },
              addClassForElementIndex: function addClassForElementIndex(index, className) {
                var element = _this3.listElements[index];

                if (element) {
                  element.classList.add(className);
                }
              },
              removeClassForElementIndex: function removeClassForElementIndex(index, className) {
                var element = _this3.listElements[index];

                if (element) {
                  element.classList.remove(className);
                }
              },
              focusItemAtIndex: function focusItemAtIndex(index) {
                var element = _this3.listElements[index];

                if (element) {
                  element.focus();
                }
              },
              setTabIndexForListItemChildren: function setTabIndexForListItemChildren(listItemIndex, tabIndexValue) {
                var element = _this3.listElements[listItemIndex];
                var listItemChildren = [].slice.call(element.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].CHILD_ELEMENTS_TO_TOGGLE_TABINDEX));
                listItemChildren.forEach(function (ele) {
                  return ele.setAttribute('tabindex', tabIndexValue);
                });
              },
              followHref: function followHref(index) {
                var listItem = _this3.listElements[index];

                if (listItem && listItem.href) {
                  listItem.click();
                }
              },
              hasCheckboxAtIndex: function hasCheckboxAtIndex(index) {
                var listItem = _this3.listElements[index];
                return !!listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].CHECKBOX_SELECTOR);
              },
              hasRadioAtIndex: function hasRadioAtIndex(index) {
                var listItem = _this3.listElements[index];
                return !!listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].RADIO_SELECTOR);
              },
              isCheckboxCheckedAtIndex: function isCheckboxCheckedAtIndex(index) {
                var listItem = _this3.listElements[index];
                var toggleEl = listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].CHECKBOX_SELECTOR);
                return toggleEl.checked;
              },
              setCheckedCheckboxOrRadioAtIndex: function setCheckedCheckboxOrRadioAtIndex(index, isChecked) {
                var listItem = _this3.listElements[index];
                var toggleEl = listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].CHECKBOX_RADIO_SELECTOR);
                toggleEl.checked = isChecked;
                var event = document.createEvent('Event');
                event.initEvent('change', true, true);
                toggleEl.dispatchEvent(event);
              },
              isFocusInsideList: function isFocusInsideList() {
                return _this3.root_.contains(document.activeElement);
              }
            }));
          }
        }, {
          key: 'vertical',
          set: function set(value) {
            this.foundation_.setVerticalOrientation(value);
          }
          /** @return Array<!Element>*/

        }, {
          key: 'listElements',
          get: function get() {
            return [].slice.call(this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].ENABLED_ITEMS_SELECTOR));
          }
          /** @param {boolean} value */

        }, {
          key: 'wrapFocus',
          set: function set(value) {
            this.foundation_.setWrapFocus(value);
          }
          /** @param {boolean} isSingleSelectionList */

        }, {
          key: 'singleSelection',
          set: function set(isSingleSelectionList) {
            this.foundation_.setSingleSelection(isSingleSelectionList);
          }
          /** @return {!Index} */

        }, {
          key: 'selectedIndex',
          get: function get() {
            return this.foundation_.getSelectedIndex();
          }
          /** @param {!Index} index */
          ,
          set: function set(index) {
            this.foundation_.setSelectedIndex(index);
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCList(root);
          }
        }]);

        return MDCList;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },,,,
    /* 26 */

    /* 27 */

    /* 28 */

    /* 29 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        ROOT: 'mdc-menu',
        MENU_SELECTED_LIST_ITEM: 'mdc-menu-item--selected',
        MENU_SELECTION_GROUP: 'mdc-menu__selection-group'
      };
      /** @enum {string} */

      var strings = {
        SELECTED_EVENT: 'MDCMenu:selected',
        ARIA_SELECTED_ATTR: 'aria-selected',
        LIST_SELECTOR: '.mdc-list',
        CHECKBOX_SELECTOR: 'input[type="checkbox"]'
      };
      /***/
    },,,,
    /* 30 */

    /* 31 */

    /* 32 */

    /* 33 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCMenuSurface", function () {
        return MDCMenuSurface;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__util__ = __webpack_require__(34);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(17);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__adapter__ = __webpack_require__(21);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(18);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCMenuSurfaceFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["b"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "AnchorMargin", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "Corner", function () {
        return __WEBPACK_IMPORTED_MODULE_4__constants__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "CornerBit", function () {
        return __WEBPACK_IMPORTED_MODULE_4__constants__["b"];
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "util", function () {
        return __WEBPACK_IMPORTED_MODULE_1__util__;
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends MDCComponent<!MDCMenuSurfaceFoundation>
       */


      var MDCMenuSurface = function (_MDCComponent) {
        _inherits(MDCMenuSurface, _MDCComponent);
        /** @param {...?} args */


        function MDCMenuSurface() {
          var _ref;

          _classCallCheck(this, MDCMenuSurface);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {!Element} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCMenuSurface.__proto__ || Object.getPrototypeOf(MDCMenuSurface)).call.apply(_ref, [this].concat(args)));

          _this.previousFocus_;
          /** @private {!Element} */

          _this.anchorElement;
          /** @private {Element} */

          _this.firstFocusableElement_;
          /** @private {Element} */

          _this.lastFocusableElement_;
          /** @private {!Function} */

          _this.handleKeydown_;
          /** @private {!Function} */

          _this.handleBodyClick_;
          /** @private {!Function} */

          _this.registerBodyClickListener_;
          /** @private {!Function} */

          _this.deregisterBodyClickListener_;
          return _this;
        }
        /**
         * @param {!Element} root
         * @return {!MDCMenuSurface}
         */


        _createClass(MDCMenuSurface, [{
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var _this2 = this;

            if (this.root_.parentElement && this.root_.parentElement.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["c"
            /* cssClasses */
            ].ANCHOR)) {
              this.anchorElement = this.root_.parentElement;
            }

            if (this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["c"
            /* cssClasses */
            ].FIXED)) {
              this.setFixedPosition(true);
            }

            this.handleKeydown_ = function (evt) {
              return _this2.foundation_.handleKeydown(evt);
            };

            this.handleBodyClick_ = function (evt) {
              return _this2.foundation_.handleBodyClick(evt);
            };

            this.registerBodyClickListener_ = function () {
              return document.body.addEventListener('click', _this2.handleBodyClick_);
            };

            this.deregisterBodyClickListener_ = function () {
              return document.body.removeEventListener('click', _this2.handleBodyClick_);
            };

            this.root_.addEventListener('keydown', this.handleKeydown_);
            this.root_.addEventListener(__WEBPACK_IMPORTED_MODULE_4__constants__["e"
            /* strings */
            ].OPENED_EVENT, this.registerBodyClickListener_);
            this.root_.addEventListener(__WEBPACK_IMPORTED_MODULE_4__constants__["e"
            /* strings */
            ].CLOSED_EVENT, this.deregisterBodyClickListener_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.root_.removeEventListener('keydown', this.handleKeydown_);
            this.root_.removeEventListener(__WEBPACK_IMPORTED_MODULE_4__constants__["e"
            /* strings */
            ].OPENED_EVENT, this.registerBodyClickListener_);
            this.root_.removeEventListener(__WEBPACK_IMPORTED_MODULE_4__constants__["e"
            /* strings */
            ].CLOSED_EVENT, this.deregisterBodyClickListener_);

            _get(MDCMenuSurface.prototype.__proto__ || Object.getPrototypeOf(MDCMenuSurface.prototype), 'destroy', this).call(this);
          }
          /** @return {boolean} */

        }, {
          key: 'hoistMenuToBody',

          /**
           * Removes the menu-surface from it's current location and appends it to the
           * body to overcome any overflow:hidden issues.
           */
          value: function hoistMenuToBody() {
            document.body.appendChild(this.root_.parentElement.removeChild(this.root_));
            this.setIsHoisted(true);
          }
          /**
           * Sets the foundation to use page offsets for an positioning when the menu
           * is hoisted to the body.
           * @param {boolean} isHoisted
           */

        }, {
          key: 'setIsHoisted',
          value: function setIsHoisted(isHoisted) {
            this.foundation_.setIsHoisted(isHoisted);
          }
          /**
           * Sets the element that the menu-surface is anchored to.
           * @param {!Element} element
           */

        }, {
          key: 'setMenuSurfaceAnchorElement',
          value: function setMenuSurfaceAnchorElement(element) {
            this.anchorElement = element;
          }
          /**
           * Sets the menu-surface to position: fixed.
           * @param {boolean} isFixed
           */

        }, {
          key: 'setFixedPosition',
          value: function setFixedPosition(isFixed) {
            if (isFixed) {
              this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_4__constants__["c"
              /* cssClasses */
              ].FIXED);
            } else {
              this.root_.classList.remove(__WEBPACK_IMPORTED_MODULE_4__constants__["c"
              /* cssClasses */
              ].FIXED);
            }

            this.foundation_.setFixedPosition(isFixed);
          }
          /**
           * Sets the absolute x/y position to position based on. Requires the menu to be hoisted.
           * @param {number} x
           * @param {number} y
           */

        }, {
          key: 'setAbsolutePosition',
          value: function setAbsolutePosition(x, y) {
            this.foundation_.setAbsolutePosition(x, y);
            this.setIsHoisted(true);
          }
          /**
           * @param {!Corner} corner Default anchor corner alignment of top-left
           *     surface corner.
           */

        }, {
          key: 'setAnchorCorner',
          value: function setAnchorCorner(corner) {
            this.foundation_.setAnchorCorner(corner);
          }
          /**
           * @param {!AnchorMargin} margin
           */

        }, {
          key: 'setAnchorMargin',
          value: function setAnchorMargin(margin) {
            this.foundation_.setAnchorMargin(margin);
          }
          /** @param {boolean} quickOpen */

        }, {
          key: 'getDefaultFoundation',

          /** @return {!MDCMenuSurfaceFoundation} */
          value: function getDefaultFoundation() {
            var _this3 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["b"
            /* MDCMenuSurfaceFoundation */
            ](
            /** @type {!MDCMenuSurfaceAdapter} */
            _extends({
              addClass: function addClass(className) {
                return _this3.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this3.root_.classList.remove(className);
              },
              hasClass: function hasClass(className) {
                return _this3.root_.classList.contains(className);
              },
              hasAnchor: function hasAnchor() {
                return !!_this3.anchorElement;
              },
              notifyClose: function notifyClose() {
                return _this3.emit(__WEBPACK_IMPORTED_MODULE_2__foundation__["b"
                /* MDCMenuSurfaceFoundation */
                ].strings.CLOSED_EVENT, {});
              },
              notifyOpen: function notifyOpen() {
                return _this3.emit(__WEBPACK_IMPORTED_MODULE_2__foundation__["b"
                /* MDCMenuSurfaceFoundation */
                ].strings.OPENED_EVENT, {});
              },
              isElementInContainer: function isElementInContainer(el) {
                return _this3.root_ === el || _this3.root_.contains(el);
              },
              isRtl: function isRtl() {
                return getComputedStyle(_this3.root_).getPropertyValue('direction') === 'rtl';
              },
              setTransformOrigin: function setTransformOrigin(origin) {
                _this3.root_.style[__WEBPACK_IMPORTED_MODULE_1__util__["getTransformPropertyName"](window) + '-origin'] = origin;
              }
            }, this.getFocusAdapterMethods_(), this.getDimensionAdapterMethods_()));
          }
          /**
           * @return {!{
           * isFocused: function(): boolean,
           * saveFocus: function(),
           * restoreFocus: function(),
           * isFirstElementFocused: function(): boolean,
           * isLastElementFocused: function(): boolean,
           * focusFirstElement: function(),
           * focusLastElement: function(),
           * }}
           * @private
           */

        }, {
          key: 'getFocusAdapterMethods_',
          value: function getFocusAdapterMethods_() {
            var _this4 = this;

            return {
              isFocused: function isFocused() {
                return document.activeElement === _this4.root_;
              },
              saveFocus: function saveFocus() {
                _this4.previousFocus_ = document.activeElement;
              },
              restoreFocus: function restoreFocus() {
                if (_this4.root_.contains(document.activeElement)) {
                  if (_this4.previousFocus_ && _this4.previousFocus_.focus) {
                    _this4.previousFocus_.focus();
                  }
                }
              },
              isFirstElementFocused: function isFirstElementFocused() {
                return _this4.firstFocusableElement_ && _this4.firstFocusableElement_ === document.activeElement;
              },
              isLastElementFocused: function isLastElementFocused() {
                return _this4.lastFocusableElement_ && _this4.lastFocusableElement_ === document.activeElement;
              },
              focusFirstElement: function focusFirstElement() {
                return _this4.firstFocusableElement_ && _this4.firstFocusableElement_.focus && _this4.firstFocusableElement_.focus();
              },
              focusLastElement: function focusLastElement() {
                return _this4.lastFocusableElement_ && _this4.lastFocusableElement_.focus && _this4.lastFocusableElement_.focus();
              }
            };
          }
          /**
           * @return {!{
           * getInnerDimensions: function(),
           * getAnchorDimensions: function(): (HTMLElement | null | * | ClientRect),
           * getWindowDimensions: function(),
           * setPosition: function(*),
           * setMaxHeight: function(string)}}
           * @private
           */

        }, {
          key: 'getDimensionAdapterMethods_',
          value: function getDimensionAdapterMethods_() {
            var _this5 = this;

            return {
              getInnerDimensions: function getInnerDimensions() {
                return {
                  width: _this5.root_.offsetWidth,
                  height: _this5.root_.offsetHeight
                };
              },
              getAnchorDimensions: function getAnchorDimensions() {
                return _this5.anchorElement && _this5.anchorElement.getBoundingClientRect();
              },
              getWindowDimensions: function getWindowDimensions() {
                return {
                  width: window.innerWidth,
                  height: window.innerHeight
                };
              },
              getBodyDimensions: function getBodyDimensions() {
                return {
                  width: document.body.clientWidth,
                  height: document.body.clientHeight
                };
              },
              getWindowScroll: function getWindowScroll() {
                return {
                  x: window.pageXOffset,
                  y: window.pageYOffset
                };
              },
              setPosition: function setPosition(position) {
                _this5.root_.style.left = 'left' in position ? position.left : null;
                _this5.root_.style.right = 'right' in position ? position.right : null;
                _this5.root_.style.top = 'top' in position ? position.top : null;
                _this5.root_.style.bottom = 'bottom' in position ? position.bottom : null;
              },
              setMaxHeight: function setMaxHeight(height) {
                _this5.root_.style.maxHeight = height;
              }
            };
          }
        }, {
          key: 'open',
          get: function get() {
            return this.foundation_.isOpen();
          }
          /** @param {boolean} value */
          ,
          set: function set(value) {
            if (value) {
              var focusableElements = this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["e"
              /* strings */
              ].FOCUSABLE_ELEMENTS);
              this.firstFocusableElement_ = focusableElements.length > 0 ? focusableElements[0] : null;
              this.lastFocusableElement_ = focusableElements.length > 0 ? focusableElements[focusableElements.length - 1] : null;
              this.foundation_.open();
            } else {
              this.foundation_.close();
            }
          }
        }, {
          key: 'quickOpen',
          set: function set(quickOpen) {
            this.foundation_.setQuickOpen(quickOpen);
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCMenuSurface(root);
          }
        }]);

        return MDCMenuSurface;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 34 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "getTransformPropertyName", function () {
        return getTransformPropertyName;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @type {string|undefined} */


      var storedTransformPropertyName_ = void 0;
      /**
       * Returns the name of the correct transform property to use on the current browser.
       * @param {!Window} globalObj
       * @param {boolean=} forceRefresh
       * @return {string}
       */

      function getTransformPropertyName(globalObj) {
        var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        if (storedTransformPropertyName_ === undefined || forceRefresh) {
          var el = globalObj.document.createElement('div');
          var transformPropertyName = 'transform' in el.style ? 'transform' : 'webkitTransform';
          storedTransformPropertyName_ = transformPropertyName;
        }

        return storedTransformPropertyName_;
      }
      /***/

    },,,,,,,,,,,,
    /* 35 */

    /* 36 */

    /* 37 */

    /* 38 */

    /* 39 */

    /* 40 */

    /* 41 */

    /* 42 */

    /* 43 */

    /* 44 */

    /* 45 */

    /* 46 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCMenu", function () {
        return MDCMenu;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(47);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(29);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__material_menu_surface_index__ = __webpack_require__(33);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__material_menu_surface_foundation__ = __webpack_require__(17);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__material_list_index__ = __webpack_require__(25);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCMenuFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_1__foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "AnchorMargin", function () {
        return __WEBPACK_IMPORTED_MODULE_4__material_menu_surface_foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "Corner", function () {
        return __WEBPACK_IMPORTED_MODULE_3__material_menu_surface_index__["Corner"];
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends MDCComponent<!MDCMenuFoundation>
       */


      var MDCMenu = function (_MDCComponent) {
        _inherits(MDCMenu, _MDCComponent);
        /** @param {...?} args */


        function MDCMenu() {
          var _ref;

          _classCallCheck(this, MDCMenu);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {!MDCMenuSurface} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCMenu.__proto__ || Object.getPrototypeOf(MDCMenu)).call.apply(_ref, [this].concat(args)));

          _this.menuSurface_;
          /** @private {!MDCList} */

          _this.list_;
          /** @private {!Function} */

          _this.handleKeydown_;
          /** @private {!Function} */

          _this.handleClick_;
          /** @private {!Function} */

          _this.afterOpenedCallback_;
          return _this;
        }
        /**
         * @param {!HTMLElement} root
         * @return {!MDCMenu}
         */


        _createClass(MDCMenu, [{
          key: 'initialize',
          value: function initialize() {
            var menuSurfaceFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_3__material_menu_surface_index__["MDCMenuSurface"](el);
            };
            var listFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_5__material_list_index__["MDCList"](el);
            };
            this.menuSurface_ = menuSurfaceFactory(this.root_);
            var list = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].LIST_SELECTOR);

            if (list) {
              this.list_ = listFactory(list);
              this.list_.wrapFocus = true;
            }
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var _this2 = this;

            this.afterOpenedCallback_ = function () {
              return _this2.handleAfterOpened_();
            };

            this.handleKeydown_ = function (evt) {
              return _this2.foundation_.handleKeydown(evt);
            };

            this.handleClick_ = function (evt) {
              return _this2.foundation_.handleClick(evt);
            };

            this.menuSurface_.listen(__WEBPACK_IMPORTED_MODULE_4__material_menu_surface_foundation__["b"
            /* MDCMenuSurfaceFoundation */
            ].strings.OPENED_EVENT, this.afterOpenedCallback_);
            this.listen('keydown', this.handleKeydown_);
            this.listen('click', this.handleClick_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            if (this.list_) {
              this.list_.destroy();
            }

            this.menuSurface_.destroy();
            this.menuSurface_.unlisten(__WEBPACK_IMPORTED_MODULE_4__material_menu_surface_foundation__["b"
            /* MDCMenuSurfaceFoundation */
            ].strings.OPENED_EVENT, this.afterOpenedCallback_);
            this.unlisten('keydown', this.handleKeydown_);
            this.unlisten('click', this.handleClick_);

            _get(MDCMenu.prototype.__proto__ || Object.getPrototypeOf(MDCMenu.prototype), 'destroy', this).call(this);
          }
          /** @return {boolean} */

        }, {
          key: 'setAnchorCorner',

          /**
           * @param {!Corner} corner Default anchor corner alignment of top-left
           *     menu corner.
           */
          value: function setAnchorCorner(corner) {
            this.menuSurface_.setAnchorCorner(corner);
          }
          /**
           * @param {!AnchorMargin} margin
           */

        }, {
          key: 'setAnchorMargin',
          value: function setAnchorMargin(margin) {
            this.menuSurface_.setAnchorMargin(margin);
          }
          /**
           * Return the items within the menu. Note that this only contains the set of elements within
           * the items container that are proper list items, and not supplemental / presentational DOM
           * elements.
           * @return {!Array<!HTMLElement>}
           */

        }, {
          key: 'getOptionByIndex',

          /**
           * Return the item within the menu at the index specified.
           * @param {number} index
           * @return {?HTMLElement}
           */
          value: function getOptionByIndex(index) {
            var items = this.items;

            if (index < items.length) {
              return this.items[index];
            } else {
              return null;
            }
          }
          /** @param {boolean} quickOpen */

        }, {
          key: 'setFixedPosition',

          /** @param {boolean} isFixed */
          value: function setFixedPosition(isFixed) {
            this.menuSurface_.setFixedPosition(isFixed);
          }
        }, {
          key: 'hoistMenuToBody',
          value: function hoistMenuToBody() {
            this.menuSurface_.hoistMenuToBody();
          }
          /** @param {boolean} isHoisted */

        }, {
          key: 'setIsHoisted',
          value: function setIsHoisted(isHoisted) {
            this.menuSurface_.setIsHoisted(isHoisted);
          }
          /**
           * @param {number} x
           * @param {number} y
           */

        }, {
          key: 'setAbsolutePosition',
          value: function setAbsolutePosition(x, y) {
            this.menuSurface_.setAbsolutePosition(x, y);
          }
          /**
           * Sets the element that the menu-surface is anchored to.
           * @param {!HTMLElement} element
           */

        }, {
          key: 'setAnchorElement',
          value: function setAnchorElement(element) {
            this.menuSurface_.anchorElement = element;
          }
        }, {
          key: 'handleAfterOpened_',
          value: function handleAfterOpened_() {
            var list = this.items;

            if (list.length > 0) {
              list[0].focus();
            }
          }
          /** @return {!MDCMenuFoundation} */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this3 = this;

            return new __WEBPACK_IMPORTED_MODULE_1__foundation__["a"
            /* MDCMenuFoundation */
            ]({
              addClassToElementAtIndex: function addClassToElementAtIndex(index, className) {
                var list = _this3.items;
                list[index].classList.add(className);
              },
              removeClassFromElementAtIndex: function removeClassFromElementAtIndex(index, className) {
                var list = _this3.items;
                list[index].classList.remove(className);
              },
              addAttributeToElementAtIndex: function addAttributeToElementAtIndex(index, attr, value) {
                var list = _this3.items;
                list[index].setAttribute(attr, value);
              },
              removeAttributeFromElementAtIndex: function removeAttributeFromElementAtIndex(index, attr) {
                var list = _this3.items;
                list[index].removeAttribute(attr);
              },
              elementContainsClass: function elementContainsClass(element, className) {
                return element.classList.contains(className);
              },
              closeSurface: function closeSurface() {
                return _this3.open = false;
              },
              getElementIndex: function getElementIndex(element) {
                return _this3.items.indexOf(element);
              },
              getParentElement: function getParentElement(element) {
                return element.parentElement;
              },
              getSelectedElementIndex: function getSelectedElementIndex(selectionGroup) {
                return _this3.items.indexOf(selectionGroup.querySelector('.' + __WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].MENU_SELECTED_LIST_ITEM));
              },
              notifySelected: function notifySelected(evtData) {
                return _this3.emit(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
                /* strings */
                ].SELECTED_EVENT, {
                  index: evtData.index,
                  item: _this3.items[evtData.index]
                });
              }
            });
          }
        }, {
          key: 'open',
          get: function get() {
            return this.menuSurface_.open;
          }
          /** @param {boolean} value */
          ,
          set: function set(value) {
            this.menuSurface_.open = value;
          }
          /** @return {boolean} */

        }, {
          key: 'wrapFocus',
          get: function get() {
            return this.list_.wrapFocus;
          }
          /** @param {boolean} value */
          ,
          set: function set(value) {
            this.list_.wrapFocus = value;
          }
        }, {
          key: 'items',
          get: function get() {
            return this.list_.listElements;
          }
        }, {
          key: 'quickOpen',
          set: function set(quickOpen) {
            this.menuSurface_.quickOpen = quickOpen;
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCMenu(root);
          }
        }]);

        return MDCMenu;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 47 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return MDCMenuFoundation;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(48);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(29);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__material_menu_surface_foundation__ = __webpack_require__(17);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__material_list_foundation__ = __webpack_require__(15);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select', 'a'];
      /**
       * @extends {MDCFoundation<!MDCMenuAdapter>}
       */

      var MDCMenuFoundation = function (_MDCFoundation) {
        _inherits(MDCMenuFoundation, _MDCFoundation);

        _createClass(MDCMenuFoundation, null, [{
          key: 'cssClasses',

          /** @return enum{cssClasses} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return enum{strings} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ];
          }
          /**
           * {@see MDCMenuAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCMenuAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCMenuAdapter} */
              {
                addClassToElementAtIndex: function addClassToElementAtIndex() {},
                removeClassFromElementAtIndex: function removeClassFromElementAtIndex() {},
                addAttributeToElementAtIndex: function addAttributeToElementAtIndex() {},
                removeAttributeFromElementAtIndex: function removeAttributeFromElementAtIndex() {},
                elementContainsClass: function elementContainsClass() {},
                closeSurface: function closeSurface() {},
                getElementIndex: function getElementIndex() {},
                getParentElement: function getParentElement() {},
                getSelectedElementIndex: function getSelectedElementIndex() {},
                notifySelected: function notifySelected() {}
              }
            );
          }
          /** @param {!MDCMenuAdapter} adapter */

        }]);

        function MDCMenuFoundation(adapter) {
          _classCallCheck(this, MDCMenuFoundation);
          /** @type {number} */


          var _this = _possibleConstructorReturn(this, (MDCMenuFoundation.__proto__ || Object.getPrototypeOf(MDCMenuFoundation)).call(this, _extends(MDCMenuFoundation.defaultAdapter, adapter)));

          _this.closeAnimationEndTimerId_ = 0;
          return _this;
        }

        _createClass(MDCMenuFoundation, [{
          key: 'destroy',
          value: function destroy() {
            if (this.closeAnimationEndTimerId_) {
              clearTimeout(this.closeAnimationEndTimerId_);
            }

            this.adapter_.closeSurface();
          }
          /**
           * Handler function for the keydown events.
           * @param {!Event} evt
           */

        }, {
          key: 'handleKeydown',
          value: function handleKeydown(evt) {
            var key = evt.key,
                keyCode = evt.keyCode;
            var isSpace = key === 'Space' || keyCode === 32;
            var isEnter = key === 'Enter' || keyCode === 13;
            var isTab = key === 'Tab' || keyCode === 9;

            if (isSpace || isEnter) {
              this.handleAction_(evt);
            } else if (isTab) {
              this.adapter_.closeSurface();
            }
          }
          /**
           * Handler function for the click events.
           * @param {!Event} evt
           */

        }, {
          key: 'handleClick',
          value: function handleClick(evt) {
            this.handleAction_(evt);
          }
          /**
           * Combined action handling for click/keypress events.
           * @param {!Event} evt
           * @private
           */

        }, {
          key: 'handleAction_',
          value: function handleAction_(evt) {
            var listItem = this.getListItem_(
            /** @type {HTMLElement} */
            evt.target);

            if (listItem) {
              this.handleSelection(listItem);
              this.preventDefaultEvent_(evt);
            }
          }
          /**
           * Handler for a selected list item.
           * @param {?HTMLElement} listItem
           */

        }, {
          key: 'handleSelection',
          value: function handleSelection(listItem) {
            var _this2 = this;

            var index = this.adapter_.getElementIndex(listItem);

            if (index < 0) {
              return;
            }

            this.adapter_.notifySelected({
              index: index
            });
            this.adapter_.closeSurface(); // Wait for the menu to close before adding/removing classes that affect styles.

            this.closeAnimationEndTimerId_ = setTimeout(function () {
              var selectionGroup = _this2.getSelectionGroup_(listItem);

              if (selectionGroup !== null) {
                _this2.handleSelectionGroup_(
                /** @type {!HTMLElement} */
                selectionGroup, index);
              }
            }, __WEBPACK_IMPORTED_MODULE_3__material_menu_surface_foundation__["b"
            /* MDCMenuSurfaceFoundation */
            ].numbers.TRANSITION_CLOSE_DURATION);
          }
          /**
           * Handles toggling the selected classes in a selection group when a
           * selection is made.
           * @param {!HTMLElement} selectionGroup
           * @param {number} index The selected index value
           * @private
           */

        }, {
          key: 'handleSelectionGroup_',
          value: function handleSelectionGroup_(selectionGroup, index) {
            // De-select the previous selection in this group.
            var selectedIndex = this.adapter_.getSelectedElementIndex(selectionGroup);

            if (selectedIndex >= 0) {
              this.adapter_.removeAttributeFromElementAtIndex(selectedIndex, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ARIA_SELECTED_ATTR);
              this.adapter_.removeClassFromElementAtIndex(selectedIndex, __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].MENU_SELECTED_LIST_ITEM);
            } // Select the new list item in this group.


            this.adapter_.addClassToElementAtIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].MENU_SELECTED_LIST_ITEM);
            this.adapter_.addAttributeToElementAtIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_SELECTED_ATTR, 'true');
          }
          /**
           * Returns the parent selection group of an element if one exists.
           * @param listItem
           * @return {?HTMLElement} parent selection group element or null.
           * @private
           */

        }, {
          key: 'getSelectionGroup_',
          value: function getSelectionGroup_(listItem) {
            var parent = this.adapter_.getParentElement(listItem);
            var isGroup = this.adapter_.elementContainsClass(parent, __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].MENU_SELECTION_GROUP); // Iterate through ancestors until we find the group or get to the list.

            while (!isGroup && !this.adapter_.elementContainsClass(parent, __WEBPACK_IMPORTED_MODULE_4__material_list_foundation__["a"
            /* default */
            ].cssClasses.ROOT)) {
              parent = this.adapter_.getParentElement(parent);
              isGroup = this.adapter_.elementContainsClass(parent, __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].MENU_SELECTION_GROUP);
            }

            if (isGroup) {
              return parent;
            } else {
              return null;
            }
          }
          /**
           * Find the first ancestor with the mdc-list-item class.
           * @param {?HTMLElement} target
           * @return {?HTMLElement}
           * @private
           */

        }, {
          key: 'getListItem_',
          value: function getListItem_(target) {
            var isListItem = this.adapter_.elementContainsClass(target, __WEBPACK_IMPORTED_MODULE_4__material_list_foundation__["a"
            /* default */
            ].cssClasses.LIST_ITEM_CLASS);

            while (!isListItem) {
              target = this.adapter_.getParentElement(target);

              if (target) {
                isListItem = this.adapter_.elementContainsClass(target, __WEBPACK_IMPORTED_MODULE_4__material_list_foundation__["a"
                /* default */
                ].cssClasses.LIST_ITEM_CLASS);
              } else {
                // target has no parent element.
                return null;
              }
            }

            return target;
          }
          /**
           * Ensures that preventDefault is only called if the containing element doesn't
           * consume the event, and it will cause an unintended scroll.
           * @param {!Event} evt
           * @private
           */

        }, {
          key: 'preventDefaultEvent_',
          value: function preventDefaultEvent_(evt) {
            var target =
            /** @type {!HTMLElement} */
            evt.target;
            var tagName = ('' + target.tagName).toLowerCase();

            if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {
              evt.preventDefault();
            }
          }
        }]);

        return MDCMenuFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /***/

    },
    /* 48 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* unused harmony export MDCMenuAdapter */

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Menu. Provides an interface for managing
       * - selected element classes
       * - get focused elements
       * - toggling a checkbox inside a list item
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCMenuAdapter = function () {
        function MDCMenuAdapter() {
          _classCallCheck(this, MDCMenuAdapter);
        }

        _createClass(MDCMenuAdapter, [{
          key: "addClassToElementAtIndex",

          /**
           * Adds a class to the element at the index provided.
           * @param {number} index
           * @param {string} className
           */
          value: function addClassToElementAtIndex(index, className) {}
          /**
           * Removes a class from the element at the index provided
           * @param {number} index
           * @param {string} className
           */

        }, {
          key: "removeClassFromElementAtIndex",
          value: function removeClassFromElementAtIndex(index, className) {}
          /**
           * Adds an attribute, with value, to the element at the index provided.
           * @param {number} index
           * @param {string} attr
           * @param {string} value
           */

        }, {
          key: "addAttributeToElementAtIndex",
          value: function addAttributeToElementAtIndex(index, attr, value) {}
          /**
           * Removes an attribute from an element at the index provided.
           * @param {number} index
           * @param {string} attr
           */

        }, {
          key: "removeAttributeFromElementAtIndex",
          value: function removeAttributeFromElementAtIndex(index, attr) {}
          /**
           * Returns true if the element contains the className.
           * @param {?HTMLElement} element
           * @param {string} className
           * @return {boolean} true if the element contains the className
           */

        }, {
          key: "elementContainsClass",
          value: function elementContainsClass(element, className) {}
          /**
           * Closes the menu-surface.
           */

        }, {
          key: "closeSurface",
          value: function closeSurface() {}
          /**
           * Returns the index for the element provided.
           * @param {?HTMLElement} element
           * @return {number} index of the element in the list or -1 if it is not in the list.
           */

        }, {
          key: "getElementIndex",
          value: function getElementIndex(element) {}
          /**
           * Returns the parentElement of the provided element.
           * @param {?HTMLElement} element
           * @return {?HTMLElement} parentElement of the element provided.
           */

        }, {
          key: "getParentElement",
          value: function getParentElement(element) {}
          /**
           * Returns the element within the selectionGroup containing the selected element class.
           * @param {!HTMLElement} selectionGroup
           * @return {number} element within the selectionGroup that contains the selected element class.
           */

        }, {
          key: "getSelectedElementIndex",
          value: function getSelectedElementIndex(selectionGroup) {}
          /**
           * Emits an event using the evtData.
           * @param {{
          *    index: number
          *   }} evtData
           */

        }, {
          key: "notifySelected",
          value: function notifySelected(evtData) {}
        }]);

        return MDCMenuAdapter;
      }();
      /***/

    }])
  );
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/@material/ripple/adapter.js":
/*!**************************************************!*\
  !*** ./node_modules/@material/ripple/adapter.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Ripple. Provides an interface for managing
 * - classes
 * - dom
 * - CSS variables
 * - position
 * - dimensions
 * - scroll position
 * - event handlers
 * - unbounded, active and disabled states
 *
 * Additionally, provides type information for the adapter to the Closure
 * compiler.
 *
 * Implement this adapter for your framework of choice to delegate updates to
 * the component in your framework of choice. See architecture documentation
 * for more details.
 * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
 *
 * @record
 */
var MDCRippleAdapter =
/*#__PURE__*/
function () {
  function MDCRippleAdapter() {
    _classCallCheck(this, MDCRippleAdapter);
  }

  _createClass(MDCRippleAdapter, [{
    key: "browserSupportsCssVars",

    /** @return {boolean} */
    value: function browserSupportsCssVars() {}
    /** @return {boolean} */

  }, {
    key: "isUnbounded",
    value: function isUnbounded() {}
    /** @return {boolean} */

  }, {
    key: "isSurfaceActive",
    value: function isSurfaceActive() {}
    /** @return {boolean} */

  }, {
    key: "isSurfaceDisabled",
    value: function isSurfaceDisabled() {}
    /** @param {string} className */

  }, {
    key: "addClass",
    value: function addClass(className) {}
    /** @param {string} className */

  }, {
    key: "removeClass",
    value: function removeClass(className) {}
    /** @param {!EventTarget} target */

  }, {
    key: "containsEventTarget",
    value: function containsEventTarget(target) {}
    /**
     * @param {string} evtType
     * @param {!Function} handler
     */

  }, {
    key: "registerInteractionHandler",
    value: function registerInteractionHandler(evtType, handler) {}
    /**
     * @param {string} evtType
     * @param {!Function} handler
     */

  }, {
    key: "deregisterInteractionHandler",
    value: function deregisterInteractionHandler(evtType, handler) {}
    /**
     * @param {string} evtType
     * @param {!Function} handler
     */

  }, {
    key: "registerDocumentInteractionHandler",
    value: function registerDocumentInteractionHandler(evtType, handler) {}
    /**
     * @param {string} evtType
     * @param {!Function} handler
     */

  }, {
    key: "deregisterDocumentInteractionHandler",
    value: function deregisterDocumentInteractionHandler(evtType, handler) {}
    /**
     * @param {!Function} handler
     */

  }, {
    key: "registerResizeHandler",
    value: function registerResizeHandler(handler) {}
    /**
     * @param {!Function} handler
     */

  }, {
    key: "deregisterResizeHandler",
    value: function deregisterResizeHandler(handler) {}
    /**
     * @param {string} varName
     * @param {?number|string} value
     */

  }, {
    key: "updateCssVariable",
    value: function updateCssVariable(varName, value) {}
    /** @return {!ClientRect} */

  }, {
    key: "computeBoundingRect",
    value: function computeBoundingRect() {}
    /** @return {{x: number, y: number}} */

  }, {
    key: "getWindowPageOffset",
    value: function getWindowPageOffset() {}
  }]);

  return MDCRippleAdapter;
}();

/* harmony default export */ __webpack_exports__["default"] = (MDCRippleAdapter);

/***/ }),

/***/ "./node_modules/@material/ripple/constants.js":
/*!****************************************************!*\
  !*** ./node_modules/@material/ripple/constants.js ***!
  \****************************************************/
/*! exports provided: cssClasses, strings, numbers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cssClasses", function() { return cssClasses; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "strings", function() { return strings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "numbers", function() { return numbers; });
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var cssClasses = {
  // Ripple is a special case where the "root" component is really a "mixin" of sorts,
  // given that it's an 'upgrade' to an existing component. That being said it is the root
  // CSS class that all other CSS classes derive from.
  ROOT: 'mdc-ripple-upgraded',
  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',
  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',
  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',
  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation'
};
var strings = {
  VAR_LEFT: '--mdc-ripple-left',
  VAR_TOP: '--mdc-ripple-top',
  VAR_FG_SIZE: '--mdc-ripple-fg-size',
  VAR_FG_SCALE: '--mdc-ripple-fg-scale',
  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',
  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end'
};
var numbers = {
  PADDING: 10,
  INITIAL_ORIGIN_SCALE: 0.6,
  DEACTIVATION_TIMEOUT_MS: 225,
  // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)
  FG_DEACTIVATION_MS: 150,
  // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)
  TAP_DELAY_MS: 300 // Delay between touch and simulated mouse events on touch devices

};


/***/ }),

/***/ "./node_modules/@material/ripple/dist/mdc.ripple.js":
/*!**********************************************************!*\
  !*** ./node_modules/@material/ripple/dist/mdc.ripple.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 Material Components for the Web
 Copyright (c) 2019 Google Inc.
 License: MIT
*/
(function webpackUniversalModuleDefinition(root, factory) {
  if (( false ? undefined : _typeof(exports)) === 'object' && ( false ? undefined : _typeof(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}
})(this, function () {
  return (
    /******/
    function (modules) {
      // webpackBootstrap

      /******/
      // The module cache

      /******/
      var installedModules = {};
      /******/

      /******/
      // The require function

      /******/

      function __webpack_require__(moduleId) {
        /******/

        /******/
        // Check if module is in cache

        /******/
        if (installedModules[moduleId]) {
          /******/
          return installedModules[moduleId].exports;
          /******/
        }
        /******/
        // Create a new module (and put it into the cache)

        /******/


        var module = installedModules[moduleId] = {
          /******/
          i: moduleId,

          /******/
          l: false,

          /******/
          exports: {}
          /******/

        };
        /******/

        /******/
        // Execute the module function

        /******/

        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/

        /******/
        // Flag the module as loaded

        /******/

        module.l = true;
        /******/

        /******/
        // Return the exports of the module

        /******/

        return module.exports;
        /******/
      }
      /******/

      /******/

      /******/
      // expose the modules object (__webpack_modules__)

      /******/


      __webpack_require__.m = modules;
      /******/

      /******/
      // expose the module cache

      /******/

      __webpack_require__.c = installedModules;
      /******/

      /******/
      // define getter function for harmony exports

      /******/

      __webpack_require__.d = function (exports, name, getter) {
        /******/
        if (!__webpack_require__.o(exports, name)) {
          /******/
          Object.defineProperty(exports, name, {
            /******/
            configurable: false,

            /******/
            enumerable: true,

            /******/
            get: getter
            /******/

          });
          /******/
        }
        /******/

      };
      /******/

      /******/
      // getDefaultExport function for compatibility with non-harmony modules

      /******/


      __webpack_require__.n = function (module) {
        /******/
        var getter = module && module.__esModule ?
        /******/
        function getDefault() {
          return module['default'];
        } :
        /******/
        function getModuleExports() {
          return module;
        };
        /******/

        __webpack_require__.d(getter, 'a', getter);
        /******/


        return getter;
        /******/
      };
      /******/

      /******/
      // Object.prototype.hasOwnProperty.call

      /******/


      __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      /******/

      /******/
      // __webpack_public_path__

      /******/


      __webpack_require__.p = "";
      /******/

      /******/
      // Load entry module and return exports

      /******/

      return __webpack_require__(__webpack_require__.s = 4);
      /******/
    }(
    /************************************************************************/

    /******/
    [
    /* 0 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @template A
       */


      var MDCFoundation = function () {
        _createClass(MDCFoundation, null, [{
          key: "cssClasses",

          /** @return enum{cssClasses} */
          get: function get() {
            // Classes extending MDCFoundation should implement this method to return an object which exports every
            // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}
            return {};
          }
          /** @return enum{strings} */

        }, {
          key: "strings",
          get: function get() {
            // Classes extending MDCFoundation should implement this method to return an object which exports all
            // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}
            return {};
          }
          /** @return enum{numbers} */

        }, {
          key: "numbers",
          get: function get() {
            // Classes extending MDCFoundation should implement this method to return an object which exports all
            // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}
            return {};
          }
          /** @return {!Object} */

        }, {
          key: "defaultAdapter",
          get: function get() {
            // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient
            // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter
            // validation.
            return {};
          }
          /**
           * @param {A=} adapter
           */

        }]);

        function MDCFoundation() {
          var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

          _classCallCheck(this, MDCFoundation);
          /** @protected {!A} */


          this.adapter_ = adapter;
        }

        _createClass(MDCFoundation, [{
          key: "init",
          value: function init() {// Subclasses should override this method to perform initialization routines (registering events, etc.)
          }
        }, {
          key: "destroy",
          value: function destroy() {// Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)
          }
        }]);

        return MDCFoundation;
      }();
      /* harmony default export */


      __webpack_exports__["a"] = MDCFoundation;
      /***/
    },
    /* 1 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @template F
       */


      var MDCComponent = function () {
        _createClass(MDCComponent, null, [{
          key: 'attachTo',

          /**
           * @param {!Element} root
           * @return {!MDCComponent}
           */
          value: function attachTo(root) {
            // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and
            // returns an instantiated component with its root set to that element. Also note that in the cases of
            // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized
            // from getDefaultFoundation().
            return new MDCComponent(root, new __WEBPACK_IMPORTED_MODULE_0__foundation__["a"
            /* default */
            ]());
          }
          /**
           * @param {!Element} root
           * @param {F=} foundation
           * @param {...?} args
           */

        }]);

        function MDCComponent(root) {
          var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

          _classCallCheck(this, MDCComponent);
          /** @protected {!Element} */


          this.root_ = root;

          for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
            args[_key - 2] = arguments[_key];
          }

          this.initialize.apply(this, args); // Note that we initialize foundation here and not within the constructor's default param so that
          // this.root_ is defined and can be used within the foundation class.

          /** @protected {!F} */

          this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;
          this.foundation_.init();
          this.initialSyncWithDOM();
        }

        _createClass(MDCComponent, [{
          key: 'initialize',
          value: function initialize()
          /* ...args */
          {} // Subclasses can override this to do any additional setup work that would be considered part of a
          // "constructor". Essentially, it is a hook into the parent constructor before the foundation is
          // initialized. Any additional arguments besides root and foundation will be passed in here.

          /**
           * @return {!F} foundation
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            // Subclasses must override this method to return a properly configured foundation class for the
            // component.
            throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {// Subclasses should override this method if they need to perform work to synchronize with a host DOM
            // object. An example of this would be a form control wrapper that needs to synchronize its internal state
            // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM
            // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            // Subclasses may implement this method to release any resources / deregister any listeners they have
            // attached. An example of this might be deregistering a resize event from the window object.
            this.foundation_.destroy();
          }
          /**
           * Wrapper method to add an event listener to the component's root element. This is most useful when
           * listening for custom events.
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: 'listen',
          value: function listen(evtType, handler) {
            this.root_.addEventListener(evtType, handler);
          }
          /**
           * Wrapper method to remove an event listener to the component's root element. This is most useful when
           * unlistening for custom events.
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: 'unlisten',
          value: function unlisten(evtType, handler) {
            this.root_.removeEventListener(evtType, handler);
          }
          /**
           * Fires a cross-browser-compatible custom event from the component root of the given type,
           * with the given data.
           * @param {string} evtType
           * @param {!Object} evtData
           * @param {boolean=} shouldBubble
           */

        }, {
          key: 'emit',
          value: function emit(evtType, evtData) {
            var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var evt = void 0;

            if (typeof CustomEvent === 'function') {
              evt = new CustomEvent(evtType, {
                detail: evtData,
                bubbles: shouldBubble
              });
            } else {
              evt = document.createEvent('CustomEvent');
              evt.initCustomEvent(evtType, shouldBubble, false, evtData);
            }

            this.root_.dispatchEvent(evt);
          }
        }]);

        return MDCComponent;
      }();
      /* harmony default export */


      __webpack_exports__["a"] = MDCComponent;
      /***/
    },
    /* 2 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "supportsCssVariables", function () {
        return supportsCssVariables;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "applyPassive", function () {
        return applyPassive;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getMatchesProperty", function () {
        return getMatchesProperty;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getNormalizedEventCoords", function () {
        return getNormalizedEventCoords;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.
       * @private {boolean|undefined}
       */


      var supportsCssVariables_ = void 0;
      /**
       * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.
       * @private {boolean|undefined}
       */

      var supportsPassive_ = void 0;
      /**
       * @param {!Window} windowObj
       * @return {boolean}
       */

      function detectEdgePseudoVarBug(windowObj) {
        // Detect versions of Edge with buggy var() support
        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/
        var document = windowObj.document;
        var node = document.createElement('div');
        node.className = 'mdc-ripple-surface--test-edge-var-bug';
        document.body.appendChild(node); // The bug exists if ::before style ends up propagating to the parent element.
        // Additionally, getComputedStyle returns null in iframes with display: "none" in Firefox,
        // but Firefox is known to support CSS custom properties correctly.
        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397

        var computedStyle = windowObj.getComputedStyle(node);
        var hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';
        node.remove();
        return hasPseudoVarBug;
      }
      /**
       * @param {!Window} windowObj
       * @param {boolean=} forceRefresh
       * @return {boolean|undefined}
       */


      function supportsCssVariables(windowObj) {
        var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        var supportsCssVariables = supportsCssVariables_;

        if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {
          return supportsCssVariables;
        }

        var supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';

        if (!supportsFunctionPresent) {
          return;
        }

        var explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes'); // See: https://bugs.webkit.org/show_bug.cgi?id=154669
        // See: README section on Safari

        var weAreFeatureDetectingSafari10plus = windowObj.CSS.supports('(--css-vars: yes)') && windowObj.CSS.supports('color', '#00000000');

        if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {
          supportsCssVariables = !detectEdgePseudoVarBug(windowObj);
        } else {
          supportsCssVariables = false;
        }

        if (!forceRefresh) {
          supportsCssVariables_ = supportsCssVariables;
        }

        return supportsCssVariables;
      } //

      /**
       * Determine whether the current browser supports passive event listeners, and if so, use them.
       * @param {!Window=} globalObj
       * @param {boolean=} forceRefresh
       * @return {boolean|!EventListenerOptions}
       */


      function applyPassive() {
        var globalObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
        var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        if (supportsPassive_ === undefined || forceRefresh) {
          var isSupported = false;

          try {
            globalObj.document.addEventListener('test', null, {
              get passive() {
                isSupported = true;
                return isSupported;
              }

            });
          } catch (e) {}

          supportsPassive_ = isSupported;
        }

        return supportsPassive_ ?
        /** @type {!EventListenerOptions} */
        {
          passive: true
        } : false;
      }
      /**
       * @param {!Object} HTMLElementPrototype
       * @return {string}
       */


      function getMatchesProperty(HTMLElementPrototype) {
        /**
         * Order is important because we return the first existing method we find.
         * Do not change the order of the items in the below array.
         */
        var matchesMethods = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'];
        var method = 'matches';

        for (var i = 0; i < matchesMethods.length; i++) {
          var matchesMethod = matchesMethods[i];

          if (matchesMethod in HTMLElementPrototype) {
            method = matchesMethod;
            break;
          }
        }

        return method;
      }
      /**
       * @param {!Event} ev
       * @param {{x: number, y: number}} pageOffset
       * @param {!ClientRect} clientRect
       * @return {{x: number, y: number}}
       */


      function getNormalizedEventCoords(ev, pageOffset, clientRect) {
        var x = pageOffset.x,
            y = pageOffset.y;
        var documentX = x + clientRect.left;
        var documentY = y + clientRect.top;
        var normalizedX = void 0;
        var normalizedY = void 0; // Determine touch point relative to the ripple container.

        if (ev.type === 'touchstart') {
          ev =
          /** @type {!TouchEvent} */
          ev;
          normalizedX = ev.changedTouches[0].pageX - documentX;
          normalizedY = ev.changedTouches[0].pageY - documentY;
        } else {
          ev =
          /** @type {!MouseEvent} */
          ev;
          normalizedX = ev.pageX - documentX;
          normalizedY = ev.pageY - documentY;
        }

        return {
          x: normalizedX,
          y: normalizedY
        };
      }
      /***/

    },
    /* 3 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Ripple. Provides an interface for managing
       * - classes
       * - dom
       * - CSS variables
       * - position
       * - dimensions
       * - scroll position
       * - event handlers
       * - unbounded, active and disabled states
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCRippleAdapter = function () {
        function MDCRippleAdapter() {
          _classCallCheck(this, MDCRippleAdapter);
        }

        _createClass(MDCRippleAdapter, [{
          key: "browserSupportsCssVars",

          /** @return {boolean} */
          value: function browserSupportsCssVars() {}
          /** @return {boolean} */

        }, {
          key: "isUnbounded",
          value: function isUnbounded() {}
          /** @return {boolean} */

        }, {
          key: "isSurfaceActive",
          value: function isSurfaceActive() {}
          /** @return {boolean} */

        }, {
          key: "isSurfaceDisabled",
          value: function isSurfaceDisabled() {}
          /** @param {string} className */

        }, {
          key: "addClass",
          value: function addClass(className) {}
          /** @param {string} className */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /** @param {!EventTarget} target */

        }, {
          key: "containsEventTarget",
          value: function containsEventTarget(target) {}
          /**
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: "registerInteractionHandler",
          value: function registerInteractionHandler(evtType, handler) {}
          /**
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: "deregisterInteractionHandler",
          value: function deregisterInteractionHandler(evtType, handler) {}
          /**
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: "registerDocumentInteractionHandler",
          value: function registerDocumentInteractionHandler(evtType, handler) {}
          /**
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: "deregisterDocumentInteractionHandler",
          value: function deregisterDocumentInteractionHandler(evtType, handler) {}
          /**
           * @param {!Function} handler
           */

        }, {
          key: "registerResizeHandler",
          value: function registerResizeHandler(handler) {}
          /**
           * @param {!Function} handler
           */

        }, {
          key: "deregisterResizeHandler",
          value: function deregisterResizeHandler(handler) {}
          /**
           * @param {string} varName
           * @param {?number|string} value
           */

        }, {
          key: "updateCssVariable",
          value: function updateCssVariable(varName, value) {}
          /** @return {!ClientRect} */

        }, {
          key: "computeBoundingRect",
          value: function computeBoundingRect() {}
          /** @return {{x: number, y: number}} */

        }, {
          key: "getWindowPageOffset",
          value: function getWindowPageOffset() {}
        }]);

        return MDCRippleAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCRippleAdapter;
      /***/
    },
    /* 4 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCRipple", function () {
        return MDCRipple;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "RippleCapableSurface", function () {
        return RippleCapableSurface;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(2);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCRippleFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "util", function () {
        return __WEBPACK_IMPORTED_MODULE_3__util__;
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends MDCComponent<!MDCRippleFoundation>
       */


      var MDCRipple = function (_MDCComponent) {
        _inherits(MDCRipple, _MDCComponent);
        /** @param {...?} args */


        function MDCRipple() {
          var _ref;

          _classCallCheck(this, MDCRipple);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @type {boolean} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCRipple.__proto__ || Object.getPrototypeOf(MDCRipple)).call.apply(_ref, [this].concat(args)));

          _this.disabled = false;
          /** @private {boolean} */

          _this.unbounded_;
          return _this;
        }
        /**
         * @param {!Element} root
         * @param {{isUnbounded: (boolean|undefined)}=} options
         * @return {!MDCRipple}
         */


        _createClass(MDCRipple, [{
          key: 'setUnbounded_',

          /**
           * Closure Compiler throws an access control error when directly accessing a
           * protected or private property inside a getter/setter, like unbounded above.
           * By accessing the protected property inside a method, we solve that problem.
           * That's why this function exists.
           * @private
           */
          value: function setUnbounded_() {
            this.foundation_.setUnbounded(this.unbounded_);
          }
        }, {
          key: 'activate',
          value: function activate() {
            this.foundation_.activate();
          }
        }, {
          key: 'deactivate',
          value: function deactivate() {
            this.foundation_.deactivate();
          }
        }, {
          key: 'layout',
          value: function layout() {
            this.foundation_.layout();
          }
          /**
           * @return {!MDCRippleFoundation}
           * @override
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ](MDCRipple.createAdapter(this));
          }
          /** @override */

        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;
          }
        }, {
          key: 'unbounded',

          /** @return {boolean} */
          get: function get() {
            return this.unbounded_;
          }
          /** @param {boolean} unbounded */
          ,
          set: function set(unbounded) {
            this.unbounded_ = Boolean(unbounded);
            this.setUnbounded_();
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
                _ref2$isUnbounded = _ref2.isUnbounded,
                isUnbounded = _ref2$isUnbounded === undefined ? undefined : _ref2$isUnbounded;

            var ripple = new MDCRipple(root); // Only override unbounded behavior if option is explicitly specified

            if (isUnbounded !== undefined) {
              ripple.unbounded =
              /** @type {boolean} */
              isUnbounded;
            }

            return ripple;
          }
          /**
           * @param {!RippleCapableSurface} instance
           * @return {!MDCRippleAdapter}
           */

        }, {
          key: 'createAdapter',
          value: function createAdapter(instance) {
            var MATCHES = __WEBPACK_IMPORTED_MODULE_3__util__["getMatchesProperty"](HTMLElement.prototype);

            return {
              browserSupportsCssVars: function browserSupportsCssVars() {
                return __WEBPACK_IMPORTED_MODULE_3__util__["supportsCssVariables"](window);
              },
              isUnbounded: function isUnbounded() {
                return instance.unbounded;
              },
              isSurfaceActive: function isSurfaceActive() {
                return instance.root_[MATCHES](':active');
              },
              isSurfaceDisabled: function isSurfaceDisabled() {
                return instance.disabled;
              },
              addClass: function addClass(className) {
                return instance.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return instance.root_.classList.remove(className);
              },
              containsEventTarget: function containsEventTarget(target) {
                return instance.root_.contains(target);
              },
              registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
                return instance.root_.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
              },
              deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
                return instance.root_.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
              },
              registerDocumentInteractionHandler: function registerDocumentInteractionHandler(evtType, handler) {
                return document.documentElement.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
              },
              deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler(evtType, handler) {
                return document.documentElement.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
              },
              registerResizeHandler: function registerResizeHandler(handler) {
                return window.addEventListener('resize', handler);
              },
              deregisterResizeHandler: function deregisterResizeHandler(handler) {
                return window.removeEventListener('resize', handler);
              },
              updateCssVariable: function updateCssVariable(varName, value) {
                return instance.root_.style.setProperty(varName, value);
              },
              computeBoundingRect: function computeBoundingRect() {
                return instance.root_.getBoundingClientRect();
              },
              getWindowPageOffset: function getWindowPageOffset() {
                return {
                  x: window.pageXOffset,
                  y: window.pageYOffset
                };
              }
            };
          }
        }]);

        return MDCRipple;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /**
       * See Material Design spec for more details on when to use ripples.
       * https://material.io/guidelines/motion/choreography.html#choreography-creation
       * @record
       */


      var RippleCapableSurface = function RippleCapableSurface() {
        _classCallCheck(this, RippleCapableSurface);
      };
      /** @protected {!Element} */


      RippleCapableSurface.prototype.root_;
      /**
       * Whether or not the ripple bleeds out of the bounds of the element.
       * @type {boolean|undefined}
       */

      RippleCapableSurface.prototype.unbounded;
      /**
       * Whether or not the ripple is attached to a disabled component.
       * @type {boolean|undefined}
       */

      RippleCapableSurface.prototype.disabled;
      /***/
    },
    /* 5 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(2);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @typedef {{
       *   isActivated: (boolean|undefined),
       *   hasDeactivationUXRun: (boolean|undefined),
       *   wasActivatedByPointer: (boolean|undefined),
       *   wasElementMadeActive: (boolean|undefined),
       *   activationEvent: (!Event|undefined),
       *   isProgrammatic: (boolean|undefined)
       * }}
       */


      var ActivationStateType = void 0;
      /**
       * @typedef {{
       *   activate: (string|undefined),
       *   deactivate: (string|undefined),
       *   focus: (string|undefined),
       *   blur: (string|undefined)
       * }}
       */

      var ListenerInfoType = void 0;
      /**
       * @typedef {{
       *   activate: function(!Event),
       *   deactivate: function(!Event=),
       *   focus: function(),
       *   blur: function()
       * }}
       */

      var ListenersType = void 0;
      /**
       * @typedef {{
       *   x: number,
       *   y: number
       * }}
       */

      var PointType = void 0; // Activation events registered on the root element of each instance for activation

      var ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown']; // Deactivation events registered on documentElement when a pointer-related down event occurs

      var POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu']; // Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations

      /** @type {!Array<!EventTarget>} */

      var activatedTargets = [];
      /**
       * @extends {MDCFoundation<!MDCRippleAdapter>}
       */

      var MDCRippleFoundation = function (_MDCFoundation) {
        _inherits(MDCRippleFoundation, _MDCFoundation);

        _createClass(MDCRippleFoundation, null, [{
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["c"
            /* strings */
            ];
          }
        }, {
          key: 'numbers',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* numbers */
            ];
          }
        }, {
          key: 'defaultAdapter',
          get: function get() {
            return {
              browserSupportsCssVars: function browserSupportsCssVars()
              /* boolean - cached */
              {},
              isUnbounded: function isUnbounded()
              /* boolean */
              {},
              isSurfaceActive: function isSurfaceActive()
              /* boolean */
              {},
              isSurfaceDisabled: function isSurfaceDisabled()
              /* boolean */
              {},
              addClass: function addClass()
              /* className: string */
              {},
              removeClass: function removeClass()
              /* className: string */
              {},
              containsEventTarget: function containsEventTarget()
              /* target: !EventTarget */
              {},
              registerInteractionHandler: function registerInteractionHandler()
              /* evtType: string, handler: EventListener */
              {},
              deregisterInteractionHandler: function deregisterInteractionHandler()
              /* evtType: string, handler: EventListener */
              {},
              registerDocumentInteractionHandler: function registerDocumentInteractionHandler()
              /* evtType: string, handler: EventListener */
              {},
              deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler()
              /* evtType: string, handler: EventListener */
              {},
              registerResizeHandler: function registerResizeHandler()
              /* handler: EventListener */
              {},
              deregisterResizeHandler: function deregisterResizeHandler()
              /* handler: EventListener */
              {},
              updateCssVariable: function updateCssVariable()
              /* varName: string, value: string */
              {},
              computeBoundingRect: function computeBoundingRect()
              /* ClientRect */
              {},
              getWindowPageOffset: function getWindowPageOffset()
              /* {x: number, y: number} */
              {}
            };
          }
        }]);

        function MDCRippleFoundation(adapter) {
          _classCallCheck(this, MDCRippleFoundation);
          /** @private {number} */


          var _this = _possibleConstructorReturn(this, (MDCRippleFoundation.__proto__ || Object.getPrototypeOf(MDCRippleFoundation)).call(this, _extends(MDCRippleFoundation.defaultAdapter, adapter)));

          _this.layoutFrame_ = 0;
          /** @private {!ClientRect} */

          _this.frame_ =
          /** @type {!ClientRect} */
          {
            width: 0,
            height: 0
          };
          /** @private {!ActivationStateType} */

          _this.activationState_ = _this.defaultActivationState_();
          /** @private {number} */

          _this.initialSize_ = 0;
          /** @private {number} */

          _this.maxRadius_ = 0;
          /** @private {function(!Event)} */

          _this.activateHandler_ = function (e) {
            return _this.activate_(e);
          };
          /** @private {function(!Event=)} */


          _this.deactivateHandler_ = function () {
            return _this.deactivate_();
          };
          /** @private {function(!Event=)} */


          _this.focusHandler_ = function () {
            return _this.handleFocus();
          };
          /** @private {function(!Event=)} */


          _this.blurHandler_ = function () {
            return _this.handleBlur();
          };
          /** @private {!Function} */


          _this.resizeHandler_ = function () {
            return _this.layout();
          };
          /** @private {{left: number, top:number}} */


          _this.unboundedCoords_ = {
            left: 0,
            top: 0
          };
          /** @private {number} */

          _this.fgScale_ = 0;
          /** @private {number} */

          _this.activationTimer_ = 0;
          /** @private {number} */

          _this.fgDeactivationRemovalTimer_ = 0;
          /** @private {boolean} */

          _this.activationAnimationHasEnded_ = false;
          /** @private {!Function} */

          _this.activationTimerCallback_ = function () {
            _this.activationAnimationHasEnded_ = true;

            _this.runDeactivationUXLogicIfReady_();
          };
          /** @private {!Event|undefined} */


          _this.previousActivationEvent_;
          return _this;
        }
        /**
         * We compute this property so that we are not querying information about the client
         * until the point in time where the foundation requests it. This prevents scenarios where
         * client-side feature-detection may happen too early, such as when components are rendered on the server
         * and then initialized at mount time on the client.
         * @return {boolean}
         * @private
         */


        _createClass(MDCRippleFoundation, [{
          key: 'supportsPressRipple_',
          value: function supportsPressRipple_() {
            return this.adapter_.browserSupportsCssVars();
          }
          /**
           * @return {!ActivationStateType}
           */

        }, {
          key: 'defaultActivationState_',
          value: function defaultActivationState_() {
            return {
              isActivated: false,
              hasDeactivationUXRun: false,
              wasActivatedByPointer: false,
              wasElementMadeActive: false,
              activationEvent: undefined,
              isProgrammatic: false
            };
          }
          /** @override */

        }, {
          key: 'init',
          value: function init() {
            var _this2 = this;

            var supportsPressRipple = this.supportsPressRipple_();
            this.registerRootHandlers_(supportsPressRipple);

            if (supportsPressRipple) {
              var _MDCRippleFoundation$ = MDCRippleFoundation.cssClasses,
                  ROOT = _MDCRippleFoundation$.ROOT,
                  UNBOUNDED = _MDCRippleFoundation$.UNBOUNDED;
              requestAnimationFrame(function () {
                _this2.adapter_.addClass(ROOT);

                if (_this2.adapter_.isUnbounded()) {
                  _this2.adapter_.addClass(UNBOUNDED); // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple


                  _this2.layoutInternal_();
                }
              });
            }
          }
          /** @override */

        }, {
          key: 'destroy',
          value: function destroy() {
            var _this3 = this;

            if (this.supportsPressRipple_()) {
              if (this.activationTimer_) {
                clearTimeout(this.activationTimer_);
                this.activationTimer_ = 0;
                this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);
              }

              if (this.fgDeactivationRemovalTimer_) {
                clearTimeout(this.fgDeactivationRemovalTimer_);
                this.fgDeactivationRemovalTimer_ = 0;
                this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);
              }

              var _MDCRippleFoundation$2 = MDCRippleFoundation.cssClasses,
                  ROOT = _MDCRippleFoundation$2.ROOT,
                  UNBOUNDED = _MDCRippleFoundation$2.UNBOUNDED;
              requestAnimationFrame(function () {
                _this3.adapter_.removeClass(ROOT);

                _this3.adapter_.removeClass(UNBOUNDED);

                _this3.removeCssVars_();
              });
            }

            this.deregisterRootHandlers_();
            this.deregisterDeactivationHandlers_();
          }
          /**
           * @param {boolean} supportsPressRipple Passed from init to save a redundant function call
           * @private
           */

        }, {
          key: 'registerRootHandlers_',
          value: function registerRootHandlers_(supportsPressRipple) {
            var _this4 = this;

            if (supportsPressRipple) {
              ACTIVATION_EVENT_TYPES.forEach(function (type) {
                _this4.adapter_.registerInteractionHandler(type, _this4.activateHandler_);
              });

              if (this.adapter_.isUnbounded()) {
                this.adapter_.registerResizeHandler(this.resizeHandler_);
              }
            }

            this.adapter_.registerInteractionHandler('focus', this.focusHandler_);
            this.adapter_.registerInteractionHandler('blur', this.blurHandler_);
          }
          /**
           * @param {!Event} e
           * @private
           */

        }, {
          key: 'registerDeactivationHandlers_',
          value: function registerDeactivationHandlers_(e) {
            var _this5 = this;

            if (e.type === 'keydown') {
              this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);
            } else {
              POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
                _this5.adapter_.registerDocumentInteractionHandler(type, _this5.deactivateHandler_);
              });
            }
          }
          /** @private */

        }, {
          key: 'deregisterRootHandlers_',
          value: function deregisterRootHandlers_() {
            var _this6 = this;

            ACTIVATION_EVENT_TYPES.forEach(function (type) {
              _this6.adapter_.deregisterInteractionHandler(type, _this6.activateHandler_);
            });
            this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);
            this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);

            if (this.adapter_.isUnbounded()) {
              this.adapter_.deregisterResizeHandler(this.resizeHandler_);
            }
          }
          /** @private */

        }, {
          key: 'deregisterDeactivationHandlers_',
          value: function deregisterDeactivationHandlers_() {
            var _this7 = this;

            this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);
            POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
              _this7.adapter_.deregisterDocumentInteractionHandler(type, _this7.deactivateHandler_);
            });
          }
          /** @private */

        }, {
          key: 'removeCssVars_',
          value: function removeCssVars_() {
            var _this8 = this;

            var strings = MDCRippleFoundation.strings;
            Object.keys(strings).forEach(function (k) {
              if (k.indexOf('VAR_') === 0) {
                _this8.adapter_.updateCssVariable(strings[k], null);
              }
            });
          }
          /**
           * @param {!Event=} e
           * @private
           */

        }, {
          key: 'activate_',
          value: function activate_(e) {
            var _this9 = this;

            if (this.adapter_.isSurfaceDisabled()) {
              return;
            }

            var activationState = this.activationState_;

            if (activationState.isActivated) {
              return;
            } // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction


            var previousActivationEvent = this.previousActivationEvent_;
            var isSameInteraction = previousActivationEvent && e !== undefined && previousActivationEvent.type !== e.type;

            if (isSameInteraction) {
              return;
            }

            activationState.isActivated = true;
            activationState.isProgrammatic = e === undefined;
            activationState.activationEvent = e;
            activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e !== undefined && (e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown');
            var hasActivatedChild = e !== undefined && activatedTargets.length > 0 && activatedTargets.some(function (target) {
              return _this9.adapter_.containsEventTarget(target);
            });

            if (hasActivatedChild) {
              // Immediately reset activation state, while preserving logic that prevents touch follow-on events
              this.resetActivationState_();
              return;
            }

            if (e !== undefined) {
              activatedTargets.push(
              /** @type {!EventTarget} */
              e.target);
              this.registerDeactivationHandlers_(e);
            }

            activationState.wasElementMadeActive = this.checkElementMadeActive_(e);

            if (activationState.wasElementMadeActive) {
              this.animateActivation_();
            }

            requestAnimationFrame(function () {
              // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples
              activatedTargets = [];

              if (!activationState.wasElementMadeActive && e !== undefined && (e.key === ' ' || e.keyCode === 32)) {
                // If space was pressed, try again within an rAF call to detect :active, because different UAs report
                // active states inconsistently when they're called within event handling code:
                // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971
                // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741
                // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS
                // variable is set within a rAF callback for a submit button interaction (#2241).
                activationState.wasElementMadeActive = _this9.checkElementMadeActive_(e);

                if (activationState.wasElementMadeActive) {
                  _this9.animateActivation_();
                }
              }

              if (!activationState.wasElementMadeActive) {
                // Reset activation state immediately if element was not made active.
                _this9.activationState_ = _this9.defaultActivationState_();
              }
            });
          }
          /**
           * @param {!Event=} e
           * @private
           */

        }, {
          key: 'checkElementMadeActive_',
          value: function checkElementMadeActive_(e) {
            return e !== undefined && e.type === 'keydown' ? this.adapter_.isSurfaceActive() : true;
          }
          /**
           * @param {!Event=} event Optional event containing position information.
           */

        }, {
          key: 'activate',
          value: function activate(event) {
            this.activate_(event);
          }
          /** @private */

        }, {
          key: 'animateActivation_',
          value: function animateActivation_() {
            var _this10 = this;

            var _MDCRippleFoundation$3 = MDCRippleFoundation.strings,
                VAR_FG_TRANSLATE_START = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_START,
                VAR_FG_TRANSLATE_END = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_END;
            var _MDCRippleFoundation$4 = MDCRippleFoundation.cssClasses,
                FG_DEACTIVATION = _MDCRippleFoundation$4.FG_DEACTIVATION,
                FG_ACTIVATION = _MDCRippleFoundation$4.FG_ACTIVATION;
            var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;
            this.layoutInternal_();
            var translateStart = '';
            var translateEnd = '';

            if (!this.adapter_.isUnbounded()) {
              var _getFgTranslationCoor = this.getFgTranslationCoordinates_(),
                  startPoint = _getFgTranslationCoor.startPoint,
                  endPoint = _getFgTranslationCoor.endPoint;

              translateStart = startPoint.x + 'px, ' + startPoint.y + 'px';
              translateEnd = endPoint.x + 'px, ' + endPoint.y + 'px';
            }

            this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);
            this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd); // Cancel any ongoing activation/deactivation animations

            clearTimeout(this.activationTimer_);
            clearTimeout(this.fgDeactivationRemovalTimer_);
            this.rmBoundedActivationClasses_();
            this.adapter_.removeClass(FG_DEACTIVATION); // Force layout in order to re-trigger the animation.

            this.adapter_.computeBoundingRect();
            this.adapter_.addClass(FG_ACTIVATION);
            this.activationTimer_ = setTimeout(function () {
              return _this10.activationTimerCallback_();
            }, DEACTIVATION_TIMEOUT_MS);
          }
          /**
           * @private
           * @return {{startPoint: PointType, endPoint: PointType}}
           */

        }, {
          key: 'getFgTranslationCoordinates_',
          value: function getFgTranslationCoordinates_() {
            var _activationState_ = this.activationState_,
                activationEvent = _activationState_.activationEvent,
                wasActivatedByPointer = _activationState_.wasActivatedByPointer;
            var startPoint = void 0;

            if (wasActivatedByPointer) {
              startPoint = Object(__WEBPACK_IMPORTED_MODULE_3__util__["getNormalizedEventCoords"])(
              /** @type {!Event} */
              activationEvent, this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect());
            } else {
              startPoint = {
                x: this.frame_.width / 2,
                y: this.frame_.height / 2
              };
            } // Center the element around the start point.


            startPoint = {
              x: startPoint.x - this.initialSize_ / 2,
              y: startPoint.y - this.initialSize_ / 2
            };
            var endPoint = {
              x: this.frame_.width / 2 - this.initialSize_ / 2,
              y: this.frame_.height / 2 - this.initialSize_ / 2
            };
            return {
              startPoint: startPoint,
              endPoint: endPoint
            };
          }
          /** @private */

        }, {
          key: 'runDeactivationUXLogicIfReady_',
          value: function runDeactivationUXLogicIfReady_() {
            var _this11 = this; // This method is called both when a pointing device is released, and when the activation animation ends.
            // The deactivation animation should only run after both of those occur.


            var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;
            var _activationState_2 = this.activationState_,
                hasDeactivationUXRun = _activationState_2.hasDeactivationUXRun,
                isActivated = _activationState_2.isActivated;
            var activationHasEnded = hasDeactivationUXRun || !isActivated;

            if (activationHasEnded && this.activationAnimationHasEnded_) {
              this.rmBoundedActivationClasses_();
              this.adapter_.addClass(FG_DEACTIVATION);
              this.fgDeactivationRemovalTimer_ = setTimeout(function () {
                _this11.adapter_.removeClass(FG_DEACTIVATION);
              }, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ].FG_DEACTIVATION_MS);
            }
          }
          /** @private */

        }, {
          key: 'rmBoundedActivationClasses_',
          value: function rmBoundedActivationClasses_() {
            var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;
            this.adapter_.removeClass(FG_ACTIVATION);
            this.activationAnimationHasEnded_ = false;
            this.adapter_.computeBoundingRect();
          }
        }, {
          key: 'resetActivationState_',
          value: function resetActivationState_() {
            var _this12 = this;

            this.previousActivationEvent_ = this.activationState_.activationEvent;
            this.activationState_ = this.defaultActivationState_(); // Touch devices may fire additional events for the same interaction within a short time.
            // Store the previous event until it's safe to assume that subsequent events are for new interactions.

            setTimeout(function () {
              return _this12.previousActivationEvent_ = undefined;
            }, MDCRippleFoundation.numbers.TAP_DELAY_MS);
          }
          /**
           * @private
           */

        }, {
          key: 'deactivate_',
          value: function deactivate_() {
            var _this13 = this;

            var activationState = this.activationState_; // This can happen in scenarios such as when you have a keyup event that blurs the element.

            if (!activationState.isActivated) {
              return;
            }

            var state =
            /** @type {!ActivationStateType} */
            _extends({}, activationState);

            if (activationState.isProgrammatic) {
              requestAnimationFrame(function () {
                return _this13.animateDeactivation_(state);
              });
              this.resetActivationState_();
            } else {
              this.deregisterDeactivationHandlers_();
              requestAnimationFrame(function () {
                _this13.activationState_.hasDeactivationUXRun = true;

                _this13.animateDeactivation_(state);

                _this13.resetActivationState_();
              });
            }
          }
        }, {
          key: 'deactivate',
          value: function deactivate() {
            this.deactivate_();
          }
          /**
           * @param {!ActivationStateType} options
           * @private
           */

        }, {
          key: 'animateDeactivation_',
          value: function animateDeactivation_(_ref) {
            var wasActivatedByPointer = _ref.wasActivatedByPointer,
                wasElementMadeActive = _ref.wasElementMadeActive;

            if (wasActivatedByPointer || wasElementMadeActive) {
              this.runDeactivationUXLogicIfReady_();
            }
          }
        }, {
          key: 'layout',
          value: function layout() {
            var _this14 = this;

            if (this.layoutFrame_) {
              cancelAnimationFrame(this.layoutFrame_);
            }

            this.layoutFrame_ = requestAnimationFrame(function () {
              _this14.layoutInternal_();

              _this14.layoutFrame_ = 0;
            });
          }
          /** @private */

        }, {
          key: 'layoutInternal_',
          value: function layoutInternal_() {
            var _this15 = this;

            this.frame_ = this.adapter_.computeBoundingRect();
            var maxDim = Math.max(this.frame_.height, this.frame_.width); // Surface diameter is treated differently for unbounded vs. bounded ripples.
            // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately
            // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically
            // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter
            // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via
            // `overflow: hidden`.

            var getBoundedRadius = function getBoundedRadius() {
              var hypotenuse = Math.sqrt(Math.pow(_this15.frame_.width, 2) + Math.pow(_this15.frame_.height, 2));
              return hypotenuse + MDCRippleFoundation.numbers.PADDING;
            };

            this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius(); // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform

            this.initialSize_ = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);
            this.fgScale_ = this.maxRadius_ / this.initialSize_;
            this.updateLayoutCssVars_();
          }
          /** @private */

        }, {
          key: 'updateLayoutCssVars_',
          value: function updateLayoutCssVars_() {
            var _MDCRippleFoundation$5 = MDCRippleFoundation.strings,
                VAR_FG_SIZE = _MDCRippleFoundation$5.VAR_FG_SIZE,
                VAR_LEFT = _MDCRippleFoundation$5.VAR_LEFT,
                VAR_TOP = _MDCRippleFoundation$5.VAR_TOP,
                VAR_FG_SCALE = _MDCRippleFoundation$5.VAR_FG_SCALE;
            this.adapter_.updateCssVariable(VAR_FG_SIZE, this.initialSize_ + 'px');
            this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);

            if (this.adapter_.isUnbounded()) {
              this.unboundedCoords_ = {
                left: Math.round(this.frame_.width / 2 - this.initialSize_ / 2),
                top: Math.round(this.frame_.height / 2 - this.initialSize_ / 2)
              };
              this.adapter_.updateCssVariable(VAR_LEFT, this.unboundedCoords_.left + 'px');
              this.adapter_.updateCssVariable(VAR_TOP, this.unboundedCoords_.top + 'px');
            }
          }
          /** @param {boolean} unbounded */

        }, {
          key: 'setUnbounded',
          value: function setUnbounded(unbounded) {
            var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;

            if (unbounded) {
              this.adapter_.addClass(UNBOUNDED);
            } else {
              this.adapter_.removeClass(UNBOUNDED);
            }
          }
        }, {
          key: 'handleFocus',
          value: function handleFocus() {
            var _this16 = this;

            requestAnimationFrame(function () {
              return _this16.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
            });
          }
        }, {
          key: 'handleBlur',
          value: function handleBlur() {
            var _this17 = this;

            requestAnimationFrame(function () {
              return _this17.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
            });
          }
        }]);

        return MDCRippleFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCRippleFoundation;
      /***/
    },
    /* 6 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "c", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return numbers;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var cssClasses = {
        // Ripple is a special case where the "root" component is really a "mixin" of sorts,
        // given that it's an 'upgrade' to an existing component. That being said it is the root
        // CSS class that all other CSS classes derive from.
        ROOT: 'mdc-ripple-upgraded',
        UNBOUNDED: 'mdc-ripple-upgraded--unbounded',
        BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',
        FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',
        FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation'
      };
      var strings = {
        VAR_LEFT: '--mdc-ripple-left',
        VAR_TOP: '--mdc-ripple-top',
        VAR_FG_SIZE: '--mdc-ripple-fg-size',
        VAR_FG_SCALE: '--mdc-ripple-fg-scale',
        VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',
        VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end'
      };
      var numbers = {
        PADDING: 10,
        INITIAL_ORIGIN_SCALE: 0.6,
        DEACTIVATION_TIMEOUT_MS: 225,
        // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)
        FG_DEACTIVATION_MS: 150,
        // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)
        TAP_DELAY_MS: 300
      };
      /***/
    }])
  );
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/@material/ripple/foundation.js":
/*!*****************************************************!*\
  !*** ./node_modules/@material/ripple/foundation.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _material_base_foundation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @material/base/foundation */ "./node_modules/@material/base/foundation.js");
/* harmony import */ var _adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./adapter */ "./node_modules/@material/ripple/adapter.js");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ "./node_modules/@material/ripple/constants.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util */ "./node_modules/@material/ripple/util.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */




/**
 * @typedef {{
 *   isActivated: (boolean|undefined),
 *   hasDeactivationUXRun: (boolean|undefined),
 *   wasActivatedByPointer: (boolean|undefined),
 *   wasElementMadeActive: (boolean|undefined),
 *   activationEvent: (!Event|undefined),
 *   isProgrammatic: (boolean|undefined)
 * }}
 */

var ActivationStateType;
/**
 * @typedef {{
 *   activate: (string|undefined),
 *   deactivate: (string|undefined),
 *   focus: (string|undefined),
 *   blur: (string|undefined)
 * }}
 */

var ListenerInfoType;
/**
 * @typedef {{
 *   activate: function(!Event),
 *   deactivate: function(!Event=),
 *   focus: function(),
 *   blur: function()
 * }}
 */

var ListenersType;
/**
 * @typedef {{
 *   x: number,
 *   y: number
 * }}
 */

var PointType; // Activation events registered on the root element of each instance for activation

var ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown']; // Deactivation events registered on documentElement when a pointer-related down event occurs

var POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu']; // Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations

/** @type {!Array<!EventTarget>} */

var activatedTargets = [];
/**
 * @extends {MDCFoundation<!MDCRippleAdapter>}
 */

var MDCRippleFoundation =
/*#__PURE__*/
function (_MDCFoundation) {
  _inherits(MDCRippleFoundation, _MDCFoundation);

  _createClass(MDCRippleFoundation, null, [{
    key: "cssClasses",
    get: function get() {
      return _constants__WEBPACK_IMPORTED_MODULE_2__["cssClasses"];
    }
  }, {
    key: "strings",
    get: function get() {
      return _constants__WEBPACK_IMPORTED_MODULE_2__["strings"];
    }
  }, {
    key: "numbers",
    get: function get() {
      return _constants__WEBPACK_IMPORTED_MODULE_2__["numbers"];
    }
  }, {
    key: "defaultAdapter",
    get: function get() {
      return {
        browserSupportsCssVars: function browserSupportsCssVars()
        /* boolean - cached */
        {},
        isUnbounded: function isUnbounded()
        /* boolean */
        {},
        isSurfaceActive: function isSurfaceActive()
        /* boolean */
        {},
        isSurfaceDisabled: function isSurfaceDisabled()
        /* boolean */
        {},
        addClass: function addClass()
        /* className: string */
        {},
        removeClass: function removeClass()
        /* className: string */
        {},
        containsEventTarget: function containsEventTarget()
        /* target: !EventTarget */
        {},
        registerInteractionHandler: function registerInteractionHandler()
        /* evtType: string, handler: EventListener */
        {},
        deregisterInteractionHandler: function deregisterInteractionHandler()
        /* evtType: string, handler: EventListener */
        {},
        registerDocumentInteractionHandler: function registerDocumentInteractionHandler()
        /* evtType: string, handler: EventListener */
        {},
        deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler()
        /* evtType: string, handler: EventListener */
        {},
        registerResizeHandler: function registerResizeHandler()
        /* handler: EventListener */
        {},
        deregisterResizeHandler: function deregisterResizeHandler()
        /* handler: EventListener */
        {},
        updateCssVariable: function updateCssVariable()
        /* varName: string, value: string */
        {},
        computeBoundingRect: function computeBoundingRect()
        /* ClientRect */
        {},
        getWindowPageOffset: function getWindowPageOffset()
        /* {x: number, y: number} */
        {}
      };
    }
  }]);

  function MDCRippleFoundation(adapter) {
    var _this;

    _classCallCheck(this, MDCRippleFoundation);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(MDCRippleFoundation).call(this, Object.assign(MDCRippleFoundation.defaultAdapter, adapter)));
    /** @private {number} */

    _this.layoutFrame_ = 0;
    /** @private {!ClientRect} */

    _this.frame_ =
    /** @type {!ClientRect} */
    {
      width: 0,
      height: 0
    };
    /** @private {!ActivationStateType} */

    _this.activationState_ = _this.defaultActivationState_();
    /** @private {number} */

    _this.initialSize_ = 0;
    /** @private {number} */

    _this.maxRadius_ = 0;
    /** @private {function(!Event)} */

    _this.activateHandler_ = function (e) {
      return _this.activate_(e);
    };
    /** @private {function(!Event=)} */


    _this.deactivateHandler_ = function () {
      return _this.deactivate_();
    };
    /** @private {function(!Event=)} */


    _this.focusHandler_ = function () {
      return _this.handleFocus();
    };
    /** @private {function(!Event=)} */


    _this.blurHandler_ = function () {
      return _this.handleBlur();
    };
    /** @private {!Function} */


    _this.resizeHandler_ = function () {
      return _this.layout();
    };
    /** @private {{left: number, top:number}} */


    _this.unboundedCoords_ = {
      left: 0,
      top: 0
    };
    /** @private {number} */

    _this.fgScale_ = 0;
    /** @private {number} */

    _this.activationTimer_ = 0;
    /** @private {number} */

    _this.fgDeactivationRemovalTimer_ = 0;
    /** @private {boolean} */

    _this.activationAnimationHasEnded_ = false;
    /** @private {!Function} */

    _this.activationTimerCallback_ = function () {
      _this.activationAnimationHasEnded_ = true;

      _this.runDeactivationUXLogicIfReady_();
    };
    /** @private {!Event|undefined} */


    _this.previousActivationEvent_;
    return _this;
  }
  /**
   * We compute this property so that we are not querying information about the client
   * until the point in time where the foundation requests it. This prevents scenarios where
   * client-side feature-detection may happen too early, such as when components are rendered on the server
   * and then initialized at mount time on the client.
   * @return {boolean}
   * @private
   */


  _createClass(MDCRippleFoundation, [{
    key: "supportsPressRipple_",
    value: function supportsPressRipple_() {
      return this.adapter_.browserSupportsCssVars();
    }
    /**
     * @return {!ActivationStateType}
     */

  }, {
    key: "defaultActivationState_",
    value: function defaultActivationState_() {
      return {
        isActivated: false,
        hasDeactivationUXRun: false,
        wasActivatedByPointer: false,
        wasElementMadeActive: false,
        activationEvent: undefined,
        isProgrammatic: false
      };
    }
    /** @override */

  }, {
    key: "init",
    value: function init() {
      var _this2 = this;

      var supportsPressRipple = this.supportsPressRipple_();
      this.registerRootHandlers_(supportsPressRipple);

      if (supportsPressRipple) {
        var _MDCRippleFoundation$ = MDCRippleFoundation.cssClasses,
            ROOT = _MDCRippleFoundation$.ROOT,
            UNBOUNDED = _MDCRippleFoundation$.UNBOUNDED;
        requestAnimationFrame(function () {
          _this2.adapter_.addClass(ROOT);

          if (_this2.adapter_.isUnbounded()) {
            _this2.adapter_.addClass(UNBOUNDED); // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple


            _this2.layoutInternal_();
          }
        });
      }
    }
    /** @override */

  }, {
    key: "destroy",
    value: function destroy() {
      var _this3 = this;

      if (this.supportsPressRipple_()) {
        if (this.activationTimer_) {
          clearTimeout(this.activationTimer_);
          this.activationTimer_ = 0;
          this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);
        }

        if (this.fgDeactivationRemovalTimer_) {
          clearTimeout(this.fgDeactivationRemovalTimer_);
          this.fgDeactivationRemovalTimer_ = 0;
          this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);
        }

        var _MDCRippleFoundation$2 = MDCRippleFoundation.cssClasses,
            ROOT = _MDCRippleFoundation$2.ROOT,
            UNBOUNDED = _MDCRippleFoundation$2.UNBOUNDED;
        requestAnimationFrame(function () {
          _this3.adapter_.removeClass(ROOT);

          _this3.adapter_.removeClass(UNBOUNDED);

          _this3.removeCssVars_();
        });
      }

      this.deregisterRootHandlers_();
      this.deregisterDeactivationHandlers_();
    }
    /**
     * @param {boolean} supportsPressRipple Passed from init to save a redundant function call
     * @private
     */

  }, {
    key: "registerRootHandlers_",
    value: function registerRootHandlers_(supportsPressRipple) {
      var _this4 = this;

      if (supportsPressRipple) {
        ACTIVATION_EVENT_TYPES.forEach(function (type) {
          _this4.adapter_.registerInteractionHandler(type, _this4.activateHandler_);
        });

        if (this.adapter_.isUnbounded()) {
          this.adapter_.registerResizeHandler(this.resizeHandler_);
        }
      }

      this.adapter_.registerInteractionHandler('focus', this.focusHandler_);
      this.adapter_.registerInteractionHandler('blur', this.blurHandler_);
    }
    /**
     * @param {!Event} e
     * @private
     */

  }, {
    key: "registerDeactivationHandlers_",
    value: function registerDeactivationHandlers_(e) {
      var _this5 = this;

      if (e.type === 'keydown') {
        this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);
      } else {
        POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
          _this5.adapter_.registerDocumentInteractionHandler(type, _this5.deactivateHandler_);
        });
      }
    }
    /** @private */

  }, {
    key: "deregisterRootHandlers_",
    value: function deregisterRootHandlers_() {
      var _this6 = this;

      ACTIVATION_EVENT_TYPES.forEach(function (type) {
        _this6.adapter_.deregisterInteractionHandler(type, _this6.activateHandler_);
      });
      this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);
      this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);

      if (this.adapter_.isUnbounded()) {
        this.adapter_.deregisterResizeHandler(this.resizeHandler_);
      }
    }
    /** @private */

  }, {
    key: "deregisterDeactivationHandlers_",
    value: function deregisterDeactivationHandlers_() {
      var _this7 = this;

      this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);
      POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
        _this7.adapter_.deregisterDocumentInteractionHandler(type, _this7.deactivateHandler_);
      });
    }
    /** @private */

  }, {
    key: "removeCssVars_",
    value: function removeCssVars_() {
      var _this8 = this;

      var strings = MDCRippleFoundation.strings;
      Object.keys(strings).forEach(function (k) {
        if (k.indexOf('VAR_') === 0) {
          _this8.adapter_.updateCssVariable(strings[k], null);
        }
      });
    }
    /**
     * @param {!Event=} e
     * @private
     */

  }, {
    key: "activate_",
    value: function activate_(e) {
      var _this9 = this;

      if (this.adapter_.isSurfaceDisabled()) {
        return;
      }

      var activationState = this.activationState_;

      if (activationState.isActivated) {
        return;
      } // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction


      var previousActivationEvent = this.previousActivationEvent_;
      var isSameInteraction = previousActivationEvent && e !== undefined && previousActivationEvent.type !== e.type;

      if (isSameInteraction) {
        return;
      }

      activationState.isActivated = true;
      activationState.isProgrammatic = e === undefined;
      activationState.activationEvent = e;
      activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e !== undefined && (e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown');
      var hasActivatedChild = e !== undefined && activatedTargets.length > 0 && activatedTargets.some(function (target) {
        return _this9.adapter_.containsEventTarget(target);
      });

      if (hasActivatedChild) {
        // Immediately reset activation state, while preserving logic that prevents touch follow-on events
        this.resetActivationState_();
        return;
      }

      if (e !== undefined) {
        activatedTargets.push(
        /** @type {!EventTarget} */
        e.target);
        this.registerDeactivationHandlers_(e);
      }

      activationState.wasElementMadeActive = this.checkElementMadeActive_(e);

      if (activationState.wasElementMadeActive) {
        this.animateActivation_();
      }

      requestAnimationFrame(function () {
        // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples
        activatedTargets = [];

        if (!activationState.wasElementMadeActive && e !== undefined && (e.key === ' ' || e.keyCode === 32)) {
          // If space was pressed, try again within an rAF call to detect :active, because different UAs report
          // active states inconsistently when they're called within event handling code:
          // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971
          // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741
          // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS
          // variable is set within a rAF callback for a submit button interaction (#2241).
          activationState.wasElementMadeActive = _this9.checkElementMadeActive_(e);

          if (activationState.wasElementMadeActive) {
            _this9.animateActivation_();
          }
        }

        if (!activationState.wasElementMadeActive) {
          // Reset activation state immediately if element was not made active.
          _this9.activationState_ = _this9.defaultActivationState_();
        }
      });
    }
    /**
     * @param {!Event=} e
     * @private
     */

  }, {
    key: "checkElementMadeActive_",
    value: function checkElementMadeActive_(e) {
      return e !== undefined && e.type === 'keydown' ? this.adapter_.isSurfaceActive() : true;
    }
    /**
     * @param {!Event=} event Optional event containing position information.
     */

  }, {
    key: "activate",
    value: function activate(event) {
      this.activate_(event);
    }
    /** @private */

  }, {
    key: "animateActivation_",
    value: function animateActivation_() {
      var _this10 = this;

      var _MDCRippleFoundation$3 = MDCRippleFoundation.strings,
          VAR_FG_TRANSLATE_START = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_START,
          VAR_FG_TRANSLATE_END = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_END;
      var _MDCRippleFoundation$4 = MDCRippleFoundation.cssClasses,
          FG_DEACTIVATION = _MDCRippleFoundation$4.FG_DEACTIVATION,
          FG_ACTIVATION = _MDCRippleFoundation$4.FG_ACTIVATION;
      var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;
      this.layoutInternal_();
      var translateStart = '';
      var translateEnd = '';

      if (!this.adapter_.isUnbounded()) {
        var _this$getFgTranslatio = this.getFgTranslationCoordinates_(),
            startPoint = _this$getFgTranslatio.startPoint,
            endPoint = _this$getFgTranslatio.endPoint;

        translateStart = "".concat(startPoint.x, "px, ").concat(startPoint.y, "px");
        translateEnd = "".concat(endPoint.x, "px, ").concat(endPoint.y, "px");
      }

      this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);
      this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd); // Cancel any ongoing activation/deactivation animations

      clearTimeout(this.activationTimer_);
      clearTimeout(this.fgDeactivationRemovalTimer_);
      this.rmBoundedActivationClasses_();
      this.adapter_.removeClass(FG_DEACTIVATION); // Force layout in order to re-trigger the animation.

      this.adapter_.computeBoundingRect();
      this.adapter_.addClass(FG_ACTIVATION);
      this.activationTimer_ = setTimeout(function () {
        return _this10.activationTimerCallback_();
      }, DEACTIVATION_TIMEOUT_MS);
    }
    /**
     * @private
     * @return {{startPoint: PointType, endPoint: PointType}}
     */

  }, {
    key: "getFgTranslationCoordinates_",
    value: function getFgTranslationCoordinates_() {
      var _this$activationState = this.activationState_,
          activationEvent = _this$activationState.activationEvent,
          wasActivatedByPointer = _this$activationState.wasActivatedByPointer;
      var startPoint;

      if (wasActivatedByPointer) {
        startPoint = Object(_util__WEBPACK_IMPORTED_MODULE_3__["getNormalizedEventCoords"])(
        /** @type {!Event} */
        activationEvent, this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect());
      } else {
        startPoint = {
          x: this.frame_.width / 2,
          y: this.frame_.height / 2
        };
      } // Center the element around the start point.


      startPoint = {
        x: startPoint.x - this.initialSize_ / 2,
        y: startPoint.y - this.initialSize_ / 2
      };
      var endPoint = {
        x: this.frame_.width / 2 - this.initialSize_ / 2,
        y: this.frame_.height / 2 - this.initialSize_ / 2
      };
      return {
        startPoint: startPoint,
        endPoint: endPoint
      };
    }
    /** @private */

  }, {
    key: "runDeactivationUXLogicIfReady_",
    value: function runDeactivationUXLogicIfReady_() {
      var _this11 = this;

      // This method is called both when a pointing device is released, and when the activation animation ends.
      // The deactivation animation should only run after both of those occur.
      var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;
      var _this$activationState2 = this.activationState_,
          hasDeactivationUXRun = _this$activationState2.hasDeactivationUXRun,
          isActivated = _this$activationState2.isActivated;
      var activationHasEnded = hasDeactivationUXRun || !isActivated;

      if (activationHasEnded && this.activationAnimationHasEnded_) {
        this.rmBoundedActivationClasses_();
        this.adapter_.addClass(FG_DEACTIVATION);
        this.fgDeactivationRemovalTimer_ = setTimeout(function () {
          _this11.adapter_.removeClass(FG_DEACTIVATION);
        }, _constants__WEBPACK_IMPORTED_MODULE_2__["numbers"].FG_DEACTIVATION_MS);
      }
    }
    /** @private */

  }, {
    key: "rmBoundedActivationClasses_",
    value: function rmBoundedActivationClasses_() {
      var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;
      this.adapter_.removeClass(FG_ACTIVATION);
      this.activationAnimationHasEnded_ = false;
      this.adapter_.computeBoundingRect();
    }
  }, {
    key: "resetActivationState_",
    value: function resetActivationState_() {
      var _this12 = this;

      this.previousActivationEvent_ = this.activationState_.activationEvent;
      this.activationState_ = this.defaultActivationState_(); // Touch devices may fire additional events for the same interaction within a short time.
      // Store the previous event until it's safe to assume that subsequent events are for new interactions.

      setTimeout(function () {
        return _this12.previousActivationEvent_ = undefined;
      }, MDCRippleFoundation.numbers.TAP_DELAY_MS);
    }
    /**
     * @private
     */

  }, {
    key: "deactivate_",
    value: function deactivate_() {
      var _this13 = this;

      var activationState = this.activationState_; // This can happen in scenarios such as when you have a keyup event that blurs the element.

      if (!activationState.isActivated) {
        return;
      }

      var state =
      /** @type {!ActivationStateType} */
      Object.assign({}, activationState);

      if (activationState.isProgrammatic) {
        requestAnimationFrame(function () {
          return _this13.animateDeactivation_(state);
        });
        this.resetActivationState_();
      } else {
        this.deregisterDeactivationHandlers_();
        requestAnimationFrame(function () {
          _this13.activationState_.hasDeactivationUXRun = true;

          _this13.animateDeactivation_(state);

          _this13.resetActivationState_();
        });
      }
    }
  }, {
    key: "deactivate",
    value: function deactivate() {
      this.deactivate_();
    }
    /**
     * @param {!ActivationStateType} options
     * @private
     */

  }, {
    key: "animateDeactivation_",
    value: function animateDeactivation_(_ref) {
      var wasActivatedByPointer = _ref.wasActivatedByPointer,
          wasElementMadeActive = _ref.wasElementMadeActive;

      if (wasActivatedByPointer || wasElementMadeActive) {
        this.runDeactivationUXLogicIfReady_();
      }
    }
  }, {
    key: "layout",
    value: function layout() {
      var _this14 = this;

      if (this.layoutFrame_) {
        cancelAnimationFrame(this.layoutFrame_);
      }

      this.layoutFrame_ = requestAnimationFrame(function () {
        _this14.layoutInternal_();

        _this14.layoutFrame_ = 0;
      });
    }
    /** @private */

  }, {
    key: "layoutInternal_",
    value: function layoutInternal_() {
      var _this15 = this;

      this.frame_ = this.adapter_.computeBoundingRect();
      var maxDim = Math.max(this.frame_.height, this.frame_.width); // Surface diameter is treated differently for unbounded vs. bounded ripples.
      // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately
      // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically
      // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter
      // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via
      // `overflow: hidden`.

      var getBoundedRadius = function getBoundedRadius() {
        var hypotenuse = Math.sqrt(Math.pow(_this15.frame_.width, 2) + Math.pow(_this15.frame_.height, 2));
        return hypotenuse + MDCRippleFoundation.numbers.PADDING;
      };

      this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius(); // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform

      this.initialSize_ = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);
      this.fgScale_ = this.maxRadius_ / this.initialSize_;
      this.updateLayoutCssVars_();
    }
    /** @private */

  }, {
    key: "updateLayoutCssVars_",
    value: function updateLayoutCssVars_() {
      var _MDCRippleFoundation$5 = MDCRippleFoundation.strings,
          VAR_FG_SIZE = _MDCRippleFoundation$5.VAR_FG_SIZE,
          VAR_LEFT = _MDCRippleFoundation$5.VAR_LEFT,
          VAR_TOP = _MDCRippleFoundation$5.VAR_TOP,
          VAR_FG_SCALE = _MDCRippleFoundation$5.VAR_FG_SCALE;
      this.adapter_.updateCssVariable(VAR_FG_SIZE, "".concat(this.initialSize_, "px"));
      this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);

      if (this.adapter_.isUnbounded()) {
        this.unboundedCoords_ = {
          left: Math.round(this.frame_.width / 2 - this.initialSize_ / 2),
          top: Math.round(this.frame_.height / 2 - this.initialSize_ / 2)
        };
        this.adapter_.updateCssVariable(VAR_LEFT, "".concat(this.unboundedCoords_.left, "px"));
        this.adapter_.updateCssVariable(VAR_TOP, "".concat(this.unboundedCoords_.top, "px"));
      }
    }
    /** @param {boolean} unbounded */

  }, {
    key: "setUnbounded",
    value: function setUnbounded(unbounded) {
      var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;

      if (unbounded) {
        this.adapter_.addClass(UNBOUNDED);
      } else {
        this.adapter_.removeClass(UNBOUNDED);
      }
    }
  }, {
    key: "handleFocus",
    value: function handleFocus() {
      var _this16 = this;

      requestAnimationFrame(function () {
        return _this16.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
      });
    }
  }, {
    key: "handleBlur",
    value: function handleBlur() {
      var _this17 = this;

      requestAnimationFrame(function () {
        return _this17.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
      });
    }
  }]);

  return MDCRippleFoundation;
}(_material_base_foundation__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (MDCRippleFoundation);

/***/ }),

/***/ "./node_modules/@material/ripple/index.js":
/*!************************************************!*\
  !*** ./node_modules/@material/ripple/index.js ***!
  \************************************************/
/*! exports provided: MDCRipple, MDCRippleFoundation, RippleCapableSurface, util */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MDCRipple", function() { return MDCRipple; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RippleCapableSurface", function() { return RippleCapableSurface; });
/* harmony import */ var _material_base_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @material/base/component */ "./node_modules/@material/base/component.js");
/* harmony import */ var _adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./adapter */ "./node_modules/@material/ripple/adapter.js");
/* harmony import */ var _foundation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./foundation */ "./node_modules/@material/ripple/foundation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MDCRippleFoundation", function() { return _foundation__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util */ "./node_modules/@material/ripple/util.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "util", function() { return _util__WEBPACK_IMPORTED_MODULE_3__; });
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */




/**
 * @extends MDCComponent<!MDCRippleFoundation>
 */

var MDCRipple =
/*#__PURE__*/
function (_MDCComponent) {
  _inherits(MDCRipple, _MDCComponent);

  /** @param {...?} args */
  function MDCRipple() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, MDCRipple);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MDCRipple)).call.apply(_getPrototypeOf2, [this].concat(args)));
    /** @type {boolean} */

    _this.disabled = false;
    /** @private {boolean} */

    _this.unbounded_;
    return _this;
  }
  /**
   * @param {!Element} root
   * @param {{isUnbounded: (boolean|undefined)}=} options
   * @return {!MDCRipple}
   */


  _createClass(MDCRipple, [{
    key: "setUnbounded_",

    /**
     * Closure Compiler throws an access control error when directly accessing a
     * protected or private property inside a getter/setter, like unbounded above.
     * By accessing the protected property inside a method, we solve that problem.
     * That's why this function exists.
     * @private
     */
    value: function setUnbounded_() {
      this.foundation_.setUnbounded(this.unbounded_);
    }
  }, {
    key: "activate",
    value: function activate() {
      this.foundation_.activate();
    }
  }, {
    key: "deactivate",
    value: function deactivate() {
      this.foundation_.deactivate();
    }
  }, {
    key: "layout",
    value: function layout() {
      this.foundation_.layout();
    }
    /**
     * @return {!MDCRippleFoundation}
     * @override
     */

  }, {
    key: "getDefaultFoundation",
    value: function getDefaultFoundation() {
      return new _foundation__WEBPACK_IMPORTED_MODULE_2__["default"](MDCRipple.createAdapter(this));
    }
    /** @override */

  }, {
    key: "initialSyncWithDOM",
    value: function initialSyncWithDOM() {
      this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;
    }
  }, {
    key: "unbounded",

    /** @return {boolean} */
    get: function get() {
      return this.unbounded_;
    }
    /** @param {boolean} unbounded */
    ,
    set: function set(unbounded) {
      this.unbounded_ = Boolean(unbounded);
      this.setUnbounded_();
    }
  }], [{
    key: "attachTo",
    value: function attachTo(root) {
      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref$isUnbounded = _ref.isUnbounded,
          isUnbounded = _ref$isUnbounded === void 0 ? undefined : _ref$isUnbounded;

      var ripple = new MDCRipple(root); // Only override unbounded behavior if option is explicitly specified

      if (isUnbounded !== undefined) {
        ripple.unbounded =
        /** @type {boolean} */
        isUnbounded;
      }

      return ripple;
    }
    /**
     * @param {!RippleCapableSurface} instance
     * @return {!MDCRippleAdapter}
     */

  }, {
    key: "createAdapter",
    value: function createAdapter(instance) {
      var MATCHES = _util__WEBPACK_IMPORTED_MODULE_3__["getMatchesProperty"](HTMLElement.prototype);
      return {
        browserSupportsCssVars: function browserSupportsCssVars() {
          return _util__WEBPACK_IMPORTED_MODULE_3__["supportsCssVariables"](window);
        },
        isUnbounded: function isUnbounded() {
          return instance.unbounded;
        },
        isSurfaceActive: function isSurfaceActive() {
          return instance.root_[MATCHES](':active');
        },
        isSurfaceDisabled: function isSurfaceDisabled() {
          return instance.disabled;
        },
        addClass: function addClass(className) {
          return instance.root_.classList.add(className);
        },
        removeClass: function removeClass(className) {
          return instance.root_.classList.remove(className);
        },
        containsEventTarget: function containsEventTarget(target) {
          return instance.root_.contains(target);
        },
        registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
          return instance.root_.addEventListener(evtType, handler, _util__WEBPACK_IMPORTED_MODULE_3__["applyPassive"]());
        },
        deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
          return instance.root_.removeEventListener(evtType, handler, _util__WEBPACK_IMPORTED_MODULE_3__["applyPassive"]());
        },
        registerDocumentInteractionHandler: function registerDocumentInteractionHandler(evtType, handler) {
          return document.documentElement.addEventListener(evtType, handler, _util__WEBPACK_IMPORTED_MODULE_3__["applyPassive"]());
        },
        deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler(evtType, handler) {
          return document.documentElement.removeEventListener(evtType, handler, _util__WEBPACK_IMPORTED_MODULE_3__["applyPassive"]());
        },
        registerResizeHandler: function registerResizeHandler(handler) {
          return window.addEventListener('resize', handler);
        },
        deregisterResizeHandler: function deregisterResizeHandler(handler) {
          return window.removeEventListener('resize', handler);
        },
        updateCssVariable: function updateCssVariable(varName, value) {
          return instance.root_.style.setProperty(varName, value);
        },
        computeBoundingRect: function computeBoundingRect() {
          return instance.root_.getBoundingClientRect();
        },
        getWindowPageOffset: function getWindowPageOffset() {
          return {
            x: window.pageXOffset,
            y: window.pageYOffset
          };
        }
      };
    }
  }]);

  return MDCRipple;
}(_material_base_component__WEBPACK_IMPORTED_MODULE_0__["default"]);
/**
 * See Material Design spec for more details on when to use ripples.
 * https://material.io/guidelines/motion/choreography.html#choreography-creation
 * @record
 */


var RippleCapableSurface = function RippleCapableSurface() {
  _classCallCheck(this, RippleCapableSurface);
};
/** @protected {!Element} */


RippleCapableSurface.prototype.root_;
/**
 * Whether or not the ripple bleeds out of the bounds of the element.
 * @type {boolean|undefined}
 */

RippleCapableSurface.prototype.unbounded;
/**
 * Whether or not the ripple is attached to a disabled component.
 * @type {boolean|undefined}
 */

RippleCapableSurface.prototype.disabled;


/***/ }),

/***/ "./node_modules/@material/ripple/util.js":
/*!***********************************************!*\
  !*** ./node_modules/@material/ripple/util.js ***!
  \***********************************************/
/*! exports provided: supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "supportsCssVariables", function() { return supportsCssVariables; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyPassive", function() { return applyPassive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMatchesProperty", function() { return getMatchesProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getNormalizedEventCoords", function() { return getNormalizedEventCoords; });
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.
 * @private {boolean|undefined}
 */
var supportsCssVariables_;
/**
 * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.
 * @private {boolean|undefined}
 */

var supportsPassive_;
/**
 * @param {!Window} windowObj
 * @return {boolean}
 */

function detectEdgePseudoVarBug(windowObj) {
  // Detect versions of Edge with buggy var() support
  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/
  var document = windowObj.document;
  var node = document.createElement('div');
  node.className = 'mdc-ripple-surface--test-edge-var-bug';
  document.body.appendChild(node); // The bug exists if ::before style ends up propagating to the parent element.
  // Additionally, getComputedStyle returns null in iframes with display: "none" in Firefox,
  // but Firefox is known to support CSS custom properties correctly.
  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397

  var computedStyle = windowObj.getComputedStyle(node);
  var hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';
  node.remove();
  return hasPseudoVarBug;
}
/**
 * @param {!Window} windowObj
 * @param {boolean=} forceRefresh
 * @return {boolean|undefined}
 */


function supportsCssVariables(windowObj) {
  var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var supportsCssVariables = supportsCssVariables_;

  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {
    return supportsCssVariables;
  }

  var supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';

  if (!supportsFunctionPresent) {
    return;
  }

  var explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes'); // See: https://bugs.webkit.org/show_bug.cgi?id=154669
  // See: README section on Safari

  var weAreFeatureDetectingSafari10plus = windowObj.CSS.supports('(--css-vars: yes)') && windowObj.CSS.supports('color', '#00000000');

  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {
    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);
  } else {
    supportsCssVariables = false;
  }

  if (!forceRefresh) {
    supportsCssVariables_ = supportsCssVariables;
  }

  return supportsCssVariables;
} //

/**
 * Determine whether the current browser supports passive event listeners, and if so, use them.
 * @param {!Window=} globalObj
 * @param {boolean=} forceRefresh
 * @return {boolean|!EventListenerOptions}
 */


function applyPassive() {
  var globalObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
  var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (supportsPassive_ === undefined || forceRefresh) {
    var isSupported = false;

    try {
      globalObj.document.addEventListener('test', null, {
        get passive() {
          isSupported = true;
          return isSupported;
        }

      });
    } catch (e) {}

    supportsPassive_ = isSupported;
  }

  return supportsPassive_ ?
  /** @type {!EventListenerOptions} */
  {
    passive: true
  } : false;
}
/**
 * @param {!Object} HTMLElementPrototype
 * @return {string}
 */


function getMatchesProperty(HTMLElementPrototype) {
  /**
   * Order is important because we return the first existing method we find.
   * Do not change the order of the items in the below array.
   */
  var matchesMethods = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'];
  var method = 'matches';

  for (var i = 0; i < matchesMethods.length; i++) {
    var matchesMethod = matchesMethods[i];

    if (matchesMethod in HTMLElementPrototype) {
      method = matchesMethod;
      break;
    }
  }

  return method;
}
/**
 * @param {!Event} ev
 * @param {{x: number, y: number}} pageOffset
 * @param {!ClientRect} clientRect
 * @return {{x: number, y: number}}
 */


function getNormalizedEventCoords(ev, pageOffset, clientRect) {
  var x = pageOffset.x,
      y = pageOffset.y;
  var documentX = x + clientRect.left;
  var documentY = y + clientRect.top;
  var normalizedX;
  var normalizedY; // Determine touch point relative to the ripple container.

  if (ev.type === 'touchstart') {
    ev =
    /** @type {!TouchEvent} */
    ev;
    normalizedX = ev.changedTouches[0].pageX - documentX;
    normalizedY = ev.changedTouches[0].pageY - documentY;
  } else {
    ev =
    /** @type {!MouseEvent} */
    ev;
    normalizedX = ev.pageX - documentX;
    normalizedY = ev.pageY - documentY;
  }

  return {
    x: normalizedX,
    y: normalizedY
  };
}



/***/ }),

/***/ "./node_modules/@material/select/dist/mdc.select.js":
/*!**********************************************************!*\
  !*** ./node_modules/@material/select/dist/mdc.select.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 Material Components for the Web
 Copyright (c) 2019 Google Inc.
 License: MIT
*/
(function webpackUniversalModuleDefinition(root, factory) {
  if (( false ? undefined : _typeof(exports)) === 'object' && ( false ? undefined : _typeof(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}
})(this, function () {
  return (
    /******/
    function (modules) {
      // webpackBootstrap

      /******/
      // The module cache

      /******/
      var installedModules = {};
      /******/

      /******/
      // The require function

      /******/

      function __webpack_require__(moduleId) {
        /******/

        /******/
        // Check if module is in cache

        /******/
        if (installedModules[moduleId]) {
          /******/
          return installedModules[moduleId].exports;
          /******/
        }
        /******/
        // Create a new module (and put it into the cache)

        /******/


        var module = installedModules[moduleId] = {
          /******/
          i: moduleId,

          /******/
          l: false,

          /******/
          exports: {}
          /******/

        };
        /******/

        /******/
        // Execute the module function

        /******/

        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/

        /******/
        // Flag the module as loaded

        /******/

        module.l = true;
        /******/

        /******/
        // Return the exports of the module

        /******/

        return module.exports;
        /******/
      }
      /******/

      /******/

      /******/
      // expose the modules object (__webpack_modules__)

      /******/


      __webpack_require__.m = modules;
      /******/

      /******/
      // expose the module cache

      /******/

      __webpack_require__.c = installedModules;
      /******/

      /******/
      // define getter function for harmony exports

      /******/

      __webpack_require__.d = function (exports, name, getter) {
        /******/
        if (!__webpack_require__.o(exports, name)) {
          /******/
          Object.defineProperty(exports, name, {
            /******/
            configurable: false,

            /******/
            enumerable: true,

            /******/
            get: getter
            /******/

          });
          /******/
        }
        /******/

      };
      /******/

      /******/
      // getDefaultExport function for compatibility with non-harmony modules

      /******/


      __webpack_require__.n = function (module) {
        /******/
        var getter = module && module.__esModule ?
        /******/
        function getDefault() {
          return module['default'];
        } :
        /******/
        function getModuleExports() {
          return module;
        };
        /******/

        __webpack_require__.d(getter, 'a', getter);
        /******/


        return getter;
        /******/
      };
      /******/

      /******/
      // Object.prototype.hasOwnProperty.call

      /******/


      __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      /******/

      /******/
      // __webpack_public_path__

      /******/


      __webpack_require__.p = "";
      /******/

      /******/
      // Load entry module and return exports

      /******/

      return __webpack_require__(__webpack_require__.s = 131);
      /******/
    }(
    /************************************************************************/

    /******/
    [
    /* 0 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @template A
       */


      var MDCFoundation = function () {
        _createClass(MDCFoundation, null, [{
          key: "cssClasses",

          /** @return enum{cssClasses} */
          get: function get() {
            // Classes extending MDCFoundation should implement this method to return an object which exports every
            // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}
            return {};
          }
          /** @return enum{strings} */

        }, {
          key: "strings",
          get: function get() {
            // Classes extending MDCFoundation should implement this method to return an object which exports all
            // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}
            return {};
          }
          /** @return enum{numbers} */

        }, {
          key: "numbers",
          get: function get() {
            // Classes extending MDCFoundation should implement this method to return an object which exports all
            // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}
            return {};
          }
          /** @return {!Object} */

        }, {
          key: "defaultAdapter",
          get: function get() {
            // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient
            // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter
            // validation.
            return {};
          }
          /**
           * @param {A=} adapter
           */

        }]);

        function MDCFoundation() {
          var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

          _classCallCheck(this, MDCFoundation);
          /** @protected {!A} */


          this.adapter_ = adapter;
        }

        _createClass(MDCFoundation, [{
          key: "init",
          value: function init() {// Subclasses should override this method to perform initialization routines (registering events, etc.)
          }
        }, {
          key: "destroy",
          value: function destroy() {// Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)
          }
        }]);

        return MDCFoundation;
      }();
      /* harmony default export */


      __webpack_exports__["a"] = MDCFoundation;
      /***/
    },
    /* 1 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @template F
       */


      var MDCComponent = function () {
        _createClass(MDCComponent, null, [{
          key: 'attachTo',

          /**
           * @param {!Element} root
           * @return {!MDCComponent}
           */
          value: function attachTo(root) {
            // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and
            // returns an instantiated component with its root set to that element. Also note that in the cases of
            // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized
            // from getDefaultFoundation().
            return new MDCComponent(root, new __WEBPACK_IMPORTED_MODULE_0__foundation__["a"
            /* default */
            ]());
          }
          /**
           * @param {!Element} root
           * @param {F=} foundation
           * @param {...?} args
           */

        }]);

        function MDCComponent(root) {
          var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

          _classCallCheck(this, MDCComponent);
          /** @protected {!Element} */


          this.root_ = root;

          for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
            args[_key - 2] = arguments[_key];
          }

          this.initialize.apply(this, args); // Note that we initialize foundation here and not within the constructor's default param so that
          // this.root_ is defined and can be used within the foundation class.

          /** @protected {!F} */

          this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;
          this.foundation_.init();
          this.initialSyncWithDOM();
        }

        _createClass(MDCComponent, [{
          key: 'initialize',
          value: function initialize()
          /* ...args */
          {} // Subclasses can override this to do any additional setup work that would be considered part of a
          // "constructor". Essentially, it is a hook into the parent constructor before the foundation is
          // initialized. Any additional arguments besides root and foundation will be passed in here.

          /**
           * @return {!F} foundation
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            // Subclasses must override this method to return a properly configured foundation class for the
            // component.
            throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {// Subclasses should override this method if they need to perform work to synchronize with a host DOM
            // object. An example of this would be a form control wrapper that needs to synchronize its internal state
            // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM
            // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            // Subclasses may implement this method to release any resources / deregister any listeners they have
            // attached. An example of this might be deregistering a resize event from the window object.
            this.foundation_.destroy();
          }
          /**
           * Wrapper method to add an event listener to the component's root element. This is most useful when
           * listening for custom events.
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: 'listen',
          value: function listen(evtType, handler) {
            this.root_.addEventListener(evtType, handler);
          }
          /**
           * Wrapper method to remove an event listener to the component's root element. This is most useful when
           * unlistening for custom events.
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: 'unlisten',
          value: function unlisten(evtType, handler) {
            this.root_.removeEventListener(evtType, handler);
          }
          /**
           * Fires a cross-browser-compatible custom event from the component root of the given type,
           * with the given data.
           * @param {string} evtType
           * @param {!Object} evtData
           * @param {boolean=} shouldBubble
           */

        }, {
          key: 'emit',
          value: function emit(evtType, evtData) {
            var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var evt = void 0;

            if (typeof CustomEvent === 'function') {
              evt = new CustomEvent(evtType, {
                detail: evtData,
                bubbles: shouldBubble
              });
            } else {
              evt = document.createEvent('CustomEvent');
              evt.initCustomEvent(evtType, shouldBubble, false, evtData);
            }

            this.root_.dispatchEvent(evt);
          }
        }]);

        return MDCComponent;
      }();
      /* harmony default export */


      __webpack_exports__["a"] = MDCComponent;
      /***/
    },
    /* 2 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "supportsCssVariables", function () {
        return supportsCssVariables;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "applyPassive", function () {
        return applyPassive;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getMatchesProperty", function () {
        return getMatchesProperty;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getNormalizedEventCoords", function () {
        return getNormalizedEventCoords;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.
       * @private {boolean|undefined}
       */


      var supportsCssVariables_ = void 0;
      /**
       * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.
       * @private {boolean|undefined}
       */

      var supportsPassive_ = void 0;
      /**
       * @param {!Window} windowObj
       * @return {boolean}
       */

      function detectEdgePseudoVarBug(windowObj) {
        // Detect versions of Edge with buggy var() support
        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/
        var document = windowObj.document;
        var node = document.createElement('div');
        node.className = 'mdc-ripple-surface--test-edge-var-bug';
        document.body.appendChild(node); // The bug exists if ::before style ends up propagating to the parent element.
        // Additionally, getComputedStyle returns null in iframes with display: "none" in Firefox,
        // but Firefox is known to support CSS custom properties correctly.
        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397

        var computedStyle = windowObj.getComputedStyle(node);
        var hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';
        node.remove();
        return hasPseudoVarBug;
      }
      /**
       * @param {!Window} windowObj
       * @param {boolean=} forceRefresh
       * @return {boolean|undefined}
       */


      function supportsCssVariables(windowObj) {
        var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        var supportsCssVariables = supportsCssVariables_;

        if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {
          return supportsCssVariables;
        }

        var supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';

        if (!supportsFunctionPresent) {
          return;
        }

        var explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes'); // See: https://bugs.webkit.org/show_bug.cgi?id=154669
        // See: README section on Safari

        var weAreFeatureDetectingSafari10plus = windowObj.CSS.supports('(--css-vars: yes)') && windowObj.CSS.supports('color', '#00000000');

        if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {
          supportsCssVariables = !detectEdgePseudoVarBug(windowObj);
        } else {
          supportsCssVariables = false;
        }

        if (!forceRefresh) {
          supportsCssVariables_ = supportsCssVariables;
        }

        return supportsCssVariables;
      } //

      /**
       * Determine whether the current browser supports passive event listeners, and if so, use them.
       * @param {!Window=} globalObj
       * @param {boolean=} forceRefresh
       * @return {boolean|!EventListenerOptions}
       */


      function applyPassive() {
        var globalObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
        var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        if (supportsPassive_ === undefined || forceRefresh) {
          var isSupported = false;

          try {
            globalObj.document.addEventListener('test', null, {
              get passive() {
                isSupported = true;
                return isSupported;
              }

            });
          } catch (e) {}

          supportsPassive_ = isSupported;
        }

        return supportsPassive_ ?
        /** @type {!EventListenerOptions} */
        {
          passive: true
        } : false;
      }
      /**
       * @param {!Object} HTMLElementPrototype
       * @return {string}
       */


      function getMatchesProperty(HTMLElementPrototype) {
        /**
         * Order is important because we return the first existing method we find.
         * Do not change the order of the items in the below array.
         */
        var matchesMethods = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'];
        var method = 'matches';

        for (var i = 0; i < matchesMethods.length; i++) {
          var matchesMethod = matchesMethods[i];

          if (matchesMethod in HTMLElementPrototype) {
            method = matchesMethod;
            break;
          }
        }

        return method;
      }
      /**
       * @param {!Event} ev
       * @param {{x: number, y: number}} pageOffset
       * @param {!ClientRect} clientRect
       * @return {{x: number, y: number}}
       */


      function getNormalizedEventCoords(ev, pageOffset, clientRect) {
        var x = pageOffset.x,
            y = pageOffset.y;
        var documentX = x + clientRect.left;
        var documentY = y + clientRect.top;
        var normalizedX = void 0;
        var normalizedY = void 0; // Determine touch point relative to the ripple container.

        if (ev.type === 'touchstart') {
          ev =
          /** @type {!TouchEvent} */
          ev;
          normalizedX = ev.changedTouches[0].pageX - documentX;
          normalizedY = ev.changedTouches[0].pageY - documentY;
        } else {
          ev =
          /** @type {!MouseEvent} */
          ev;
          normalizedX = ev.pageX - documentX;
          normalizedY = ev.pageY - documentY;
        }

        return {
          x: normalizedX,
          y: normalizedY
        };
      }
      /***/

    },
    /* 3 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Ripple. Provides an interface for managing
       * - classes
       * - dom
       * - CSS variables
       * - position
       * - dimensions
       * - scroll position
       * - event handlers
       * - unbounded, active and disabled states
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCRippleAdapter = function () {
        function MDCRippleAdapter() {
          _classCallCheck(this, MDCRippleAdapter);
        }

        _createClass(MDCRippleAdapter, [{
          key: "browserSupportsCssVars",

          /** @return {boolean} */
          value: function browserSupportsCssVars() {}
          /** @return {boolean} */

        }, {
          key: "isUnbounded",
          value: function isUnbounded() {}
          /** @return {boolean} */

        }, {
          key: "isSurfaceActive",
          value: function isSurfaceActive() {}
          /** @return {boolean} */

        }, {
          key: "isSurfaceDisabled",
          value: function isSurfaceDisabled() {}
          /** @param {string} className */

        }, {
          key: "addClass",
          value: function addClass(className) {}
          /** @param {string} className */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /** @param {!EventTarget} target */

        }, {
          key: "containsEventTarget",
          value: function containsEventTarget(target) {}
          /**
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: "registerInteractionHandler",
          value: function registerInteractionHandler(evtType, handler) {}
          /**
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: "deregisterInteractionHandler",
          value: function deregisterInteractionHandler(evtType, handler) {}
          /**
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: "registerDocumentInteractionHandler",
          value: function registerDocumentInteractionHandler(evtType, handler) {}
          /**
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: "deregisterDocumentInteractionHandler",
          value: function deregisterDocumentInteractionHandler(evtType, handler) {}
          /**
           * @param {!Function} handler
           */

        }, {
          key: "registerResizeHandler",
          value: function registerResizeHandler(handler) {}
          /**
           * @param {!Function} handler
           */

        }, {
          key: "deregisterResizeHandler",
          value: function deregisterResizeHandler(handler) {}
          /**
           * @param {string} varName
           * @param {?number|string} value
           */

        }, {
          key: "updateCssVariable",
          value: function updateCssVariable(varName, value) {}
          /** @return {!ClientRect} */

        }, {
          key: "computeBoundingRect",
          value: function computeBoundingRect() {}
          /** @return {{x: number, y: number}} */

        }, {
          key: "getWindowPageOffset",
          value: function getWindowPageOffset() {}
        }]);

        return MDCRippleAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCRippleAdapter;
      /***/
    },
    /* 4 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCRipple", function () {
        return MDCRipple;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "RippleCapableSurface", function () {
        return RippleCapableSurface;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(2);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCRippleFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "util", function () {
        return __WEBPACK_IMPORTED_MODULE_3__util__;
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends MDCComponent<!MDCRippleFoundation>
       */


      var MDCRipple = function (_MDCComponent) {
        _inherits(MDCRipple, _MDCComponent);
        /** @param {...?} args */


        function MDCRipple() {
          var _ref;

          _classCallCheck(this, MDCRipple);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @type {boolean} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCRipple.__proto__ || Object.getPrototypeOf(MDCRipple)).call.apply(_ref, [this].concat(args)));

          _this.disabled = false;
          /** @private {boolean} */

          _this.unbounded_;
          return _this;
        }
        /**
         * @param {!Element} root
         * @param {{isUnbounded: (boolean|undefined)}=} options
         * @return {!MDCRipple}
         */


        _createClass(MDCRipple, [{
          key: 'setUnbounded_',

          /**
           * Closure Compiler throws an access control error when directly accessing a
           * protected or private property inside a getter/setter, like unbounded above.
           * By accessing the protected property inside a method, we solve that problem.
           * That's why this function exists.
           * @private
           */
          value: function setUnbounded_() {
            this.foundation_.setUnbounded(this.unbounded_);
          }
        }, {
          key: 'activate',
          value: function activate() {
            this.foundation_.activate();
          }
        }, {
          key: 'deactivate',
          value: function deactivate() {
            this.foundation_.deactivate();
          }
        }, {
          key: 'layout',
          value: function layout() {
            this.foundation_.layout();
          }
          /**
           * @return {!MDCRippleFoundation}
           * @override
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ](MDCRipple.createAdapter(this));
          }
          /** @override */

        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;
          }
        }, {
          key: 'unbounded',

          /** @return {boolean} */
          get: function get() {
            return this.unbounded_;
          }
          /** @param {boolean} unbounded */
          ,
          set: function set(unbounded) {
            this.unbounded_ = Boolean(unbounded);
            this.setUnbounded_();
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
                _ref2$isUnbounded = _ref2.isUnbounded,
                isUnbounded = _ref2$isUnbounded === undefined ? undefined : _ref2$isUnbounded;

            var ripple = new MDCRipple(root); // Only override unbounded behavior if option is explicitly specified

            if (isUnbounded !== undefined) {
              ripple.unbounded =
              /** @type {boolean} */
              isUnbounded;
            }

            return ripple;
          }
          /**
           * @param {!RippleCapableSurface} instance
           * @return {!MDCRippleAdapter}
           */

        }, {
          key: 'createAdapter',
          value: function createAdapter(instance) {
            var MATCHES = __WEBPACK_IMPORTED_MODULE_3__util__["getMatchesProperty"](HTMLElement.prototype);

            return {
              browserSupportsCssVars: function browserSupportsCssVars() {
                return __WEBPACK_IMPORTED_MODULE_3__util__["supportsCssVariables"](window);
              },
              isUnbounded: function isUnbounded() {
                return instance.unbounded;
              },
              isSurfaceActive: function isSurfaceActive() {
                return instance.root_[MATCHES](':active');
              },
              isSurfaceDisabled: function isSurfaceDisabled() {
                return instance.disabled;
              },
              addClass: function addClass(className) {
                return instance.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return instance.root_.classList.remove(className);
              },
              containsEventTarget: function containsEventTarget(target) {
                return instance.root_.contains(target);
              },
              registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
                return instance.root_.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
              },
              deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
                return instance.root_.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
              },
              registerDocumentInteractionHandler: function registerDocumentInteractionHandler(evtType, handler) {
                return document.documentElement.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
              },
              deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler(evtType, handler) {
                return document.documentElement.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
              },
              registerResizeHandler: function registerResizeHandler(handler) {
                return window.addEventListener('resize', handler);
              },
              deregisterResizeHandler: function deregisterResizeHandler(handler) {
                return window.removeEventListener('resize', handler);
              },
              updateCssVariable: function updateCssVariable(varName, value) {
                return instance.root_.style.setProperty(varName, value);
              },
              computeBoundingRect: function computeBoundingRect() {
                return instance.root_.getBoundingClientRect();
              },
              getWindowPageOffset: function getWindowPageOffset() {
                return {
                  x: window.pageXOffset,
                  y: window.pageYOffset
                };
              }
            };
          }
        }]);

        return MDCRipple;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /**
       * See Material Design spec for more details on when to use ripples.
       * https://material.io/guidelines/motion/choreography.html#choreography-creation
       * @record
       */


      var RippleCapableSurface = function RippleCapableSurface() {
        _classCallCheck(this, RippleCapableSurface);
      };
      /** @protected {!Element} */


      RippleCapableSurface.prototype.root_;
      /**
       * Whether or not the ripple bleeds out of the bounds of the element.
       * @type {boolean|undefined}
       */

      RippleCapableSurface.prototype.unbounded;
      /**
       * Whether or not the ripple is attached to a disabled component.
       * @type {boolean|undefined}
       */

      RippleCapableSurface.prototype.disabled;
      /***/
    },
    /* 5 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(2);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @typedef {{
       *   isActivated: (boolean|undefined),
       *   hasDeactivationUXRun: (boolean|undefined),
       *   wasActivatedByPointer: (boolean|undefined),
       *   wasElementMadeActive: (boolean|undefined),
       *   activationEvent: (!Event|undefined),
       *   isProgrammatic: (boolean|undefined)
       * }}
       */


      var ActivationStateType = void 0;
      /**
       * @typedef {{
       *   activate: (string|undefined),
       *   deactivate: (string|undefined),
       *   focus: (string|undefined),
       *   blur: (string|undefined)
       * }}
       */

      var ListenerInfoType = void 0;
      /**
       * @typedef {{
       *   activate: function(!Event),
       *   deactivate: function(!Event=),
       *   focus: function(),
       *   blur: function()
       * }}
       */

      var ListenersType = void 0;
      /**
       * @typedef {{
       *   x: number,
       *   y: number
       * }}
       */

      var PointType = void 0; // Activation events registered on the root element of each instance for activation

      var ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown']; // Deactivation events registered on documentElement when a pointer-related down event occurs

      var POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu']; // Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations

      /** @type {!Array<!EventTarget>} */

      var activatedTargets = [];
      /**
       * @extends {MDCFoundation<!MDCRippleAdapter>}
       */

      var MDCRippleFoundation = function (_MDCFoundation) {
        _inherits(MDCRippleFoundation, _MDCFoundation);

        _createClass(MDCRippleFoundation, null, [{
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["c"
            /* strings */
            ];
          }
        }, {
          key: 'numbers',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* numbers */
            ];
          }
        }, {
          key: 'defaultAdapter',
          get: function get() {
            return {
              browserSupportsCssVars: function browserSupportsCssVars()
              /* boolean - cached */
              {},
              isUnbounded: function isUnbounded()
              /* boolean */
              {},
              isSurfaceActive: function isSurfaceActive()
              /* boolean */
              {},
              isSurfaceDisabled: function isSurfaceDisabled()
              /* boolean */
              {},
              addClass: function addClass()
              /* className: string */
              {},
              removeClass: function removeClass()
              /* className: string */
              {},
              containsEventTarget: function containsEventTarget()
              /* target: !EventTarget */
              {},
              registerInteractionHandler: function registerInteractionHandler()
              /* evtType: string, handler: EventListener */
              {},
              deregisterInteractionHandler: function deregisterInteractionHandler()
              /* evtType: string, handler: EventListener */
              {},
              registerDocumentInteractionHandler: function registerDocumentInteractionHandler()
              /* evtType: string, handler: EventListener */
              {},
              deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler()
              /* evtType: string, handler: EventListener */
              {},
              registerResizeHandler: function registerResizeHandler()
              /* handler: EventListener */
              {},
              deregisterResizeHandler: function deregisterResizeHandler()
              /* handler: EventListener */
              {},
              updateCssVariable: function updateCssVariable()
              /* varName: string, value: string */
              {},
              computeBoundingRect: function computeBoundingRect()
              /* ClientRect */
              {},
              getWindowPageOffset: function getWindowPageOffset()
              /* {x: number, y: number} */
              {}
            };
          }
        }]);

        function MDCRippleFoundation(adapter) {
          _classCallCheck(this, MDCRippleFoundation);
          /** @private {number} */


          var _this = _possibleConstructorReturn(this, (MDCRippleFoundation.__proto__ || Object.getPrototypeOf(MDCRippleFoundation)).call(this, _extends(MDCRippleFoundation.defaultAdapter, adapter)));

          _this.layoutFrame_ = 0;
          /** @private {!ClientRect} */

          _this.frame_ =
          /** @type {!ClientRect} */
          {
            width: 0,
            height: 0
          };
          /** @private {!ActivationStateType} */

          _this.activationState_ = _this.defaultActivationState_();
          /** @private {number} */

          _this.initialSize_ = 0;
          /** @private {number} */

          _this.maxRadius_ = 0;
          /** @private {function(!Event)} */

          _this.activateHandler_ = function (e) {
            return _this.activate_(e);
          };
          /** @private {function(!Event=)} */


          _this.deactivateHandler_ = function () {
            return _this.deactivate_();
          };
          /** @private {function(!Event=)} */


          _this.focusHandler_ = function () {
            return _this.handleFocus();
          };
          /** @private {function(!Event=)} */


          _this.blurHandler_ = function () {
            return _this.handleBlur();
          };
          /** @private {!Function} */


          _this.resizeHandler_ = function () {
            return _this.layout();
          };
          /** @private {{left: number, top:number}} */


          _this.unboundedCoords_ = {
            left: 0,
            top: 0
          };
          /** @private {number} */

          _this.fgScale_ = 0;
          /** @private {number} */

          _this.activationTimer_ = 0;
          /** @private {number} */

          _this.fgDeactivationRemovalTimer_ = 0;
          /** @private {boolean} */

          _this.activationAnimationHasEnded_ = false;
          /** @private {!Function} */

          _this.activationTimerCallback_ = function () {
            _this.activationAnimationHasEnded_ = true;

            _this.runDeactivationUXLogicIfReady_();
          };
          /** @private {!Event|undefined} */


          _this.previousActivationEvent_;
          return _this;
        }
        /**
         * We compute this property so that we are not querying information about the client
         * until the point in time where the foundation requests it. This prevents scenarios where
         * client-side feature-detection may happen too early, such as when components are rendered on the server
         * and then initialized at mount time on the client.
         * @return {boolean}
         * @private
         */


        _createClass(MDCRippleFoundation, [{
          key: 'supportsPressRipple_',
          value: function supportsPressRipple_() {
            return this.adapter_.browserSupportsCssVars();
          }
          /**
           * @return {!ActivationStateType}
           */

        }, {
          key: 'defaultActivationState_',
          value: function defaultActivationState_() {
            return {
              isActivated: false,
              hasDeactivationUXRun: false,
              wasActivatedByPointer: false,
              wasElementMadeActive: false,
              activationEvent: undefined,
              isProgrammatic: false
            };
          }
          /** @override */

        }, {
          key: 'init',
          value: function init() {
            var _this2 = this;

            var supportsPressRipple = this.supportsPressRipple_();
            this.registerRootHandlers_(supportsPressRipple);

            if (supportsPressRipple) {
              var _MDCRippleFoundation$ = MDCRippleFoundation.cssClasses,
                  ROOT = _MDCRippleFoundation$.ROOT,
                  UNBOUNDED = _MDCRippleFoundation$.UNBOUNDED;
              requestAnimationFrame(function () {
                _this2.adapter_.addClass(ROOT);

                if (_this2.adapter_.isUnbounded()) {
                  _this2.adapter_.addClass(UNBOUNDED); // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple


                  _this2.layoutInternal_();
                }
              });
            }
          }
          /** @override */

        }, {
          key: 'destroy',
          value: function destroy() {
            var _this3 = this;

            if (this.supportsPressRipple_()) {
              if (this.activationTimer_) {
                clearTimeout(this.activationTimer_);
                this.activationTimer_ = 0;
                this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);
              }

              if (this.fgDeactivationRemovalTimer_) {
                clearTimeout(this.fgDeactivationRemovalTimer_);
                this.fgDeactivationRemovalTimer_ = 0;
                this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);
              }

              var _MDCRippleFoundation$2 = MDCRippleFoundation.cssClasses,
                  ROOT = _MDCRippleFoundation$2.ROOT,
                  UNBOUNDED = _MDCRippleFoundation$2.UNBOUNDED;
              requestAnimationFrame(function () {
                _this3.adapter_.removeClass(ROOT);

                _this3.adapter_.removeClass(UNBOUNDED);

                _this3.removeCssVars_();
              });
            }

            this.deregisterRootHandlers_();
            this.deregisterDeactivationHandlers_();
          }
          /**
           * @param {boolean} supportsPressRipple Passed from init to save a redundant function call
           * @private
           */

        }, {
          key: 'registerRootHandlers_',
          value: function registerRootHandlers_(supportsPressRipple) {
            var _this4 = this;

            if (supportsPressRipple) {
              ACTIVATION_EVENT_TYPES.forEach(function (type) {
                _this4.adapter_.registerInteractionHandler(type, _this4.activateHandler_);
              });

              if (this.adapter_.isUnbounded()) {
                this.adapter_.registerResizeHandler(this.resizeHandler_);
              }
            }

            this.adapter_.registerInteractionHandler('focus', this.focusHandler_);
            this.adapter_.registerInteractionHandler('blur', this.blurHandler_);
          }
          /**
           * @param {!Event} e
           * @private
           */

        }, {
          key: 'registerDeactivationHandlers_',
          value: function registerDeactivationHandlers_(e) {
            var _this5 = this;

            if (e.type === 'keydown') {
              this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);
            } else {
              POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
                _this5.adapter_.registerDocumentInteractionHandler(type, _this5.deactivateHandler_);
              });
            }
          }
          /** @private */

        }, {
          key: 'deregisterRootHandlers_',
          value: function deregisterRootHandlers_() {
            var _this6 = this;

            ACTIVATION_EVENT_TYPES.forEach(function (type) {
              _this6.adapter_.deregisterInteractionHandler(type, _this6.activateHandler_);
            });
            this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);
            this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);

            if (this.adapter_.isUnbounded()) {
              this.adapter_.deregisterResizeHandler(this.resizeHandler_);
            }
          }
          /** @private */

        }, {
          key: 'deregisterDeactivationHandlers_',
          value: function deregisterDeactivationHandlers_() {
            var _this7 = this;

            this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);
            POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
              _this7.adapter_.deregisterDocumentInteractionHandler(type, _this7.deactivateHandler_);
            });
          }
          /** @private */

        }, {
          key: 'removeCssVars_',
          value: function removeCssVars_() {
            var _this8 = this;

            var strings = MDCRippleFoundation.strings;
            Object.keys(strings).forEach(function (k) {
              if (k.indexOf('VAR_') === 0) {
                _this8.adapter_.updateCssVariable(strings[k], null);
              }
            });
          }
          /**
           * @param {!Event=} e
           * @private
           */

        }, {
          key: 'activate_',
          value: function activate_(e) {
            var _this9 = this;

            if (this.adapter_.isSurfaceDisabled()) {
              return;
            }

            var activationState = this.activationState_;

            if (activationState.isActivated) {
              return;
            } // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction


            var previousActivationEvent = this.previousActivationEvent_;
            var isSameInteraction = previousActivationEvent && e !== undefined && previousActivationEvent.type !== e.type;

            if (isSameInteraction) {
              return;
            }

            activationState.isActivated = true;
            activationState.isProgrammatic = e === undefined;
            activationState.activationEvent = e;
            activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e !== undefined && (e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown');
            var hasActivatedChild = e !== undefined && activatedTargets.length > 0 && activatedTargets.some(function (target) {
              return _this9.adapter_.containsEventTarget(target);
            });

            if (hasActivatedChild) {
              // Immediately reset activation state, while preserving logic that prevents touch follow-on events
              this.resetActivationState_();
              return;
            }

            if (e !== undefined) {
              activatedTargets.push(
              /** @type {!EventTarget} */
              e.target);
              this.registerDeactivationHandlers_(e);
            }

            activationState.wasElementMadeActive = this.checkElementMadeActive_(e);

            if (activationState.wasElementMadeActive) {
              this.animateActivation_();
            }

            requestAnimationFrame(function () {
              // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples
              activatedTargets = [];

              if (!activationState.wasElementMadeActive && e !== undefined && (e.key === ' ' || e.keyCode === 32)) {
                // If space was pressed, try again within an rAF call to detect :active, because different UAs report
                // active states inconsistently when they're called within event handling code:
                // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971
                // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741
                // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS
                // variable is set within a rAF callback for a submit button interaction (#2241).
                activationState.wasElementMadeActive = _this9.checkElementMadeActive_(e);

                if (activationState.wasElementMadeActive) {
                  _this9.animateActivation_();
                }
              }

              if (!activationState.wasElementMadeActive) {
                // Reset activation state immediately if element was not made active.
                _this9.activationState_ = _this9.defaultActivationState_();
              }
            });
          }
          /**
           * @param {!Event=} e
           * @private
           */

        }, {
          key: 'checkElementMadeActive_',
          value: function checkElementMadeActive_(e) {
            return e !== undefined && e.type === 'keydown' ? this.adapter_.isSurfaceActive() : true;
          }
          /**
           * @param {!Event=} event Optional event containing position information.
           */

        }, {
          key: 'activate',
          value: function activate(event) {
            this.activate_(event);
          }
          /** @private */

        }, {
          key: 'animateActivation_',
          value: function animateActivation_() {
            var _this10 = this;

            var _MDCRippleFoundation$3 = MDCRippleFoundation.strings,
                VAR_FG_TRANSLATE_START = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_START,
                VAR_FG_TRANSLATE_END = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_END;
            var _MDCRippleFoundation$4 = MDCRippleFoundation.cssClasses,
                FG_DEACTIVATION = _MDCRippleFoundation$4.FG_DEACTIVATION,
                FG_ACTIVATION = _MDCRippleFoundation$4.FG_ACTIVATION;
            var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;
            this.layoutInternal_();
            var translateStart = '';
            var translateEnd = '';

            if (!this.adapter_.isUnbounded()) {
              var _getFgTranslationCoor = this.getFgTranslationCoordinates_(),
                  startPoint = _getFgTranslationCoor.startPoint,
                  endPoint = _getFgTranslationCoor.endPoint;

              translateStart = startPoint.x + 'px, ' + startPoint.y + 'px';
              translateEnd = endPoint.x + 'px, ' + endPoint.y + 'px';
            }

            this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);
            this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd); // Cancel any ongoing activation/deactivation animations

            clearTimeout(this.activationTimer_);
            clearTimeout(this.fgDeactivationRemovalTimer_);
            this.rmBoundedActivationClasses_();
            this.adapter_.removeClass(FG_DEACTIVATION); // Force layout in order to re-trigger the animation.

            this.adapter_.computeBoundingRect();
            this.adapter_.addClass(FG_ACTIVATION);
            this.activationTimer_ = setTimeout(function () {
              return _this10.activationTimerCallback_();
            }, DEACTIVATION_TIMEOUT_MS);
          }
          /**
           * @private
           * @return {{startPoint: PointType, endPoint: PointType}}
           */

        }, {
          key: 'getFgTranslationCoordinates_',
          value: function getFgTranslationCoordinates_() {
            var _activationState_ = this.activationState_,
                activationEvent = _activationState_.activationEvent,
                wasActivatedByPointer = _activationState_.wasActivatedByPointer;
            var startPoint = void 0;

            if (wasActivatedByPointer) {
              startPoint = Object(__WEBPACK_IMPORTED_MODULE_3__util__["getNormalizedEventCoords"])(
              /** @type {!Event} */
              activationEvent, this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect());
            } else {
              startPoint = {
                x: this.frame_.width / 2,
                y: this.frame_.height / 2
              };
            } // Center the element around the start point.


            startPoint = {
              x: startPoint.x - this.initialSize_ / 2,
              y: startPoint.y - this.initialSize_ / 2
            };
            var endPoint = {
              x: this.frame_.width / 2 - this.initialSize_ / 2,
              y: this.frame_.height / 2 - this.initialSize_ / 2
            };
            return {
              startPoint: startPoint,
              endPoint: endPoint
            };
          }
          /** @private */

        }, {
          key: 'runDeactivationUXLogicIfReady_',
          value: function runDeactivationUXLogicIfReady_() {
            var _this11 = this; // This method is called both when a pointing device is released, and when the activation animation ends.
            // The deactivation animation should only run after both of those occur.


            var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;
            var _activationState_2 = this.activationState_,
                hasDeactivationUXRun = _activationState_2.hasDeactivationUXRun,
                isActivated = _activationState_2.isActivated;
            var activationHasEnded = hasDeactivationUXRun || !isActivated;

            if (activationHasEnded && this.activationAnimationHasEnded_) {
              this.rmBoundedActivationClasses_();
              this.adapter_.addClass(FG_DEACTIVATION);
              this.fgDeactivationRemovalTimer_ = setTimeout(function () {
                _this11.adapter_.removeClass(FG_DEACTIVATION);
              }, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ].FG_DEACTIVATION_MS);
            }
          }
          /** @private */

        }, {
          key: 'rmBoundedActivationClasses_',
          value: function rmBoundedActivationClasses_() {
            var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;
            this.adapter_.removeClass(FG_ACTIVATION);
            this.activationAnimationHasEnded_ = false;
            this.adapter_.computeBoundingRect();
          }
        }, {
          key: 'resetActivationState_',
          value: function resetActivationState_() {
            var _this12 = this;

            this.previousActivationEvent_ = this.activationState_.activationEvent;
            this.activationState_ = this.defaultActivationState_(); // Touch devices may fire additional events for the same interaction within a short time.
            // Store the previous event until it's safe to assume that subsequent events are for new interactions.

            setTimeout(function () {
              return _this12.previousActivationEvent_ = undefined;
            }, MDCRippleFoundation.numbers.TAP_DELAY_MS);
          }
          /**
           * @private
           */

        }, {
          key: 'deactivate_',
          value: function deactivate_() {
            var _this13 = this;

            var activationState = this.activationState_; // This can happen in scenarios such as when you have a keyup event that blurs the element.

            if (!activationState.isActivated) {
              return;
            }

            var state =
            /** @type {!ActivationStateType} */
            _extends({}, activationState);

            if (activationState.isProgrammatic) {
              requestAnimationFrame(function () {
                return _this13.animateDeactivation_(state);
              });
              this.resetActivationState_();
            } else {
              this.deregisterDeactivationHandlers_();
              requestAnimationFrame(function () {
                _this13.activationState_.hasDeactivationUXRun = true;

                _this13.animateDeactivation_(state);

                _this13.resetActivationState_();
              });
            }
          }
        }, {
          key: 'deactivate',
          value: function deactivate() {
            this.deactivate_();
          }
          /**
           * @param {!ActivationStateType} options
           * @private
           */

        }, {
          key: 'animateDeactivation_',
          value: function animateDeactivation_(_ref) {
            var wasActivatedByPointer = _ref.wasActivatedByPointer,
                wasElementMadeActive = _ref.wasElementMadeActive;

            if (wasActivatedByPointer || wasElementMadeActive) {
              this.runDeactivationUXLogicIfReady_();
            }
          }
        }, {
          key: 'layout',
          value: function layout() {
            var _this14 = this;

            if (this.layoutFrame_) {
              cancelAnimationFrame(this.layoutFrame_);
            }

            this.layoutFrame_ = requestAnimationFrame(function () {
              _this14.layoutInternal_();

              _this14.layoutFrame_ = 0;
            });
          }
          /** @private */

        }, {
          key: 'layoutInternal_',
          value: function layoutInternal_() {
            var _this15 = this;

            this.frame_ = this.adapter_.computeBoundingRect();
            var maxDim = Math.max(this.frame_.height, this.frame_.width); // Surface diameter is treated differently for unbounded vs. bounded ripples.
            // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately
            // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically
            // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter
            // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via
            // `overflow: hidden`.

            var getBoundedRadius = function getBoundedRadius() {
              var hypotenuse = Math.sqrt(Math.pow(_this15.frame_.width, 2) + Math.pow(_this15.frame_.height, 2));
              return hypotenuse + MDCRippleFoundation.numbers.PADDING;
            };

            this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius(); // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform

            this.initialSize_ = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);
            this.fgScale_ = this.maxRadius_ / this.initialSize_;
            this.updateLayoutCssVars_();
          }
          /** @private */

        }, {
          key: 'updateLayoutCssVars_',
          value: function updateLayoutCssVars_() {
            var _MDCRippleFoundation$5 = MDCRippleFoundation.strings,
                VAR_FG_SIZE = _MDCRippleFoundation$5.VAR_FG_SIZE,
                VAR_LEFT = _MDCRippleFoundation$5.VAR_LEFT,
                VAR_TOP = _MDCRippleFoundation$5.VAR_TOP,
                VAR_FG_SCALE = _MDCRippleFoundation$5.VAR_FG_SCALE;
            this.adapter_.updateCssVariable(VAR_FG_SIZE, this.initialSize_ + 'px');
            this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);

            if (this.adapter_.isUnbounded()) {
              this.unboundedCoords_ = {
                left: Math.round(this.frame_.width / 2 - this.initialSize_ / 2),
                top: Math.round(this.frame_.height / 2 - this.initialSize_ / 2)
              };
              this.adapter_.updateCssVariable(VAR_LEFT, this.unboundedCoords_.left + 'px');
              this.adapter_.updateCssVariable(VAR_TOP, this.unboundedCoords_.top + 'px');
            }
          }
          /** @param {boolean} unbounded */

        }, {
          key: 'setUnbounded',
          value: function setUnbounded(unbounded) {
            var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;

            if (unbounded) {
              this.adapter_.addClass(UNBOUNDED);
            } else {
              this.adapter_.removeClass(UNBOUNDED);
            }
          }
        }, {
          key: 'handleFocus',
          value: function handleFocus() {
            var _this16 = this;

            requestAnimationFrame(function () {
              return _this16.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
            });
          }
        }, {
          key: 'handleBlur',
          value: function handleBlur() {
            var _this17 = this;

            requestAnimationFrame(function () {
              return _this17.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
            });
          }
        }]);

        return MDCRippleFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCRippleFoundation;
      /***/
    },
    /* 6 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "c", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return numbers;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var cssClasses = {
        // Ripple is a special case where the "root" component is really a "mixin" of sorts,
        // given that it's an 'upgrade' to an existing component. That being said it is the root
        // CSS class that all other CSS classes derive from.
        ROOT: 'mdc-ripple-upgraded',
        UNBOUNDED: 'mdc-ripple-upgraded--unbounded',
        BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',
        FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',
        FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation'
      };
      var strings = {
        VAR_LEFT: '--mdc-ripple-left',
        VAR_TOP: '--mdc-ripple-top',
        VAR_FG_SIZE: '--mdc-ripple-fg-size',
        VAR_FG_SCALE: '--mdc-ripple-fg-scale',
        VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',
        VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end'
      };
      var numbers = {
        PADDING: 10,
        INITIAL_ORIGIN_SCALE: 0.6,
        DEACTIVATION_TIMEOUT_MS: 225,
        // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)
        FG_DEACTIVATION_MS: 150,
        // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)
        TAP_DELAY_MS: 300
      };
      /***/
    },,
    /* 7 */

    /* 8 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "closest", function () {
        return closest;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "matches", function () {
        return matches;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @fileoverview A "ponyfill" is a polyfill that doesn't modify the global prototype chain.
       * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.
       */

      /**
       * @param {!Element} element
       * @param {string} selector
       * @return {?Element}
       */


      function closest(element, selector) {
        if (element.closest) {
          return element.closest(selector);
        }

        var el = element;

        while (el) {
          if (matches(el, selector)) {
            return el;
          }

          el = el.parentElement;
        }

        return null;
      }
      /**
       * @param {!Element} element
       * @param {string} selector
       * @return {boolean}
       */


      function matches(element, selector) {
        var nativeMatches = element.matches || element.webkitMatchesSelector || element.msMatchesSelector;
        return nativeMatches.call(element, selector);
      }
      /***/

    },,
    /* 9 */

    /* 10 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC List. Provides an interface for managing focus.
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCListAdapter = function () {
        function MDCListAdapter() {
          _classCallCheck(this, MDCListAdapter);
        }

        _createClass(MDCListAdapter, [{
          key: "getListItemCount",

          /** @return {number} */
          value: function getListItemCount() {}
          /**
           * @return {number} */

        }, {
          key: "getFocusedElementIndex",
          value: function getFocusedElementIndex() {}
          /**
           * @param {number} index
           * @param {string} attribute
           * @param {string} value
           */

        }, {
          key: "setAttributeForElementIndex",
          value: function setAttributeForElementIndex(index, attribute, value) {}
          /**
           * @param {number} index
           * @param {string} attribute
           */

        }, {
          key: "removeAttributeForElementIndex",
          value: function removeAttributeForElementIndex(index, attribute) {}
          /**
           * @param {number} index
           * @param {string} className
           */

        }, {
          key: "addClassForElementIndex",
          value: function addClassForElementIndex(index, className) {}
          /**
           * @param {number} index
           * @param {string} className
           */

        }, {
          key: "removeClassForElementIndex",
          value: function removeClassForElementIndex(index, className) {}
          /**
           * Focuses list item at the index specified.
           * @param {number} index
           */

        }, {
          key: "focusItemAtIndex",
          value: function focusItemAtIndex(index) {}
          /**
           * Sets the tabindex to the value specified for all button/a element children of
           * the list item at the index specified.
           * @param {number} listItemIndex
           * @param {number} tabIndexValue
           */

        }, {
          key: "setTabIndexForListItemChildren",
          value: function setTabIndexForListItemChildren(listItemIndex, tabIndexValue) {}
          /**
           * If the given element has an href, follows the link.
           * @param {!Element} ele
           */

        }, {
          key: "followHref",
          value: function followHref(ele) {}
          /**
           * @param {number} index
           * @return {boolean} Returns true if radio button is present at given list item index.
           */

        }, {
          key: "hasRadioAtIndex",
          value: function hasRadioAtIndex(index) {}
          /**
           * @param {number} index
           * @return {boolean} Returns true if checkbox is present at given list item index.
           */

        }, {
          key: "hasCheckboxAtIndex",
          value: function hasCheckboxAtIndex(index) {}
          /**
           * @param {number} index
           * @return {boolean} Returns true if checkbox inside a list item is checked.
           */

        }, {
          key: "isCheckboxCheckedAtIndex",
          value: function isCheckboxCheckedAtIndex(index) {}
          /**
           * Sets the checked status of checkbox or radio at given list item index.
           * @param {number} index
           * @param {boolean} isChecked
           */

        }, {
          key: "setCheckedCheckboxOrRadioAtIndex",
          value: function setCheckedCheckboxOrRadioAtIndex(index, isChecked) {}
          /**
           * @return {boolean} Returns true when the current focused element is inside list root.
           */

        }, {
          key: "isFocusInsideList",
          value: function isFocusInsideList() {}
        }]);

        return MDCListAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCListAdapter;
      /***/
    },
    /* 11 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* unused harmony export Index */

      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        ROOT: 'mdc-list',
        LIST_ITEM_CLASS: 'mdc-list-item',
        LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',
        LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated'
      };
      /** @enum {string} */

      var strings = {
        ARIA_ORIENTATION: 'aria-orientation',
        ARIA_ORIENTATION_HORIZONTAL: 'horizontal',
        ARIA_SELECTED: 'aria-selected',
        ARIA_CHECKED: 'aria-checked',
        ARIA_CHECKED_RADIO_SELECTOR: '[role="radio"][aria-checked="true"]',
        ARIA_ROLE_CHECKBOX_SELECTOR: '[role="checkbox"]',
        ARIA_CHECKED_CHECKBOX_SELECTOR: '[role="checkbox"][aria-checked="true"]',
        RADIO_SELECTOR: 'input[type="radio"]:not(:disabled)',
        CHECKBOX_SELECTOR: 'input[type="checkbox"]:not(:disabled)',
        CHECKBOX_RADIO_SELECTOR: 'input[type="checkbox"]:not(:disabled), input[type="radio"]:not(:disabled)',
        CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: '.' + cssClasses.LIST_ITEM_CLASS + ' button:not(:disabled),\n  .' + cssClasses.LIST_ITEM_CLASS + ' a',
        FOCUSABLE_CHILD_ELEMENTS: '.' + cssClasses.LIST_ITEM_CLASS + ' button:not(:disabled), .' + cssClasses.LIST_ITEM_CLASS + ' a,\n  .' + cssClasses.LIST_ITEM_CLASS + ' input[type="radio"]:not(:disabled),\n  .' + cssClasses.LIST_ITEM_CLASS + ' input[type="checkbox"]:not(:disabled)',
        ENABLED_ITEMS_SELECTOR: '.mdc-list-item:not(.mdc-list-item--disabled)'
      };
      /** @typedef {number|!Array<number>} */

      var Index = void 0;
      /***/
    },
    /* 12 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Floating Label.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the floating label into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCFloatingLabelAdapter = function () {
        function MDCFloatingLabelAdapter() {
          _classCallCheck(this, MDCFloatingLabelAdapter);
        }

        _createClass(MDCFloatingLabelAdapter, [{
          key: "addClass",

          /**
           * Adds a class to the label element.
           * @param {string} className
           */
          value: function addClass(className) {}
          /**
           * Removes a class from the label element.
           * @param {string} className
           */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * Returns the width of the label element.
           * @return {number}
           */

        }, {
          key: "getWidth",
          value: function getWidth() {}
          /**
           * Registers an event listener on the root element for a given event.
           * @param {string} evtType
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "registerInteractionHandler",
          value: function registerInteractionHandler(evtType, handler) {}
          /**
           * Deregisters an event listener on the root element for a given event.
           * @param {string} evtType
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "deregisterInteractionHandler",
          value: function deregisterInteractionHandler(evtType, handler) {}
        }]);

        return MDCFloatingLabelAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCFloatingLabelAdapter;
      /***/
    },,,
    /* 13 */

    /* 14 */

    /* 15 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(10);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(11);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */
      // eslint-disable-line no-unused-vars


      var ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];

      var MDCListFoundation = function (_MDCFoundation) {
        _inherits(MDCListFoundation, _MDCFoundation);

        _createClass(MDCListFoundation, null, [{
          key: 'strings',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /**
           * {@see MDCListAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCListAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCListAdapter} */
              {
                getListItemCount: function getListItemCount() {},
                getFocusedElementIndex: function getFocusedElementIndex() {},
                setAttributeForElementIndex: function setAttributeForElementIndex() {},
                removeAttributeForElementIndex: function removeAttributeForElementIndex() {},
                addClassForElementIndex: function addClassForElementIndex() {},
                removeClassForElementIndex: function removeClassForElementIndex() {},
                focusItemAtIndex: function focusItemAtIndex() {},
                setTabIndexForListItemChildren: function setTabIndexForListItemChildren() {},
                followHref: function followHref() {},
                hasRadioAtIndex: function hasRadioAtIndex() {},
                hasCheckboxAtIndex: function hasCheckboxAtIndex() {},
                isCheckboxCheckedAtIndex: function isCheckboxCheckedAtIndex() {},
                setCheckedCheckboxOrRadioAtIndex: function setCheckedCheckboxOrRadioAtIndex() {},
                isFocusInsideList: function isFocusInsideList() {}
              }
            );
          }
          /**
           * @param {!MDCListAdapter=} adapter
           */

        }]);

        function MDCListFoundation(adapter) {
          _classCallCheck(this, MDCListFoundation);
          /** @private {boolean} */


          var _this = _possibleConstructorReturn(this, (MDCListFoundation.__proto__ || Object.getPrototypeOf(MDCListFoundation)).call(this, _extends(MDCListFoundation.defaultAdapter, adapter)));

          _this.wrapFocus_ = false;
          /** @private {boolean} */

          _this.isVertical_ = true;
          /** @private {boolean} */

          _this.isSingleSelectionList_ = false;
          /** @private {!Index} */

          _this.selectedIndex_ = -1;
          /** @private {number} */

          _this.focusedItemIndex_ = -1;
          /** @private {boolean} */

          _this.useActivatedClass_ = false;
          /** @private {boolean} */

          _this.isCheckboxList_ = false;
          /** @private {boolean} */

          _this.isRadioList_ = false;
          return _this;
        }

        _createClass(MDCListFoundation, [{
          key: 'layout',
          value: function layout() {
            if (this.adapter_.getListItemCount() === 0) return;

            if (this.adapter_.hasCheckboxAtIndex(0)) {
              this.isCheckboxList_ = true;
            } else if (this.adapter_.hasRadioAtIndex(0)) {
              this.isRadioList_ = true;
            }
          }
          /**
           * Sets the private wrapFocus_ variable.
           * @param {boolean} value
           */

        }, {
          key: 'setWrapFocus',
          value: function setWrapFocus(value) {
            this.wrapFocus_ = value;
          }
          /**
           * Sets the isVertical_ private variable.
           * @param {boolean} value
           */

        }, {
          key: 'setVerticalOrientation',
          value: function setVerticalOrientation(value) {
            this.isVertical_ = value;
          }
          /**
           * Sets the isSingleSelectionList_ private variable.
           * @param {boolean} value
           */

        }, {
          key: 'setSingleSelection',
          value: function setSingleSelection(value) {
            this.isSingleSelectionList_ = value;
          }
          /**
           * Sets the useActivatedClass_ private variable.
           * @param {boolean} useActivated
           */

        }, {
          key: 'setUseActivatedClass',
          value: function setUseActivatedClass(useActivated) {
            this.useActivatedClass_ = useActivated;
          }
          /** @return {!Index} */

        }, {
          key: 'getSelectedIndex',
          value: function getSelectedIndex() {
            return this.selectedIndex_;
          }
          /** @param {!Index} index */

        }, {
          key: 'setSelectedIndex',
          value: function setSelectedIndex(index) {
            if (!this.isIndexValid_(index)) return;

            if (this.isCheckboxList_) {
              this.setCheckboxAtIndex_(
              /** @type {!Array<number>} */
              index);
            } else if (this.isRadioList_) {
              this.setRadioAtIndex_(
              /** @type {number} */
              index);
            } else {
              this.setSingleSelectionAtIndex_(
              /** @type {number} */
              index);
            }
          }
          /**
           * Focus in handler for the list items.
           * @param evt
           * @param {number} listItemIndex
           */

        }, {
          key: 'handleFocusIn',
          value: function handleFocusIn(evt, listItemIndex) {
            if (listItemIndex >= 0) {
              this.adapter_.setTabIndexForListItemChildren(listItemIndex, 0);
            }
          }
          /**
           * Focus out handler for the list items.
           * @param {Event} evt
           * @param {number} listItemIndex
           */

        }, {
          key: 'handleFocusOut',
          value: function handleFocusOut(evt, listItemIndex) {
            var _this2 = this;

            if (listItemIndex >= 0) {
              this.adapter_.setTabIndexForListItemChildren(listItemIndex, -1);
            }
            /**
             * Between Focusout & Focusin some browsers do not have focus on any element. Setting a delay to wait till the focus
             * is moved to next element.
             */


            setTimeout(function () {
              if (!_this2.adapter_.isFocusInsideList()) {
                _this2.setTabindexToFirstSelectedItem_();
              }
            }, 0);
          }
          /**
           * Key handler for the list.
           * @param {Event} evt
           * @param {boolean} isRootListItem
           * @param {number} listItemIndex
           */

        }, {
          key: 'handleKeydown',
          value: function handleKeydown(evt, isRootListItem, listItemIndex) {
            var arrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;
            var arrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;
            var arrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;
            var arrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;
            var isHome = evt.key === 'Home' || evt.keyCode === 36;
            var isEnd = evt.key === 'End' || evt.keyCode === 35;
            var isEnter = evt.key === 'Enter' || evt.keyCode === 13;
            var isSpace = evt.key === 'Space' || evt.keyCode === 32;
            var currentIndex = this.adapter_.getFocusedElementIndex();
            var nextIndex = -1;

            if (currentIndex === -1) {
              currentIndex = listItemIndex;

              if (currentIndex < 0) {
                // If this event doesn't have a mdc-list-item ancestor from the
                // current list (not from a sublist), return early.
                return;
              }
            }

            if (this.isVertical_ && arrowDown || !this.isVertical_ && arrowRight) {
              this.preventDefaultEvent_(evt);
              nextIndex = this.focusNextElement(currentIndex);
            } else if (this.isVertical_ && arrowUp || !this.isVertical_ && arrowLeft) {
              this.preventDefaultEvent_(evt);
              nextIndex = this.focusPrevElement(currentIndex);
            } else if (isHome) {
              this.preventDefaultEvent_(evt);
              nextIndex = this.focusFirstElement();
            } else if (isEnd) {
              this.preventDefaultEvent_(evt);
              nextIndex = this.focusLastElement();
            } else if (isEnter || isSpace) {
              if (isRootListItem) {
                if (this.isSelectableList_()) {
                  this.setSelectedIndexOnAction_(currentIndex);
                  this.preventDefaultEvent_(evt);
                } // Explicitly activate links, since we're preventing default on Enter, and Space doesn't activate them.


                this.adapter_.followHref(currentIndex);
              }
            }

            this.focusedItemIndex_ = currentIndex;

            if (nextIndex >= 0) {
              this.setTabindexAtIndex_(nextIndex);
              this.focusedItemIndex_ = nextIndex;
            }
          }
          /**
           * Click handler for the list.
           * @param {number} index
           * @param {boolean} toggleCheckbox
           */

        }, {
          key: 'handleClick',
          value: function handleClick(index, toggleCheckbox) {
            if (index === -1) return;

            if (this.isSelectableList_()) {
              this.setSelectedIndexOnAction_(index, toggleCheckbox);
            }

            this.setTabindexAtIndex_(index);
            this.focusedItemIndex_ = index;
          }
          /**
           * Ensures that preventDefault is only called if the containing element doesn't
           * consume the event, and it will cause an unintended scroll.
           * @param {Event} evt
           * @private
           */

        }, {
          key: 'preventDefaultEvent_',
          value: function preventDefaultEvent_(evt) {
            var tagName = ('' + evt.target.tagName).toLowerCase();

            if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {
              evt.preventDefault();
            }
          }
          /**
           * Focuses the next element on the list.
           * @param {number} index
           * @return {number}
           */

        }, {
          key: 'focusNextElement',
          value: function focusNextElement(index) {
            var count = this.adapter_.getListItemCount();
            var nextIndex = index + 1;

            if (nextIndex >= count) {
              if (this.wrapFocus_) {
                nextIndex = 0;
              } else {
                // Return early because last item is already focused.
                return index;
              }
            }

            this.adapter_.focusItemAtIndex(nextIndex);
            return nextIndex;
          }
          /**
           * Focuses the previous element on the list.
           * @param {number} index
           * @return {number}
           */

        }, {
          key: 'focusPrevElement',
          value: function focusPrevElement(index) {
            var prevIndex = index - 1;

            if (prevIndex < 0) {
              if (this.wrapFocus_) {
                prevIndex = this.adapter_.getListItemCount() - 1;
              } else {
                // Return early because first item is already focused.
                return index;
              }
            }

            this.adapter_.focusItemAtIndex(prevIndex);
            return prevIndex;
          }
          /**
           * @return {number}
           */

        }, {
          key: 'focusFirstElement',
          value: function focusFirstElement() {
            this.adapter_.focusItemAtIndex(0);
            return 0;
          }
          /**
           * @return {number}
           */

        }, {
          key: 'focusLastElement',
          value: function focusLastElement() {
            var lastIndex = this.adapter_.getListItemCount() - 1;
            this.adapter_.focusItemAtIndex(lastIndex);
            return lastIndex;
          }
          /**
           * @param {number} index
           * @private
           */

        }, {
          key: 'setSingleSelectionAtIndex_',
          value: function setSingleSelectionAtIndex_(index) {
            var selectedClassName = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].LIST_ITEM_SELECTED_CLASS;

            if (this.useActivatedClass_) {
              selectedClassName = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].LIST_ITEM_ACTIVATED_CLASS;
            }

            if (this.selectedIndex_ >= 0 && this.selectedIndex_ !== index) {
              this.adapter_.removeClassForElementIndex(this.selectedIndex_, selectedClassName);
              this.adapter_.setAttributeForElementIndex(this.selectedIndex_, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ARIA_SELECTED, 'false');
            }

            this.adapter_.addClassForElementIndex(index, selectedClassName);
            this.adapter_.setAttributeForElementIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_SELECTED, 'true');
            this.selectedIndex_ = index;
          }
          /**
           * Toggles radio at give index. Radio doesn't change the checked state if it is already checked.
           * @param {number} index
           * @private
           */

        }, {
          key: 'setRadioAtIndex_',
          value: function setRadioAtIndex_(index) {
            this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, true);

            if (this.selectedIndex_ >= 0) {
              this.adapter_.setAttributeForElementIndex(this.selectedIndex_, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ARIA_CHECKED, 'false');
            }

            this.adapter_.setAttributeForElementIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_CHECKED, 'true');
            this.selectedIndex_ = index;
          }
          /**
           * @param {!Array<number>} index
           * @private
           */

        }, {
          key: 'setCheckboxAtIndex_',
          value: function setCheckboxAtIndex_(index) {
            for (var i = 0; i < this.adapter_.getListItemCount(); i++) {
              var isChecked = false;

              if (index.indexOf(i) >= 0) {
                isChecked = true;
              }

              this.adapter_.setCheckedCheckboxOrRadioAtIndex(i, isChecked);
              this.adapter_.setAttributeForElementIndex(i, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ARIA_CHECKED, isChecked ? 'true' : 'false');
            }

            this.selectedIndex_ = index;
          }
          /**
           * @param {number} index
           * @private
           */

        }, {
          key: 'setTabindexAtIndex_',
          value: function setTabindexAtIndex_(index) {
            if (this.focusedItemIndex_ === -1 && index !== 0) {
              // If no list item was selected set first list item's tabindex to -1.
              // Generally, tabindex is set to 0 on first list item of list that has no preselected items.
              this.adapter_.setAttributeForElementIndex(0, 'tabindex', -1);
            } else if (this.focusedItemIndex_ >= 0 && this.focusedItemIndex_ !== index) {
              this.adapter_.setAttributeForElementIndex(this.focusedItemIndex_, 'tabindex', -1);
            }

            this.adapter_.setAttributeForElementIndex(index, 'tabindex', 0);
          }
          /**
           * @return {boolean} Return true if it is single selectin list, checkbox list or radio list.
           * @private
           */

        }, {
          key: 'isSelectableList_',
          value: function isSelectableList_() {
            return this.isSingleSelectionList_ || this.isCheckboxList_ || this.isRadioList_;
          }
          /** @private */

        }, {
          key: 'setTabindexToFirstSelectedItem_',
          value: function setTabindexToFirstSelectedItem_() {
            var targetIndex = 0;

            if (this.isSelectableList_()) {
              if (typeof this.selectedIndex_ === 'number' && this.selectedIndex_ !== -1) {
                targetIndex = this.selectedIndex_;
              } else if (this.selectedIndex_ instanceof Array && this.selectedIndex_.length > 0) {
                targetIndex = this.selectedIndex_.reduce(function (currentIndex, minIndex) {
                  return Math.min(currentIndex, minIndex);
                });
              }
            }

            this.setTabindexAtIndex_(targetIndex);
          }
          /**
           * @param {!Index} index
           * @return {boolean}
           * @private
           */

        }, {
          key: 'isIndexValid_',
          value: function isIndexValid_(index) {
            var _this3 = this;

            if (index instanceof Array) {
              if (!this.isCheckboxList_) {
                throw new Error('MDCListFoundation: Array of index is only supported for checkbox based list');
              }

              if (index.length === 0) {
                return true;
              } else {
                return index.some(function (i) {
                  return _this3.isIndexInRange_(i);
                });
              }
            } else if (typeof index === 'number') {
              if (this.isCheckboxList_) {
                throw new Error('MDCListFoundation: Expected array of index for checkbox based list but got number: ' + index);
              }

              return this.isIndexInRange_(index);
            } else {
              return false;
            }
          }
          /**
           * @param {number} index
           * @return {boolean}
           * @private
           */

        }, {
          key: 'isIndexInRange_',
          value: function isIndexInRange_(index) {
            var listSize = this.adapter_.getListItemCount();
            return index >= 0 && index < listSize;
          }
          /**
           * @param {number} index
           * @param {boolean=} toggleCheckbox
           * @private
           */

        }, {
          key: 'setSelectedIndexOnAction_',
          value: function setSelectedIndexOnAction_(index) {
            var toggleCheckbox = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

            if (this.isCheckboxList_) {
              this.toggleCheckboxAtIndex_(index, toggleCheckbox);
            } else {
              this.setSelectedIndex(index);
            }
          }
          /**
           * @param {number} index
           * @param {boolean} toggleCheckbox
           * @private
           */

        }, {
          key: 'toggleCheckboxAtIndex_',
          value: function toggleCheckboxAtIndex_(index, toggleCheckbox) {
            var isChecked = this.adapter_.isCheckboxCheckedAtIndex(index);

            if (toggleCheckbox) {
              isChecked = !isChecked;
              this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, isChecked);
            }

            this.adapter_.setAttributeForElementIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_CHECKED, isChecked ? 'true' : 'false'); // If none of the checkbox items are selected and selectedIndex is not initialized then provide a default value.

            if (this.selectedIndex_ === -1) {
              this.selectedIndex_ = [];
            }

            if (isChecked) {
              this.selectedIndex_.push(index);
            } else {
              this.selectedIndex_ = this.selectedIndex_.filter(function (i) {
                return i !== index;
              });
            }
          }
        }]);

        return MDCListFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCListFoundation;
      /***/
    },
    /* 16 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCFloatingLabel", function () {
        return MDCFloatingLabel;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(12);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(26);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCFloatingLabelFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCComponent<!MDCFloatingLabelFoundation>}
       * @final
       */


      var MDCFloatingLabel = function (_MDCComponent) {
        _inherits(MDCFloatingLabel, _MDCComponent);

        function MDCFloatingLabel() {
          _classCallCheck(this, MDCFloatingLabel);

          return _possibleConstructorReturn(this, (MDCFloatingLabel.__proto__ || Object.getPrototypeOf(MDCFloatingLabel)).apply(this, arguments));
        }

        _createClass(MDCFloatingLabel, [{
          key: 'shake',

          /**
           * Styles the label to produce the label shake for errors.
           * @param {boolean} shouldShake styles the label to shake by adding shake class
           * if true, otherwise will stop shaking by removing shake class.
           */
          value: function shake(shouldShake) {
            this.foundation_.shake(shouldShake);
          }
          /**
           * Styles label to float/dock.
           * @param {boolean} shouldFloat styles the label to float by adding float class
           * if true, otherwise docks the label by removing the float class.
           */

        }, {
          key: 'float',
          value: function float(shouldFloat) {
            this.foundation_.float(shouldFloat);
          }
          /**
           * @return {number}
           */

        }, {
          key: 'getWidth',
          value: function getWidth() {
            return this.foundation_.getWidth();
          }
          /**
           * @return {!MDCFloatingLabelFoundation}
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ]({
              addClass: function addClass(className) {
                return _this2.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this2.root_.classList.remove(className);
              },
              getWidth: function getWidth() {
                return _this2.root_.scrollWidth;
              },
              registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
                return _this2.root_.addEventListener(evtType, handler);
              },
              deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
                return _this2.root_.removeEventListener(evtType, handler);
              }
            });
          }
        }], [{
          key: 'attachTo',

          /**
           * @param {!Element} root
           * @return {!MDCFloatingLabel}
           */
          value: function attachTo(root) {
            return new MDCFloatingLabel(root);
          }
        }]);

        return MDCFloatingLabel;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 17 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "b", function () {
        return MDCMenuSurfaceFoundation;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return AnchorMargin;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(21);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(18);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        } else {
          obj[key] = value;
        }

        return obj;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @typedef {{
       *   top: number,
       *   right: number,
       *   bottom: number,
       *   left: number
       * }}
       */


      var AnchorMargin = void 0;
      /* eslint-disable no-unused-vars */

      /**
       * @typedef {{
       *   viewport: { width: number, height: number },
       *   viewportDistance: {top: number, right: number, bottom: number, left: number},
       *   anchorHeight: number,
       *   anchorWidth: number,
       *   surfaceHeight: number,
       *   surfaceWidth: number,
       *   bodyDimensions,
       *   windowScroll,
       * }}
       */

      var AutoLayoutMeasurements = void 0;
      /* eslint-enable no-unused-vars */

      /**
       * @extends {MDCFoundation<!MDCMenuSurfaceAdapter>}
       */

      var MDCMenuSurfaceFoundation = function (_MDCFoundation) {
        _inherits(MDCMenuSurfaceFoundation, _MDCFoundation);

        _createClass(MDCMenuSurfaceFoundation, null, [{
          key: 'cssClasses',

          /** @return enum{cssClasses} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["c"
            /* cssClasses */
            ];
          }
          /** @return enum{string} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["e"
            /* strings */
            ];
          }
          /** @return enum {number} */

        }, {
          key: 'numbers',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["d"
            /* numbers */
            ];
          }
          /** @return enum{number} */

        }, {
          key: 'Corner',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* Corner */
            ];
          }
          /**
           * {@see MDCMenuSurfaceAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCMenuSurfaceAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCMenuSurfaceAdapter} */
              {
                addClass: function addClass() {},
                removeClass: function removeClass() {},
                hasClass: function hasClass() {
                  return false;
                },
                hasAnchor: function hasAnchor() {
                  return false;
                },
                notifyClose: function notifyClose() {},
                notifyOpen: function notifyOpen() {},
                isElementInContainer: function isElementInContainer() {
                  return false;
                },
                isRtl: function isRtl() {
                  return false;
                },
                setTransformOrigin: function setTransformOrigin() {},
                isFocused: function isFocused() {
                  return false;
                },
                saveFocus: function saveFocus() {},
                restoreFocus: function restoreFocus() {},
                isFirstElementFocused: function isFirstElementFocused() {},
                isLastElementFocused: function isLastElementFocused() {},
                focusFirstElement: function focusFirstElement() {},
                focusLastElement: function focusLastElement() {},
                getInnerDimensions: function getInnerDimensions() {
                  return {};
                },
                getAnchorDimensions: function getAnchorDimensions() {
                  return {};
                },
                getWindowDimensions: function getWindowDimensions() {
                  return {};
                },
                getBodyDimensions: function getBodyDimensions() {
                  return {};
                },
                getWindowScroll: function getWindowScroll() {
                  return {};
                },
                setPosition: function setPosition() {},
                setMaxHeight: function setMaxHeight() {}
              }
            );
          }
          /** @param {!MDCMenuSurfaceAdapter} adapter */

        }]);

        function MDCMenuSurfaceFoundation(adapter) {
          _classCallCheck(this, MDCMenuSurfaceFoundation);
          /** @private {boolean} */


          var _this = _possibleConstructorReturn(this, (MDCMenuSurfaceFoundation.__proto__ || Object.getPrototypeOf(MDCMenuSurfaceFoundation)).call(this, _extends(MDCMenuSurfaceFoundation.defaultAdapter, adapter)));

          _this.isOpen_ = false;
          /** @private {number} */

          _this.openAnimationEndTimerId_ = 0;
          /** @private {number} */

          _this.closeAnimationEndTimerId_ = 0;
          /** @private {number} */

          _this.animationRequestId_ = 0;
          /** @private {!{ width: number, height: number }} */

          _this.dimensions_;
          /** @private {!Corner} */

          _this.anchorCorner_ = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
          /* Corner */
          ].TOP_START;
          /** @private {!AnchorMargin} */

          _this.anchorMargin_ = {
            top: 0,
            right: 0,
            bottom: 0,
            left: 0
          };
          /** @private {?AutoLayoutMeasurements} */

          _this.measures_ = null;
          /** @private {boolean} */

          _this.quickOpen_ = false;
          /** @private {boolean} */

          _this.hoistedElement_ = false;
          /** @private {boolean} */

          _this.isFixedPosition_ = false;
          /** @private {!{x: number, y: number}} */

          _this.position_ = {
            x: 0,
            y: 0
          };
          return _this;
        }

        _createClass(MDCMenuSurfaceFoundation, [{
          key: 'init',
          value: function init() {
            var _MDCMenuSurfaceFounda = MDCMenuSurfaceFoundation.cssClasses,
                ROOT = _MDCMenuSurfaceFounda.ROOT,
                OPEN = _MDCMenuSurfaceFounda.OPEN;

            if (!this.adapter_.hasClass(ROOT)) {
              throw new Error(ROOT + ' class required in root element.');
            }

            if (this.adapter_.hasClass(OPEN)) {
              this.isOpen_ = true;
            }
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            clearTimeout(this.openAnimationEndTimerId_);
            clearTimeout(this.closeAnimationEndTimerId_); // Cancel any currently running animations.

            cancelAnimationFrame(this.animationRequestId_);
          }
          /**
           * @param {!Corner} corner Default anchor corner alignment of top-left menu surface corner.
           */

        }, {
          key: 'setAnchorCorner',
          value: function setAnchorCorner(corner) {
            this.anchorCorner_ = corner;
          }
          /**
           * @param {!AnchorMargin} margin set of margin values from anchor.
           */

        }, {
          key: 'setAnchorMargin',
          value: function setAnchorMargin(margin) {
            this.anchorMargin_.top = typeof margin.top === 'number' ? margin.top : 0;
            this.anchorMargin_.right = typeof margin.right === 'number' ? margin.right : 0;
            this.anchorMargin_.bottom = typeof margin.bottom === 'number' ? margin.bottom : 0;
            this.anchorMargin_.left = typeof margin.left === 'number' ? margin.left : 0;
          }
          /**
           * Used to indicate if the menu-surface is hoisted to the body.
           * @param {boolean} isHoisted
           */

        }, {
          key: 'setIsHoisted',
          value: function setIsHoisted(isHoisted) {
            this.hoistedElement_ = isHoisted;
          }
          /**
           * Used to set the menu-surface calculations based on a fixed position menu.
           * @param {boolean} isFixedPosition
           */

        }, {
          key: 'setFixedPosition',
          value: function setFixedPosition(isFixedPosition) {
            this.isFixedPosition_ = isFixedPosition;
          }
          /**
           * Sets the menu-surface position on the page.
           * @param {number} x
           * @param {number} y
           */

        }, {
          key: 'setAbsolutePosition',
          value: function setAbsolutePosition(x, y) {
            this.position_.x = this.typeCheckisFinite_(x) ? x : 0;
            this.position_.y = this.typeCheckisFinite_(y) ? y : 0;
          }
          /** @param {boolean} quickOpen */

        }, {
          key: 'setQuickOpen',
          value: function setQuickOpen(quickOpen) {
            this.quickOpen_ = quickOpen;
          }
          /**
           * Handle clicks and close if not within menu-surface element.
           * @param {!Event} evt
           */

        }, {
          key: 'handleBodyClick',
          value: function handleBodyClick(evt) {
            var el = evt.target;

            if (this.adapter_.isElementInContainer(el)) {
              return;
            }

            this.close();
          }
        }, {
          key: 'handleKeydown',

          /**
           * Handle keys that close the surface.
           * @param {!Event} evt
           */
          value: function handleKeydown(evt) {
            var keyCode = evt.keyCode,
                key = evt.key,
                shiftKey = evt.shiftKey;
            var isEscape = key === 'Escape' || keyCode === 27;
            var isTab = key === 'Tab' || keyCode === 9;

            if (isEscape) {
              this.close();
            } else if (isTab) {
              if (this.adapter_.isLastElementFocused() && !shiftKey) {
                this.adapter_.focusFirstElement();
                evt.preventDefault();
              } else if (this.adapter_.isFirstElementFocused() && shiftKey) {
                this.adapter_.focusLastElement();
                evt.preventDefault();
              }
            }
          }
          /**
           * @return {!AutoLayoutMeasurements} Measurements used to position menu surface popup.
           */

        }, {
          key: 'getAutoLayoutMeasurements_',
          value: function getAutoLayoutMeasurements_() {
            var anchorRect = this.adapter_.getAnchorDimensions();
            var viewport = this.adapter_.getWindowDimensions();
            var bodyDimensions = this.adapter_.getBodyDimensions();
            var windowScroll = this.adapter_.getWindowScroll();

            if (!anchorRect) {
              anchorRect =
              /** @type {ClientRect} */
              {
                x: this.position_.x,
                y: this.position_.y,
                top: this.position_.y,
                bottom: this.position_.y,
                left: this.position_.x,
                right: this.position_.x,
                height: 0,
                width: 0
              };
            }

            return {
              viewport: viewport,
              bodyDimensions: bodyDimensions,
              windowScroll: windowScroll,
              viewportDistance: {
                top: anchorRect.top,
                right: viewport.width - anchorRect.right,
                left: anchorRect.left,
                bottom: viewport.height - anchorRect.bottom
              },
              anchorHeight: anchorRect.height,
              anchorWidth: anchorRect.width,
              surfaceHeight: this.dimensions_.height,
              surfaceWidth: this.dimensions_.width
            };
          }
          /**
           * Computes the corner of the anchor from which to animate and position the menu surface.
           * @return {!Corner}
           * @private
           */

        }, {
          key: 'getOriginCorner_',
          value: function getOriginCorner_() {
            // Defaults: open from the top left.
            var corner = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* Corner */
            ].TOP_LEFT;
            var _measures_ = this.measures_,
                viewportDistance = _measures_.viewportDistance,
                anchorHeight = _measures_.anchorHeight,
                anchorWidth = _measures_.anchorWidth,
                surfaceHeight = _measures_.surfaceHeight,
                surfaceWidth = _measures_.surfaceWidth;
            var isBottomAligned = Boolean(this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].BOTTOM);
            var availableTop = isBottomAligned ? viewportDistance.top + anchorHeight + this.anchorMargin_.bottom : viewportDistance.top + this.anchorMargin_.top;
            var availableBottom = isBottomAligned ? viewportDistance.bottom - this.anchorMargin_.bottom : viewportDistance.bottom + anchorHeight - this.anchorMargin_.top;
            var topOverflow = surfaceHeight - availableTop;
            var bottomOverflow = surfaceHeight - availableBottom;

            if (bottomOverflow > 0 && topOverflow < bottomOverflow) {
              corner |= __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* CornerBit */
              ].BOTTOM;
            }

            var isRtl = this.adapter_.isRtl();
            var isFlipRtl = Boolean(this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].FLIP_RTL);
            var avoidHorizontalOverlap = Boolean(this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].RIGHT);
            var isAlignedRight = avoidHorizontalOverlap && !isRtl || !avoidHorizontalOverlap && isFlipRtl && isRtl;
            var availableLeft = isAlignedRight ? viewportDistance.left + anchorWidth + this.anchorMargin_.right : viewportDistance.left + this.anchorMargin_.left;
            var availableRight = isAlignedRight ? viewportDistance.right - this.anchorMargin_.right : viewportDistance.right + anchorWidth - this.anchorMargin_.left;
            var leftOverflow = surfaceWidth - availableLeft;
            var rightOverflow = surfaceWidth - availableRight;

            if (leftOverflow < 0 && isAlignedRight && isRtl || avoidHorizontalOverlap && !isAlignedRight && leftOverflow < 0 || rightOverflow > 0 && leftOverflow < rightOverflow) {
              corner |= __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* CornerBit */
              ].RIGHT;
            }

            return (
              /** @type {Corner} */
              corner
            );
          }
          /**
           * @param {!Corner} corner Origin corner of the menu surface.
           * @return {number} Horizontal offset of menu surface origin corner from corresponding anchor corner.
           * @private
           */

        }, {
          key: 'getHorizontalOriginOffset_',
          value: function getHorizontalOriginOffset_(corner) {
            var anchorWidth = this.measures_.anchorWidth; // isRightAligned corresponds to using the 'right' property on the surface.

            var isRightAligned = Boolean(corner & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].RIGHT);
            var avoidHorizontalOverlap = Boolean(this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].RIGHT);

            if (isRightAligned) {
              var rightOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.left : this.anchorMargin_.right; // For hoisted or fixed elements, adjust the offset by the difference between viewport width and body width so
              // when we calculate the right value (`adjustPositionForHoistedElement_`) based on the element position,
              // the right property is correct.

              if (this.hoistedElement_ || this.isFixedPosition_) {
                return rightOffset - (this.measures_.viewport.width - this.measures_.bodyDimensions.width);
              }

              return rightOffset;
            }

            return avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.right : this.anchorMargin_.left;
          }
          /**
           * @param {!Corner} corner Origin corner of the menu surface.
           * @return {number} Vertical offset of menu surface origin corner from corresponding anchor corner.
           * @private
           */

        }, {
          key: 'getVerticalOriginOffset_',
          value: function getVerticalOriginOffset_(corner) {
            var anchorHeight = this.measures_.anchorHeight;
            var isBottomAligned = Boolean(corner & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].BOTTOM);
            var avoidVerticalOverlap = Boolean(this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].BOTTOM);
            var y = 0;

            if (isBottomAligned) {
              y = avoidVerticalOverlap ? anchorHeight - this.anchorMargin_.top : -this.anchorMargin_.bottom;
            } else {
              y = avoidVerticalOverlap ? anchorHeight + this.anchorMargin_.bottom : this.anchorMargin_.top;
            }

            return y;
          }
          /**
           * @param {!Corner} corner Origin corner of the menu surface.
           * @return {number} Maximum height of the menu surface, based on available space. 0 indicates should not be set.
           * @private
           */

        }, {
          key: 'getMenuSurfaceMaxHeight_',
          value: function getMenuSurfaceMaxHeight_(corner) {
            var maxHeight = 0;
            var viewportDistance = this.measures_.viewportDistance;
            var isBottomAligned = Boolean(corner & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].BOTTOM);
            var MARGIN_TO_EDGE = MDCMenuSurfaceFoundation.numbers.MARGIN_TO_EDGE; // When maximum height is not specified, it is handled from css.

            if (isBottomAligned) {
              maxHeight = viewportDistance.top + this.anchorMargin_.top - MARGIN_TO_EDGE;

              if (!(this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* CornerBit */
              ].BOTTOM)) {
                maxHeight += this.measures_.anchorHeight;
              }
            } else {
              maxHeight = viewportDistance.bottom - this.anchorMargin_.bottom + this.measures_.anchorHeight - MARGIN_TO_EDGE;

              if (this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* CornerBit */
              ].BOTTOM) {
                maxHeight -= this.measures_.anchorHeight;
              }
            }

            return maxHeight;
          }
          /** @private */

        }, {
          key: 'autoPosition_',
          value: function autoPosition_() {
            var _position; // Compute measurements for autoposition methods reuse.


            this.measures_ = this.getAutoLayoutMeasurements_();
            var corner = this.getOriginCorner_();
            var maxMenuSurfaceHeight = this.getMenuSurfaceMaxHeight_(corner);
            var verticalAlignment = corner & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].BOTTOM ? 'bottom' : 'top';
            var horizontalAlignment = corner & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].RIGHT ? 'right' : 'left';
            var horizontalOffset = this.getHorizontalOriginOffset_(corner);
            var verticalOffset = this.getVerticalOriginOffset_(corner);
            var position = (_position = {}, _defineProperty(_position, horizontalAlignment, horizontalOffset ? horizontalOffset : '0'), _defineProperty(_position, verticalAlignment, verticalOffset ? verticalOffset : '0'), _position);
            var _measures_2 = this.measures_,
                anchorWidth = _measures_2.anchorWidth,
                surfaceWidth = _measures_2.surfaceWidth; // Center align when anchor width is comparable or greater than menu surface, otherwise keep corner.

            if (anchorWidth / surfaceWidth > __WEBPACK_IMPORTED_MODULE_2__constants__["d"
            /* numbers */
            ].ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO) {
              horizontalAlignment = 'center';
            } // If the menu-surface has been hoisted to the body, it's no longer relative to the anchor element


            if (this.hoistedElement_ || this.isFixedPosition_) {
              position = this.adjustPositionForHoistedElement_(position);
            }

            for (var prop in position) {
              if (position.hasOwnProperty(prop) && position[prop] !== '0') {
                position[prop] = parseInt(position[prop], 10) + 'px';
              }
            }

            this.adapter_.setTransformOrigin(horizontalAlignment + ' ' + verticalAlignment);
            this.adapter_.setPosition(position);
            this.adapter_.setMaxHeight(maxMenuSurfaceHeight ? maxMenuSurfaceHeight + 'px' : ''); // Clear measures after positioning is complete.

            this.measures_ = null;
          }
          /**
           * Calculates the offsets for positioning the menu-surface when the menu-surface has been
           * hoisted to the body.
           * @param {!{
           *   top: (string|undefined),
           *   right: (string|undefined),
           *   bottom: (string|undefined),
           *   left: (string|undefined)
           * }} position
           * @return {!{
           *   top: (string|undefined),
           *   right: (string|undefined),
           *   bottom: (string|undefined),
           *   left: (string|undefined)
           * }} position
           * @private
           */

        }, {
          key: 'adjustPositionForHoistedElement_',
          value: function adjustPositionForHoistedElement_(position) {
            var _measures_3 = this.measures_,
                windowScroll = _measures_3.windowScroll,
                viewportDistance = _measures_3.viewportDistance;

            for (var prop in position) {
              if (position.hasOwnProperty(prop)) {
                // Hoisted surfaces need to have the anchor elements location on the page added to the
                // position properties for proper alignment on the body.
                if (viewportDistance.hasOwnProperty(prop)) {
                  position[prop] = parseInt(position[prop], 10) + viewportDistance[prop];
                } // Surfaces that are absolutely positioned need to have additional calculations for scroll
                // and bottom positioning.


                if (!this.isFixedPosition_) {
                  if (prop === 'top') {
                    position[prop] = parseInt(position[prop], 10) + windowScroll.y;
                  } else if (prop === 'bottom') {
                    position[prop] = parseInt(position[prop], 10) - windowScroll.y;
                  } else if (prop === 'left') {
                    position[prop] = parseInt(position[prop], 10) + windowScroll.x;
                  } else if (prop === 'right') {
                    position[prop] = parseInt(position[prop], 10) - windowScroll.x;
                  }
                }
              }
            }

            return position;
          }
          /**
           * Open the menu surface.
           */

        }, {
          key: 'open',
          value: function open() {
            var _this2 = this;

            this.adapter_.saveFocus();

            if (!this.quickOpen_) {
              this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_OPEN);
            }

            this.animationRequestId_ = requestAnimationFrame(function () {
              _this2.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.OPEN);

              _this2.dimensions_ = _this2.adapter_.getInnerDimensions();

              _this2.autoPosition_();

              if (_this2.quickOpen_) {
                _this2.adapter_.notifyOpen();
              } else {
                _this2.openAnimationEndTimerId_ = setTimeout(function () {
                  _this2.openAnimationEndTimerId_ = 0;

                  _this2.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_OPEN);

                  _this2.adapter_.notifyOpen();
                }, __WEBPACK_IMPORTED_MODULE_2__constants__["d"
                /* numbers */
                ].TRANSITION_OPEN_DURATION);
              }
            });
            this.isOpen_ = true;
          }
          /**
           * Closes the menu surface.
           */

        }, {
          key: 'close',
          value: function close() {
            var _this3 = this;

            if (!this.quickOpen_) {
              this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_CLOSED);
            }

            requestAnimationFrame(function () {
              _this3.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.OPEN);

              if (_this3.quickOpen_) {
                _this3.adapter_.notifyClose();
              } else {
                _this3.closeAnimationEndTimerId_ = setTimeout(function () {
                  _this3.closeAnimationEndTimerId_ = 0;

                  _this3.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_CLOSED);

                  _this3.adapter_.notifyClose();
                }, __WEBPACK_IMPORTED_MODULE_2__constants__["d"
                /* numbers */
                ].TRANSITION_CLOSE_DURATION);
              }
            });
            this.isOpen_ = false;
            this.maybeRestoreFocus_();
          }
          /**
           * The last focused element when the menu surface was opened should regain focus, if the user is
           * focused on or within the menu surface when it is closed.
           * @private
           */

        }, {
          key: 'maybeRestoreFocus_',
          value: function maybeRestoreFocus_() {
            if (this.adapter_.isFocused() || this.adapter_.isElementInContainer(document.activeElement)) {
              this.adapter_.restoreFocus();
            }
          }
          /** @return {boolean} */

        }, {
          key: 'isOpen',
          value: function isOpen() {
            return this.isOpen_;
          }
          /**
           * isFinite that doesn't force conversion to number type.
           * Equivalent to Number.isFinite in ES2015, but is not included in IE11.
           * @param {number} num
           * @return {boolean}
           * @private
           */

        }, {
          key: 'typeCheckisFinite_',
          value: function typeCheckisFinite_(num) {
            return typeof num === 'number' && isFinite(num);
          }
        }]);

        return MDCMenuSurfaceFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /***/

    },
    /* 18 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "c", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "e", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "d", function () {
        return numbers;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return CornerBit;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return Corner;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        ANCHOR: 'mdc-menu-surface--anchor',
        ANIMATING_CLOSED: 'mdc-menu-surface--animating-closed',
        ANIMATING_OPEN: 'mdc-menu-surface--animating-open',
        FIXED: 'mdc-menu-surface--fixed',
        OPEN: 'mdc-menu-surface--open',
        ROOT: 'mdc-menu-surface'
      };
      /** @enum {string} */

      var strings = {
        CLOSED_EVENT: 'MDCMenuSurface:closed',
        OPENED_EVENT: 'MDCMenuSurface:opened',
        FOCUSABLE_ELEMENTS: 'button:not(:disabled), [href]:not([aria-disabled="true"]), input:not(:disabled), ' + 'select:not(:disabled), textarea:not(:disabled), [tabindex]:not([tabindex="-1"]):not([aria-disabled="true"])'
      };
      /** @enum {number} */

      var numbers = {
        // Total duration of menu-surface open animation.
        TRANSITION_OPEN_DURATION: 120,
        // Total duration of menu-surface close animation.
        TRANSITION_CLOSE_DURATION: 75,
        // Margin left to the edge of the viewport when menu-surface is at maximum possible height.
        MARGIN_TO_EDGE: 32,
        // Ratio of anchor width to menu-surface width for switching from corner positioning to center positioning.
        ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO: 0.67
      };
      /**
       * Enum for bits in the {@see Corner) bitmap.
       * @enum {number}
       */

      var CornerBit = {
        BOTTOM: 1,
        CENTER: 2,
        RIGHT: 4,
        FLIP_RTL: 8
      };
      /**
       * Enum for representing an element corner for positioning the menu-surface.
       *
       * The START constants map to LEFT if element directionality is left
       * to right and RIGHT if the directionality is right to left.
       * Likewise END maps to RIGHT or LEFT depending on the directionality.
       *
       * @enum {number}
       */

      var Corner = {
        TOP_LEFT: 0,
        TOP_RIGHT: CornerBit.RIGHT,
        BOTTOM_LEFT: CornerBit.BOTTOM,
        BOTTOM_RIGHT: CornerBit.BOTTOM | CornerBit.RIGHT,
        TOP_START: CornerBit.FLIP_RTL,
        TOP_END: CornerBit.FLIP_RTL | CornerBit.RIGHT,
        BOTTOM_START: CornerBit.BOTTOM | CornerBit.FLIP_RTL,
        BOTTOM_END: CornerBit.BOTTOM | CornerBit.RIGHT | CornerBit.FLIP_RTL
      };
      /***/
    },,
    /* 19 */

    /* 20 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC TextField Line Ripple.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the line ripple into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCLineRippleAdapter = function () {
        function MDCLineRippleAdapter() {
          _classCallCheck(this, MDCLineRippleAdapter);
        }

        _createClass(MDCLineRippleAdapter, [{
          key: "addClass",

          /**
           * Adds a class to the line ripple element.
           * @param {string} className
           */
          value: function addClass(className) {}
          /**
           * Removes a class from the line ripple element.
           * @param {string} className
           */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * @param {string} className
           * @return {boolean}
           */

        }, {
          key: "hasClass",
          value: function hasClass(className) {}
          /**
           * Sets the style property with propertyName to value on the root element.
           * @param {string} propertyName
           * @param {string} value
           */

        }, {
          key: "setStyle",
          value: function setStyle(propertyName, value) {}
          /**
           * Registers an event listener on the line ripple element for a given event.
           * @param {string} evtType
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "registerEventHandler",
          value: function registerEventHandler(evtType, handler) {}
          /**
           * Deregisters an event listener on the line ripple element for a given event.
           * @param {string} evtType
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "deregisterEventHandler",
          value: function deregisterEventHandler(evtType, handler) {}
        }]);

        return MDCLineRippleAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCLineRippleAdapter;
      /***/
    },
    /* 21 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* unused harmony export MDCMenuSurfaceAdapter */

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDCMenuSurface. Provides an interface for managing
       * - classes
       * - dom
       * - focus
       * - position
       * - dimensions
       * - event handlers
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCMenuSurfaceAdapter = function () {
        function MDCMenuSurfaceAdapter() {
          _classCallCheck(this, MDCMenuSurfaceAdapter);
        }

        _createClass(MDCMenuSurfaceAdapter, [{
          key: "addClass",

          /** @param {string} className */
          value: function addClass(className) {}
          /** @param {string} className */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * @param {string} className
           * @return {boolean}
           */

        }, {
          key: "hasClass",
          value: function hasClass(className) {}
          /** @return {boolean} */

        }, {
          key: "hasAnchor",
          value: function hasAnchor() {}
          /** Emits an event when the menu surface is closed. */

        }, {
          key: "notifyClose",
          value: function notifyClose() {}
          /** Emits an event when the menu surface is opened. */

        }, {
          key: "notifyOpen",
          value: function notifyOpen() {}
          /**
           * @return {boolean}
           * @param {EventTarget} el
           */

        }, {
          key: "isElementInContainer",
          value: function isElementInContainer(el) {}
          /** @return {boolean} */

        }, {
          key: "isRtl",
          value: function isRtl() {}
          /** @param {string} origin */

        }, {
          key: "setTransformOrigin",
          value: function setTransformOrigin(origin) {}
          /** @return {boolean} */

        }, {
          key: "isFocused",
          value: function isFocused() {}
          /** Saves the element that was focused before the menu surface was opened. */

        }, {
          key: "saveFocus",
          value: function saveFocus() {}
          /** Restores focus to the element that was focused before the menu surface was opened. */

        }, {
          key: "restoreFocus",
          value: function restoreFocus() {}
          /** @return {boolean} */

        }, {
          key: "isFirstElementFocused",
          value: function isFirstElementFocused() {}
          /** @return {boolean} */

        }, {
          key: "isLastElementFocused",
          value: function isLastElementFocused() {}
          /** Focuses the first focusable element in the menu-surface. */

        }, {
          key: "focusFirstElement",
          value: function focusFirstElement() {}
          /** Focuses the first focusable element in the menu-surface. */

        }, {
          key: "focusLastElement",
          value: function focusLastElement() {}
          /** @return {!{width: number, height: number}} */

        }, {
          key: "getInnerDimensions",
          value: function getInnerDimensions() {}
          /** @return {!{width: number, height: number, top: number, right: number, bottom: number, left: number}} */

        }, {
          key: "getAnchorDimensions",
          value: function getAnchorDimensions() {}
          /** @return {!{ width: number, height: number }} */

        }, {
          key: "getWindowDimensions",
          value: function getWindowDimensions() {}
          /** @return {!{ width: number, height: number }} */

        }, {
          key: "getBodyDimensions",
          value: function getBodyDimensions() {}
          /** @return {!{ width: number, height: number }} */

        }, {
          key: "getWindowScroll",
          value: function getWindowScroll() {}
          /** @param {!{
          *   top: (string|undefined),
          *   right: (string|undefined),
          *   bottom: (string|undefined),
          *   left: (string|undefined)
          * }} position */

        }, {
          key: "setPosition",
          value: function setPosition(position) {}
          /** @param {string} height */

        }, {
          key: "setMaxHeight",
          value: function setMaxHeight(height) {}
        }]);

        return MDCMenuSurfaceAdapter;
      }();
      /***/

    },
    /* 22 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Notched Outline.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the Notched Outline into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCNotchedOutlineAdapter = function () {
        function MDCNotchedOutlineAdapter() {
          _classCallCheck(this, MDCNotchedOutlineAdapter);
        }

        _createClass(MDCNotchedOutlineAdapter, [{
          key: "addClass",

          /**
           * Adds a class to the root element.
           * @param {string} className
           */
          value: function addClass(className) {}
          /**
           * Removes a class from the root element.
           * @param {string} className
           */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * Sets the width style property of the notch element.
           * @param {number} width
           */

        }, {
          key: "setNotchWidthProperty",
          value: function setNotchWidthProperty(width) {}
          /**
           * Removes the width style property from the notch element.
           */

        }, {
          key: "removeNotchWidthProperty",
          value: function removeNotchWidthProperty() {}
        }]);

        return MDCNotchedOutlineAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCNotchedOutlineAdapter;
      /***/
    },
    /* 23 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return numbers;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "c", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var strings = {
        NOTCH_ELEMENT_SELECTOR: '.mdc-notched-outline__notch'
      };
      /** @enum {number} */

      var numbers = {
        // This should stay in sync with $mdc-notched-outline-padding * 2.
        NOTCH_ELEMENT_PADDING: 8
      };
      /** @enum {string} */

      var cssClasses = {
        OUTLINE_NOTCHED: 'mdc-notched-outline--notched',
        OUTLINE_UPGRADED: 'mdc-notched-outline--upgraded',
        NO_LABEL: 'mdc-notched-outline--no-label'
      };
      /***/
    },,
    /* 24 */

    /* 25 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCList", function () {
        return MDCList;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(15);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__adapter__ = __webpack_require__(10);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__material_dom_ponyfill__ = __webpack_require__(8);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(11);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCListFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_1__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */
      // eslint-disable-line no-unused-vars

      /**
       * @extends MDCComponent<!MDCListFoundation>
       */


      var MDCList = function (_MDCComponent) {
        _inherits(MDCList, _MDCComponent);
        /** @param {...?} args */


        function MDCList() {
          var _ref;

          _classCallCheck(this, MDCList);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {!Function} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCList.__proto__ || Object.getPrototypeOf(MDCList)).call.apply(_ref, [this].concat(args)));

          _this.handleKeydown_;
          /** @private {!Function} */

          _this.handleClick_;
          /** @private {!Function} */

          _this.focusInEventListener_;
          /** @private {!Function} */

          _this.focusOutEventListener_;
          return _this;
        }
        /**
         * @param {!Element} root
         * @return {!MDCList}
         */


        _createClass(MDCList, [{
          key: 'destroy',
          value: function destroy() {
            this.root_.removeEventListener('keydown', this.handleKeydown_);
            this.root_.removeEventListener('click', this.handleClick_);
            this.root_.removeEventListener('focusin', this.focusInEventListener_);
            this.root_.removeEventListener('focusout', this.focusOutEventListener_);
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            this.handleClick_ = this.handleClickEvent_.bind(this);
            this.handleKeydown_ = this.handleKeydownEvent_.bind(this);
            this.focusInEventListener_ = this.handleFocusInEvent_.bind(this);
            this.focusOutEventListener_ = this.handleFocusOutEvent_.bind(this);
            this.root_.addEventListener('keydown', this.handleKeydown_);
            this.root_.addEventListener('focusin', this.focusInEventListener_);
            this.root_.addEventListener('focusout', this.focusOutEventListener_);
            this.root_.addEventListener('click', this.handleClick_);
            this.layout();
            this.initializeListType();
          }
        }, {
          key: 'layout',
          value: function layout() {
            var direction = this.root_.getAttribute(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].ARIA_ORIENTATION);
            this.vertical = direction !== __WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].ARIA_ORIENTATION_HORIZONTAL; // List items need to have at least tabindex=-1 to be focusable.

            [].slice.call(this.root_.querySelectorAll('.mdc-list-item:not([tabindex])')).forEach(function (ele) {
              ele.setAttribute('tabindex', -1);
            }); // Child button/a elements are not tabbable until the list item is focused.

            [].slice.call(this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].FOCUSABLE_CHILD_ELEMENTS)).forEach(function (ele) {
              return ele.setAttribute('tabindex', -1);
            });
            this.foundation_.layout();
          }
          /**
           * Used to figure out which list item this event is targetting. Or returns -1 if
           * there is no list item
           * @param {Event} evt
           * @private
           */

        }, {
          key: 'getListItemIndex_',
          value: function getListItemIndex_(evt) {
            var eventTarget =
            /** @type {HTMLElement} */
            evt.target;
            var index = -1; // Find the first ancestor that is a list item or the list.

            while (!eventTarget.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].LIST_ITEM_CLASS) && !eventTarget.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].ROOT)) {
              eventTarget = eventTarget.parentElement;
            } // Get the index of the element if it is a list item.


            if (eventTarget.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].LIST_ITEM_CLASS)) {
              index = this.listElements.indexOf(eventTarget);
            }

            return index;
          }
          /**
           * Used to figure out which element was clicked before sending the event to the foundation.
           * @param {Event} evt
           * @private
           */

        }, {
          key: 'handleFocusInEvent_',
          value: function handleFocusInEvent_(evt) {
            var index = this.getListItemIndex_(evt);
            this.foundation_.handleFocusIn(evt, index);
          }
          /**
           * Used to figure out which element was clicked before sending the event to the foundation.
           * @param {Event} evt
           * @private
           */

        }, {
          key: 'handleFocusOutEvent_',
          value: function handleFocusOutEvent_(evt) {
            var index = this.getListItemIndex_(evt);
            this.foundation_.handleFocusOut(evt, index);
          }
          /**
           * Used to figure out which element was focused when keydown event occurred before sending the event to the
           * foundation.
           * @param {Event} evt
           * @private
           */

        }, {
          key: 'handleKeydownEvent_',
          value: function handleKeydownEvent_(evt) {
            var index = this.getListItemIndex_(evt);

            if (index >= 0) {
              this.foundation_.handleKeydown(evt, evt.target.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
              /* cssClasses */
              ].LIST_ITEM_CLASS), index);
            }
          }
          /**
           * Used to figure out which element was clicked before sending the event to the foundation.
           * @param {Event} evt
           * @private
           */

        }, {
          key: 'handleClickEvent_',
          value: function handleClickEvent_(evt) {
            var index = this.getListItemIndex_(evt); // Toggle the checkbox only if it's not the target of the event, or the checkbox will have 2 change events.

            var toggleCheckbox = !Object(__WEBPACK_IMPORTED_MODULE_3__material_dom_ponyfill__["matches"])(
            /** @type {!Element} */
            evt.target, __WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].CHECKBOX_RADIO_SELECTOR);
            this.foundation_.handleClick(index, toggleCheckbox);
          }
          /**
           * Initialize selectedIndex value based on pre-selected checkbox list items, single selection or radio.
           */

        }, {
          key: 'initializeListType',
          value: function initializeListType() {
            var _this2 = this;

            var checkboxListItems = this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].ARIA_ROLE_CHECKBOX_SELECTOR);
            var singleSelectedListItem = this.root_.querySelector('.' + __WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].LIST_ITEM_ACTIVATED_CLASS + ',\n        .' + __WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].LIST_ITEM_SELECTED_CLASS);
            var radioSelectedListItem = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].ARIA_CHECKED_RADIO_SELECTOR);

            if (checkboxListItems.length) {
              var preselectedItems = this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
              /* strings */
              ].ARIA_CHECKED_CHECKBOX_SELECTOR);
              this.selectedIndex = [].map.call(preselectedItems, function (listItem) {
                return _this2.listElements.indexOf(listItem);
              });
            } else if (singleSelectedListItem) {
              if (singleSelectedListItem.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
              /* cssClasses */
              ].LIST_ITEM_ACTIVATED_CLASS)) {
                this.foundation_.setUseActivatedClass(true);
              }

              this.singleSelection = true;
              this.selectedIndex = this.listElements.indexOf(singleSelectedListItem);
            } else if (radioSelectedListItem) {
              this.selectedIndex = this.listElements.indexOf(radioSelectedListItem);
            }
          }
          /** @param {boolean} value */

        }, {
          key: 'getDefaultFoundation',

          /** @return {!MDCListFoundation} */
          value: function getDefaultFoundation() {
            var _this3 = this;

            return new __WEBPACK_IMPORTED_MODULE_1__foundation__["a"
            /* default */
            ](
            /** @type {!MDCListAdapter} */
            _extends({
              getListItemCount: function getListItemCount() {
                return _this3.listElements.length;
              },
              getFocusedElementIndex: function getFocusedElementIndex() {
                return _this3.listElements.indexOf(document.activeElement);
              },
              setAttributeForElementIndex: function setAttributeForElementIndex(index, attr, value) {
                var element = _this3.listElements[index];

                if (element) {
                  element.setAttribute(attr, value);
                }
              },
              removeAttributeForElementIndex: function removeAttributeForElementIndex(index, attr) {
                var element = _this3.listElements[index];

                if (element) {
                  element.removeAttribute(attr);
                }
              },
              addClassForElementIndex: function addClassForElementIndex(index, className) {
                var element = _this3.listElements[index];

                if (element) {
                  element.classList.add(className);
                }
              },
              removeClassForElementIndex: function removeClassForElementIndex(index, className) {
                var element = _this3.listElements[index];

                if (element) {
                  element.classList.remove(className);
                }
              },
              focusItemAtIndex: function focusItemAtIndex(index) {
                var element = _this3.listElements[index];

                if (element) {
                  element.focus();
                }
              },
              setTabIndexForListItemChildren: function setTabIndexForListItemChildren(listItemIndex, tabIndexValue) {
                var element = _this3.listElements[listItemIndex];
                var listItemChildren = [].slice.call(element.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].CHILD_ELEMENTS_TO_TOGGLE_TABINDEX));
                listItemChildren.forEach(function (ele) {
                  return ele.setAttribute('tabindex', tabIndexValue);
                });
              },
              followHref: function followHref(index) {
                var listItem = _this3.listElements[index];

                if (listItem && listItem.href) {
                  listItem.click();
                }
              },
              hasCheckboxAtIndex: function hasCheckboxAtIndex(index) {
                var listItem = _this3.listElements[index];
                return !!listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].CHECKBOX_SELECTOR);
              },
              hasRadioAtIndex: function hasRadioAtIndex(index) {
                var listItem = _this3.listElements[index];
                return !!listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].RADIO_SELECTOR);
              },
              isCheckboxCheckedAtIndex: function isCheckboxCheckedAtIndex(index) {
                var listItem = _this3.listElements[index];
                var toggleEl = listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].CHECKBOX_SELECTOR);
                return toggleEl.checked;
              },
              setCheckedCheckboxOrRadioAtIndex: function setCheckedCheckboxOrRadioAtIndex(index, isChecked) {
                var listItem = _this3.listElements[index];
                var toggleEl = listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].CHECKBOX_RADIO_SELECTOR);
                toggleEl.checked = isChecked;
                var event = document.createEvent('Event');
                event.initEvent('change', true, true);
                toggleEl.dispatchEvent(event);
              },
              isFocusInsideList: function isFocusInsideList() {
                return _this3.root_.contains(document.activeElement);
              }
            }));
          }
        }, {
          key: 'vertical',
          set: function set(value) {
            this.foundation_.setVerticalOrientation(value);
          }
          /** @return Array<!Element>*/

        }, {
          key: 'listElements',
          get: function get() {
            return [].slice.call(this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].ENABLED_ITEMS_SELECTOR));
          }
          /** @param {boolean} value */

        }, {
          key: 'wrapFocus',
          set: function set(value) {
            this.foundation_.setWrapFocus(value);
          }
          /** @param {boolean} isSingleSelectionList */

        }, {
          key: 'singleSelection',
          set: function set(isSingleSelectionList) {
            this.foundation_.setSingleSelection(isSingleSelectionList);
          }
          /** @return {!Index} */

        }, {
          key: 'selectedIndex',
          get: function get() {
            return this.foundation_.getSelectedIndex();
          }
          /** @param {!Index} index */
          ,
          set: function set(index) {
            this.foundation_.setSelectedIndex(index);
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCList(root);
          }
        }]);

        return MDCList;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 26 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(12);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(27);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}
       * @final
       */


      var MDCFloatingLabelFoundation = function (_MDCFoundation) {
        _inherits(MDCFloatingLabelFoundation, _MDCFoundation);

        _createClass(MDCFloatingLabelFoundation, null, [{
          key: 'cssClasses',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /**
           * {@see MDCFloatingLabelAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCFloatingLabelAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCFloatingLabelAdapter} */
              {
                addClass: function addClass() {},
                removeClass: function removeClass() {},
                getWidth: function getWidth() {},
                registerInteractionHandler: function registerInteractionHandler() {},
                deregisterInteractionHandler: function deregisterInteractionHandler() {}
              }
            );
          }
          /**
           * @param {!MDCFloatingLabelAdapter} adapter
           */

        }]);

        function MDCFloatingLabelFoundation(adapter) {
          _classCallCheck(this, MDCFloatingLabelFoundation);
          /** @private {function(!Event): undefined} */


          var _this = _possibleConstructorReturn(this, (MDCFloatingLabelFoundation.__proto__ || Object.getPrototypeOf(MDCFloatingLabelFoundation)).call(this, _extends(MDCFloatingLabelFoundation.defaultAdapter, adapter)));

          _this.shakeAnimationEndHandler_ = function () {
            return _this.handleShakeAnimationEnd_();
          };

          return _this;
        }

        _createClass(MDCFloatingLabelFoundation, [{
          key: 'init',
          value: function init() {
            this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);
          }
          /**
           * Returns the width of the label element.
           * @return {number}
           */

        }, {
          key: 'getWidth',
          value: function getWidth() {
            return this.adapter_.getWidth();
          }
          /**
           * Styles the label to produce the label shake for errors.
           * @param {boolean} shouldShake adds shake class if true,
           * otherwise removes shake class.
           */

        }, {
          key: 'shake',
          value: function shake(shouldShake) {
            var LABEL_SHAKE = MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;

            if (shouldShake) {
              this.adapter_.addClass(LABEL_SHAKE);
            } else {
              this.adapter_.removeClass(LABEL_SHAKE);
            }
          }
          /**
           * Styles the label to float or dock.
           * @param {boolean} shouldFloat adds float class if true, otherwise remove
           * float and shake class to dock label.
           */

        }, {
          key: 'float',
          value: function float(shouldFloat) {
            var _MDCFloatingLabelFoun = MDCFloatingLabelFoundation.cssClasses,
                LABEL_FLOAT_ABOVE = _MDCFloatingLabelFoun.LABEL_FLOAT_ABOVE,
                LABEL_SHAKE = _MDCFloatingLabelFoun.LABEL_SHAKE;

            if (shouldFloat) {
              this.adapter_.addClass(LABEL_FLOAT_ABOVE);
            } else {
              this.adapter_.removeClass(LABEL_FLOAT_ABOVE);
              this.adapter_.removeClass(LABEL_SHAKE);
            }
          }
          /**
           * Handles an interaction event on the root element.
           */

        }, {
          key: 'handleShakeAnimationEnd_',
          value: function handleShakeAnimationEnd_() {
            var LABEL_SHAKE = MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;
            this.adapter_.removeClass(LABEL_SHAKE);
          }
        }]);

        return MDCFloatingLabelFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCFloatingLabelFoundation;
      /***/
    },
    /* 27 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',
        LABEL_SHAKE: 'mdc-floating-label--shake',
        ROOT: 'mdc-floating-label'
      };
      /***/
    },,
    /* 28 */

    /* 29 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        ROOT: 'mdc-menu',
        MENU_SELECTED_LIST_ITEM: 'mdc-menu-item--selected',
        MENU_SELECTION_GROUP: 'mdc-menu__selection-group'
      };
      /** @enum {string} */

      var strings = {
        SELECTED_EVENT: 'MDCMenu:selected',
        ARIA_SELECTED_ATTR: 'aria-selected',
        LIST_SELECTOR: '.mdc-list',
        CHECKBOX_SELECTOR: 'input[type="checkbox"]'
      };
      /***/
    },
    /* 30 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCLineRipple", function () {
        return MDCLineRipple;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(20);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(31);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCLineRippleFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCComponent<!MDCLineRippleFoundation>}
       * @final
       */


      var MDCLineRipple = function (_MDCComponent) {
        _inherits(MDCLineRipple, _MDCComponent);

        function MDCLineRipple() {
          _classCallCheck(this, MDCLineRipple);

          return _possibleConstructorReturn(this, (MDCLineRipple.__proto__ || Object.getPrototypeOf(MDCLineRipple)).apply(this, arguments));
        }

        _createClass(MDCLineRipple, [{
          key: 'activate',

          /**
           * Activates the line ripple
           */
          value: function activate() {
            this.foundation_.activate();
          }
          /**
           * Deactivates the line ripple
           */

        }, {
          key: 'deactivate',
          value: function deactivate() {
            this.foundation_.deactivate();
          }
          /**
           * Sets the transform origin given a user's click location. The `rippleCenter` is the
           * x-coordinate of the middle of the ripple.
           * @param {number} xCoordinate
           */

        }, {
          key: 'setRippleCenter',
          value: function setRippleCenter(xCoordinate) {
            this.foundation_.setRippleCenter(xCoordinate);
          }
          /**
           * @return {!MDCLineRippleFoundation}
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ](
            /** @type {!MDCLineRippleAdapter} */
            _extends({
              addClass: function addClass(className) {
                return _this2.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this2.root_.classList.remove(className);
              },
              hasClass: function hasClass(className) {
                return _this2.root_.classList.contains(className);
              },
              setStyle: function setStyle(propertyName, value) {
                return _this2.root_.style[propertyName] = value;
              },
              registerEventHandler: function registerEventHandler(evtType, handler) {
                return _this2.root_.addEventListener(evtType, handler);
              },
              deregisterEventHandler: function deregisterEventHandler(evtType, handler) {
                return _this2.root_.removeEventListener(evtType, handler);
              }
            }));
          }
        }], [{
          key: 'attachTo',

          /**
           * @param {!Element} root
           * @return {!MDCLineRipple}
           */
          value: function attachTo(root) {
            return new MDCLineRipple(root);
          }
        }]);

        return MDCLineRipple;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 31 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(20);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(32);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCFoundation<!MDCLineRippleAdapter>}
       * @final
       */


      var MDCLineRippleFoundation = function (_MDCFoundation) {
        _inherits(MDCLineRippleFoundation, _MDCFoundation);

        _createClass(MDCLineRippleFoundation, null, [{
          key: 'cssClasses',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /**
           * {@see MDCLineRippleAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCLineRippleAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCLineRippleAdapter} */
              {
                addClass: function addClass() {},
                removeClass: function removeClass() {},
                hasClass: function hasClass() {},
                setStyle: function setStyle() {},
                registerEventHandler: function registerEventHandler() {},
                deregisterEventHandler: function deregisterEventHandler() {}
              }
            );
          }
          /**
           * @param {!MDCLineRippleAdapter=} adapter
           */

        }]);

        function MDCLineRippleFoundation(adapter) {
          _classCallCheck(this, MDCLineRippleFoundation);
          /** @private {function(!Event): undefined} */


          var _this = _possibleConstructorReturn(this, (MDCLineRippleFoundation.__proto__ || Object.getPrototypeOf(MDCLineRippleFoundation)).call(this, _extends(MDCLineRippleFoundation.defaultAdapter, adapter)));

          _this.transitionEndHandler_ = function (evt) {
            return _this.handleTransitionEnd(evt);
          };

          return _this;
        }

        _createClass(MDCLineRippleFoundation, [{
          key: 'init',
          value: function init() {
            this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);
          }
          /**
           * Activates the line ripple
           */

        }, {
          key: 'activate',
          value: function activate() {
            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].LINE_RIPPLE_DEACTIVATING);
            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].LINE_RIPPLE_ACTIVE);
          }
          /**
           * Sets the center of the ripple animation to the given X coordinate.
           * @param {number} xCoordinate
           */

        }, {
          key: 'setRippleCenter',
          value: function setRippleCenter(xCoordinate) {
            this.adapter_.setStyle('transform-origin', xCoordinate + 'px center');
          }
          /**
           * Deactivates the line ripple
           */

        }, {
          key: 'deactivate',
          value: function deactivate() {
            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].LINE_RIPPLE_DEACTIVATING);
          }
          /**
           * Handles a transition end event
           * @param {!Event} evt
           */

        }, {
          key: 'handleTransitionEnd',
          value: function handleTransitionEnd(evt) {
            // Wait for the line ripple to be either transparent or opaque
            // before emitting the animation end event
            var isDeactivating = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].LINE_RIPPLE_DEACTIVATING);

            if (evt.propertyName === 'opacity') {
              if (isDeactivating) {
                this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].LINE_RIPPLE_ACTIVE);
                this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].LINE_RIPPLE_DEACTIVATING);
              }
            }
          }
        }]);

        return MDCLineRippleFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCLineRippleFoundation;
      /***/
    },
    /* 32 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',
        LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating'
      };
      /***/
    },
    /* 33 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCMenuSurface", function () {
        return MDCMenuSurface;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__util__ = __webpack_require__(34);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(17);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__adapter__ = __webpack_require__(21);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(18);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCMenuSurfaceFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["b"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "AnchorMargin", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "Corner", function () {
        return __WEBPACK_IMPORTED_MODULE_4__constants__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "CornerBit", function () {
        return __WEBPACK_IMPORTED_MODULE_4__constants__["b"];
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "util", function () {
        return __WEBPACK_IMPORTED_MODULE_1__util__;
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends MDCComponent<!MDCMenuSurfaceFoundation>
       */


      var MDCMenuSurface = function (_MDCComponent) {
        _inherits(MDCMenuSurface, _MDCComponent);
        /** @param {...?} args */


        function MDCMenuSurface() {
          var _ref;

          _classCallCheck(this, MDCMenuSurface);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {!Element} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCMenuSurface.__proto__ || Object.getPrototypeOf(MDCMenuSurface)).call.apply(_ref, [this].concat(args)));

          _this.previousFocus_;
          /** @private {!Element} */

          _this.anchorElement;
          /** @private {Element} */

          _this.firstFocusableElement_;
          /** @private {Element} */

          _this.lastFocusableElement_;
          /** @private {!Function} */

          _this.handleKeydown_;
          /** @private {!Function} */

          _this.handleBodyClick_;
          /** @private {!Function} */

          _this.registerBodyClickListener_;
          /** @private {!Function} */

          _this.deregisterBodyClickListener_;
          return _this;
        }
        /**
         * @param {!Element} root
         * @return {!MDCMenuSurface}
         */


        _createClass(MDCMenuSurface, [{
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var _this2 = this;

            if (this.root_.parentElement && this.root_.parentElement.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["c"
            /* cssClasses */
            ].ANCHOR)) {
              this.anchorElement = this.root_.parentElement;
            }

            if (this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["c"
            /* cssClasses */
            ].FIXED)) {
              this.setFixedPosition(true);
            }

            this.handleKeydown_ = function (evt) {
              return _this2.foundation_.handleKeydown(evt);
            };

            this.handleBodyClick_ = function (evt) {
              return _this2.foundation_.handleBodyClick(evt);
            };

            this.registerBodyClickListener_ = function () {
              return document.body.addEventListener('click', _this2.handleBodyClick_);
            };

            this.deregisterBodyClickListener_ = function () {
              return document.body.removeEventListener('click', _this2.handleBodyClick_);
            };

            this.root_.addEventListener('keydown', this.handleKeydown_);
            this.root_.addEventListener(__WEBPACK_IMPORTED_MODULE_4__constants__["e"
            /* strings */
            ].OPENED_EVENT, this.registerBodyClickListener_);
            this.root_.addEventListener(__WEBPACK_IMPORTED_MODULE_4__constants__["e"
            /* strings */
            ].CLOSED_EVENT, this.deregisterBodyClickListener_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.root_.removeEventListener('keydown', this.handleKeydown_);
            this.root_.removeEventListener(__WEBPACK_IMPORTED_MODULE_4__constants__["e"
            /* strings */
            ].OPENED_EVENT, this.registerBodyClickListener_);
            this.root_.removeEventListener(__WEBPACK_IMPORTED_MODULE_4__constants__["e"
            /* strings */
            ].CLOSED_EVENT, this.deregisterBodyClickListener_);

            _get(MDCMenuSurface.prototype.__proto__ || Object.getPrototypeOf(MDCMenuSurface.prototype), 'destroy', this).call(this);
          }
          /** @return {boolean} */

        }, {
          key: 'hoistMenuToBody',

          /**
           * Removes the menu-surface from it's current location and appends it to the
           * body to overcome any overflow:hidden issues.
           */
          value: function hoistMenuToBody() {
            document.body.appendChild(this.root_.parentElement.removeChild(this.root_));
            this.setIsHoisted(true);
          }
          /**
           * Sets the foundation to use page offsets for an positioning when the menu
           * is hoisted to the body.
           * @param {boolean} isHoisted
           */

        }, {
          key: 'setIsHoisted',
          value: function setIsHoisted(isHoisted) {
            this.foundation_.setIsHoisted(isHoisted);
          }
          /**
           * Sets the element that the menu-surface is anchored to.
           * @param {!Element} element
           */

        }, {
          key: 'setMenuSurfaceAnchorElement',
          value: function setMenuSurfaceAnchorElement(element) {
            this.anchorElement = element;
          }
          /**
           * Sets the menu-surface to position: fixed.
           * @param {boolean} isFixed
           */

        }, {
          key: 'setFixedPosition',
          value: function setFixedPosition(isFixed) {
            if (isFixed) {
              this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_4__constants__["c"
              /* cssClasses */
              ].FIXED);
            } else {
              this.root_.classList.remove(__WEBPACK_IMPORTED_MODULE_4__constants__["c"
              /* cssClasses */
              ].FIXED);
            }

            this.foundation_.setFixedPosition(isFixed);
          }
          /**
           * Sets the absolute x/y position to position based on. Requires the menu to be hoisted.
           * @param {number} x
           * @param {number} y
           */

        }, {
          key: 'setAbsolutePosition',
          value: function setAbsolutePosition(x, y) {
            this.foundation_.setAbsolutePosition(x, y);
            this.setIsHoisted(true);
          }
          /**
           * @param {!Corner} corner Default anchor corner alignment of top-left
           *     surface corner.
           */

        }, {
          key: 'setAnchorCorner',
          value: function setAnchorCorner(corner) {
            this.foundation_.setAnchorCorner(corner);
          }
          /**
           * @param {!AnchorMargin} margin
           */

        }, {
          key: 'setAnchorMargin',
          value: function setAnchorMargin(margin) {
            this.foundation_.setAnchorMargin(margin);
          }
          /** @param {boolean} quickOpen */

        }, {
          key: 'getDefaultFoundation',

          /** @return {!MDCMenuSurfaceFoundation} */
          value: function getDefaultFoundation() {
            var _this3 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["b"
            /* MDCMenuSurfaceFoundation */
            ](
            /** @type {!MDCMenuSurfaceAdapter} */
            _extends({
              addClass: function addClass(className) {
                return _this3.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this3.root_.classList.remove(className);
              },
              hasClass: function hasClass(className) {
                return _this3.root_.classList.contains(className);
              },
              hasAnchor: function hasAnchor() {
                return !!_this3.anchorElement;
              },
              notifyClose: function notifyClose() {
                return _this3.emit(__WEBPACK_IMPORTED_MODULE_2__foundation__["b"
                /* MDCMenuSurfaceFoundation */
                ].strings.CLOSED_EVENT, {});
              },
              notifyOpen: function notifyOpen() {
                return _this3.emit(__WEBPACK_IMPORTED_MODULE_2__foundation__["b"
                /* MDCMenuSurfaceFoundation */
                ].strings.OPENED_EVENT, {});
              },
              isElementInContainer: function isElementInContainer(el) {
                return _this3.root_ === el || _this3.root_.contains(el);
              },
              isRtl: function isRtl() {
                return getComputedStyle(_this3.root_).getPropertyValue('direction') === 'rtl';
              },
              setTransformOrigin: function setTransformOrigin(origin) {
                _this3.root_.style[__WEBPACK_IMPORTED_MODULE_1__util__["getTransformPropertyName"](window) + '-origin'] = origin;
              }
            }, this.getFocusAdapterMethods_(), this.getDimensionAdapterMethods_()));
          }
          /**
           * @return {!{
           * isFocused: function(): boolean,
           * saveFocus: function(),
           * restoreFocus: function(),
           * isFirstElementFocused: function(): boolean,
           * isLastElementFocused: function(): boolean,
           * focusFirstElement: function(),
           * focusLastElement: function(),
           * }}
           * @private
           */

        }, {
          key: 'getFocusAdapterMethods_',
          value: function getFocusAdapterMethods_() {
            var _this4 = this;

            return {
              isFocused: function isFocused() {
                return document.activeElement === _this4.root_;
              },
              saveFocus: function saveFocus() {
                _this4.previousFocus_ = document.activeElement;
              },
              restoreFocus: function restoreFocus() {
                if (_this4.root_.contains(document.activeElement)) {
                  if (_this4.previousFocus_ && _this4.previousFocus_.focus) {
                    _this4.previousFocus_.focus();
                  }
                }
              },
              isFirstElementFocused: function isFirstElementFocused() {
                return _this4.firstFocusableElement_ && _this4.firstFocusableElement_ === document.activeElement;
              },
              isLastElementFocused: function isLastElementFocused() {
                return _this4.lastFocusableElement_ && _this4.lastFocusableElement_ === document.activeElement;
              },
              focusFirstElement: function focusFirstElement() {
                return _this4.firstFocusableElement_ && _this4.firstFocusableElement_.focus && _this4.firstFocusableElement_.focus();
              },
              focusLastElement: function focusLastElement() {
                return _this4.lastFocusableElement_ && _this4.lastFocusableElement_.focus && _this4.lastFocusableElement_.focus();
              }
            };
          }
          /**
           * @return {!{
           * getInnerDimensions: function(),
           * getAnchorDimensions: function(): (HTMLElement | null | * | ClientRect),
           * getWindowDimensions: function(),
           * setPosition: function(*),
           * setMaxHeight: function(string)}}
           * @private
           */

        }, {
          key: 'getDimensionAdapterMethods_',
          value: function getDimensionAdapterMethods_() {
            var _this5 = this;

            return {
              getInnerDimensions: function getInnerDimensions() {
                return {
                  width: _this5.root_.offsetWidth,
                  height: _this5.root_.offsetHeight
                };
              },
              getAnchorDimensions: function getAnchorDimensions() {
                return _this5.anchorElement && _this5.anchorElement.getBoundingClientRect();
              },
              getWindowDimensions: function getWindowDimensions() {
                return {
                  width: window.innerWidth,
                  height: window.innerHeight
                };
              },
              getBodyDimensions: function getBodyDimensions() {
                return {
                  width: document.body.clientWidth,
                  height: document.body.clientHeight
                };
              },
              getWindowScroll: function getWindowScroll() {
                return {
                  x: window.pageXOffset,
                  y: window.pageYOffset
                };
              },
              setPosition: function setPosition(position) {
                _this5.root_.style.left = 'left' in position ? position.left : null;
                _this5.root_.style.right = 'right' in position ? position.right : null;
                _this5.root_.style.top = 'top' in position ? position.top : null;
                _this5.root_.style.bottom = 'bottom' in position ? position.bottom : null;
              },
              setMaxHeight: function setMaxHeight(height) {
                _this5.root_.style.maxHeight = height;
              }
            };
          }
        }, {
          key: 'open',
          get: function get() {
            return this.foundation_.isOpen();
          }
          /** @param {boolean} value */
          ,
          set: function set(value) {
            if (value) {
              var focusableElements = this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["e"
              /* strings */
              ].FOCUSABLE_ELEMENTS);
              this.firstFocusableElement_ = focusableElements.length > 0 ? focusableElements[0] : null;
              this.lastFocusableElement_ = focusableElements.length > 0 ? focusableElements[focusableElements.length - 1] : null;
              this.foundation_.open();
            } else {
              this.foundation_.close();
            }
          }
        }, {
          key: 'quickOpen',
          set: function set(quickOpen) {
            this.foundation_.setQuickOpen(quickOpen);
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCMenuSurface(root);
          }
        }]);

        return MDCMenuSurface;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 34 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "getTransformPropertyName", function () {
        return getTransformPropertyName;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @type {string|undefined} */


      var storedTransformPropertyName_ = void 0;
      /**
       * Returns the name of the correct transform property to use on the current browser.
       * @param {!Window} globalObj
       * @param {boolean=} forceRefresh
       * @return {string}
       */

      function getTransformPropertyName(globalObj) {
        var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        if (storedTransformPropertyName_ === undefined || forceRefresh) {
          var el = globalObj.document.createElement('div');
          var transformPropertyName = 'transform' in el.style ? 'transform' : 'webkitTransform';
          storedTransformPropertyName_ = transformPropertyName;
        }

        return storedTransformPropertyName_;
      }
      /***/

    },
    /* 35 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCNotchedOutline", function () {
        return MDCNotchedOutline;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(22);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(36);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__material_floating_label_index__ = __webpack_require__(16);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(23);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCNotchedOutlineFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCComponent<!MDCNotchedOutlineFoundation>}
       * @final
       */


      var MDCNotchedOutline = function (_MDCComponent) {
        _inherits(MDCNotchedOutline, _MDCComponent);

        _createClass(MDCNotchedOutline, null, [{
          key: 'attachTo',

          /**
           * @param {!Element} root
           * @return {!MDCNotchedOutline}
           */
          value: function attachTo(root) {
            return new MDCNotchedOutline(root);
          }
          /** @param {...?} args */

        }]);

        function MDCNotchedOutline() {
          var _ref;

          _classCallCheck(this, MDCNotchedOutline);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {Element} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCNotchedOutline.__proto__ || Object.getPrototypeOf(MDCNotchedOutline)).call.apply(_ref, [this].concat(args)));

          _this.notchElement_;
          return _this;
        }

        _createClass(MDCNotchedOutline, [{
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var label = this.root_.querySelector('.' + __WEBPACK_IMPORTED_MODULE_3__material_floating_label_index__["MDCFloatingLabelFoundation"].cssClasses.ROOT);
            this.notchElement_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["c"
            /* strings */
            ].NOTCH_ELEMENT_SELECTOR);

            if (label) {
              label.style.transitionDuration = '0s';
              this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
              /* cssClasses */
              ].OUTLINE_UPGRADED);
              requestAnimationFrame(function () {
                label.style.transitionDuration = '';
              });
            } else {
              this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
              /* cssClasses */
              ].NO_LABEL);
            }
          }
          /**
            * Updates classes and styles to open the notch to the specified width.
            * @param {number} notchWidth The notch width in the outline.
            */

        }, {
          key: 'notch',
          value: function notch(notchWidth) {
            this.foundation_.notch(notchWidth);
          }
          /**
           * Updates classes and styles to close the notch.
           */

        }, {
          key: 'closeNotch',
          value: function closeNotch() {
            this.foundation_.closeNotch();
          }
          /**
           * @return {!MDCNotchedOutlineFoundation}
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ](
            /** @type {!MDCNotchedOutlineAdapter} */
            _extends({
              addClass: function addClass(className) {
                return _this2.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this2.root_.classList.remove(className);
              },
              setNotchWidthProperty: function setNotchWidthProperty(width) {
                return _this2.notchElement_.style.setProperty('width', width + 'px');
              },
              removeNotchWidthProperty: function removeNotchWidthProperty() {
                return _this2.notchElement_.style.removeProperty('width');
              }
            }));
          }
        }]);

        return MDCNotchedOutline;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 36 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(22);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(23);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}
       * @final
       */


      var MDCNotchedOutlineFoundation = function (_MDCFoundation) {
        _inherits(MDCNotchedOutlineFoundation, _MDCFoundation);

        _createClass(MDCNotchedOutlineFoundation, null, [{
          key: 'strings',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["c"
            /* strings */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return enum {number} */

        }, {
          key: 'numbers',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* numbers */
            ];
          }
          /**
           * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCNotchedOutlineAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCNotchedOutlineAdapter} */
              {
                addClass: function addClass() {},
                removeClass: function removeClass() {},
                setNotchWidthProperty: function setNotchWidthProperty() {},
                removeNotchWidthProperty: function removeNotchWidthProperty() {}
              }
            );
          }
          /**
           * @param {!MDCNotchedOutlineAdapter} adapter
           */

        }]);

        function MDCNotchedOutlineFoundation(adapter) {
          _classCallCheck(this, MDCNotchedOutlineFoundation);

          return _possibleConstructorReturn(this, (MDCNotchedOutlineFoundation.__proto__ || Object.getPrototypeOf(MDCNotchedOutlineFoundation)).call(this, _extends(MDCNotchedOutlineFoundation.defaultAdapter, adapter)));
        }
        /**
         * Adds the outline notched selector and updates the notch width
         * calculated based off of notchWidth.
         * @param {number} notchWidth
         */


        _createClass(MDCNotchedOutlineFoundation, [{
          key: 'notch',
          value: function notch(notchWidth) {
            var OUTLINE_NOTCHED = MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;

            if (notchWidth > 0) {
              notchWidth += __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ].NOTCH_ELEMENT_PADDING; // Add padding from left/right.
            }

            this.adapter_.setNotchWidthProperty(notchWidth);
            this.adapter_.addClass(OUTLINE_NOTCHED);
          }
          /**
           * Removes notched outline selector to close the notch in the outline.
           */

        }, {
          key: 'closeNotch',
          value: function closeNotch() {
            var OUTLINE_NOTCHED = MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;
            this.adapter_.removeClass(OUTLINE_NOTCHED);
            this.adapter_.removeNotchWidthProperty();
          }
        }]);

        return MDCNotchedOutlineFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCNotchedOutlineFoundation;
      /***/
    },,,,,,,,,,
    /* 37 */

    /* 38 */

    /* 39 */

    /* 40 */

    /* 41 */

    /* 42 */

    /* 43 */

    /* 44 */

    /* 45 */

    /* 46 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCMenu", function () {
        return MDCMenu;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(47);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(29);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__material_menu_surface_index__ = __webpack_require__(33);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__material_menu_surface_foundation__ = __webpack_require__(17);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__material_list_index__ = __webpack_require__(25);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCMenuFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_1__foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "AnchorMargin", function () {
        return __WEBPACK_IMPORTED_MODULE_4__material_menu_surface_foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "Corner", function () {
        return __WEBPACK_IMPORTED_MODULE_3__material_menu_surface_index__["Corner"];
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends MDCComponent<!MDCMenuFoundation>
       */


      var MDCMenu = function (_MDCComponent) {
        _inherits(MDCMenu, _MDCComponent);
        /** @param {...?} args */


        function MDCMenu() {
          var _ref;

          _classCallCheck(this, MDCMenu);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {!MDCMenuSurface} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCMenu.__proto__ || Object.getPrototypeOf(MDCMenu)).call.apply(_ref, [this].concat(args)));

          _this.menuSurface_;
          /** @private {!MDCList} */

          _this.list_;
          /** @private {!Function} */

          _this.handleKeydown_;
          /** @private {!Function} */

          _this.handleClick_;
          /** @private {!Function} */

          _this.afterOpenedCallback_;
          return _this;
        }
        /**
         * @param {!HTMLElement} root
         * @return {!MDCMenu}
         */


        _createClass(MDCMenu, [{
          key: 'initialize',
          value: function initialize() {
            var menuSurfaceFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_3__material_menu_surface_index__["MDCMenuSurface"](el);
            };
            var listFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_5__material_list_index__["MDCList"](el);
            };
            this.menuSurface_ = menuSurfaceFactory(this.root_);
            var list = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].LIST_SELECTOR);

            if (list) {
              this.list_ = listFactory(list);
              this.list_.wrapFocus = true;
            }
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var _this2 = this;

            this.afterOpenedCallback_ = function () {
              return _this2.handleAfterOpened_();
            };

            this.handleKeydown_ = function (evt) {
              return _this2.foundation_.handleKeydown(evt);
            };

            this.handleClick_ = function (evt) {
              return _this2.foundation_.handleClick(evt);
            };

            this.menuSurface_.listen(__WEBPACK_IMPORTED_MODULE_4__material_menu_surface_foundation__["b"
            /* MDCMenuSurfaceFoundation */
            ].strings.OPENED_EVENT, this.afterOpenedCallback_);
            this.listen('keydown', this.handleKeydown_);
            this.listen('click', this.handleClick_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            if (this.list_) {
              this.list_.destroy();
            }

            this.menuSurface_.destroy();
            this.menuSurface_.unlisten(__WEBPACK_IMPORTED_MODULE_4__material_menu_surface_foundation__["b"
            /* MDCMenuSurfaceFoundation */
            ].strings.OPENED_EVENT, this.afterOpenedCallback_);
            this.unlisten('keydown', this.handleKeydown_);
            this.unlisten('click', this.handleClick_);

            _get(MDCMenu.prototype.__proto__ || Object.getPrototypeOf(MDCMenu.prototype), 'destroy', this).call(this);
          }
          /** @return {boolean} */

        }, {
          key: 'setAnchorCorner',

          /**
           * @param {!Corner} corner Default anchor corner alignment of top-left
           *     menu corner.
           */
          value: function setAnchorCorner(corner) {
            this.menuSurface_.setAnchorCorner(corner);
          }
          /**
           * @param {!AnchorMargin} margin
           */

        }, {
          key: 'setAnchorMargin',
          value: function setAnchorMargin(margin) {
            this.menuSurface_.setAnchorMargin(margin);
          }
          /**
           * Return the items within the menu. Note that this only contains the set of elements within
           * the items container that are proper list items, and not supplemental / presentational DOM
           * elements.
           * @return {!Array<!HTMLElement>}
           */

        }, {
          key: 'getOptionByIndex',

          /**
           * Return the item within the menu at the index specified.
           * @param {number} index
           * @return {?HTMLElement}
           */
          value: function getOptionByIndex(index) {
            var items = this.items;

            if (index < items.length) {
              return this.items[index];
            } else {
              return null;
            }
          }
          /** @param {boolean} quickOpen */

        }, {
          key: 'setFixedPosition',

          /** @param {boolean} isFixed */
          value: function setFixedPosition(isFixed) {
            this.menuSurface_.setFixedPosition(isFixed);
          }
        }, {
          key: 'hoistMenuToBody',
          value: function hoistMenuToBody() {
            this.menuSurface_.hoistMenuToBody();
          }
          /** @param {boolean} isHoisted */

        }, {
          key: 'setIsHoisted',
          value: function setIsHoisted(isHoisted) {
            this.menuSurface_.setIsHoisted(isHoisted);
          }
          /**
           * @param {number} x
           * @param {number} y
           */

        }, {
          key: 'setAbsolutePosition',
          value: function setAbsolutePosition(x, y) {
            this.menuSurface_.setAbsolutePosition(x, y);
          }
          /**
           * Sets the element that the menu-surface is anchored to.
           * @param {!HTMLElement} element
           */

        }, {
          key: 'setAnchorElement',
          value: function setAnchorElement(element) {
            this.menuSurface_.anchorElement = element;
          }
        }, {
          key: 'handleAfterOpened_',
          value: function handleAfterOpened_() {
            var list = this.items;

            if (list.length > 0) {
              list[0].focus();
            }
          }
          /** @return {!MDCMenuFoundation} */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this3 = this;

            return new __WEBPACK_IMPORTED_MODULE_1__foundation__["a"
            /* MDCMenuFoundation */
            ]({
              addClassToElementAtIndex: function addClassToElementAtIndex(index, className) {
                var list = _this3.items;
                list[index].classList.add(className);
              },
              removeClassFromElementAtIndex: function removeClassFromElementAtIndex(index, className) {
                var list = _this3.items;
                list[index].classList.remove(className);
              },
              addAttributeToElementAtIndex: function addAttributeToElementAtIndex(index, attr, value) {
                var list = _this3.items;
                list[index].setAttribute(attr, value);
              },
              removeAttributeFromElementAtIndex: function removeAttributeFromElementAtIndex(index, attr) {
                var list = _this3.items;
                list[index].removeAttribute(attr);
              },
              elementContainsClass: function elementContainsClass(element, className) {
                return element.classList.contains(className);
              },
              closeSurface: function closeSurface() {
                return _this3.open = false;
              },
              getElementIndex: function getElementIndex(element) {
                return _this3.items.indexOf(element);
              },
              getParentElement: function getParentElement(element) {
                return element.parentElement;
              },
              getSelectedElementIndex: function getSelectedElementIndex(selectionGroup) {
                return _this3.items.indexOf(selectionGroup.querySelector('.' + __WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].MENU_SELECTED_LIST_ITEM));
              },
              notifySelected: function notifySelected(evtData) {
                return _this3.emit(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
                /* strings */
                ].SELECTED_EVENT, {
                  index: evtData.index,
                  item: _this3.items[evtData.index]
                });
              }
            });
          }
        }, {
          key: 'open',
          get: function get() {
            return this.menuSurface_.open;
          }
          /** @param {boolean} value */
          ,
          set: function set(value) {
            this.menuSurface_.open = value;
          }
          /** @return {boolean} */

        }, {
          key: 'wrapFocus',
          get: function get() {
            return this.list_.wrapFocus;
          }
          /** @param {boolean} value */
          ,
          set: function set(value) {
            this.list_.wrapFocus = value;
          }
        }, {
          key: 'items',
          get: function get() {
            return this.list_.listElements;
          }
        }, {
          key: 'quickOpen',
          set: function set(quickOpen) {
            this.menuSurface_.quickOpen = quickOpen;
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCMenu(root);
          }
        }]);

        return MDCMenu;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 47 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return MDCMenuFoundation;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(48);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(29);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__material_menu_surface_foundation__ = __webpack_require__(17);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__material_list_foundation__ = __webpack_require__(15);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select', 'a'];
      /**
       * @extends {MDCFoundation<!MDCMenuAdapter>}
       */

      var MDCMenuFoundation = function (_MDCFoundation) {
        _inherits(MDCMenuFoundation, _MDCFoundation);

        _createClass(MDCMenuFoundation, null, [{
          key: 'cssClasses',

          /** @return enum{cssClasses} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return enum{strings} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ];
          }
          /**
           * {@see MDCMenuAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCMenuAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCMenuAdapter} */
              {
                addClassToElementAtIndex: function addClassToElementAtIndex() {},
                removeClassFromElementAtIndex: function removeClassFromElementAtIndex() {},
                addAttributeToElementAtIndex: function addAttributeToElementAtIndex() {},
                removeAttributeFromElementAtIndex: function removeAttributeFromElementAtIndex() {},
                elementContainsClass: function elementContainsClass() {},
                closeSurface: function closeSurface() {},
                getElementIndex: function getElementIndex() {},
                getParentElement: function getParentElement() {},
                getSelectedElementIndex: function getSelectedElementIndex() {},
                notifySelected: function notifySelected() {}
              }
            );
          }
          /** @param {!MDCMenuAdapter} adapter */

        }]);

        function MDCMenuFoundation(adapter) {
          _classCallCheck(this, MDCMenuFoundation);
          /** @type {number} */


          var _this = _possibleConstructorReturn(this, (MDCMenuFoundation.__proto__ || Object.getPrototypeOf(MDCMenuFoundation)).call(this, _extends(MDCMenuFoundation.defaultAdapter, adapter)));

          _this.closeAnimationEndTimerId_ = 0;
          return _this;
        }

        _createClass(MDCMenuFoundation, [{
          key: 'destroy',
          value: function destroy() {
            if (this.closeAnimationEndTimerId_) {
              clearTimeout(this.closeAnimationEndTimerId_);
            }

            this.adapter_.closeSurface();
          }
          /**
           * Handler function for the keydown events.
           * @param {!Event} evt
           */

        }, {
          key: 'handleKeydown',
          value: function handleKeydown(evt) {
            var key = evt.key,
                keyCode = evt.keyCode;
            var isSpace = key === 'Space' || keyCode === 32;
            var isEnter = key === 'Enter' || keyCode === 13;
            var isTab = key === 'Tab' || keyCode === 9;

            if (isSpace || isEnter) {
              this.handleAction_(evt);
            } else if (isTab) {
              this.adapter_.closeSurface();
            }
          }
          /**
           * Handler function for the click events.
           * @param {!Event} evt
           */

        }, {
          key: 'handleClick',
          value: function handleClick(evt) {
            this.handleAction_(evt);
          }
          /**
           * Combined action handling for click/keypress events.
           * @param {!Event} evt
           * @private
           */

        }, {
          key: 'handleAction_',
          value: function handleAction_(evt) {
            var listItem = this.getListItem_(
            /** @type {HTMLElement} */
            evt.target);

            if (listItem) {
              this.handleSelection(listItem);
              this.preventDefaultEvent_(evt);
            }
          }
          /**
           * Handler for a selected list item.
           * @param {?HTMLElement} listItem
           */

        }, {
          key: 'handleSelection',
          value: function handleSelection(listItem) {
            var _this2 = this;

            var index = this.adapter_.getElementIndex(listItem);

            if (index < 0) {
              return;
            }

            this.adapter_.notifySelected({
              index: index
            });
            this.adapter_.closeSurface(); // Wait for the menu to close before adding/removing classes that affect styles.

            this.closeAnimationEndTimerId_ = setTimeout(function () {
              var selectionGroup = _this2.getSelectionGroup_(listItem);

              if (selectionGroup !== null) {
                _this2.handleSelectionGroup_(
                /** @type {!HTMLElement} */
                selectionGroup, index);
              }
            }, __WEBPACK_IMPORTED_MODULE_3__material_menu_surface_foundation__["b"
            /* MDCMenuSurfaceFoundation */
            ].numbers.TRANSITION_CLOSE_DURATION);
          }
          /**
           * Handles toggling the selected classes in a selection group when a
           * selection is made.
           * @param {!HTMLElement} selectionGroup
           * @param {number} index The selected index value
           * @private
           */

        }, {
          key: 'handleSelectionGroup_',
          value: function handleSelectionGroup_(selectionGroup, index) {
            // De-select the previous selection in this group.
            var selectedIndex = this.adapter_.getSelectedElementIndex(selectionGroup);

            if (selectedIndex >= 0) {
              this.adapter_.removeAttributeFromElementAtIndex(selectedIndex, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ARIA_SELECTED_ATTR);
              this.adapter_.removeClassFromElementAtIndex(selectedIndex, __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].MENU_SELECTED_LIST_ITEM);
            } // Select the new list item in this group.


            this.adapter_.addClassToElementAtIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].MENU_SELECTED_LIST_ITEM);
            this.adapter_.addAttributeToElementAtIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_SELECTED_ATTR, 'true');
          }
          /**
           * Returns the parent selection group of an element if one exists.
           * @param listItem
           * @return {?HTMLElement} parent selection group element or null.
           * @private
           */

        }, {
          key: 'getSelectionGroup_',
          value: function getSelectionGroup_(listItem) {
            var parent = this.adapter_.getParentElement(listItem);
            var isGroup = this.adapter_.elementContainsClass(parent, __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].MENU_SELECTION_GROUP); // Iterate through ancestors until we find the group or get to the list.

            while (!isGroup && !this.adapter_.elementContainsClass(parent, __WEBPACK_IMPORTED_MODULE_4__material_list_foundation__["a"
            /* default */
            ].cssClasses.ROOT)) {
              parent = this.adapter_.getParentElement(parent);
              isGroup = this.adapter_.elementContainsClass(parent, __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].MENU_SELECTION_GROUP);
            }

            if (isGroup) {
              return parent;
            } else {
              return null;
            }
          }
          /**
           * Find the first ancestor with the mdc-list-item class.
           * @param {?HTMLElement} target
           * @return {?HTMLElement}
           * @private
           */

        }, {
          key: 'getListItem_',
          value: function getListItem_(target) {
            var isListItem = this.adapter_.elementContainsClass(target, __WEBPACK_IMPORTED_MODULE_4__material_list_foundation__["a"
            /* default */
            ].cssClasses.LIST_ITEM_CLASS);

            while (!isListItem) {
              target = this.adapter_.getParentElement(target);

              if (target) {
                isListItem = this.adapter_.elementContainsClass(target, __WEBPACK_IMPORTED_MODULE_4__material_list_foundation__["a"
                /* default */
                ].cssClasses.LIST_ITEM_CLASS);
              } else {
                // target has no parent element.
                return null;
              }
            }

            return target;
          }
          /**
           * Ensures that preventDefault is only called if the containing element doesn't
           * consume the event, and it will cause an unintended scroll.
           * @param {!Event} evt
           * @private
           */

        }, {
          key: 'preventDefaultEvent_',
          value: function preventDefaultEvent_(evt) {
            var target =
            /** @type {!HTMLElement} */
            evt.target;
            var tagName = ('' + target.tagName).toLowerCase();

            if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {
              evt.preventDefault();
            }
          }
        }]);

        return MDCMenuFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /***/

    },
    /* 48 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* unused harmony export MDCMenuAdapter */

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Menu. Provides an interface for managing
       * - selected element classes
       * - get focused elements
       * - toggling a checkbox inside a list item
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCMenuAdapter = function () {
        function MDCMenuAdapter() {
          _classCallCheck(this, MDCMenuAdapter);
        }

        _createClass(MDCMenuAdapter, [{
          key: "addClassToElementAtIndex",

          /**
           * Adds a class to the element at the index provided.
           * @param {number} index
           * @param {string} className
           */
          value: function addClassToElementAtIndex(index, className) {}
          /**
           * Removes a class from the element at the index provided
           * @param {number} index
           * @param {string} className
           */

        }, {
          key: "removeClassFromElementAtIndex",
          value: function removeClassFromElementAtIndex(index, className) {}
          /**
           * Adds an attribute, with value, to the element at the index provided.
           * @param {number} index
           * @param {string} attr
           * @param {string} value
           */

        }, {
          key: "addAttributeToElementAtIndex",
          value: function addAttributeToElementAtIndex(index, attr, value) {}
          /**
           * Removes an attribute from an element at the index provided.
           * @param {number} index
           * @param {string} attr
           */

        }, {
          key: "removeAttributeFromElementAtIndex",
          value: function removeAttributeFromElementAtIndex(index, attr) {}
          /**
           * Returns true if the element contains the className.
           * @param {?HTMLElement} element
           * @param {string} className
           * @return {boolean} true if the element contains the className
           */

        }, {
          key: "elementContainsClass",
          value: function elementContainsClass(element, className) {}
          /**
           * Closes the menu-surface.
           */

        }, {
          key: "closeSurface",
          value: function closeSurface() {}
          /**
           * Returns the index for the element provided.
           * @param {?HTMLElement} element
           * @return {number} index of the element in the list or -1 if it is not in the list.
           */

        }, {
          key: "getElementIndex",
          value: function getElementIndex(element) {}
          /**
           * Returns the parentElement of the provided element.
           * @param {?HTMLElement} element
           * @return {?HTMLElement} parentElement of the element provided.
           */

        }, {
          key: "getParentElement",
          value: function getParentElement(element) {}
          /**
           * Returns the element within the selectionGroup containing the selected element class.
           * @param {!HTMLElement} selectionGroup
           * @return {number} element within the selectionGroup that contains the selected element class.
           */

        }, {
          key: "getSelectedElementIndex",
          value: function getSelectedElementIndex(selectionGroup) {}
          /**
           * Emits an event using the evtData.
           * @param {{
          *    index: number
          *   }} evtData
           */

        }, {
          key: "notifySelected",
          value: function notifySelected(evtData) {}
        }]);

        return MDCMenuAdapter;
      }();
      /***/

    },
    /* 49 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return MDCSelectIcon;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(73);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(133);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCComponent<!MDCSelectIconFoundation>}
       * @final
       */


      var MDCSelectIcon = function (_MDCComponent) {
        _inherits(MDCSelectIcon, _MDCComponent);

        function MDCSelectIcon() {
          _classCallCheck(this, MDCSelectIcon);

          return _possibleConstructorReturn(this, (MDCSelectIcon.__proto__ || Object.getPrototypeOf(MDCSelectIcon)).apply(this, arguments));
        }

        _createClass(MDCSelectIcon, [{
          key: 'getDefaultFoundation',

          /**
           * @return {!MDCSelectIconFoundation}
           */
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ](
            /** @type {!MDCSelectIconAdapter} */
            _extends({
              getAttr: function getAttr(attr) {
                return _this2.root_.getAttribute(attr);
              },
              setAttr: function setAttr(attr, value) {
                return _this2.root_.setAttribute(attr, value);
              },
              removeAttr: function removeAttr(attr) {
                return _this2.root_.removeAttribute(attr);
              },
              setContent: function setContent(content) {
                _this2.root_.textContent = content;
              },
              registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
                return _this2.root_.addEventListener(evtType, handler);
              },
              deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
                return _this2.root_.removeEventListener(evtType, handler);
              },
              notifyIconAction: function notifyIconAction() {
                return _this2.emit(__WEBPACK_IMPORTED_MODULE_2__foundation__["a"
                /* default */
                ].strings.ICON_EVENT, {}
                /* evtData */
                , true
                /* shouldBubble */
                );
              }
            }));
          }
        }, {
          key: 'foundation',

          /**
           * @return {!MDCSelectIconFoundation}
           */
          get: function get() {
            return this.foundation_;
          }
        }], [{
          key: 'attachTo',

          /**
           * @param {!Element} root
           * @return {!MDCSelectIcon}
           */
          value: function attachTo(root) {
            return new MDCSelectIcon(root);
          }
        }]);

        return MDCSelectIcon;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 50 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return MDCSelectHelperText;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(74);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(135);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCComponent<!MDCSelectHelperTextFoundation>}
       * @final
       */


      var MDCSelectHelperText = function (_MDCComponent) {
        _inherits(MDCSelectHelperText, _MDCComponent);

        function MDCSelectHelperText() {
          _classCallCheck(this, MDCSelectHelperText);

          return _possibleConstructorReturn(this, (MDCSelectHelperText.__proto__ || Object.getPrototypeOf(MDCSelectHelperText)).apply(this, arguments));
        }

        _createClass(MDCSelectHelperText, [{
          key: 'getDefaultFoundation',

          /**
           * @return {!MDCSelectHelperTextFoundation}
           */
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ](
            /** @type {!MDCSelectHelperTextAdapter} */
            _extends({
              addClass: function addClass(className) {
                return _this2.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this2.root_.classList.remove(className);
              },
              hasClass: function hasClass(className) {
                return _this2.root_.classList.contains(className);
              },
              setAttr: function setAttr(attr, value) {
                return _this2.root_.setAttribute(attr, value);
              },
              removeAttr: function removeAttr(attr) {
                return _this2.root_.removeAttribute(attr);
              },
              setContent: function setContent(content) {
                _this2.root_.textContent = content;
              }
            }));
          }
        }, {
          key: 'foundation',

          /**
           * @return {!MDCSelectHelperTextFoundation}
           */
          get: function get() {
            return this.foundation_;
          }
        }], [{
          key: 'attachTo',

          /**
           * @param {!Element} root
           * @return {!MDCSelectHelperText}
           */
          value: function attachTo(root) {
            return new MDCSelectHelperText(root);
          }
        }]);

        return MDCSelectHelperText;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },,,,,,,,,,,,,,,,,,,,,,
    /* 51 */

    /* 52 */

    /* 53 */

    /* 54 */

    /* 55 */

    /* 56 */

    /* 57 */

    /* 58 */

    /* 59 */

    /* 60 */

    /* 61 */

    /* 62 */

    /* 63 */

    /* 64 */

    /* 65 */

    /* 66 */

    /* 67 */

    /* 68 */

    /* 69 */

    /* 70 */

    /* 71 */

    /* 72 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* unused harmony export MDCSelectAdapter */

      /* unused harmony export FoundationMapType */

      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__icon_index__ = __webpack_require__(49);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__helper_text_index__ = __webpack_require__(50);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @typedef {{
       *   leadingIcon: (!MDCSelectIconFoundation|undefined),
       *   helperText: (!MDCSelectHelperTextFoundation|undefined),
       * }}
       */


      var FoundationMapType = void 0;
      /**
       * Adapter for MDC Select. Provides an interface for managing
       * - classes
       * - dom
       * - event handlers
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */

      var MDCSelectAdapter = function () {
        function MDCSelectAdapter() {
          _classCallCheck(this, MDCSelectAdapter);
        }

        _createClass(MDCSelectAdapter, [{
          key: 'addClass',

          /**
           * Adds class to root element.
           * @param {string} className
           */
          value: function addClass(className) {}
          /**
           * Removes a class from the root element.
           * @param {string} className
           */

        }, {
          key: 'removeClass',
          value: function removeClass(className) {}
          /**
           * Returns true if the root element contains the given class name.
           * @param {string} className
           * @return {boolean}
           */

        }, {
          key: 'hasClass',
          value: function hasClass(className) {}
          /**
           * Activates the bottom line, showing a focused state.
           */

        }, {
          key: 'activateBottomLine',
          value: function activateBottomLine() {}
          /**
           * Deactivates the bottom line.
           */

        }, {
          key: 'deactivateBottomLine',
          value: function deactivateBottomLine() {}
          /**
           * Sets the value of the select.
           * @param {string} value
           */

        }, {
          key: 'setValue',
          value: function setValue(value) {}
          /**
           * Returns the selected value of the select element.
           * @return {string}
           */

        }, {
          key: 'getValue',
          value: function getValue() {}
          /**
           * Floats label determined based off of the shouldFloat argument.
           * @param {boolean} shouldFloat
           */

        }, {
          key: 'floatLabel',
          value: function floatLabel(shouldFloat) {}
          /**
           * Returns width of label in pixels, if the label exists.
           * @return {number}
           */

        }, {
          key: 'getLabelWidth',
          value: function getLabelWidth() {}
          /**
           * Returns true if outline element exists, false if it doesn't.
           * @return {boolean}
           */

        }, {
          key: 'hasOutline',
          value: function hasOutline() {}
          /**
           * Only implement if outline element exists.
           * @param {number} labelWidth
           */

        }, {
          key: 'notchOutline',
          value: function notchOutline(labelWidth) {}
          /**
           * Closes notch in outline element, if the outline exists.
           */

        }, {
          key: 'closeOutline',
          value: function closeOutline() {}
          /**
           * Opens the menu.
           */

        }, {
          key: 'openMenu',
          value: function openMenu() {}
          /**
           * Closes the menu.
           */

        }, {
          key: 'closeMenu',
          value: function closeMenu() {}
          /**
           * Returns true if the menu is currently open.
           * @return {boolean}
           */

        }, {
          key: 'isMenuOpen',
          value: function isMenuOpen() {}
          /**
           * Sets the selected index of the select to the index provided.
           * @param {number} index
           */

        }, {
          key: 'setSelectedIndex',
          value: function setSelectedIndex(index) {}
          /**
           * Sets the select to disabled.
           * @param {boolean} isDisabled
           */

        }, {
          key: 'setDisabled',
          value: function setDisabled(isDisabled) {}
          /**
           * Sets the line ripple transform origin center.
           * @param {number} normalizedX
           */

        }, {
          key: 'setRippleCenter',
          value: function setRippleCenter(normalizedX) {}
          /**
           * Emits a change event when an element is selected.
           * @param {string} value
           */

        }, {
          key: 'notifyChange',
          value: function notifyChange(value) {}
          /**
           * Checks if the select is currently valid.
           * @return {boolean} isValid
           */

        }, {
          key: 'checkValidity',
          value: function checkValidity() {}
          /**
           * Adds/Removes the invalid class.
           * @param {boolean} isValid
           */

        }, {
          key: 'setValid',
          value: function setValid(isValid) {}
        }]);

        return MDCSelectAdapter;
      }();
      /***/

    },
    /* 73 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Select Icon.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the select icon into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCSelectIconAdapter = function () {
        function MDCSelectIconAdapter() {
          _classCallCheck(this, MDCSelectIconAdapter);
        }

        _createClass(MDCSelectIconAdapter, [{
          key: "getAttr",

          /**
           * Gets the value of an attribute on the icon element.
           * @param {string} attr
           * @return {string}
           */
          value: function getAttr(attr) {}
          /**
           * Sets an attribute on the icon element.
           * @param {string} attr
           * @param {string} value
           */

        }, {
          key: "setAttr",
          value: function setAttr(attr, value) {}
          /**
           * Removes an attribute from the icon element.
           * @param {string} attr
           */

        }, {
          key: "removeAttr",
          value: function removeAttr(attr) {}
          /**
           * Sets the text content of the icon element.
           * @param {string} content
           */

        }, {
          key: "setContent",
          value: function setContent(content) {}
          /**
           * Registers an event listener on the icon element for a given event.
           * @param {string} evtType
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "registerInteractionHandler",
          value: function registerInteractionHandler(evtType, handler) {}
          /**
           * Deregisters an event listener on the icon element for a given event.
           * @param {string} evtType
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "deregisterInteractionHandler",
          value: function deregisterInteractionHandler(evtType, handler) {}
          /**
           * Emits a custom event "MDCSelect:icon" denoting a user has clicked the icon.
           */

        }, {
          key: "notifyIconAction",
          value: function notifyIconAction() {}
        }]);

        return MDCSelectIconAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCSelectIconAdapter;
      /***/
    },
    /* 74 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Select Helper Text.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the Select helper text into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCSelectHelperTextAdapter = function () {
        function MDCSelectHelperTextAdapter() {
          _classCallCheck(this, MDCSelectHelperTextAdapter);
        }

        _createClass(MDCSelectHelperTextAdapter, [{
          key: "addClass",

          /**
           * Adds a class to the helper text element.
           * @param {string} className
           */
          value: function addClass(className) {}
          /**
           * Removes a class from the helper text element.
           * @param {string} className
           */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * Returns whether or not the helper text element contains the given class.
           * @param {string} className
           * @return {boolean}
           */

        }, {
          key: "hasClass",
          value: function hasClass(className) {}
          /**
           * Sets an attribute with a given value on the helper text element.
           * @param {string} attr
           * @param {string} value
           */

        }, {
          key: "setAttr",
          value: function setAttr(attr, value) {}
          /**
           * Removes an attribute from the helper text element.
           * @param {string} attr
           */

        }, {
          key: "removeAttr",
          value: function removeAttr(attr) {}
          /**
           * Sets the text content for the helper text element.
           * @param {string} content
           */

        }, {
          key: "setContent",
          value: function setContent(content) {}
        }]);

        return MDCSelectHelperTextAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCSelectHelperTextAdapter;
      /***/
    },
    /* 75 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "c", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return numbers;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        DISABLED: 'mdc-select--disabled',
        ROOT: 'mdc-select',
        OUTLINED: 'mdc-select--outlined',
        FOCUSED: 'mdc-select--focused',
        SELECTED_ITEM_CLASS: 'mdc-list-item--selected',
        WITH_LEADING_ICON: 'mdc-select--with-leading-icon',
        INVALID: 'mdc-select--invalid',
        REQUIRED: 'mdc-select--required'
      };
      /** @enum {string} */

      var strings = {
        ARIA_CONTROLS: 'aria-controls',
        CHANGE_EVENT: 'MDCSelect:change',
        SELECTED_ITEM_SELECTOR: '.' + cssClasses.SELECTED_ITEM_CLASS,
        LEADING_ICON_SELECTOR: '.mdc-select__icon',
        SELECTED_TEXT_SELECTOR: '.mdc-select__selected-text',
        HIDDEN_INPUT_SELECTOR: 'input[type="hidden"]',
        MENU_SELECTOR: '.mdc-select__menu',
        LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',
        LABEL_SELECTOR: '.mdc-floating-label',
        NATIVE_CONTROL_SELECTOR: '.mdc-select__native-control',
        OUTLINE_SELECTOR: '.mdc-notched-outline',
        ENHANCED_VALUE_ATTR: 'data-value',
        ARIA_SELECTED_ATTR: 'aria-selected'
      };
      /** @enum {number} */

      var numbers = {
        LABEL_SCALE: 0.75
      };
      /***/
    },,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
    /* 76 */

    /* 77 */

    /* 78 */

    /* 79 */

    /* 80 */

    /* 81 */

    /* 82 */

    /* 83 */

    /* 84 */

    /* 85 */

    /* 86 */

    /* 87 */

    /* 88 */

    /* 89 */

    /* 90 */

    /* 91 */

    /* 92 */

    /* 93 */

    /* 94 */

    /* 95 */

    /* 96 */

    /* 97 */

    /* 98 */

    /* 99 */

    /* 100 */

    /* 101 */

    /* 102 */

    /* 103 */

    /* 104 */

    /* 105 */

    /* 106 */

    /* 107 */

    /* 108 */

    /* 109 */

    /* 110 */

    /* 111 */

    /* 112 */

    /* 113 */

    /* 114 */

    /* 115 */

    /* 116 */

    /* 117 */

    /* 118 */

    /* 119 */

    /* 120 */

    /* 121 */

    /* 122 */

    /* 123 */

    /* 124 */

    /* 125 */

    /* 126 */

    /* 127 */

    /* 128 */

    /* 129 */

    /* 130 */

    /* 131 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCSelect", function () {
        return MDCSelect;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__material_floating_label_index__ = __webpack_require__(16);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__material_line_ripple_index__ = __webpack_require__(30);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__material_menu_index__ = __webpack_require__(46);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__material_notched_outline_index__ = __webpack_require__(35);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__foundation__ = __webpack_require__(132);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_7__constants__ = __webpack_require__(75);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_8__adapter__ = __webpack_require__(72);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_9__icon_index__ = __webpack_require__(49);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_10__helper_text_index__ = __webpack_require__(50);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_11__material_menu_surface_constants__ = __webpack_require__(18);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_12__material_menu_constants__ = __webpack_require__(29);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCSelectFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_6__foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCSelectHelperText", function () {
        return __WEBPACK_IMPORTED_MODULE_10__helper_text_index__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCSelectHelperTextFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_10__helper_text_index__["b"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCSelectIcon", function () {
        return __WEBPACK_IMPORTED_MODULE_9__icon_index__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCSelectIconFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_9__icon_index__["b"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */
      // Closure has issues with {this as that} syntax.


      var VALIDATION_ATTR_WHITELIST = ['required', 'aria-required'];
      /**
       * @extends MDCComponent<!MDCSelectFoundation>
       */

      var MDCSelect = function (_MDCComponent) {
        _inherits(MDCSelect, _MDCComponent);
        /**
         * @param {...?} args
         */


        function MDCSelect() {
          var _ref;

          _classCallCheck(this, MDCSelect);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {?Element} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCSelect.__proto__ || Object.getPrototypeOf(MDCSelect)).call.apply(_ref, [this].concat(args)));

          _this.nativeControl_;
          /** @private {?Element} */

          _this.selectedText_;
          /** @private {?Element} */

          _this.hiddenInput_;
          /** @private {?MDCSelectIcon} */

          _this.leadingIcon_;
          /** @private {?MDCSelectHelperText} */

          _this.helperText_;
          /** @private {?Element} */

          _this.menuElement_;
          /** @type {?MDCMenu} */

          _this.menu_;
          /** @type {?MDCRipple} */

          _this.ripple;
          /** @private {?MDCLineRipple} */

          _this.lineRipple_;
          /** @private {?MDCFloatingLabel} */

          _this.label_;
          /** @private {?MDCNotchedOutline} */

          _this.outline_;
          /** @private {!Function} */

          _this.handleChange_;
          /** @private {!Function} */

          _this.handleFocus_;
          /** @private {!Function} */

          _this.handleBlur_;
          /** @private {!Function} */

          _this.handleClick_;
          /** @private {!Function} */

          _this.handleKeydown_;
          /** @private {!Function} */

          _this.handleMenuOpened_;
          /** @private {!Function} */

          _this.handleMenuClosed_;
          /** @private {!Function} */

          _this.handleMenuSelected_;
          /** @private {boolean} */

          _this.menuOpened_ = false;
          /** @private {!MutationObserver} */

          _this.validationObserver_;
          return _this;
        }
        /**
         * @param {!Element} root
         * @return {!MDCSelect}
         */


        _createClass(MDCSelect, [{
          key: 'layout',

          /**
           * Recomputes the outline SVG path for the outline element.
           */
          value: function layout() {
            this.foundation_.layout();
          }
          /**
           * @param {(function(!Element): !MDCLineRipple)=} lineRippleFactory A function which creates a new MDCLineRipple.
           * @param {(function(!Element): !MDCFloatingLabel)=} labelFactory A function which creates a new MDCFloatingLabel.
           * @param {(function(!Element): !MDCNotchedOutline)=} outlineFactory A function which creates a new MDCNotchedOutline.
           * @param {(function(!Element): !MDCMenu)=} menuFactory A function which creates a new MDCMenu.
           * @param {(function(!Element): !MDCSelectIcon)=} iconFactory A function which creates a new MDCSelectIcon.
           * @param {(function(!Element): !MDCSelectHelperText)=} helperTextFactory A function which creates a new
           * MDCSelectHelperText.
           */

        }, {
          key: 'initialize',
          value: function initialize() {
            var labelFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_1__material_floating_label_index__["MDCFloatingLabel"](el);
            };
            var lineRippleFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_2__material_line_ripple_index__["MDCLineRipple"](el);
            };
            var outlineFactory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_5__material_notched_outline_index__["MDCNotchedOutline"](el);
            };
            var menuFactory = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_3__material_menu_index__["MDCMenu"](el);
            };
            var iconFactory = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_9__icon_index__["a"
              /* MDCSelectIcon */
              ](el);
            };
            var helperTextFactory = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_10__helper_text_index__["a"
              /* MDCSelectHelperText */
              ](el);
            };
            this.nativeControl_ =
            /** @type {HTMLElement} */
            this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].NATIVE_CONTROL_SELECTOR);
            this.selectedText_ =
            /** @type {HTMLElement} */
            this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].SELECTED_TEXT_SELECTOR);

            if (this.selectedText_) {
              this.enhancedSelectSetup_(menuFactory);
            }

            var labelElement = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].LABEL_SELECTOR);

            if (labelElement) {
              this.label_ = labelFactory(labelElement);
            }

            var lineRippleElement = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].LINE_RIPPLE_SELECTOR);

            if (lineRippleElement) {
              this.lineRipple_ = lineRippleFactory(lineRippleElement);
            }

            var outlineElement = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].OUTLINE_SELECTOR);

            if (outlineElement) {
              this.outline_ = outlineFactory(outlineElement);
            }

            var leadingIcon = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].LEADING_ICON_SELECTOR);

            if (leadingIcon) {
              this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
              /* cssClasses */
              ].WITH_LEADING_ICON);
              this.leadingIcon_ = iconFactory(leadingIcon);

              if (this.menuElement_) {
                this.menuElement_.classList.add(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                /* cssClasses */
                ].WITH_LEADING_ICON);
              }
            }

            var element = this.nativeControl_ ? this.nativeControl_ : this.selectedText_;

            if (element.hasAttribute(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].ARIA_CONTROLS)) {
              var helperTextElement = document.getElementById(element.getAttribute(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
              /* strings */
              ].ARIA_CONTROLS));

              if (helperTextElement) {
                this.helperText_ = helperTextFactory(helperTextElement);
              }
            }

            if (!this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
            /* cssClasses */
            ].OUTLINED)) {
              this.ripple = this.initRipple_();
            } // The required state needs to be sync'd before the mutation observer is added.


            this.initialSyncRequiredState_();
            this.addMutationObserverForRequired_();
          }
          /**
           * Handles setup for the enhanced menu.
           * @private
           */

        }, {
          key: 'enhancedSelectSetup_',
          value: function enhancedSelectSetup_(menuFactory) {
            var isDisabled = this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
            /* cssClasses */
            ].DISABLED);
            this.selectedText_.setAttribute('tabindex', isDisabled ? '-1' : '0');
            this.hiddenInput_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].HIDDEN_INPUT_SELECTOR);
            this.menuElement_ =
            /** @type {HTMLElement} */
            this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].MENU_SELECTOR);
            this.menu_ = menuFactory(this.menuElement_);
            this.menu_.hoistMenuToBody();
            this.menu_.setAnchorElement(
            /** @type {!HTMLElement} */
            this.root_);
            this.menu_.setAnchorCorner(__WEBPACK_IMPORTED_MODULE_11__material_menu_surface_constants__["a"
            /* Corner */
            ].BOTTOM_START);
            this.menu_.wrapFocus = false;
          }
          /**
           * @private
           * @return {!MDCRipple}
           */

        }, {
          key: 'initRipple_',
          value: function initRipple_() {
            var element = this.nativeControl_ ? this.nativeControl_ : this.selectedText_;

            var adapter = _extends(__WEBPACK_IMPORTED_MODULE_4__material_ripple_index__["MDCRipple"].createAdapter(this), {
              registerInteractionHandler: function registerInteractionHandler(type, handler) {
                return element.addEventListener(type, handler);
              },
              deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
                return element.removeEventListener(type, handler);
              }
            });

            var foundation = new __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__["MDCRippleFoundation"](adapter);
            return new __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__["MDCRipple"](this.root_, foundation);
          }
          /**
           * Initializes the select's event listeners and internal state based
           * on the environment's state.
           */

        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var _this2 = this;

            this.handleChange_ = function () {
              return _this2.foundation_.handleChange(
              /* didChange */
              true);
            };

            this.handleFocus_ = function () {
              return _this2.foundation_.handleFocus();
            };

            this.handleBlur_ = function () {
              return _this2.foundation_.handleBlur();
            };

            this.handleClick_ = function (evt) {
              if (_this2.selectedText_) _this2.selectedText_.focus();

              _this2.foundation_.handleClick(_this2.getNormalizedXCoordinate_(evt));
            };

            this.handleKeydown_ = function (evt) {
              return _this2.foundation_.handleKeydown(evt);
            };

            this.handleMenuSelected_ = function (evtData) {
              return _this2.selectedIndex = evtData.detail.index;
            };

            this.handleMenuOpened_ = function () {
              // Menu should open to the last selected element.
              if (_this2.selectedIndex >= 0) {
                _this2.menu_.items[_this2.selectedIndex].focus();
              }
            };

            this.handleMenuClosed_ = function () {
              // menuOpened_ is used to track the state of the menu opening or closing since the menu.open function
              // will return false if the menu is still closing and this method listens to the closed event which
              // occurs after the menu is already closed.
              _this2.menuOpened_ = false;

              _this2.selectedText_.removeAttribute('aria-expanded');

              if (document.activeElement !== _this2.selectedText_) {
                _this2.foundation_.handleBlur();
              }
            };

            var element = this.nativeControl_ ? this.nativeControl_ : this.selectedText_;
            element.addEventListener('change', this.handleChange_);
            element.addEventListener('focus', this.handleFocus_);
            element.addEventListener('blur', this.handleBlur_);
            ['mousedown', 'touchstart'].forEach(function (evtType) {
              element.addEventListener(evtType, _this2.handleClick_);
            });

            if (this.menuElement_) {
              this.selectedText_.addEventListener('keydown', this.handleKeydown_);
              this.menu_.listen(__WEBPACK_IMPORTED_MODULE_11__material_menu_surface_constants__["e"
              /* strings */
              ].CLOSED_EVENT, this.handleMenuClosed_);
              this.menu_.listen(__WEBPACK_IMPORTED_MODULE_11__material_menu_surface_constants__["e"
              /* strings */
              ].OPENED_EVENT, this.handleMenuOpened_);
              this.menu_.listen(__WEBPACK_IMPORTED_MODULE_12__material_menu_constants__["b"
              /* strings */
              ].SELECTED_EVENT, this.handleMenuSelected_);

              if (this.hiddenInput_ && this.hiddenInput_.value) {
                // If the hidden input already has a value, use it to restore the select's value.
                // This can happen e.g. if the user goes back or (in some browsers) refreshes the page.
                var enhancedAdapterMethods = this.getEnhancedSelectAdapterMethods_();
                enhancedAdapterMethods.setValue(this.hiddenInput_.value);
              } else if (this.menuElement_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
              /* strings */
              ].SELECTED_ITEM_SELECTOR)) {
                // If an element is selected, the select should set the initial selected text.
                var _enhancedAdapterMethods = this.getEnhancedSelectAdapterMethods_();

                _enhancedAdapterMethods.setValue(_enhancedAdapterMethods.getValue());
              }
            } // Initially sync floating label


            this.foundation_.handleChange(
            /* didChange */
            false);

            if (this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
            /* cssClasses */
            ].DISABLED) || this.nativeControl_ && this.nativeControl_.disabled) {
              this.disabled = true;
            }
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            var _this3 = this;

            var element = this.nativeControl_ ? this.nativeControl_ : this.selectedText_;
            element.removeEventListener('change', this.handleChange_);
            element.removeEventListener('focus', this.handleFocus_);
            element.removeEventListener('blur', this.handleBlur_);
            element.removeEventListener('keydown', this.handleKeydown_);
            ['mousedown', 'touchstart'].forEach(function (evtType) {
              element.removeEventListener(evtType, _this3.handleClick_);
            });

            if (this.menu_) {
              this.menu_.unlisten(__WEBPACK_IMPORTED_MODULE_11__material_menu_surface_constants__["e"
              /* strings */
              ].CLOSED_EVENT, this.handleMenuClosed_);
              this.menu_.unlisten(__WEBPACK_IMPORTED_MODULE_11__material_menu_surface_constants__["e"
              /* strings */
              ].OPENED_EVENT, this.handleMenuOpened_);
              this.menu_.unlisten(__WEBPACK_IMPORTED_MODULE_12__material_menu_constants__["b"
              /* strings */
              ].SELECTED_EVENT, this.handleMenuSelected_);
              this.menu_.destroy();
            }

            if (this.ripple) {
              this.ripple.destroy();
            }

            if (this.outline_) {
              this.outline_.destroy();
            }

            if (this.leadingIcon_) {
              this.leadingIcon_.destroy();
            }

            if (this.helperText_) {
              this.helperText_.destroy();
            }

            if (this.validationObserver_) {
              this.validationObserver_.disconnect();
            }

            _get(MDCSelect.prototype.__proto__ || Object.getPrototypeOf(MDCSelect.prototype), 'destroy', this).call(this);
          }
          /**
           * @return {!MDCSelectFoundation}
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            return new __WEBPACK_IMPORTED_MODULE_6__foundation__["a"
            /* default */
            ](
            /** @type {!MDCSelectAdapter} */
            _extends(this.nativeControl_ ? this.getNativeSelectAdapterMethods_() : this.getEnhancedSelectAdapterMethods_(), this.getCommonAdapterMethods_(), this.getOutlineAdapterMethods_(), this.getLabelAdapterMethods_()), this.getFoundationMap_());
          }
          /**
           * @return {!{
           *   getValue: function(): string,
           *   setValue: function(string): string,
           *   openMenu: function(): void,
           *   closeMenu: function(): void,
           *   isMenuOpen: function(): boolean,
           *   setSelectedIndex: function(number): void,
           *   setDisabled: function(boolean): void
           * }}
           * @private
           */

        }, {
          key: 'getNativeSelectAdapterMethods_',
          value: function getNativeSelectAdapterMethods_() {
            var _this4 = this;

            return {
              getValue: function getValue() {
                return _this4.nativeControl_.value;
              },
              setValue: function setValue(value) {
                return _this4.nativeControl_.value = value;
              },
              openMenu: function openMenu() {},
              closeMenu: function closeMenu() {},
              isMenuOpen: function isMenuOpen() {
                return false;
              },
              setSelectedIndex: function setSelectedIndex(index) {
                _this4.nativeControl_.selectedIndex = index;
              },
              setDisabled: function setDisabled(isDisabled) {
                return _this4.nativeControl_.disabled = isDisabled;
              },
              setValid: function setValid(isValid) {
                isValid ? _this4.root_.classList.remove(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                /* cssClasses */
                ].INVALID) : _this4.root_.classList.add(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                /* cssClasses */
                ].INVALID);
              },
              checkValidity: function checkValidity() {
                return _this4.nativeControl_.checkValidity();
              }
            };
          }
          /**
           * @return {!{
           *   getValue: function(): string,
           *   setValue: function(string): string,
           *   openMenu: function(): void,
           *   closeMenu: function(): void,
           *   isMenuOpen: function(): boolean,
           *   setSelectedIndex: function(number): void,
           *   setDisabled: function(boolean): void
           * }}
           * @private
           */

        }, {
          key: 'getEnhancedSelectAdapterMethods_',
          value: function getEnhancedSelectAdapterMethods_() {
            var _this5 = this;

            return {
              getValue: function getValue() {
                var listItem = _this5.menuElement_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
                /* strings */
                ].SELECTED_ITEM_SELECTOR);

                if (listItem && listItem.hasAttribute(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
                /* strings */
                ].ENHANCED_VALUE_ATTR)) {
                  return listItem.getAttribute(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
                  /* strings */
                  ].ENHANCED_VALUE_ATTR);
                }

                return '';
              },
              setValue: function setValue(value) {
                var element =
                /** @type {HTMLElement} */
                _this5.menuElement_.querySelector('[' + __WEBPACK_IMPORTED_MODULE_7__constants__["c"
                /* strings */
                ].ENHANCED_VALUE_ATTR + '="' + value + '"]');

                _this5.setEnhancedSelectedIndex_(element ? _this5.menu_.items.indexOf(element) : -1);
              },
              openMenu: function openMenu() {
                if (_this5.menu_ && !_this5.menu_.open) {
                  _this5.menu_.open = true;
                  _this5.menuOpened_ = true;

                  _this5.selectedText_.setAttribute('aria-expanded', 'true');
                }
              },
              closeMenu: function closeMenu() {
                if (_this5.menu_ && _this5.menu_.open) {
                  _this5.menu_.open = false;
                }
              },
              isMenuOpen: function isMenuOpen() {
                return _this5.menu_ && _this5.menuOpened_;
              },
              setSelectedIndex: function setSelectedIndex(index) {
                _this5.setEnhancedSelectedIndex_(index);
              },
              setDisabled: function setDisabled(isDisabled) {
                _this5.selectedText_.setAttribute('tabindex', isDisabled ? '-1' : '0');

                _this5.selectedText_.setAttribute('aria-disabled', isDisabled.toString());

                if (_this5.hiddenInput_) {
                  _this5.hiddenInput_.disabled = isDisabled;
                }
              },
              checkValidity: function checkValidity() {
                var classList = _this5.root_.classList;

                if (classList.contains(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                /* cssClasses */
                ].REQUIRED) && !classList.contains(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                /* cssClasses */
                ].DISABLED)) {
                  // See notes for required attribute under https://www.w3.org/TR/html52/sec-forms.html#the-select-element
                  // TL;DR: Invalid if no index is selected, or if the first index is selected and has an empty value.
                  return _this5.selectedIndex !== -1 && (_this5.selectedIndex !== 0 || _this5.value);
                } else {
                  return true;
                }
              },
              setValid: function setValid(isValid) {
                _this5.selectedText_.setAttribute('aria-invalid', (!isValid).toString());

                isValid ? _this5.root_.classList.remove(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                /* cssClasses */
                ].INVALID) : _this5.root_.classList.add(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                /* cssClasses */
                ].INVALID);
              }
            };
          }
          /**
           * @return {!{
           *   addClass: function(string): void,
           *   removeClass: function(string): void,
           *   hasClass: function(string): void,
           *   setRippleCenter: function(number): void,
           *   activateBottomLine: function(): void,
           *   deactivateBottomLine: function(): void,
           *   notifyChange: function(string): void
           * }}
           * @private
           */

        }, {
          key: 'getCommonAdapterMethods_',
          value: function getCommonAdapterMethods_() {
            var _this6 = this;

            return {
              addClass: function addClass(className) {
                return _this6.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this6.root_.classList.remove(className);
              },
              hasClass: function hasClass(className) {
                return _this6.root_.classList.contains(className);
              },
              setRippleCenter: function setRippleCenter(normalizedX) {
                return _this6.lineRipple_ && _this6.lineRipple_.setRippleCenter(normalizedX);
              },
              activateBottomLine: function activateBottomLine() {
                return _this6.lineRipple_ && _this6.lineRipple_.activate();
              },
              deactivateBottomLine: function deactivateBottomLine() {
                return _this6.lineRipple_ && _this6.lineRipple_.deactivate();
              },
              notifyChange: function notifyChange(value) {
                var index = _this6.selectedIndex;

                _this6.emit(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
                /* strings */
                ].CHANGE_EVENT, {
                  value: value,
                  index: index
                }, true
                /* shouldBubble  */
                );
              }
            };
          }
          /**
           * @return {!{
           *   hasOutline: function(): boolean,
           *   notchOutline: function(number, boolean): undefined,
           *   closeOutline: function(): undefined,
           * }}
           */

        }, {
          key: 'getOutlineAdapterMethods_',
          value: function getOutlineAdapterMethods_() {
            var _this7 = this;

            return {
              hasOutline: function hasOutline() {
                return !!_this7.outline_;
              },
              notchOutline: function notchOutline(labelWidth) {
                if (_this7.outline_) {
                  _this7.outline_.notch(labelWidth);
                }
              },
              closeOutline: function closeOutline() {
                if (_this7.outline_) {
                  _this7.outline_.closeNotch();
                }
              }
            };
          }
          /**
           * @return {!{
           *   floatLabel: function(boolean): undefined,
           *   getLabelWidth: function(): number,
           * }}
           */

        }, {
          key: 'getLabelAdapterMethods_',
          value: function getLabelAdapterMethods_() {
            var _this8 = this;

            return {
              floatLabel: function floatLabel(shouldFloat) {
                if (_this8.label_) {
                  _this8.label_.float(shouldFloat);
                }
              },
              getLabelWidth: function getLabelWidth() {
                return _this8.label_ ? _this8.label_.getWidth() : 0;
              }
            };
          }
          /**
           * Calculates where the line ripple should start based on the x coordinate within the component.
           * @param {!(MouseEvent|TouchEvent)} evt
           * @return {number} normalizedX
           */

        }, {
          key: 'getNormalizedXCoordinate_',
          value: function getNormalizedXCoordinate_(evt) {
            var targetClientRect = evt.target.getBoundingClientRect();
            var xCoordinate = evt.clientX;
            return xCoordinate - targetClientRect.left;
          }
          /**
           * Returns a map of all subcomponents to subfoundations.
           * @return {!FoundationMapType}
           */

        }, {
          key: 'getFoundationMap_',
          value: function getFoundationMap_() {
            return {
              leadingIcon: this.leadingIcon_ ? this.leadingIcon_.foundation : undefined,
              helperText: this.helperText_ ? this.helperText_.foundation : undefined
            };
          }
          /**
           * Sets the selected index of the enhanced menu.
           * @param {number} index
           * @private
           */

        }, {
          key: 'setEnhancedSelectedIndex_',
          value: function setEnhancedSelectedIndex_(index) {
            var selectedItem = this.menu_.items[index];
            this.selectedText_.textContent = selectedItem ? selectedItem.textContent.trim() : '';
            var previouslySelected = this.menuElement_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].SELECTED_ITEM_SELECTOR);

            if (previouslySelected) {
              previouslySelected.classList.remove(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
              /* cssClasses */
              ].SELECTED_ITEM_CLASS);
              previouslySelected.removeAttribute(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
              /* strings */
              ].ARIA_SELECTED_ATTR);
            }

            if (selectedItem) {
              selectedItem.classList.add(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
              /* cssClasses */
              ].SELECTED_ITEM_CLASS);
              selectedItem.setAttribute(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
              /* strings */
              ].ARIA_SELECTED_ATTR, 'true');
            } // Synchronize hidden input's value with data-value attribute of selected item.
            // This code path is also followed when setting value directly, so this covers all cases.


            if (this.hiddenInput_) {
              this.hiddenInput_.value = selectedItem ? selectedItem.getAttribute(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
              /* strings */
              ].ENHANCED_VALUE_ATTR) || '' : '';
            }

            this.layout();
          }
        }, {
          key: 'initialSyncRequiredState_',
          value: function initialSyncRequiredState_() {
            var element = this.nativeControl_ ? this.nativeControl_ : this.selectedText_;
            var isRequired = element.required || element.getAttribute('aria-required') === 'true' || this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
            /* cssClasses */
            ].REQUIRED);

            if (isRequired) {
              if (this.nativeControl_) {
                this.nativeControl_.required = true;
              } else {
                this.selectedText_.setAttribute('aria-required', 'true');
              }

              this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
              /* cssClasses */
              ].REQUIRED);
            }
          }
        }, {
          key: 'addMutationObserverForRequired_',
          value: function addMutationObserverForRequired_() {
            var _this9 = this;

            var observerHandler = function observerHandler(attributesList) {
              attributesList.some(function (attributeName) {
                if (VALIDATION_ATTR_WHITELIST.indexOf(attributeName) > -1) {
                  if (_this9.selectedText_) {
                    if (_this9.selectedText_.getAttribute('aria-required') === 'true') {
                      _this9.root_.classList.add(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                      /* cssClasses */
                      ].REQUIRED);
                    } else {
                      _this9.root_.classList.remove(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                      /* cssClasses */
                      ].REQUIRED);
                    }
                  } else {
                    if (_this9.nativeControl_.required) {
                      _this9.root_.classList.add(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                      /* cssClasses */
                      ].REQUIRED);
                    } else {
                      _this9.root_.classList.remove(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                      /* cssClasses */
                      ].REQUIRED);
                    }
                  }

                  return true;
                }
              });
            };

            var getAttributesList = function getAttributesList(mutationsList) {
              return mutationsList.map(function (mutation) {
                return mutation.attributeName;
              });
            };

            var observer = new MutationObserver(function (mutationsList) {
              return observerHandler(getAttributesList(mutationsList));
            });
            var element = this.nativeControl_ ? this.nativeControl_ : this.selectedText_;
            observer.observe(element, {
              attributes: true
            });
            this.validationObserver_ = observer;
          }
        }, {
          key: 'value',

          /**
           * @return {string} The value of the select.
           */
          get: function get() {
            return this.foundation_.getValue();
          }
          /**
           * @param {string} value The value to set on the select.
           */
          ,
          set: function set(value) {
            this.foundation_.setValue(value);
          }
          /**
           * @return {number} The selected index of the select.
           */

        }, {
          key: 'selectedIndex',
          get: function get() {
            var selectedIndex = void 0;

            if (this.menuElement_) {
              var selectedEl =
              /** @type {!HTMLElement} */
              this.menuElement_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
              /* strings */
              ].SELECTED_ITEM_SELECTOR);
              selectedIndex = this.menu_.items.indexOf(selectedEl);
            } else {
              selectedIndex = this.nativeControl_.selectedIndex;
            }

            return selectedIndex;
          }
          /**
           * @param {number} selectedIndex The index of the option to be set on the select.
           */
          ,
          set: function set(selectedIndex) {
            this.foundation_.setSelectedIndex(selectedIndex);
          }
          /**
           * @return {boolean} True if the select is disabled.
           */

        }, {
          key: 'disabled',
          get: function get() {
            return this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
            /* cssClasses */
            ].DISABLED) || (this.nativeControl_ ? this.nativeControl_.disabled : false);
          }
          /**
           * @param {boolean} disabled Sets the select disabled or enabled.
           */
          ,
          set: function set(disabled) {
            this.foundation_.setDisabled(disabled);
          }
          /**
           * Sets the aria label of the leading icon.
           * @param {string} label
           */

        }, {
          key: 'leadingIconAriaLabel',
          set: function set(label) {
            this.foundation_.setLeadingIconAriaLabel(label);
          }
          /**
           * Sets the text content of the leading icon.
           * @param {string} content
           */

        }, {
          key: 'leadingIconContent',
          set: function set(content) {
            this.foundation_.setLeadingIconContent(content);
          }
          /**
           * Sets the text content of the helper text.
           * @param {string} content
           */

        }, {
          key: 'helperTextContent',
          set: function set(content) {
            this.foundation_.setHelperTextContent(content);
          }
          /**
           * Sets the current invalid state of the select.
           * @param {boolean} isValid
           */

        }, {
          key: 'valid',
          set: function set(isValid) {
            this.foundation_.setValid(isValid);
          }
          /**
           * Checks if the select is in a valid state.
           * @return {boolean}
           */
          ,
          get: function get() {
            return this.foundation_.isValid();
          }
          /**
           * Sets the control to the required state.
           * @param {boolean} isRequired
           */

        }, {
          key: 'required',
          set: function set(isRequired) {
            if (this.nativeControl_) {
              this.nativeControl_.required = isRequired;
            } else {
              if (isRequired) {
                this.selectedText_.setAttribute('aria-required', isRequired.toString());
              } else {
                this.selectedText_.removeAttribute('aria-required');
              }
            }
          }
          /**
           * Returns whether the select is required.
           * @return {boolean}
           */
          ,
          get: function get() {
            if (this.nativeControl_) {
              return this.nativeControl_.required;
            } else {
              return this.selectedText_.getAttribute('aria-required') === 'true';
            }
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCSelect(root);
          }
        }]);

        return MDCSelect;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 132 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(72);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__icon_index__ = __webpack_require__(49);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__helper_text_index__ = __webpack_require__(50);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(75);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @extends {MDCFoundation<!MDCSelectAdapter>}
       * @final
       */


      var MDCSelectFoundation = function (_MDCFoundation) {
        _inherits(MDCSelectFoundation, _MDCFoundation);

        _createClass(MDCSelectFoundation, null, [{
          key: 'cssClasses',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return enum {number} */

        }, {
          key: 'numbers',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* numbers */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_4__constants__["c"
            /* strings */
            ];
          }
          /**
           * {@see MDCSelectAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCSelectAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCSelectAdapter} */
              {
                addClass: function addClass()
                /* className: string */
                {},
                removeClass: function removeClass()
                /* className: string */
                {},
                hasClass: function hasClass() {
                  return (
                    /* className: string */
                    false
                  );
                },
                activateBottomLine: function activateBottomLine() {},
                deactivateBottomLine: function deactivateBottomLine() {},
                setValue: function setValue() {},
                getValue: function getValue() {},
                floatLabel: function floatLabel()
                /* value: boolean */
                {},
                getLabelWidth: function getLabelWidth() {},
                hasOutline: function hasOutline() {
                  return false;
                },
                notchOutline: function notchOutline()
                /* labelWidth: number, */
                {},
                closeOutline: function closeOutline() {},
                openMenu: function openMenu() {},
                closeMenu: function closeMenu() {},
                isMenuOpen: function isMenuOpen() {},
                setSelectedIndex: function setSelectedIndex() {},
                setDisabled: function setDisabled() {},
                setRippleCenter: function setRippleCenter() {},
                notifyChange: function notifyChange() {},
                checkValidity: function checkValidity() {},
                setValid: function setValid() {}
              }
            );
          }
          /**
           * @param {!MDCSelectAdapter} adapter
           * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.
           */

        }]);

        function MDCSelectFoundation(adapter) {
          var foundationMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] :
          /** @type {!FoundationMapType} */
          {};

          _classCallCheck(this, MDCSelectFoundation);
          /** @type {!MDCSelectIconFoundation|undefined} */


          var _this = _possibleConstructorReturn(this, (MDCSelectFoundation.__proto__ || Object.getPrototypeOf(MDCSelectFoundation)).call(this, _extends(MDCSelectFoundation.defaultAdapter, adapter)));

          _this.leadingIcon_ = foundationMap.leadingIcon;
          /** @type {!MDCSelectHelperTextFoundation|undefined} */

          _this.helperText_ = foundationMap.helperText;
          return _this;
        }

        _createClass(MDCSelectFoundation, [{
          key: 'setSelectedIndex',
          value: function setSelectedIndex(index) {
            this.adapter_.setSelectedIndex(index);
            this.adapter_.closeMenu();
            var didChange = true;
            this.handleChange(didChange);
          }
        }, {
          key: 'setValue',
          value: function setValue(value) {
            this.adapter_.setValue(value);
            var didChange = true;
            this.handleChange(didChange);
          }
        }, {
          key: 'getValue',
          value: function getValue() {
            return this.adapter_.getValue();
          }
        }, {
          key: 'setDisabled',
          value: function setDisabled(isDisabled) {
            isDisabled ? this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].DISABLED) : this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].DISABLED);
            this.adapter_.setDisabled(isDisabled);
            this.adapter_.closeMenu();

            if (this.leadingIcon_) {
              this.leadingIcon_.setDisabled(isDisabled);
            }
          }
          /**
           * @param {string} content Sets the content of the helper text.
           */

        }, {
          key: 'setHelperTextContent',
          value: function setHelperTextContent(content) {
            if (this.helperText_) {
              this.helperText_.setContent(content);
            }
          }
        }, {
          key: 'layout',
          value: function layout() {
            var openNotch = this.getValue().length > 0;
            this.notchOutline(openNotch);
          }
          /**
           * Handles value changes, via change event or programmatic updates.
           */

        }, {
          key: 'handleChange',
          value: function handleChange() {
            var didChange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
            var value = this.getValue();
            var optionHasValue = value.length > 0;
            var isRequired = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].REQUIRED);
            this.notchOutline(optionHasValue);

            if (!this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].FOCUSED)) {
              this.adapter_.floatLabel(optionHasValue);
            }

            if (didChange) {
              this.adapter_.notifyChange(value);

              if (isRequired) {
                this.setValid(this.isValid());

                if (this.helperText_) {
                  this.helperText_.setValidity(this.isValid());
                }
              }
            }
          }
          /**
           * Handles focus events from select element.
           */

        }, {
          key: 'handleFocus',
          value: function handleFocus() {
            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].FOCUSED);
            this.adapter_.floatLabel(true);
            this.notchOutline(true);
            this.adapter_.activateBottomLine();

            if (this.helperText_) {
              this.helperText_.showToScreenReader();
            }
          }
          /**
           * Handles blur events from select element.
           */

        }, {
          key: 'handleBlur',
          value: function handleBlur() {
            if (this.adapter_.isMenuOpen()) return;
            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].FOCUSED);
            this.handleChange(false);
            this.adapter_.deactivateBottomLine();
            var isRequired = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].REQUIRED);

            if (isRequired) {
              this.setValid(this.isValid());

              if (this.helperText_) {
                this.helperText_.setValidity(this.isValid());
              }
            }
          }
        }, {
          key: 'handleClick',
          value: function handleClick(normalizedX) {
            if (this.adapter_.isMenuOpen()) return;
            this.adapter_.setRippleCenter(normalizedX);
            this.adapter_.openMenu();
          }
        }, {
          key: 'handleKeydown',
          value: function handleKeydown(event) {
            if (this.adapter_.isMenuOpen()) return;
            var isEnter = event.key === 'Enter' || event.keyCode === 13;
            var isSpace = event.key === 'Space' || event.keyCode === 32;
            var arrowUp = event.key === 'ArrowUp' || event.keyCode === 38;
            var arrowDown = event.key === 'ArrowDown' || event.keyCode === 40;

            if (this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].FOCUSED) && (isEnter || isSpace || arrowUp || arrowDown)) {
              this.adapter_.openMenu();
              event.preventDefault();
            }
          }
          /**
           * Opens/closes the notched outline.
           * @param {boolean} openNotch
           */

        }, {
          key: 'notchOutline',
          value: function notchOutline(openNotch) {
            if (!this.adapter_.hasOutline()) {
              return;
            }

            var isFocused = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].FOCUSED);

            if (openNotch) {
              var labelScale = __WEBPACK_IMPORTED_MODULE_4__constants__["b"
              /* numbers */
              ].LABEL_SCALE;
              var labelWidth = this.adapter_.getLabelWidth() * labelScale;
              this.adapter_.notchOutline(labelWidth);
            } else if (!isFocused) {
              this.adapter_.closeOutline();
            }
          }
          /**
           * Sets the aria label of the leading icon.
           * @param {string} label
           */

        }, {
          key: 'setLeadingIconAriaLabel',
          value: function setLeadingIconAriaLabel(label) {
            if (this.leadingIcon_) {
              this.leadingIcon_.setAriaLabel(label);
            }
          }
          /**
           * Sets the text content of the leading icon.
           * @param {string} content
           */

        }, {
          key: 'setLeadingIconContent',
          value: function setLeadingIconContent(content) {
            if (this.leadingIcon_) {
              this.leadingIcon_.setContent(content);
            }
          }
        }, {
          key: 'setValid',
          value: function setValid(isValid) {
            this.adapter_.setValid(isValid);
          }
        }, {
          key: 'isValid',
          value: function isValid() {
            return this.adapter_.checkValidity();
          }
        }]);

        return MDCSelectFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCSelectFoundation;
      /***/
    },
    /* 133 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(73);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(134);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCFoundation<!MDCSelectIconAdapter>}
       * @final
       */


      var MDCSelectIconFoundation = function (_MDCFoundation) {
        _inherits(MDCSelectIconFoundation, _MDCFoundation);

        _createClass(MDCSelectIconFoundation, null, [{
          key: 'strings',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* strings */
            ];
          }
          /**
           * {@see MDCSelectIconAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCSelectIconAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCSelectIconAdapter} */
              {
                getAttr: function getAttr() {},
                setAttr: function setAttr() {},
                removeAttr: function removeAttr() {},
                setContent: function setContent() {},
                registerInteractionHandler: function registerInteractionHandler() {},
                deregisterInteractionHandler: function deregisterInteractionHandler() {},
                notifyIconAction: function notifyIconAction() {}
              }
            );
          }
          /**
           * @param {!MDCSelectIconAdapter} adapter
           */

        }]);

        function MDCSelectIconFoundation(adapter) {
          _classCallCheck(this, MDCSelectIconFoundation);
          /** @private {string?} */


          var _this = _possibleConstructorReturn(this, (MDCSelectIconFoundation.__proto__ || Object.getPrototypeOf(MDCSelectIconFoundation)).call(this, _extends(MDCSelectIconFoundation.defaultAdapter, adapter)));

          _this.savedTabIndex_ = null;
          /** @private {function(!Event): undefined} */

          _this.interactionHandler_ = function (evt) {
            return _this.handleInteraction(evt);
          };

          return _this;
        }

        _createClass(MDCSelectIconFoundation, [{
          key: 'init',
          value: function init() {
            var _this2 = this;

            this.savedTabIndex_ = this.adapter_.getAttr('tabindex');
            ['click', 'keydown'].forEach(function (evtType) {
              _this2.adapter_.registerInteractionHandler(evtType, _this2.interactionHandler_);
            });
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            var _this3 = this;

            ['click', 'keydown'].forEach(function (evtType) {
              _this3.adapter_.deregisterInteractionHandler(evtType, _this3.interactionHandler_);
            });
          }
          /** @param {boolean} disabled */

        }, {
          key: 'setDisabled',
          value: function setDisabled(disabled) {
            if (!this.savedTabIndex_) {
              return;
            }

            if (disabled) {
              this.adapter_.setAttr('tabindex', '-1');
              this.adapter_.removeAttr('role');
            } else {
              this.adapter_.setAttr('tabindex', this.savedTabIndex_);
              this.adapter_.setAttr('role', __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* strings */
              ].ICON_ROLE);
            }
          }
          /** @param {string} label */

        }, {
          key: 'setAriaLabel',
          value: function setAriaLabel(label) {
            this.adapter_.setAttr('aria-label', label);
          }
          /** @param {string} content */

        }, {
          key: 'setContent',
          value: function setContent(content) {
            this.adapter_.setContent(content);
          }
          /**
           * Handles an interaction event
           * @param {!Event} evt
           */

        }, {
          key: 'handleInteraction',
          value: function handleInteraction(evt) {
            if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {
              this.adapter_.notifyIconAction();
            }
          }
        }]);

        return MDCSelectIconFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCSelectIconFoundation;
      /***/
    },
    /* 134 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var strings = {
        ICON_EVENT: 'MDCSelect:icon',
        ICON_ROLE: 'button'
      };
      /***/
    },
    /* 135 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(74);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(136);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCFoundation<!MDCSelectHelperTextAdapter>}
       * @final
       */


      var MDCSelectHelperTextFoundation = function (_MDCFoundation) {
        _inherits(MDCSelectHelperTextFoundation, _MDCFoundation);

        _createClass(MDCSelectHelperTextFoundation, null, [{
          key: 'cssClasses',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ];
          }
          /**
           * {@see MDCSelectHelperTextAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCSelectHelperTextAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCSelectHelperTextAdapter} */
              {
                addClass: function addClass() {},
                removeClass: function removeClass() {},
                hasClass: function hasClass() {},
                setAttr: function setAttr() {},
                removeAttr: function removeAttr() {},
                setContent: function setContent() {}
              }
            );
          }
          /**
           * @param {!MDCSelectHelperTextAdapter} adapter
           */

        }]);

        function MDCSelectHelperTextFoundation(adapter) {
          _classCallCheck(this, MDCSelectHelperTextFoundation);

          return _possibleConstructorReturn(this, (MDCSelectHelperTextFoundation.__proto__ || Object.getPrototypeOf(MDCSelectHelperTextFoundation)).call(this, _extends(MDCSelectHelperTextFoundation.defaultAdapter, adapter)));
        }
        /**
         * Sets the content of the helper text field.
         * @param {string} content
         */


        _createClass(MDCSelectHelperTextFoundation, [{
          key: 'setContent',
          value: function setContent(content) {
            this.adapter_.setContent(content);
          }
          /** @param {boolean} isPersistent Sets the persistency of the helper text. */

        }, {
          key: 'setPersistent',
          value: function setPersistent(isPersistent) {
            if (isPersistent) {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].HELPER_TEXT_PERSISTENT);
            } else {
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].HELPER_TEXT_PERSISTENT);
            }
          }
          /**
           * @param {boolean} isValidation True to make the helper text act as an
           *   error validation message.
           */

        }, {
          key: 'setValidation',
          value: function setValidation(isValidation) {
            if (isValidation) {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].HELPER_TEXT_VALIDATION_MSG);
            } else {
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].HELPER_TEXT_VALIDATION_MSG);
            }
          }
          /** Makes the helper text visible to the screen reader. */

        }, {
          key: 'showToScreenReader',
          value: function showToScreenReader() {
            this.adapter_.removeAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_HIDDEN);
          }
          /**
           * Sets the validity of the helper text based on the select validity.
           * @param {boolean} selectIsValid
           */

        }, {
          key: 'setValidity',
          value: function setValidity(selectIsValid) {
            var helperTextIsPersistent = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].HELPER_TEXT_PERSISTENT);
            var helperTextIsValidationMsg = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].HELPER_TEXT_VALIDATION_MSG);
            var validationMsgNeedsDisplay = helperTextIsValidationMsg && !selectIsValid;

            if (validationMsgNeedsDisplay) {
              this.adapter_.setAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ROLE, 'alert');
            } else {
              this.adapter_.removeAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ROLE);
            }

            if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {
              this.hide_();
            }
          }
          /**
           * Hides the help text from screen readers.
           * @private
           */

        }, {
          key: 'hide_',
          value: function hide_() {
            this.adapter_.setAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_HIDDEN, 'true');
          }
        }]);

        return MDCSelectHelperTextFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCSelectHelperTextFoundation;
      /***/
    },
    /* 136 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var strings = {
        ARIA_HIDDEN: 'aria-hidden',
        ROLE: 'role'
      };
      /** @enum {string} */

      var cssClasses = {
        HELPER_TEXT_PERSISTENT: 'mdc-select-helper-text--persistent',
        HELPER_TEXT_VALIDATION_MSG: 'mdc-select-helper-text--validation-msg'
      };
      /***/
    }])
  );
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/@material/snackbar/dist/mdc.snackbar.js":
/*!**************************************************************!*\
  !*** ./node_modules/@material/snackbar/dist/mdc.snackbar.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 Material Components for the Web
 Copyright (c) 2019 Google Inc.
 License: MIT
*/
(function webpackUniversalModuleDefinition(root, factory) {
  if (( false ? undefined : _typeof(exports)) === 'object' && ( false ? undefined : _typeof(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}
})(this, function () {
  return (
    /******/
    function (modules) {
      // webpackBootstrap

      /******/
      // The module cache

      /******/
      var installedModules = {};
      /******/

      /******/
      // The require function

      /******/

      function __webpack_require__(moduleId) {
        /******/

        /******/
        // Check if module is in cache

        /******/
        if (installedModules[moduleId]) {
          /******/
          return installedModules[moduleId].exports;
          /******/
        }
        /******/
        // Create a new module (and put it into the cache)

        /******/


        var module = installedModules[moduleId] = {
          /******/
          i: moduleId,

          /******/
          l: false,

          /******/
          exports: {}
          /******/

        };
        /******/

        /******/
        // Execute the module function

        /******/

        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/

        /******/
        // Flag the module as loaded

        /******/

        module.l = true;
        /******/

        /******/
        // Return the exports of the module

        /******/

        return module.exports;
        /******/
      }
      /******/

      /******/

      /******/
      // expose the modules object (__webpack_modules__)

      /******/


      __webpack_require__.m = modules;
      /******/

      /******/
      // expose the module cache

      /******/

      __webpack_require__.c = installedModules;
      /******/

      /******/
      // define getter function for harmony exports

      /******/

      __webpack_require__.d = function (exports, name, getter) {
        /******/
        if (!__webpack_require__.o(exports, name)) {
          /******/
          Object.defineProperty(exports, name, {
            /******/
            configurable: false,

            /******/
            enumerable: true,

            /******/
            get: getter
            /******/

          });
          /******/
        }
        /******/

      };
      /******/

      /******/
      // getDefaultExport function for compatibility with non-harmony modules

      /******/


      __webpack_require__.n = function (module) {
        /******/
        var getter = module && module.__esModule ?
        /******/
        function getDefault() {
          return module['default'];
        } :
        /******/
        function getModuleExports() {
          return module;
        };
        /******/

        __webpack_require__.d(getter, 'a', getter);
        /******/


        return getter;
        /******/
      };
      /******/

      /******/
      // Object.prototype.hasOwnProperty.call

      /******/


      __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      /******/

      /******/
      // __webpack_public_path__

      /******/


      __webpack_require__.p = "";
      /******/

      /******/
      // Load entry module and return exports

      /******/

      return __webpack_require__(__webpack_require__.s = 139);
      /******/
    }(
    /************************************************************************/

    /******/
    {
      /***/
      0:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @template A
         */


        var MDCFoundation = function () {
          _createClass(MDCFoundation, null, [{
            key: "cssClasses",

            /** @return enum{cssClasses} */
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports every
              // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}
              return {};
            }
            /** @return enum{strings} */

          }, {
            key: "strings",
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports all
              // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}
              return {};
            }
            /** @return enum{numbers} */

          }, {
            key: "numbers",
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports all
              // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}
              return {};
            }
            /** @return {!Object} */

          }, {
            key: "defaultAdapter",
            get: function get() {
              // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient
              // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter
              // validation.
              return {};
            }
            /**
             * @param {A=} adapter
             */

          }]);

          function MDCFoundation() {
            var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

            _classCallCheck(this, MDCFoundation);
            /** @protected {!A} */


            this.adapter_ = adapter;
          }

          _createClass(MDCFoundation, [{
            key: "init",
            value: function init() {// Subclasses should override this method to perform initialization routines (registering events, etc.)
            }
          }, {
            key: "destroy",
            value: function destroy() {// Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)
            }
          }]);

          return MDCFoundation;
        }();
        /* harmony default export */


        __webpack_exports__["a"] = MDCFoundation;
        /***/
      },

      /***/
      1:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0);

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @template F
         */


        var MDCComponent = function () {
          _createClass(MDCComponent, null, [{
            key: 'attachTo',

            /**
             * @param {!Element} root
             * @return {!MDCComponent}
             */
            value: function attachTo(root) {
              // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and
              // returns an instantiated component with its root set to that element. Also note that in the cases of
              // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized
              // from getDefaultFoundation().
              return new MDCComponent(root, new __WEBPACK_IMPORTED_MODULE_0__foundation__["a"
              /* default */
              ]());
            }
            /**
             * @param {!Element} root
             * @param {F=} foundation
             * @param {...?} args
             */

          }]);

          function MDCComponent(root) {
            var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

            _classCallCheck(this, MDCComponent);
            /** @protected {!Element} */


            this.root_ = root;

            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              args[_key - 2] = arguments[_key];
            }

            this.initialize.apply(this, args); // Note that we initialize foundation here and not within the constructor's default param so that
            // this.root_ is defined and can be used within the foundation class.

            /** @protected {!F} */

            this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;
            this.foundation_.init();
            this.initialSyncWithDOM();
          }

          _createClass(MDCComponent, [{
            key: 'initialize',
            value: function initialize()
            /* ...args */
            {} // Subclasses can override this to do any additional setup work that would be considered part of a
            // "constructor". Essentially, it is a hook into the parent constructor before the foundation is
            // initialized. Any additional arguments besides root and foundation will be passed in here.

            /**
             * @return {!F} foundation
             */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              // Subclasses must override this method to return a properly configured foundation class for the
              // component.
              throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');
            }
          }, {
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {// Subclasses should override this method if they need to perform work to synchronize with a host DOM
              // object. An example of this would be a form control wrapper that needs to synchronize its internal state
              // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM
              // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.
            }
          }, {
            key: 'destroy',
            value: function destroy() {
              // Subclasses may implement this method to release any resources / deregister any listeners they have
              // attached. An example of this might be deregistering a resize event from the window object.
              this.foundation_.destroy();
            }
            /**
             * Wrapper method to add an event listener to the component's root element. This is most useful when
             * listening for custom events.
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: 'listen',
            value: function listen(evtType, handler) {
              this.root_.addEventListener(evtType, handler);
            }
            /**
             * Wrapper method to remove an event listener to the component's root element. This is most useful when
             * unlistening for custom events.
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: 'unlisten',
            value: function unlisten(evtType, handler) {
              this.root_.removeEventListener(evtType, handler);
            }
            /**
             * Fires a cross-browser-compatible custom event from the component root of the given type,
             * with the given data.
             * @param {string} evtType
             * @param {!Object} evtData
             * @param {boolean=} shouldBubble
             */

          }, {
            key: 'emit',
            value: function emit(evtType, evtData) {
              var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
              var evt = void 0;

              if (typeof CustomEvent === 'function') {
                evt = new CustomEvent(evtType, {
                  detail: evtData,
                  bubbles: shouldBubble
                });
              } else {
                evt = document.createEvent('CustomEvent');
                evt.initCustomEvent(evtType, shouldBubble, false, evtData);
              }

              this.root_.dispatchEvent(evt);
            }
          }]);

          return MDCComponent;
        }();
        /* harmony default export */


        __webpack_exports__["a"] = MDCComponent;
        /***/
      },

      /***/
      139:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "MDCSnackbar", function () {
          return MDCSnackbar;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(140);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(51);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(142);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_4__material_dom_ponyfill__ = __webpack_require__(8);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCSnackbarFoundation", function () {
          return __WEBPACK_IMPORTED_MODULE_1__foundation__["a"];
        });
        /* harmony reexport (module object) */


        __webpack_require__.d(__webpack_exports__, "util", function () {
          return __WEBPACK_IMPORTED_MODULE_3__util__;
        });

        var _get = function get(object, property, receiver) {
          if (object === null) object = Function.prototype;
          var desc = Object.getOwnPropertyDescriptor(object, property);

          if (desc === undefined) {
            var parent = Object.getPrototypeOf(object);

            if (parent === null) {
              return undefined;
            } else {
              return get(parent, property, receiver);
            }
          } else if ("value" in desc) {
            return desc.value;
          } else {
            var getter = desc.get;

            if (getter === undefined) {
              return undefined;
            }

            return getter.call(receiver);
          }
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2018 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */


        var SURFACE_SELECTOR = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
        /* strings */
        ].SURFACE_SELECTOR,
            LABEL_SELECTOR = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
        /* strings */
        ].LABEL_SELECTOR,
            ACTION_SELECTOR = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
        /* strings */
        ].ACTION_SELECTOR,
            DISMISS_SELECTOR = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
        /* strings */
        ].DISMISS_SELECTOR,
            OPENING_EVENT = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
        /* strings */
        ].OPENING_EVENT,
            OPENED_EVENT = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
        /* strings */
        ].OPENED_EVENT,
            CLOSING_EVENT = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
        /* strings */
        ].CLOSING_EVENT,
            CLOSED_EVENT = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
        /* strings */
        ].CLOSED_EVENT;

        var MDCSnackbar = function (_MDCComponent) {
          _inherits(MDCSnackbar, _MDCComponent);

          _createClass(MDCSnackbar, null, [{
            key: 'attachTo',
            value: function attachTo(root) {
              return new MDCSnackbar(root);
            }
          }]);

          function MDCSnackbar() {
            var _ref;

            _classCallCheck(this, MDCSnackbar);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            /** @type {!HTMLElement} */


            var _this = _possibleConstructorReturn(this, (_ref = MDCSnackbar.__proto__ || Object.getPrototypeOf(MDCSnackbar)).call.apply(_ref, [this].concat(args)));

            _this.surfaceEl_;
            /** @type {!HTMLElement} */

            _this.labelEl_;
            /** @type {!HTMLElement} */

            _this.actionEl_;
            /** @type {function(!HTMLElement, !HTMLElement=): void} */

            _this.announce_;
            /** @private {!Function} */

            _this.handleKeyDown_;
            /** @private {!Function} */

            _this.handleSurfaceClick_;
            return _this;
          }
          /**
           * @param {function(): function(!HTMLElement, !HTMLElement=):void} announceFactory
           */


          _createClass(MDCSnackbar, [{
            key: 'initialize',
            value: function initialize() {
              var announceFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {
                return __WEBPACK_IMPORTED_MODULE_3__util__["announce"];
              };
              this.announce_ = announceFactory();
            }
          }, {
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {
              var _this2 = this;

              this.surfaceEl_ =
              /** @type {!HTMLElement} */
              this.root_.querySelector(SURFACE_SELECTOR);
              this.labelEl_ =
              /** @type {!HTMLElement} */
              this.root_.querySelector(LABEL_SELECTOR);
              this.actionEl_ =
              /** @type {!HTMLElement} */
              this.root_.querySelector(ACTION_SELECTOR);

              this.handleKeyDown_ = function (evt) {
                return _this2.foundation_.handleKeyDown(evt);
              };

              this.handleSurfaceClick_ = function (evt) {
                if (_this2.isActionButton_(evt.target)) {
                  _this2.foundation_.handleActionButtonClick(evt);
                } else if (_this2.isActionIcon_(evt.target)) {
                  _this2.foundation_.handleActionIconClick(evt);
                }
              };

              this.registerKeyDownHandler_(this.handleKeyDown_);
              this.registerSurfaceClickHandler_(this.handleSurfaceClick_);
            }
          }, {
            key: 'destroy',
            value: function destroy() {
              _get(MDCSnackbar.prototype.__proto__ || Object.getPrototypeOf(MDCSnackbar.prototype), 'destroy', this).call(this);

              this.deregisterKeyDownHandler_(this.handleKeyDown_);
              this.deregisterSurfaceClickHandler_(this.handleSurfaceClick_);
            }
          }, {
            key: 'open',
            value: function open() {
              this.foundation_.open();
            }
            /**
             * @param {string=} reason Why the snackbar was closed. Value will be passed to CLOSING_EVENT and CLOSED_EVENT via the
             *     `event.detail.reason` property. Standard values are REASON_ACTION and REASON_DISMISS, but custom
             *     client-specific values may also be used if desired.
             */

          }, {
            key: 'close',
            value: function close() {
              var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
              this.foundation_.close(reason);
            }
            /**
             * @return {!MDCSnackbarFoundation}
             */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              var _this3 = this;
              /* eslint brace-style: "off" */


              return new __WEBPACK_IMPORTED_MODULE_1__foundation__["a"
              /* default */
              ]({
                addClass: function addClass(className) {
                  return _this3.root_.classList.add(className);
                },
                removeClass: function removeClass(className) {
                  return _this3.root_.classList.remove(className);
                },
                announce: function announce() {
                  return _this3.announce_(_this3.labelEl_);
                },
                notifyOpening: function notifyOpening() {
                  return _this3.emit(OPENING_EVENT, {});
                },
                notifyOpened: function notifyOpened() {
                  return _this3.emit(OPENED_EVENT, {});
                },
                notifyClosing: function notifyClosing(reason) {
                  return _this3.emit(CLOSING_EVENT, reason ? {
                    reason: reason
                  } : {});
                },
                notifyClosed: function notifyClosed(reason) {
                  return _this3.emit(CLOSED_EVENT, reason ? {
                    reason: reason
                  } : {});
                }
              });
            }
            /**
             * @return {number}
             */

          }, {
            key: 'registerKeyDownHandler_',

            /**
             * @param {!Function} handler
             * @private
             */
            value: function registerKeyDownHandler_(handler) {
              this.listen('keydown', handler);
            }
            /**
             * @param {!Function} handler
             * @private
             */

          }, {
            key: 'deregisterKeyDownHandler_',
            value: function deregisterKeyDownHandler_(handler) {
              this.unlisten('keydown', handler);
            }
            /**
             * @param {!Function} handler
             * @private
             */

          }, {
            key: 'registerSurfaceClickHandler_',
            value: function registerSurfaceClickHandler_(handler) {
              this.surfaceEl_.addEventListener('click', handler);
            }
            /**
             * @param {!Function} handler
             * @private
             */

          }, {
            key: 'deregisterSurfaceClickHandler_',
            value: function deregisterSurfaceClickHandler_(handler) {
              this.surfaceEl_.removeEventListener('click', handler);
            }
            /**
             * @param {!Element} target
             * @return {boolean}
             * @private
             */

          }, {
            key: 'isActionButton_',
            value: function isActionButton_(target) {
              return Boolean(__WEBPACK_IMPORTED_MODULE_4__material_dom_ponyfill__["closest"](target, ACTION_SELECTOR));
            }
            /**
             * @param {!Element} target
             * @return {boolean}
             * @private
             */

          }, {
            key: 'isActionIcon_',
            value: function isActionIcon_(target) {
              return Boolean(__WEBPACK_IMPORTED_MODULE_4__material_dom_ponyfill__["closest"](target, DISMISS_SELECTOR));
            }
          }, {
            key: 'timeoutMs',
            get: function get() {
              return this.foundation_.getTimeoutMs();
            }
            /**
             * @param {number} timeoutMs
             */
            ,
            set: function set(timeoutMs) {
              this.foundation_.setTimeoutMs(timeoutMs);
            }
            /**
             * @return {boolean}
             */

          }, {
            key: 'closeOnEscape',
            get: function get() {
              return this.foundation_.getCloseOnEscape();
            }
            /**
             * @param {boolean} closeOnEscape
             */
            ,
            set: function set(closeOnEscape) {
              this.foundation_.setCloseOnEscape(closeOnEscape);
            }
            /**
             * @return {boolean}
             */

          }, {
            key: 'isOpen',
            get: function get() {
              return this.foundation_.isOpen();
            }
            /**
             * @return {string}
             */

          }, {
            key: 'labelText',
            get: function get() {
              return this.labelEl_.textContent;
            }
            /**
             * @param {string} labelText
             */
            ,
            set: function set(labelText) {
              this.labelEl_.textContent = labelText;
            }
            /**
             * @return {string}
             */

          }, {
            key: 'actionButtonText',
            get: function get() {
              return this.actionEl_.textContent;
            }
            /**
             * @param {string} actionButtonText
             */
            ,
            set: function set(actionButtonText) {
              this.actionEl_.textContent = actionButtonText;
            }
          }]);

          return MDCSnackbar;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
        /* default */
        ]);
        /***/

      },

      /***/
      140:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(141);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(51);

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2018 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint no-unused-vars: ["error", {"argsIgnorePattern": "evt", "varsIgnorePattern": "Adapter$"}] */


        var OPENING = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
        /* cssClasses */
        ].OPENING,
            OPEN = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
        /* cssClasses */
        ].OPEN,
            CLOSING = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
        /* cssClasses */
        ].CLOSING;
        var REASON_ACTION = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
        /* strings */
        ].REASON_ACTION,
            REASON_DISMISS = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
        /* strings */
        ].REASON_DISMISS;

        var MDCSnackbarFoundation = function (_MDCFoundation) {
          _inherits(MDCSnackbarFoundation, _MDCFoundation);

          _createClass(MDCSnackbarFoundation, null, [{
            key: 'cssClasses',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ];
            }
          }, {
            key: 'strings',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["c"
              /* strings */
              ];
            }
          }, {
            key: 'numbers',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ];
            }
            /**
             * @return {!MDCSnackbarAdapter}
             */

          }, {
            key: 'defaultAdapter',
            get: function get() {
              return (
                /** @type {!MDCSnackbarAdapter} */
                {
                  addClass: function addClass()
                  /* className: string */
                  {},
                  removeClass: function removeClass()
                  /* className: string */
                  {},
                  announce: function announce() {},
                  notifyOpening: function notifyOpening() {},
                  notifyOpened: function notifyOpened() {},
                  notifyClosing: function notifyClosing()
                  /* reason: string */
                  {},
                  notifyClosed: function notifyClosed()
                  /* reason: string */
                  {}
                }
              );
            }
            /**
             * @param {!MDCSnackbarAdapter=} adapter
             */

          }]);

          function MDCSnackbarFoundation(adapter) {
            _classCallCheck(this, MDCSnackbarFoundation);
            /** @private {boolean} */


            var _this = _possibleConstructorReturn(this, (MDCSnackbarFoundation.__proto__ || Object.getPrototypeOf(MDCSnackbarFoundation)).call(this, _extends(MDCSnackbarFoundation.defaultAdapter, adapter)));

            _this.isOpen_ = false;
            /** @private {number} */

            _this.animationFrame_ = 0;
            /** @private {number} */

            _this.animationTimer_ = 0;
            /** @private {number} */

            _this.autoDismissTimer_ = 0;
            /** @private {number} */

            _this.autoDismissTimeoutMs_ = __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* numbers */
            ].DEFAULT_AUTO_DISMISS_TIMEOUT_MS;
            /** @private {boolean} */

            _this.closeOnEscape_ = true;
            return _this;
          }

          _createClass(MDCSnackbarFoundation, [{
            key: 'destroy',
            value: function destroy() {
              this.clearAutoDismissTimer_();
              cancelAnimationFrame(this.animationFrame_);
              this.animationFrame_ = 0;
              clearTimeout(this.animationTimer_);
              this.animationTimer_ = 0;
              this.adapter_.removeClass(OPENING);
              this.adapter_.removeClass(OPEN);
              this.adapter_.removeClass(CLOSING);
            }
          }, {
            key: 'open',
            value: function open() {
              var _this2 = this;

              this.clearAutoDismissTimer_();
              this.isOpen_ = true;
              this.adapter_.notifyOpening();
              this.adapter_.removeClass(CLOSING);
              this.adapter_.addClass(OPENING);
              this.adapter_.announce(); // Wait a frame once display is no longer "none", to establish basis for animation

              this.runNextAnimationFrame_(function () {
                _this2.adapter_.addClass(OPEN);

                _this2.animationTimer_ = setTimeout(function () {
                  _this2.handleAnimationTimerEnd_();

                  _this2.adapter_.notifyOpened();

                  _this2.autoDismissTimer_ = setTimeout(function () {
                    _this2.close(REASON_DISMISS);
                  }, _this2.getTimeoutMs());
                }, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
                /* numbers */
                ].SNACKBAR_ANIMATION_OPEN_TIME_MS);
              });
            }
            /**
             * @param {string=} reason Why the snackbar was closed. Value will be passed to CLOSING_EVENT and CLOSED_EVENT via the
             *     `event.detail.reason` property. Standard values are REASON_ACTION and REASON_DISMISS, but custom
             *     client-specific values may also be used if desired.
             */

          }, {
            key: 'close',
            value: function close() {
              var _this3 = this;

              var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

              if (!this.isOpen_) {
                // Avoid redundant close calls (and events), e.g. repeated interactions as the snackbar is animating closed
                return;
              }

              cancelAnimationFrame(this.animationFrame_);
              this.animationFrame_ = 0;
              this.clearAutoDismissTimer_();
              this.isOpen_ = false;
              this.adapter_.notifyClosing(reason);
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].CLOSING);
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].OPEN);
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].OPENING);
              clearTimeout(this.animationTimer_);
              this.animationTimer_ = setTimeout(function () {
                _this3.handleAnimationTimerEnd_();

                _this3.adapter_.notifyClosed(reason);
              }, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ].SNACKBAR_ANIMATION_CLOSE_TIME_MS);
            }
            /**
             * @return {boolean}
             */

          }, {
            key: 'isOpen',
            value: function isOpen() {
              return this.isOpen_;
            }
            /**
             * @return {number}
             */

          }, {
            key: 'getTimeoutMs',
            value: function getTimeoutMs() {
              return this.autoDismissTimeoutMs_;
            }
            /**
             * @param {number} timeoutMs
             */

          }, {
            key: 'setTimeoutMs',
            value: function setTimeoutMs(timeoutMs) {
              // Use shorter variable names to make the code more readable
              var minValue = __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ].MIN_AUTO_DISMISS_TIMEOUT_MS;
              var maxValue = __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ].MAX_AUTO_DISMISS_TIMEOUT_MS;

              if (timeoutMs <= maxValue && timeoutMs >= minValue) {
                this.autoDismissTimeoutMs_ = timeoutMs;
              } else {
                throw new Error('timeoutMs must be an integer in the range ' + minValue + "\u2013" + maxValue + ', but got \'' + timeoutMs + '\'');
              }
            }
            /**
             * @return {boolean}
             */

          }, {
            key: 'getCloseOnEscape',
            value: function getCloseOnEscape() {
              return this.closeOnEscape_;
            }
            /**
             * @param {boolean} closeOnEscape
             */

          }, {
            key: 'setCloseOnEscape',
            value: function setCloseOnEscape(closeOnEscape) {
              this.closeOnEscape_ = closeOnEscape;
            }
            /**
             * @param {!KeyboardEvent} evt
             */

          }, {
            key: 'handleKeyDown',
            value: function handleKeyDown(evt) {
              if (this.getCloseOnEscape() && (evt.key === 'Escape' || evt.keyCode === 27)) {
                this.close(REASON_DISMISS);
              }
            }
            /**
             * @param {!MouseEvent} evt
             */

          }, {
            key: 'handleActionButtonClick',
            value: function handleActionButtonClick(evt) {
              this.close(REASON_ACTION);
            }
            /**
             * @param {!MouseEvent} evt
             */

          }, {
            key: 'handleActionIconClick',
            value: function handleActionIconClick(evt) {
              this.close(REASON_DISMISS);
            }
            /** @private */

          }, {
            key: 'clearAutoDismissTimer_',
            value: function clearAutoDismissTimer_() {
              clearTimeout(this.autoDismissTimer_);
              this.autoDismissTimer_ = 0;
            }
            /** @private */

          }, {
            key: 'handleAnimationTimerEnd_',
            value: function handleAnimationTimerEnd_() {
              this.animationTimer_ = 0;
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].OPENING);
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].CLOSING);
            }
            /**
             * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.
             * @param {Function} callback
             * @private
             */

          }, {
            key: 'runNextAnimationFrame_',
            value: function runNextAnimationFrame_(callback) {
              var _this4 = this;

              cancelAnimationFrame(this.animationFrame_);
              this.animationFrame_ = requestAnimationFrame(function () {
                _this4.animationFrame_ = 0;
                clearTimeout(_this4.animationTimer_);
                _this4.animationTimer_ = setTimeout(callback, 0);
              });
            }
          }]);

          return MDCSnackbarFoundation;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
        /* default */
        ]);
        /* harmony default export */


        __webpack_exports__["a"] = MDCSnackbarFoundation;
        /***/
      },

      /***/
      141:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2018 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint no-unused-vars: [2, {"args": "none"}] */

        /**
         * Adapter for MDC Snackbar. Provides an interface for managing:
         * - CSS classes
         * - Event handlers
         *
         * Additionally, provides type information for the adapter to the Closure
         * compiler.
         *
         * Implement this adapter for your framework of choice to delegate updates to
         * the component in your framework of choice. See architecture documentation
         * for more details.
         * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
         *
         * @record
         */


        var MDCSnackbarAdapter = function () {
          function MDCSnackbarAdapter() {
            _classCallCheck(this, MDCSnackbarAdapter);
          }

          _createClass(MDCSnackbarAdapter, [{
            key: "addClass",

            /** @param {string} className */
            value: function addClass(className) {}
            /** @param {string} className */

          }, {
            key: "removeClass",
            value: function removeClass(className) {}
          }, {
            key: "announce",
            value: function announce() {}
          }, {
            key: "notifyOpening",
            value: function notifyOpening() {}
          }, {
            key: "notifyOpened",
            value: function notifyOpened() {}
            /**
             * @param {string} reason
             */

          }, {
            key: "notifyClosing",
            value: function notifyClosing(reason) {}
            /**
             * @param {string} reason
             */

          }, {
            key: "notifyClosed",
            value: function notifyClosed(reason) {}
          }]);

          return MDCSnackbarAdapter;
        }();
        /* unused harmony default export */


        var _unused_webpack_default_export = MDCSnackbarAdapter;
        /***/
      },

      /***/
      142:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "announce", function () {
          return announce;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(51);
        /**
         * @license
         * Copyright 2018 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */


        var ARIA_LIVE_DELAY_MS = __WEBPACK_IMPORTED_MODULE_0__constants__["b"
        /* numbers */
        ].ARIA_LIVE_DELAY_MS;
        var ARIA_LIVE_LABEL_TEXT_ATTR = __WEBPACK_IMPORTED_MODULE_0__constants__["c"
        /* strings */
        ].ARIA_LIVE_LABEL_TEXT_ATTR;
        /**
         * @param {!HTMLElement} ariaEl
         * @param {!HTMLElement=} labelEl
         */

        function announce(ariaEl) {
          var labelEl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ariaEl;
          var priority = ariaEl.getAttribute('aria-live');
          var labelText = labelEl.textContent.trim(); // Ignore `&nbsp;` (see below)

          if (!labelText) {
            return;
          } // Temporarily disable `aria-live` to prevent JAWS+Firefox from announcing the message twice.


          ariaEl.setAttribute('aria-live', 'off'); // Temporarily clear `textContent` to force a DOM mutation event that will be detected by screen readers.
          // `aria-live` elements are only announced when the element's `textContent` *changes*, so snackbars
          // sent to the browser in the initial HTML response won't be read unless we clear the element's `textContent` first.
          // Similarly, displaying the same snackbar message twice in a row doesn't trigger a DOM mutation event,
          // so screen readers won't announce the second message unless we first clear `textContent`.
          //
          // We have to clear the label text two different ways to make it work in all browsers and screen readers:
          //
          //   1. `textContent = ''` is required for IE11 + JAWS
          //   2. `innerHTML = '&nbsp;'` is required for Chrome + JAWS and NVDA
          //
          // All other browser/screen reader combinations support both methods.
          //
          // The wrapper `<span>` visually hides the space character so that it doesn't cause jank when added/removed.
          // N.B.: Setting `position: absolute`, `opacity: 0`, or `height: 0` prevents Chrome from detecting the DOM change.
          //
          // This technique has been tested in:
          //
          //   * JAWS 2019:
          //       - Chrome 70
          //       - Firefox 60 (ESR)
          //       - IE 11
          //   * NVDA 2018:
          //       - Chrome 70
          //       - Firefox 60 (ESR)
          //       - IE 11
          //   * ChromeVox 53

          labelEl.textContent = '';
          labelEl.innerHTML = '<span style="display: inline-block; width: 0; height: 1px;">&nbsp;</span>'; // Prevent visual jank by temporarily displaying the label text in the ::before pseudo-element.
          // CSS generated content is normally announced by screen readers
          // (except in IE 11; see https://tink.uk/accessibility-support-for-css-generated-content/);
          // however, `aria-live` is turned off, so this DOM update will be ignored by screen readers.

          labelEl.setAttribute(ARIA_LIVE_LABEL_TEXT_ATTR, labelText);
          setTimeout(function () {
            // Allow screen readers to announce changes to the DOM again.
            ariaEl.setAttribute('aria-live', priority); // Remove the message from the ::before pseudo-element.

            labelEl.removeAttribute(ARIA_LIVE_LABEL_TEXT_ATTR); // Restore the original label text, which will be announced by screen readers.

            labelEl.textContent = labelText;
          }, ARIA_LIVE_DELAY_MS);
        }
        /***/

      },

      /***/
      51:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "a", function () {
          return cssClasses;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "c", function () {
          return strings;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "b", function () {
          return numbers;
        });
        /**
         * @license
         * Copyright 2018 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */


        var cssClasses = {
          OPENING: 'mdc-snackbar--opening',
          OPEN: 'mdc-snackbar--open',
          CLOSING: 'mdc-snackbar--closing'
        };
        var strings = {
          SURFACE_SELECTOR: '.mdc-snackbar__surface',
          LABEL_SELECTOR: '.mdc-snackbar__label',
          ACTION_SELECTOR: '.mdc-snackbar__action',
          DISMISS_SELECTOR: '.mdc-snackbar__dismiss',
          OPENING_EVENT: 'MDCSnackbar:opening',
          OPENED_EVENT: 'MDCSnackbar:opened',
          CLOSING_EVENT: 'MDCSnackbar:closing',
          CLOSED_EVENT: 'MDCSnackbar:closed',
          REASON_ACTION: 'action',
          REASON_DISMISS: 'dismiss',
          ARIA_LIVE_LABEL_TEXT_ATTR: 'data-mdc-snackbar-label-text'
        };
        var numbers = {
          MIN_AUTO_DISMISS_TIMEOUT_MS: 4000,
          MAX_AUTO_DISMISS_TIMEOUT_MS: 10000,
          DEFAULT_AUTO_DISMISS_TIMEOUT_MS: 5000,
          // These variables need to be kept in sync with the values in _variables.scss.
          SNACKBAR_ANIMATION_OPEN_TIME_MS: 150,
          SNACKBAR_ANIMATION_CLOSE_TIME_MS: 75,

          /**
           * Number of milliseconds to wait between temporarily clearing the label text
           * in the DOM and subsequently restoring it. This is necessary to force IE 11
           * to pick up the `aria-live` content change and announce it to the user.
           */
          ARIA_LIVE_DELAY_MS: 1000
        };
        /***/
      },

      /***/
      8:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "closest", function () {
          return closest;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "matches", function () {
          return matches;
        });
        /**
         * @license
         * Copyright 2018 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @fileoverview A "ponyfill" is a polyfill that doesn't modify the global prototype chain.
         * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.
         */

        /**
         * @param {!Element} element
         * @param {string} selector
         * @return {?Element}
         */


        function closest(element, selector) {
          if (element.closest) {
            return element.closest(selector);
          }

          var el = element;

          while (el) {
            if (matches(el, selector)) {
              return el;
            }

            el = el.parentElement;
          }

          return null;
        }
        /**
         * @param {!Element} element
         * @param {string} selector
         * @return {boolean}
         */


        function matches(element, selector) {
          var nativeMatches = element.matches || element.webkitMatchesSelector || element.msMatchesSelector;
          return nativeMatches.call(element, selector);
        }
        /***/

      }
      /******/

    })
  );
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/@material/textfield/dist/mdc.textfield.js":
/*!****************************************************************!*\
  !*** ./node_modules/@material/textfield/dist/mdc.textfield.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 Material Components for the Web
 Copyright (c) 2019 Google Inc.
 License: MIT
*/
(function webpackUniversalModuleDefinition(root, factory) {
  if (( false ? undefined : _typeof(exports)) === 'object' && ( false ? undefined : _typeof(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}
})(this, function () {
  return (
    /******/
    function (modules) {
      // webpackBootstrap

      /******/
      // The module cache

      /******/
      var installedModules = {};
      /******/

      /******/
      // The require function

      /******/

      function __webpack_require__(moduleId) {
        /******/

        /******/
        // Check if module is in cache

        /******/
        if (installedModules[moduleId]) {
          /******/
          return installedModules[moduleId].exports;
          /******/
        }
        /******/
        // Create a new module (and put it into the cache)

        /******/


        var module = installedModules[moduleId] = {
          /******/
          i: moduleId,

          /******/
          l: false,

          /******/
          exports: {}
          /******/

        };
        /******/

        /******/
        // Execute the module function

        /******/

        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/

        /******/
        // Flag the module as loaded

        /******/

        module.l = true;
        /******/

        /******/
        // Return the exports of the module

        /******/

        return module.exports;
        /******/
      }
      /******/

      /******/

      /******/
      // expose the modules object (__webpack_modules__)

      /******/


      __webpack_require__.m = modules;
      /******/

      /******/
      // expose the module cache

      /******/

      __webpack_require__.c = installedModules;
      /******/

      /******/
      // define getter function for harmony exports

      /******/

      __webpack_require__.d = function (exports, name, getter) {
        /******/
        if (!__webpack_require__.o(exports, name)) {
          /******/
          Object.defineProperty(exports, name, {
            /******/
            configurable: false,

            /******/
            enumerable: true,

            /******/
            get: getter
            /******/

          });
          /******/
        }
        /******/

      };
      /******/

      /******/
      // getDefaultExport function for compatibility with non-harmony modules

      /******/


      __webpack_require__.n = function (module) {
        /******/
        var getter = module && module.__esModule ?
        /******/
        function getDefault() {
          return module['default'];
        } :
        /******/
        function getModuleExports() {
          return module;
        };
        /******/

        __webpack_require__.d(getter, 'a', getter);
        /******/


        return getter;
        /******/
      };
      /******/

      /******/
      // Object.prototype.hasOwnProperty.call

      /******/


      __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      /******/

      /******/
      // __webpack_public_path__

      /******/


      __webpack_require__.p = "";
      /******/

      /******/
      // Load entry module and return exports

      /******/

      return __webpack_require__(__webpack_require__.s = 157);
      /******/
    }(
    /************************************************************************/

    /******/
    {
      /***/
      0:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @template A
         */


        var MDCFoundation = function () {
          _createClass(MDCFoundation, null, [{
            key: "cssClasses",

            /** @return enum{cssClasses} */
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports every
              // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}
              return {};
            }
            /** @return enum{strings} */

          }, {
            key: "strings",
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports all
              // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}
              return {};
            }
            /** @return enum{numbers} */

          }, {
            key: "numbers",
            get: function get() {
              // Classes extending MDCFoundation should implement this method to return an object which exports all
              // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}
              return {};
            }
            /** @return {!Object} */

          }, {
            key: "defaultAdapter",
            get: function get() {
              // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient
              // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter
              // validation.
              return {};
            }
            /**
             * @param {A=} adapter
             */

          }]);

          function MDCFoundation() {
            var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

            _classCallCheck(this, MDCFoundation);
            /** @protected {!A} */


            this.adapter_ = adapter;
          }

          _createClass(MDCFoundation, [{
            key: "init",
            value: function init() {// Subclasses should override this method to perform initialization routines (registering events, etc.)
            }
          }, {
            key: "destroy",
            value: function destroy() {// Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)
            }
          }]);

          return MDCFoundation;
        }();
        /* harmony default export */


        __webpack_exports__["a"] = MDCFoundation;
        /***/
      },

      /***/
      1:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0);

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @template F
         */


        var MDCComponent = function () {
          _createClass(MDCComponent, null, [{
            key: 'attachTo',

            /**
             * @param {!Element} root
             * @return {!MDCComponent}
             */
            value: function attachTo(root) {
              // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and
              // returns an instantiated component with its root set to that element. Also note that in the cases of
              // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized
              // from getDefaultFoundation().
              return new MDCComponent(root, new __WEBPACK_IMPORTED_MODULE_0__foundation__["a"
              /* default */
              ]());
            }
            /**
             * @param {!Element} root
             * @param {F=} foundation
             * @param {...?} args
             */

          }]);

          function MDCComponent(root) {
            var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

            _classCallCheck(this, MDCComponent);
            /** @protected {!Element} */


            this.root_ = root;

            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              args[_key - 2] = arguments[_key];
            }

            this.initialize.apply(this, args); // Note that we initialize foundation here and not within the constructor's default param so that
            // this.root_ is defined and can be used within the foundation class.

            /** @protected {!F} */

            this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;
            this.foundation_.init();
            this.initialSyncWithDOM();
          }

          _createClass(MDCComponent, [{
            key: 'initialize',
            value: function initialize()
            /* ...args */
            {} // Subclasses can override this to do any additional setup work that would be considered part of a
            // "constructor". Essentially, it is a hook into the parent constructor before the foundation is
            // initialized. Any additional arguments besides root and foundation will be passed in here.

            /**
             * @return {!F} foundation
             */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              // Subclasses must override this method to return a properly configured foundation class for the
              // component.
              throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');
            }
          }, {
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {// Subclasses should override this method if they need to perform work to synchronize with a host DOM
              // object. An example of this would be a form control wrapper that needs to synchronize its internal state
              // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM
              // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.
            }
          }, {
            key: 'destroy',
            value: function destroy() {
              // Subclasses may implement this method to release any resources / deregister any listeners they have
              // attached. An example of this might be deregistering a resize event from the window object.
              this.foundation_.destroy();
            }
            /**
             * Wrapper method to add an event listener to the component's root element. This is most useful when
             * listening for custom events.
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: 'listen',
            value: function listen(evtType, handler) {
              this.root_.addEventListener(evtType, handler);
            }
            /**
             * Wrapper method to remove an event listener to the component's root element. This is most useful when
             * unlistening for custom events.
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: 'unlisten',
            value: function unlisten(evtType, handler) {
              this.root_.removeEventListener(evtType, handler);
            }
            /**
             * Fires a cross-browser-compatible custom event from the component root of the given type,
             * with the given data.
             * @param {string} evtType
             * @param {!Object} evtData
             * @param {boolean=} shouldBubble
             */

          }, {
            key: 'emit',
            value: function emit(evtType, evtData) {
              var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
              var evt = void 0;

              if (typeof CustomEvent === 'function') {
                evt = new CustomEvent(evtType, {
                  detail: evtData,
                  bubbles: shouldBubble
                });
              } else {
                evt = document.createEvent('CustomEvent');
                evt.initCustomEvent(evtType, shouldBubble, false, evtData);
              }

              this.root_.dispatchEvent(evt);
            }
          }]);

          return MDCComponent;
        }();
        /* harmony default export */


        __webpack_exports__["a"] = MDCComponent;
        /***/
      },

      /***/
      12:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint no-unused-vars: [2, {"args": "none"}] */

        /**
         * Adapter for MDC Floating Label.
         *
         * Defines the shape of the adapter expected by the foundation. Implement this
         * adapter to integrate the floating label into your framework. See
         * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
         * for more information.
         *
         * @record
         */


        var MDCFloatingLabelAdapter = function () {
          function MDCFloatingLabelAdapter() {
            _classCallCheck(this, MDCFloatingLabelAdapter);
          }

          _createClass(MDCFloatingLabelAdapter, [{
            key: "addClass",

            /**
             * Adds a class to the label element.
             * @param {string} className
             */
            value: function addClass(className) {}
            /**
             * Removes a class from the label element.
             * @param {string} className
             */

          }, {
            key: "removeClass",
            value: function removeClass(className) {}
            /**
             * Returns the width of the label element.
             * @return {number}
             */

          }, {
            key: "getWidth",
            value: function getWidth() {}
            /**
             * Registers an event listener on the root element for a given event.
             * @param {string} evtType
             * @param {function(!Event): undefined} handler
             */

          }, {
            key: "registerInteractionHandler",
            value: function registerInteractionHandler(evtType, handler) {}
            /**
             * Deregisters an event listener on the root element for a given event.
             * @param {string} evtType
             * @param {function(!Event): undefined} handler
             */

          }, {
            key: "deregisterInteractionHandler",
            value: function deregisterInteractionHandler(evtType, handler) {}
          }]);

          return MDCFloatingLabelAdapter;
        }();
        /* unused harmony default export */


        var _unused_webpack_default_export = MDCFloatingLabelAdapter;
        /***/
      },

      /***/
      157:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "MDCTextField", function () {
          return MDCTextField;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__ = __webpack_require__(4);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__material_ripple_util__ = __webpack_require__(2);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__constants__ = __webpack_require__(82);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_4__adapter__ = __webpack_require__(83);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_5__foundation__ = __webpack_require__(160);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_6__material_line_ripple_index__ = __webpack_require__(30);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_7__helper_text_index__ = __webpack_require__(161);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_8__icon_index__ = __webpack_require__(162);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_9__material_floating_label_index__ = __webpack_require__(16);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_10__material_notched_outline_index__ = __webpack_require__(35);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCTextFieldFoundation", function () {
          return __WEBPACK_IMPORTED_MODULE_5__foundation__["a"];
        });
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCTextFieldHelperText", function () {
          return __WEBPACK_IMPORTED_MODULE_7__helper_text_index__["a"];
        });
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCTextFieldHelperTextFoundation", function () {
          return __WEBPACK_IMPORTED_MODULE_7__helper_text_index__["b"];
        });
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCTextFieldIcon", function () {
          return __WEBPACK_IMPORTED_MODULE_8__icon_index__["a"];
        });
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCTextFieldIconFoundation", function () {
          return __WEBPACK_IMPORTED_MODULE_8__icon_index__["b"];
        });

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        var _get = function get(object, property, receiver) {
          if (object === null) object = Function.prototype;
          var desc = Object.getOwnPropertyDescriptor(object, property);

          if (desc === undefined) {
            var parent = Object.getPrototypeOf(object);

            if (parent === null) {
              return undefined;
            } else {
              return get(parent, property, receiver);
            }
          } else if ("value" in desc) {
            return desc.value;
          } else {
            var getter = desc.get;

            if (getter === undefined) {
              return undefined;
            }

            return getter.call(receiver);
          }
        };

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint-disable no-unused-vars */

        /* eslint-enable no-unused-vars */

        /* eslint-disable no-unused-vars */

        /* eslint-enable no-unused-vars */

        /**
         * @extends {MDCComponent<!MDCTextFieldFoundation>}
         * @final
         */


        var MDCTextField = function (_MDCComponent) {
          _inherits(MDCTextField, _MDCComponent);
          /**
           * @param {...?} args
           */


          function MDCTextField() {
            var _ref;

            _classCallCheck(this, MDCTextField);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            /** @private {?Element} */


            var _this = _possibleConstructorReturn(this, (_ref = MDCTextField.__proto__ || Object.getPrototypeOf(MDCTextField)).call.apply(_ref, [this].concat(args)));

            _this.input_;
            /** @type {?MDCRipple} */

            _this.ripple;
            /** @private {?MDCLineRipple} */

            _this.lineRipple_;
            /** @private {?MDCTextFieldHelperText} */

            _this.helperText_;
            /** @private {?MDCTextFieldIcon} */

            _this.leadingIcon_;
            /** @private {?MDCTextFieldIcon} */

            _this.trailingIcon_;
            /** @private {?MDCFloatingLabel} */

            _this.label_;
            /** @private {?MDCNotchedOutline} */

            _this.outline_;
            return _this;
          }
          /**
           * @param {!Element} root
           * @return {!MDCTextField}
           */


          _createClass(MDCTextField, [{
            key: 'initialize',

            /**
             * @param {(function(!Element): !MDCRipple)=} rippleFactory A function which
             * creates a new MDCRipple.
             * @param {(function(!Element): !MDCLineRipple)=} lineRippleFactory A function which
             * creates a new MDCLineRipple.
             * @param {(function(!Element): !MDCTextFieldHelperText)=} helperTextFactory A function which
             * creates a new MDCTextFieldHelperText.
             * @param {(function(!Element): !MDCTextFieldIcon)=} iconFactory A function which
             * creates a new MDCTextFieldIcon.
             * @param {(function(!Element): !MDCFloatingLabel)=} labelFactory A function which
             * creates a new MDCFloatingLabel.
             * @param {(function(!Element): !MDCNotchedOutline)=} outlineFactory A function which
             * creates a new MDCNotchedOutline.
             */
            value: function initialize() {
              var rippleFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (el, foundation) {
                return new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__["MDCRipple"](el, foundation);
              };
              var lineRippleFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (el) {
                return new __WEBPACK_IMPORTED_MODULE_6__material_line_ripple_index__["MDCLineRipple"](el);
              };
              var helperTextFactory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (el) {
                return new __WEBPACK_IMPORTED_MODULE_7__helper_text_index__["a"
                /* MDCTextFieldHelperText */
                ](el);
              };
              var iconFactory = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function (el) {
                return new __WEBPACK_IMPORTED_MODULE_8__icon_index__["a"
                /* MDCTextFieldIcon */
                ](el);
              };

              var _this2 = this;

              var labelFactory = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function (el) {
                return new __WEBPACK_IMPORTED_MODULE_9__material_floating_label_index__["MDCFloatingLabel"](el);
              };
              var outlineFactory = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : function (el) {
                return new __WEBPACK_IMPORTED_MODULE_10__material_notched_outline_index__["MDCNotchedOutline"](el);
              };
              this.input_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__["e"
              /* strings */
              ].INPUT_SELECTOR);
              var labelElement = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__["e"
              /* strings */
              ].LABEL_SELECTOR);

              if (labelElement) {
                this.label_ = labelFactory(labelElement);
              }

              var lineRippleElement = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__["e"
              /* strings */
              ].LINE_RIPPLE_SELECTOR);

              if (lineRippleElement) {
                this.lineRipple_ = lineRippleFactory(lineRippleElement);
              }

              var outlineElement = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__["e"
              /* strings */
              ].OUTLINE_SELECTOR);

              if (outlineElement) {
                this.outline_ = outlineFactory(outlineElement);
              }

              if (this.input_.hasAttribute(__WEBPACK_IMPORTED_MODULE_3__constants__["e"
              /* strings */
              ].ARIA_CONTROLS)) {
                var helperTextElement = document.getElementById(this.input_.getAttribute(__WEBPACK_IMPORTED_MODULE_3__constants__["e"
                /* strings */
                ].ARIA_CONTROLS));

                if (helperTextElement) {
                  this.helperText_ = helperTextFactory(helperTextElement);
                }
              }

              var iconElements = this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_3__constants__["e"
              /* strings */
              ].ICON_SELECTOR);

              if (iconElements.length > 0) {
                if (iconElements.length > 1) {
                  // Has both icons.
                  this.leadingIcon_ = iconFactory(iconElements[0]);
                  this.trailingIcon_ = iconFactory(iconElements[1]);
                } else {
                  if (this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_3__constants__["c"
                  /* cssClasses */
                  ].WITH_LEADING_ICON)) {
                    this.leadingIcon_ = iconFactory(iconElements[0]);
                  } else {
                    this.trailingIcon_ = iconFactory(iconElements[0]);
                  }
                }
              }

              this.ripple = null;

              if (!this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_3__constants__["c"
              /* cssClasses */
              ].TEXTAREA) && !this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_3__constants__["c"
              /* cssClasses */
              ].OUTLINED)) {
                var MATCHES = Object(__WEBPACK_IMPORTED_MODULE_2__material_ripple_util__["getMatchesProperty"])(HTMLElement.prototype);

                var adapter = _extends(__WEBPACK_IMPORTED_MODULE_1__material_ripple_index__["MDCRipple"].createAdapter(
                /** @type {!RippleCapableSurface} */
                this), {
                  isSurfaceActive: function isSurfaceActive() {
                    return _this2.input_[MATCHES](':active');
                  },
                  registerInteractionHandler: function registerInteractionHandler(type, handler) {
                    return _this2.input_.addEventListener(type, handler);
                  },
                  deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
                    return _this2.input_.removeEventListener(type, handler);
                  }
                });

                var foundation = new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__["MDCRippleFoundation"](adapter);
                this.ripple = rippleFactory(this.root_, foundation);
              }
            }
          }, {
            key: 'destroy',
            value: function destroy() {
              if (this.ripple) {
                this.ripple.destroy();
              }

              if (this.lineRipple_) {
                this.lineRipple_.destroy();
              }

              if (this.helperText_) {
                this.helperText_.destroy();
              }

              if (this.leadingIcon_) {
                this.leadingIcon_.destroy();
              }

              if (this.trailingIcon_) {
                this.trailingIcon_.destroy();
              }

              if (this.label_) {
                this.label_.destroy();
              }

              if (this.outline_) {
                this.outline_.destroy();
              }

              _get(MDCTextField.prototype.__proto__ || Object.getPrototypeOf(MDCTextField.prototype), 'destroy', this).call(this);
            }
            /**
             * Initiliazes the Text Field's internal state based on the environment's
             * state.
             */

          }, {
            key: 'initialSyncWithDom',
            value: function initialSyncWithDom() {
              this.disabled = this.input_.disabled;
            }
            /**
             * @return {string} The value of the input.
             */

          }, {
            key: 'focus',

            /**
             * Focuses the input element.
             */
            value: function focus() {
              this.input_.focus();
            }
            /**
             * Recomputes the outline SVG path for the outline element.
             */

          }, {
            key: 'layout',
            value: function layout() {
              var openNotch = this.foundation_.shouldFloat;
              this.foundation_.notchOutline(openNotch);
            }
            /**
             * @return {!MDCTextFieldFoundation}
             */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              var _this3 = this;

              return new __WEBPACK_IMPORTED_MODULE_5__foundation__["a"
              /* default */
              ](
              /** @type {!MDCTextFieldAdapter} */
              _extends({
                addClass: function addClass(className) {
                  return _this3.root_.classList.add(className);
                },
                removeClass: function removeClass(className) {
                  return _this3.root_.classList.remove(className);
                },
                hasClass: function hasClass(className) {
                  return _this3.root_.classList.contains(className);
                },
                registerTextFieldInteractionHandler: function registerTextFieldInteractionHandler(evtType, handler) {
                  return _this3.root_.addEventListener(evtType, handler);
                },
                deregisterTextFieldInteractionHandler: function deregisterTextFieldInteractionHandler(evtType, handler) {
                  return _this3.root_.removeEventListener(evtType, handler);
                },
                registerValidationAttributeChangeHandler: function registerValidationAttributeChangeHandler(handler) {
                  var getAttributesList = function getAttributesList(mutationsList) {
                    return mutationsList.map(function (mutation) {
                      return mutation.attributeName;
                    });
                  };

                  var observer = new MutationObserver(function (mutationsList) {
                    return handler(getAttributesList(mutationsList));
                  });

                  var targetNode = _this3.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__["e"
                  /* strings */
                  ].INPUT_SELECTOR);

                  var config = {
                    attributes: true
                  };
                  observer.observe(targetNode, config);
                  return observer;
                },
                deregisterValidationAttributeChangeHandler: function deregisterValidationAttributeChangeHandler(observer) {
                  return observer.disconnect();
                },
                isFocused: function isFocused() {
                  return document.activeElement === _this3.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__["e"
                  /* strings */
                  ].INPUT_SELECTOR);
                }
              }, this.getInputAdapterMethods_(), this.getLabelAdapterMethods_(), this.getLineRippleAdapterMethods_(), this.getOutlineAdapterMethods_()), this.getFoundationMap_());
            }
            /**
             * @return {!{
             *   shakeLabel: function(boolean): undefined,
             *   floatLabel: function(boolean): undefined,
             *   hasLabel: function(): boolean,
             *   getLabelWidth: function(): number,
             * }}
             */

          }, {
            key: 'getLabelAdapterMethods_',
            value: function getLabelAdapterMethods_() {
              var _this4 = this;

              return {
                shakeLabel: function shakeLabel(shouldShake) {
                  return _this4.label_.shake(shouldShake);
                },
                floatLabel: function floatLabel(shouldFloat) {
                  return _this4.label_.float(shouldFloat);
                },
                hasLabel: function hasLabel() {
                  return !!_this4.label_;
                },
                getLabelWidth: function getLabelWidth() {
                  return _this4.label_ ? _this4.label_.getWidth() : 0;
                }
              };
            }
            /**
             * @return {!{
             *   activateLineRipple: function(): undefined,
             *   deactivateLineRipple: function(): undefined,
             *   setLineRippleTransformOrigin: function(number): undefined,
             * }}
             */

          }, {
            key: 'getLineRippleAdapterMethods_',
            value: function getLineRippleAdapterMethods_() {
              var _this5 = this;

              return {
                activateLineRipple: function activateLineRipple() {
                  if (_this5.lineRipple_) {
                    _this5.lineRipple_.activate();
                  }
                },
                deactivateLineRipple: function deactivateLineRipple() {
                  if (_this5.lineRipple_) {
                    _this5.lineRipple_.deactivate();
                  }
                },
                setLineRippleTransformOrigin: function setLineRippleTransformOrigin(normalizedX) {
                  if (_this5.lineRipple_) {
                    _this5.lineRipple_.setRippleCenter(normalizedX);
                  }
                }
              };
            }
            /**
             * @return {!{
             *   notchOutline: function(number, boolean): undefined,
             *   hasOutline: function(): boolean,
             * }}
             */

          }, {
            key: 'getOutlineAdapterMethods_',
            value: function getOutlineAdapterMethods_() {
              var _this6 = this;

              return {
                notchOutline: function notchOutline(labelWidth) {
                  return _this6.outline_.notch(labelWidth);
                },
                closeOutline: function closeOutline() {
                  return _this6.outline_.closeNotch();
                },
                hasOutline: function hasOutline() {
                  return !!_this6.outline_;
                }
              };
            }
            /**
             * @return {!{
             *   registerInputInteractionHandler: function(string, function()): undefined,
             *   deregisterInputInteractionHandler: function(string, function()): undefined,
             *   getNativeInput: function(): ?Element,
             * }}
             */

          }, {
            key: 'getInputAdapterMethods_',
            value: function getInputAdapterMethods_() {
              var _this7 = this;

              return {
                registerInputInteractionHandler: function registerInputInteractionHandler(evtType, handler) {
                  return _this7.input_.addEventListener(evtType, handler);
                },
                deregisterInputInteractionHandler: function deregisterInputInteractionHandler(evtType, handler) {
                  return _this7.input_.removeEventListener(evtType, handler);
                },
                getNativeInput: function getNativeInput() {
                  return _this7.input_;
                }
              };
            }
            /**
             * Returns a map of all subcomponents to subfoundations.
             * @return {!FoundationMapType}
             */

          }, {
            key: 'getFoundationMap_',
            value: function getFoundationMap_() {
              return {
                helperText: this.helperText_ ? this.helperText_.foundation : undefined,
                leadingIcon: this.leadingIcon_ ? this.leadingIcon_.foundation : undefined,
                trailingIcon: this.trailingIcon_ ? this.trailingIcon_.foundation : undefined
              };
            }
          }, {
            key: 'value',
            get: function get() {
              return this.foundation_.getValue();
            }
            /**
             * @param {string} value The value to set on the input.
             */
            ,
            set: function set(value) {
              this.foundation_.setValue(value);
            }
            /**
             * @return {boolean} True if the Text Field is disabled.
             */

          }, {
            key: 'disabled',
            get: function get() {
              return this.foundation_.isDisabled();
            }
            /**
             * @param {boolean} disabled Sets the Text Field disabled or enabled.
             */
            ,
            set: function set(disabled) {
              this.foundation_.setDisabled(disabled);
            }
            /**
             * @return {boolean} valid True if the Text Field is valid.
             */

          }, {
            key: 'valid',
            get: function get() {
              return this.foundation_.isValid();
            }
            /**
             * @param {boolean} valid Sets the Text Field valid or invalid.
             */
            ,
            set: function set(valid) {
              this.foundation_.setValid(valid);
            }
            /**
             * @return {boolean} True if the Text Field is required.
             */

          }, {
            key: 'required',
            get: function get() {
              return this.input_.required;
            }
            /**
             * @param {boolean} required Sets the Text Field to required.
             */
            ,
            set: function set(required) {
              this.input_.required = required;
            }
            /**
             * @return {string} The input element's validation pattern.
             */

          }, {
            key: 'pattern',
            get: function get() {
              return this.input_.pattern;
            }
            /**
             * @param {string} pattern Sets the input element's validation pattern.
             */
            ,
            set: function set(pattern) {
              this.input_.pattern = pattern;
            }
            /**
             * @return {number} The input element's minLength.
             */

          }, {
            key: 'minLength',
            get: function get() {
              return this.input_.minLength;
            }
            /**
             * @param {number} minLength Sets the input element's minLength.
             */
            ,
            set: function set(minLength) {
              this.input_.minLength = minLength;
            }
            /**
             * @return {number} The input element's maxLength.
             */

          }, {
            key: 'maxLength',
            get: function get() {
              return this.input_.maxLength;
            }
            /**
             * @param {number} maxLength Sets the input element's maxLength.
             */
            ,
            set: function set(maxLength) {
              // Chrome throws exception if maxLength is set < 0
              if (maxLength < 0) {
                this.input_.removeAttribute('maxLength');
              } else {
                this.input_.maxLength = maxLength;
              }
            }
            /**
             * @return {string} The input element's min.
             */

          }, {
            key: 'min',
            get: function get() {
              return this.input_.min;
            }
            /**
             * @param {string} min Sets the input element's min.
             */
            ,
            set: function set(min) {
              this.input_.min = min;
            }
            /**
             * @return {string} The input element's max.
             */

          }, {
            key: 'max',
            get: function get() {
              return this.input_.max;
            }
            /**
             * @param {string} max Sets the input element's max.
             */
            ,
            set: function set(max) {
              this.input_.max = max;
            }
            /**
             * @return {string} The input element's step.
             */

          }, {
            key: 'step',
            get: function get() {
              return this.input_.step;
            }
            /**
             * @param {string} step Sets the input element's step.
             */
            ,
            set: function set(step) {
              this.input_.step = step;
            }
            /**
             * Sets the helper text element content.
             * @param {string} content
             */

          }, {
            key: 'helperTextContent',
            set: function set(content) {
              this.foundation_.setHelperTextContent(content);
            }
            /**
             * Sets the aria label of the leading icon.
             * @param {string} label
             */

          }, {
            key: 'leadingIconAriaLabel',
            set: function set(label) {
              this.foundation_.setLeadingIconAriaLabel(label);
            }
            /**
             * Sets the text content of the leading icon.
             * @param {string} content
             */

          }, {
            key: 'leadingIconContent',
            set: function set(content) {
              this.foundation_.setLeadingIconContent(content);
            }
            /**
             * Sets the aria label of the trailing icon.
             * @param {string} label
             */

          }, {
            key: 'trailingIconAriaLabel',
            set: function set(label) {
              this.foundation_.setTrailingIconAriaLabel(label);
            }
            /**
             * Sets the text content of the trailing icon.
             * @param {string} content
             */

          }, {
            key: 'trailingIconContent',
            set: function set(content) {
              this.foundation_.setTrailingIconContent(content);
            }
            /**
             * Enables or disables the use of native validation. Use this for custom validation.
             * @param {boolean} useNativeValidation Set this to false to ignore native input validation.
             */

          }, {
            key: 'useNativeValidation',
            set: function set(useNativeValidation) {
              this.foundation_.setUseNativeValidation(useNativeValidation);
            }
          }], [{
            key: 'attachTo',
            value: function attachTo(root) {
              return new MDCTextField(root);
            }
          }]);

          return MDCTextField;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
        /* default */
        ]);
        /***/

      },

      /***/
      158:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "b", function () {
          return strings;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "a", function () {
          return cssClasses;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /** @enum {string} */


        var strings = {
          ARIA_HIDDEN: 'aria-hidden',
          ROLE: 'role'
        };
        /** @enum {string} */

        var cssClasses = {
          HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',
          HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg'
        };
        /***/
      },

      /***/
      159:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "a", function () {
          return strings;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /** @enum {string} */


        var strings = {
          ICON_EVENT: 'MDCTextField:icon',
          ICON_ROLE: 'button'
        };
        /***/
      },

      /***/
      16:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "MDCFloatingLabel", function () {
          return MDCFloatingLabel;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(12);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(26);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCFloatingLabelFoundation", function () {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
        });

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @extends {MDCComponent<!MDCFloatingLabelFoundation>}
         * @final
         */


        var MDCFloatingLabel = function (_MDCComponent) {
          _inherits(MDCFloatingLabel, _MDCComponent);

          function MDCFloatingLabel() {
            _classCallCheck(this, MDCFloatingLabel);

            return _possibleConstructorReturn(this, (MDCFloatingLabel.__proto__ || Object.getPrototypeOf(MDCFloatingLabel)).apply(this, arguments));
          }

          _createClass(MDCFloatingLabel, [{
            key: 'shake',

            /**
             * Styles the label to produce the label shake for errors.
             * @param {boolean} shouldShake styles the label to shake by adding shake class
             * if true, otherwise will stop shaking by removing shake class.
             */
            value: function shake(shouldShake) {
              this.foundation_.shake(shouldShake);
            }
            /**
             * Styles label to float/dock.
             * @param {boolean} shouldFloat styles the label to float by adding float class
             * if true, otherwise docks the label by removing the float class.
             */

          }, {
            key: 'float',
            value: function float(shouldFloat) {
              this.foundation_.float(shouldFloat);
            }
            /**
             * @return {number}
             */

          }, {
            key: 'getWidth',
            value: function getWidth() {
              return this.foundation_.getWidth();
            }
            /**
             * @return {!MDCFloatingLabelFoundation}
             */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              var _this2 = this;

              return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
              /* default */
              ]({
                addClass: function addClass(className) {
                  return _this2.root_.classList.add(className);
                },
                removeClass: function removeClass(className) {
                  return _this2.root_.classList.remove(className);
                },
                getWidth: function getWidth() {
                  return _this2.root_.scrollWidth;
                },
                registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
                  return _this2.root_.addEventListener(evtType, handler);
                },
                deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
                  return _this2.root_.removeEventListener(evtType, handler);
                }
              });
            }
          }], [{
            key: 'attachTo',

            /**
             * @param {!Element} root
             * @return {!MDCFloatingLabel}
             */
            value: function attachTo(root) {
              return new MDCFloatingLabel(root);
            }
          }]);

          return MDCFloatingLabel;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
        /* default */
        ]);
        /***/

      },

      /***/
      160:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__helper_text_foundation__ = __webpack_require__(61);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__icon_foundation__ = __webpack_require__(62);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__adapter__ = __webpack_require__(83);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(82);

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint-disable no-unused-vars */

        /* eslint-enable no-unused-vars */

        /**
         * @extends {MDCFoundation<!MDCTextFieldAdapter>}
         * @final
         */


        var MDCTextFieldFoundation = function (_MDCFoundation) {
          _inherits(MDCTextFieldFoundation, _MDCFoundation);

          _createClass(MDCTextFieldFoundation, [{
            key: 'shouldShake',

            /** @return {boolean} */
            get: function get() {
              return !this.isValid() && !this.isFocused_ && !!this.getValue();
            }
            /**
             * @return {boolean}
             * @private
             */

          }, {
            key: 'shouldAlwaysFloat_',
            get: function get() {
              var type = this.getNativeInput_().type;
              return __WEBPACK_IMPORTED_MODULE_4__constants__["a"
              /* ALWAYS_FLOAT_TYPES */
              ].indexOf(type) >= 0;
            }
            /** @return {boolean} */

          }, {
            key: 'shouldFloat',
            get: function get() {
              return this.shouldAlwaysFloat_ || this.isFocused_ || !!this.getValue() || this.isBadInput_();
            }
            /**
             * {@see MDCTextFieldAdapter} for typing information on parameters and return
             * types.
             * @return {!MDCTextFieldAdapter}
             */

          }], [{
            key: 'cssClasses',

            /** @return enum {string} */
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_4__constants__["c"
              /* cssClasses */
              ];
            }
            /** @return enum {string} */

          }, {
            key: 'strings',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_4__constants__["e"
              /* strings */
              ];
            }
            /** @return enum {string} */

          }, {
            key: 'numbers',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_4__constants__["d"
              /* numbers */
              ];
            }
          }, {
            key: 'defaultAdapter',
            get: function get() {
              return (
                /** @type {!MDCTextFieldAdapter} */
                {
                  addClass: function addClass() {},
                  removeClass: function removeClass() {},
                  hasClass: function hasClass() {},
                  registerTextFieldInteractionHandler: function registerTextFieldInteractionHandler() {},
                  deregisterTextFieldInteractionHandler: function deregisterTextFieldInteractionHandler() {},
                  registerInputInteractionHandler: function registerInputInteractionHandler() {},
                  deregisterInputInteractionHandler: function deregisterInputInteractionHandler() {},
                  registerValidationAttributeChangeHandler: function registerValidationAttributeChangeHandler() {},
                  deregisterValidationAttributeChangeHandler: function deregisterValidationAttributeChangeHandler() {},
                  getNativeInput: function getNativeInput() {},
                  isFocused: function isFocused() {},
                  activateLineRipple: function activateLineRipple() {},
                  deactivateLineRipple: function deactivateLineRipple() {},
                  setLineRippleTransformOrigin: function setLineRippleTransformOrigin() {},
                  shakeLabel: function shakeLabel() {},
                  floatLabel: function floatLabel() {},
                  hasLabel: function hasLabel() {},
                  getLabelWidth: function getLabelWidth() {},
                  hasOutline: function hasOutline() {},
                  notchOutline: function notchOutline() {},
                  closeOutline: function closeOutline() {}
                }
              );
            }
            /**
             * @param {!MDCTextFieldAdapter} adapter
             * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.
             */

          }]);

          function MDCTextFieldFoundation(adapter) {
            var foundationMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] :
            /** @type {!FoundationMapType} */
            {};

            _classCallCheck(this, MDCTextFieldFoundation);
            /** @type {!MDCTextFieldHelperTextFoundation|undefined} */


            var _this = _possibleConstructorReturn(this, (MDCTextFieldFoundation.__proto__ || Object.getPrototypeOf(MDCTextFieldFoundation)).call(this, _extends(MDCTextFieldFoundation.defaultAdapter, adapter)));

            _this.helperText_ = foundationMap.helperText;
            /** @type {!MDCTextFieldIconFoundation|undefined} */

            _this.leadingIcon_ = foundationMap.leadingIcon;
            /** @type {!MDCTextFieldIconFoundation|undefined} */

            _this.trailingIcon_ = foundationMap.trailingIcon;
            /** @private {boolean} */

            _this.isFocused_ = false;
            /** @private {boolean} */

            _this.receivedUserInput_ = false;
            /** @private {boolean} */

            _this.useCustomValidityChecking_ = false;
            /** @private {boolean} */

            _this.isValid_ = true;
            /** @private {boolean} */

            _this.useNativeValidation_ = true;
            /** @private {function(): undefined} */

            _this.inputFocusHandler_ = function () {
              return _this.activateFocus();
            };
            /** @private {function(): undefined} */


            _this.inputBlurHandler_ = function () {
              return _this.deactivateFocus();
            };
            /** @private {function(): undefined} */


            _this.inputInputHandler_ = function () {
              return _this.autoCompleteFocus();
            };
            /** @private {function(!Event): undefined} */


            _this.setPointerXOffset_ = function (evt) {
              return _this.setTransformOrigin(evt);
            };
            /** @private {function(!Event): undefined} */


            _this.textFieldInteractionHandler_ = function () {
              return _this.handleTextFieldInteraction();
            };
            /** @private {function(!Array): undefined} */


            _this.validationAttributeChangeHandler_ = function (attributesList) {
              return _this.handleValidationAttributeChange(attributesList);
            };
            /** @private {!MutationObserver} */


            _this.validationObserver_;
            return _this;
          }

          _createClass(MDCTextFieldFoundation, [{
            key: 'init',
            value: function init() {
              var _this2 = this;

              if (this.adapter_.isFocused()) {
                this.inputFocusHandler_();
              } else if (this.adapter_.hasLabel() && this.shouldFloat) {
                this.notchOutline(true);
                this.adapter_.floatLabel(true);
              }

              this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);
              this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);
              this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);
              ['mousedown', 'touchstart'].forEach(function (evtType) {
                _this2.adapter_.registerInputInteractionHandler(evtType, _this2.setPointerXOffset_);
              });
              ['click', 'keydown'].forEach(function (evtType) {
                _this2.adapter_.registerTextFieldInteractionHandler(evtType, _this2.textFieldInteractionHandler_);
              });
              this.validationObserver_ = this.adapter_.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler_);
            }
          }, {
            key: 'destroy',
            value: function destroy() {
              var _this3 = this;

              this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);
              this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);
              this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);
              ['mousedown', 'touchstart'].forEach(function (evtType) {
                _this3.adapter_.deregisterInputInteractionHandler(evtType, _this3.setPointerXOffset_);
              });
              ['click', 'keydown'].forEach(function (evtType) {
                _this3.adapter_.deregisterTextFieldInteractionHandler(evtType, _this3.textFieldInteractionHandler_);
              });
              this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);
            }
            /**
             * Handles user interactions with the Text Field.
             */

          }, {
            key: 'handleTextFieldInteraction',
            value: function handleTextFieldInteraction() {
              if (this.adapter_.getNativeInput().disabled) {
                return;
              }

              this.receivedUserInput_ = true;
            }
            /**
             * Handles validation attribute changes
             * @param {!Array<string>} attributesList
             */

          }, {
            key: 'handleValidationAttributeChange',
            value: function handleValidationAttributeChange(attributesList) {
              var _this4 = this;

              attributesList.some(function (attributeName) {
                if (__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* VALIDATION_ATTR_WHITELIST */
                ].indexOf(attributeName) > -1) {
                  _this4.styleValidity_(true);

                  return true;
                }
              });
            }
            /**
             * Opens/closes the notched outline.
             * @param {boolean} openNotch
             */

          }, {
            key: 'notchOutline',
            value: function notchOutline(openNotch) {
              if (!this.adapter_.hasOutline()) {
                return;
              }

              if (openNotch) {
                var isDense = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_4__constants__["c"
                /* cssClasses */
                ].DENSE);
                var labelScale = isDense ? __WEBPACK_IMPORTED_MODULE_4__constants__["d"
                /* numbers */
                ].DENSE_LABEL_SCALE : __WEBPACK_IMPORTED_MODULE_4__constants__["d"
                /* numbers */
                ].LABEL_SCALE;
                var labelWidth = this.adapter_.getLabelWidth() * labelScale;
                this.adapter_.notchOutline(labelWidth);
              } else {
                this.adapter_.closeOutline();
              }
            }
            /**
             * Activates the text field focus state.
             */

          }, {
            key: 'activateFocus',
            value: function activateFocus() {
              this.isFocused_ = true;
              this.styleFocused_(this.isFocused_);
              this.adapter_.activateLineRipple();

              if (this.adapter_.hasLabel()) {
                this.notchOutline(this.shouldFloat);
                this.adapter_.floatLabel(this.shouldFloat);
                this.adapter_.shakeLabel(this.shouldShake);
              }

              if (this.helperText_) {
                this.helperText_.showToScreenReader();
              }
            }
            /**
             * Sets the line ripple's transform origin, so that the line ripple activate
             * animation will animate out from the user's click location.
             * @param {!Event} evt
             */

          }, {
            key: 'setTransformOrigin',
            value: function setTransformOrigin(evt) {
              var targetEvent = void 0;

              if (evt.touches) {
                targetEvent = evt.touches[0];
              } else {
                targetEvent = evt;
              }

              var targetClientRect = targetEvent.target.getBoundingClientRect();
              var normalizedX = targetEvent.clientX - targetClientRect.left;
              this.adapter_.setLineRippleTransformOrigin(normalizedX);
            }
            /**
             * Activates the Text Field's focus state in cases when the input value
             * changes without user input (e.g. programatically).
             */

          }, {
            key: 'autoCompleteFocus',
            value: function autoCompleteFocus() {
              if (!this.receivedUserInput_) {
                this.activateFocus();
              }
            }
            /**
             * Deactivates the Text Field's focus state.
             */

          }, {
            key: 'deactivateFocus',
            value: function deactivateFocus() {
              this.isFocused_ = false;
              this.adapter_.deactivateLineRipple();
              var isValid = this.isValid();
              this.styleValidity_(isValid);
              this.styleFocused_(this.isFocused_);

              if (this.adapter_.hasLabel()) {
                this.notchOutline(this.shouldFloat);
                this.adapter_.floatLabel(this.shouldFloat);
                this.adapter_.shakeLabel(this.shouldShake);
              }

              if (!this.shouldFloat) {
                this.receivedUserInput_ = false;
              }
            }
            /**
             * @return {string} The value of the input Element.
             */

          }, {
            key: 'getValue',
            value: function getValue() {
              return this.getNativeInput_().value;
            }
            /**
             * @param {string} value The value to set on the input Element.
             */

          }, {
            key: 'setValue',
            value: function setValue(value) {
              // Prevent Safari from moving the caret to the end of the input when the value has not changed.
              if (this.getValue() !== value) {
                this.getNativeInput_().value = value;
              }

              var isValid = this.isValid();
              this.styleValidity_(isValid);

              if (this.adapter_.hasLabel()) {
                this.notchOutline(this.shouldFloat);
                this.adapter_.floatLabel(this.shouldFloat);
                this.adapter_.shakeLabel(this.shouldShake);
              }
            }
            /**
             * @return {boolean} If a custom validity is set, returns that value.
             *     Otherwise, returns the result of native validity checks.
             */

          }, {
            key: 'isValid',
            value: function isValid() {
              return this.useNativeValidation_ ? this.isNativeInputValid_() : this.isValid_;
            }
            /**
             * @param {boolean} isValid Sets the validity state of the Text Field.
             */

          }, {
            key: 'setValid',
            value: function setValid(isValid) {
              this.isValid_ = isValid;
              this.styleValidity_(isValid);
              var shouldShake = !isValid && !this.isFocused_;

              if (this.adapter_.hasLabel()) {
                this.adapter_.shakeLabel(shouldShake);
              }
            }
            /**
             * Enables or disables the use of native validation. Use this for custom validation.
             * @param {boolean} useNativeValidation Set this to false to ignore native input validation.
             */

          }, {
            key: 'setUseNativeValidation',
            value: function setUseNativeValidation(useNativeValidation) {
              this.useNativeValidation_ = useNativeValidation;
            }
            /**
             * @return {boolean} True if the Text Field is disabled.
             */

          }, {
            key: 'isDisabled',
            value: function isDisabled() {
              return this.getNativeInput_().disabled;
            }
            /**
             * @param {boolean} disabled Sets the text-field disabled or enabled.
             */

          }, {
            key: 'setDisabled',
            value: function setDisabled(disabled) {
              this.getNativeInput_().disabled = disabled;
              this.styleDisabled_(disabled);
            }
            /**
             * @param {string} content Sets the content of the helper text.
             */

          }, {
            key: 'setHelperTextContent',
            value: function setHelperTextContent(content) {
              if (this.helperText_) {
                this.helperText_.setContent(content);
              }
            }
            /**
             * Sets the aria label of the leading icon.
             * @param {string} label
             */

          }, {
            key: 'setLeadingIconAriaLabel',
            value: function setLeadingIconAriaLabel(label) {
              if (this.leadingIcon_) {
                this.leadingIcon_.setAriaLabel(label);
              }
            }
            /**
             * Sets the text content of the leading icon.
             * @param {string} content
             */

          }, {
            key: 'setLeadingIconContent',
            value: function setLeadingIconContent(content) {
              if (this.leadingIcon_) {
                this.leadingIcon_.setContent(content);
              }
            }
            /**
             * Sets the aria label of the trailing icon.
             * @param {string} label
             */

          }, {
            key: 'setTrailingIconAriaLabel',
            value: function setTrailingIconAriaLabel(label) {
              if (this.trailingIcon_) {
                this.trailingIcon_.setAriaLabel(label);
              }
            }
            /**
             * Sets the text content of the trailing icon.
             * @param {string} content
             */

          }, {
            key: 'setTrailingIconContent',
            value: function setTrailingIconContent(content) {
              if (this.trailingIcon_) {
                this.trailingIcon_.setContent(content);
              }
            }
            /**
             * @return {boolean} True if the Text Field input fails in converting the
             *     user-supplied value.
             * @private
             */

          }, {
            key: 'isBadInput_',
            value: function isBadInput_() {
              return this.getNativeInput_().validity.badInput;
            }
            /**
             * @return {boolean} The result of native validity checking
             *     (ValidityState.valid).
             */

          }, {
            key: 'isNativeInputValid_',
            value: function isNativeInputValid_() {
              return this.getNativeInput_().validity.valid;
            }
            /**
             * Styles the component based on the validity state.
             * @param {boolean} isValid
             * @private
             */

          }, {
            key: 'styleValidity_',
            value: function styleValidity_(isValid) {
              var INVALID = MDCTextFieldFoundation.cssClasses.INVALID;

              if (isValid) {
                this.adapter_.removeClass(INVALID);
              } else {
                this.adapter_.addClass(INVALID);
              }

              if (this.helperText_) {
                this.helperText_.setValidity(isValid);
              }
            }
            /**
             * Styles the component based on the focused state.
             * @param {boolean} isFocused
             * @private
             */

          }, {
            key: 'styleFocused_',
            value: function styleFocused_(isFocused) {
              var FOCUSED = MDCTextFieldFoundation.cssClasses.FOCUSED;

              if (isFocused) {
                this.adapter_.addClass(FOCUSED);
              } else {
                this.adapter_.removeClass(FOCUSED);
              }
            }
            /**
             * Styles the component based on the disabled state.
             * @param {boolean} isDisabled
             * @private
             */

          }, {
            key: 'styleDisabled_',
            value: function styleDisabled_(isDisabled) {
              var _MDCTextFieldFoundati = MDCTextFieldFoundation.cssClasses,
                  DISABLED = _MDCTextFieldFoundati.DISABLED,
                  INVALID = _MDCTextFieldFoundati.INVALID;

              if (isDisabled) {
                this.adapter_.addClass(DISABLED);
                this.adapter_.removeClass(INVALID);
              } else {
                this.adapter_.removeClass(DISABLED);
              }

              if (this.leadingIcon_) {
                this.leadingIcon_.setDisabled(isDisabled);
              }

              if (this.trailingIcon_) {
                this.trailingIcon_.setDisabled(isDisabled);
              }
            }
            /**
             * @return {!Element|!NativeInputType} The native text input from the
             * host environment, or a dummy if none exists.
             * @private
             */

          }, {
            key: 'getNativeInput_',
            value: function getNativeInput_() {
              return this.adapter_.getNativeInput() ||
              /** @type {!NativeInputType} */
              {
                value: '',
                disabled: false,
                validity: {
                  badInput: false,
                  valid: true
                }
              };
            }
          }]);

          return MDCTextFieldFoundation;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
        /* default */
        ]);
        /* harmony default export */


        __webpack_exports__["a"] = MDCTextFieldFoundation;
        /***/
      },

      /***/
      161:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "a", function () {
          return MDCTextFieldHelperText;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(84);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(61);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "b", function () {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
        });

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @extends {MDCComponent<!MDCTextFieldHelperTextFoundation>}
         * @final
         */


        var MDCTextFieldHelperText = function (_MDCComponent) {
          _inherits(MDCTextFieldHelperText, _MDCComponent);

          function MDCTextFieldHelperText() {
            _classCallCheck(this, MDCTextFieldHelperText);

            return _possibleConstructorReturn(this, (MDCTextFieldHelperText.__proto__ || Object.getPrototypeOf(MDCTextFieldHelperText)).apply(this, arguments));
          }

          _createClass(MDCTextFieldHelperText, [{
            key: 'getDefaultFoundation',

            /**
             * @return {!MDCTextFieldHelperTextFoundation}
             */
            value: function getDefaultFoundation() {
              var _this2 = this;

              return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
              /* default */
              ](
              /** @type {!MDCTextFieldHelperTextAdapter} */
              _extends({
                addClass: function addClass(className) {
                  return _this2.root_.classList.add(className);
                },
                removeClass: function removeClass(className) {
                  return _this2.root_.classList.remove(className);
                },
                hasClass: function hasClass(className) {
                  return _this2.root_.classList.contains(className);
                },
                setAttr: function setAttr(attr, value) {
                  return _this2.root_.setAttribute(attr, value);
                },
                removeAttr: function removeAttr(attr) {
                  return _this2.root_.removeAttribute(attr);
                },
                setContent: function setContent(content) {
                  _this2.root_.textContent = content;
                }
              }));
            }
          }, {
            key: 'foundation',

            /**
             * @return {!MDCTextFieldHelperTextFoundation}
             */
            get: function get() {
              return this.foundation_;
            }
          }], [{
            key: 'attachTo',

            /**
             * @param {!Element} root
             * @return {!MDCTextFieldHelperText}
             */
            value: function attachTo(root) {
              return new MDCTextFieldHelperText(root);
            }
          }]);

          return MDCTextFieldHelperText;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
        /* default */
        ]);
        /***/

      },

      /***/
      162:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "a", function () {
          return MDCTextFieldIcon;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(85);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(62);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "b", function () {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
        });

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @extends {MDCComponent<!MDCTextFieldIconFoundation>}
         * @final
         */


        var MDCTextFieldIcon = function (_MDCComponent) {
          _inherits(MDCTextFieldIcon, _MDCComponent);

          function MDCTextFieldIcon() {
            _classCallCheck(this, MDCTextFieldIcon);

            return _possibleConstructorReturn(this, (MDCTextFieldIcon.__proto__ || Object.getPrototypeOf(MDCTextFieldIcon)).apply(this, arguments));
          }

          _createClass(MDCTextFieldIcon, [{
            key: 'getDefaultFoundation',

            /**
             * @return {!MDCTextFieldIconFoundation}
             */
            value: function getDefaultFoundation() {
              var _this2 = this;

              return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
              /* default */
              ](
              /** @type {!MDCTextFieldIconAdapter} */
              _extends({
                getAttr: function getAttr(attr) {
                  return _this2.root_.getAttribute(attr);
                },
                setAttr: function setAttr(attr, value) {
                  return _this2.root_.setAttribute(attr, value);
                },
                removeAttr: function removeAttr(attr) {
                  return _this2.root_.removeAttribute(attr);
                },
                setContent: function setContent(content) {
                  _this2.root_.textContent = content;
                },
                registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
                  return _this2.root_.addEventListener(evtType, handler);
                },
                deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
                  return _this2.root_.removeEventListener(evtType, handler);
                },
                notifyIconAction: function notifyIconAction() {
                  return _this2.emit(__WEBPACK_IMPORTED_MODULE_2__foundation__["a"
                  /* default */
                  ].strings.ICON_EVENT, {}
                  /* evtData */
                  , true
                  /* shouldBubble */
                  );
                }
              }));
            }
          }, {
            key: 'foundation',

            /**
             * @return {!MDCTextFieldIconFoundation}
             */
            get: function get() {
              return this.foundation_;
            }
          }], [{
            key: 'attachTo',

            /**
             * @param {!Element} root
             * @return {!MDCTextFieldIcon}
             */
            value: function attachTo(root) {
              return new MDCTextFieldIcon(root);
            }
          }]);

          return MDCTextFieldIcon;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
        /* default */
        ]);
        /***/

      },

      /***/
      2:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "supportsCssVariables", function () {
          return supportsCssVariables;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "applyPassive", function () {
          return applyPassive;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "getMatchesProperty", function () {
          return getMatchesProperty;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "getNormalizedEventCoords", function () {
          return getNormalizedEventCoords;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.
         * @private {boolean|undefined}
         */


        var supportsCssVariables_ = void 0;
        /**
         * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.
         * @private {boolean|undefined}
         */

        var supportsPassive_ = void 0;
        /**
         * @param {!Window} windowObj
         * @return {boolean}
         */

        function detectEdgePseudoVarBug(windowObj) {
          // Detect versions of Edge with buggy var() support
          // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/
          var document = windowObj.document;
          var node = document.createElement('div');
          node.className = 'mdc-ripple-surface--test-edge-var-bug';
          document.body.appendChild(node); // The bug exists if ::before style ends up propagating to the parent element.
          // Additionally, getComputedStyle returns null in iframes with display: "none" in Firefox,
          // but Firefox is known to support CSS custom properties correctly.
          // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397

          var computedStyle = windowObj.getComputedStyle(node);
          var hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';
          node.remove();
          return hasPseudoVarBug;
        }
        /**
         * @param {!Window} windowObj
         * @param {boolean=} forceRefresh
         * @return {boolean|undefined}
         */


        function supportsCssVariables(windowObj) {
          var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          var supportsCssVariables = supportsCssVariables_;

          if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {
            return supportsCssVariables;
          }

          var supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';

          if (!supportsFunctionPresent) {
            return;
          }

          var explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes'); // See: https://bugs.webkit.org/show_bug.cgi?id=154669
          // See: README section on Safari

          var weAreFeatureDetectingSafari10plus = windowObj.CSS.supports('(--css-vars: yes)') && windowObj.CSS.supports('color', '#00000000');

          if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {
            supportsCssVariables = !detectEdgePseudoVarBug(windowObj);
          } else {
            supportsCssVariables = false;
          }

          if (!forceRefresh) {
            supportsCssVariables_ = supportsCssVariables;
          }

          return supportsCssVariables;
        } //

        /**
         * Determine whether the current browser supports passive event listeners, and if so, use them.
         * @param {!Window=} globalObj
         * @param {boolean=} forceRefresh
         * @return {boolean|!EventListenerOptions}
         */


        function applyPassive() {
          var globalObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
          var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

          if (supportsPassive_ === undefined || forceRefresh) {
            var isSupported = false;

            try {
              globalObj.document.addEventListener('test', null, {
                get passive() {
                  isSupported = true;
                  return isSupported;
                }

              });
            } catch (e) {}

            supportsPassive_ = isSupported;
          }

          return supportsPassive_ ?
          /** @type {!EventListenerOptions} */
          {
            passive: true
          } : false;
        }
        /**
         * @param {!Object} HTMLElementPrototype
         * @return {string}
         */


        function getMatchesProperty(HTMLElementPrototype) {
          /**
           * Order is important because we return the first existing method we find.
           * Do not change the order of the items in the below array.
           */
          var matchesMethods = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'];
          var method = 'matches';

          for (var i = 0; i < matchesMethods.length; i++) {
            var matchesMethod = matchesMethods[i];

            if (matchesMethod in HTMLElementPrototype) {
              method = matchesMethod;
              break;
            }
          }

          return method;
        }
        /**
         * @param {!Event} ev
         * @param {{x: number, y: number}} pageOffset
         * @param {!ClientRect} clientRect
         * @return {{x: number, y: number}}
         */


        function getNormalizedEventCoords(ev, pageOffset, clientRect) {
          var x = pageOffset.x,
              y = pageOffset.y;
          var documentX = x + clientRect.left;
          var documentY = y + clientRect.top;
          var normalizedX = void 0;
          var normalizedY = void 0; // Determine touch point relative to the ripple container.

          if (ev.type === 'touchstart') {
            ev =
            /** @type {!TouchEvent} */
            ev;
            normalizedX = ev.changedTouches[0].pageX - documentX;
            normalizedY = ev.changedTouches[0].pageY - documentY;
          } else {
            ev =
            /** @type {!MouseEvent} */
            ev;
            normalizedX = ev.pageX - documentX;
            normalizedY = ev.pageY - documentY;
          }

          return {
            x: normalizedX,
            y: normalizedY
          };
        }
        /***/

      },

      /***/
      20:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2018 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint no-unused-vars: [2, {"args": "none"}] */

        /**
         * Adapter for MDC TextField Line Ripple.
         *
         * Defines the shape of the adapter expected by the foundation. Implement this
         * adapter to integrate the line ripple into your framework. See
         * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
         * for more information.
         *
         * @record
         */


        var MDCLineRippleAdapter = function () {
          function MDCLineRippleAdapter() {
            _classCallCheck(this, MDCLineRippleAdapter);
          }

          _createClass(MDCLineRippleAdapter, [{
            key: "addClass",

            /**
             * Adds a class to the line ripple element.
             * @param {string} className
             */
            value: function addClass(className) {}
            /**
             * Removes a class from the line ripple element.
             * @param {string} className
             */

          }, {
            key: "removeClass",
            value: function removeClass(className) {}
            /**
             * @param {string} className
             * @return {boolean}
             */

          }, {
            key: "hasClass",
            value: function hasClass(className) {}
            /**
             * Sets the style property with propertyName to value on the root element.
             * @param {string} propertyName
             * @param {string} value
             */

          }, {
            key: "setStyle",
            value: function setStyle(propertyName, value) {}
            /**
             * Registers an event listener on the line ripple element for a given event.
             * @param {string} evtType
             * @param {function(!Event): undefined} handler
             */

          }, {
            key: "registerEventHandler",
            value: function registerEventHandler(evtType, handler) {}
            /**
             * Deregisters an event listener on the line ripple element for a given event.
             * @param {string} evtType
             * @param {function(!Event): undefined} handler
             */

          }, {
            key: "deregisterEventHandler",
            value: function deregisterEventHandler(evtType, handler) {}
          }]);

          return MDCLineRippleAdapter;
        }();
        /* unused harmony default export */


        var _unused_webpack_default_export = MDCLineRippleAdapter;
        /***/
      },

      /***/
      22:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint no-unused-vars: [2, {"args": "none"}] */

        /**
         * Adapter for MDC Notched Outline.
         *
         * Defines the shape of the adapter expected by the foundation. Implement this
         * adapter to integrate the Notched Outline into your framework. See
         * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
         * for more information.
         *
         * @record
         */


        var MDCNotchedOutlineAdapter = function () {
          function MDCNotchedOutlineAdapter() {
            _classCallCheck(this, MDCNotchedOutlineAdapter);
          }

          _createClass(MDCNotchedOutlineAdapter, [{
            key: "addClass",

            /**
             * Adds a class to the root element.
             * @param {string} className
             */
            value: function addClass(className) {}
            /**
             * Removes a class from the root element.
             * @param {string} className
             */

          }, {
            key: "removeClass",
            value: function removeClass(className) {}
            /**
             * Sets the width style property of the notch element.
             * @param {number} width
             */

          }, {
            key: "setNotchWidthProperty",
            value: function setNotchWidthProperty(width) {}
            /**
             * Removes the width style property from the notch element.
             */

          }, {
            key: "removeNotchWidthProperty",
            value: function removeNotchWidthProperty() {}
          }]);

          return MDCNotchedOutlineAdapter;
        }();
        /* unused harmony default export */


        var _unused_webpack_default_export = MDCNotchedOutlineAdapter;
        /***/
      },

      /***/
      23:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "a", function () {
          return cssClasses;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "b", function () {
          return numbers;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "c", function () {
          return strings;
        });
        /**
         * @license
         * Copyright 2018 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /** @enum {string} */


        var strings = {
          NOTCH_ELEMENT_SELECTOR: '.mdc-notched-outline__notch'
        };
        /** @enum {number} */

        var numbers = {
          // This should stay in sync with $mdc-notched-outline-padding * 2.
          NOTCH_ELEMENT_PADDING: 8
        };
        /** @enum {string} */

        var cssClasses = {
          OUTLINE_NOTCHED: 'mdc-notched-outline--notched',
          OUTLINE_UPGRADED: 'mdc-notched-outline--upgraded',
          NO_LABEL: 'mdc-notched-outline--no-label'
        };
        /***/
      },

      /***/
      26:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(12);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(27);

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}
         * @final
         */


        var MDCFloatingLabelFoundation = function (_MDCFoundation) {
          _inherits(MDCFloatingLabelFoundation, _MDCFoundation);

          _createClass(MDCFloatingLabelFoundation, null, [{
            key: 'cssClasses',

            /** @return enum {string} */
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ];
            }
            /**
             * {@see MDCFloatingLabelAdapter} for typing information on parameters and return
             * types.
             * @return {!MDCFloatingLabelAdapter}
             */

          }, {
            key: 'defaultAdapter',
            get: function get() {
              return (
                /** @type {!MDCFloatingLabelAdapter} */
                {
                  addClass: function addClass() {},
                  removeClass: function removeClass() {},
                  getWidth: function getWidth() {},
                  registerInteractionHandler: function registerInteractionHandler() {},
                  deregisterInteractionHandler: function deregisterInteractionHandler() {}
                }
              );
            }
            /**
             * @param {!MDCFloatingLabelAdapter} adapter
             */

          }]);

          function MDCFloatingLabelFoundation(adapter) {
            _classCallCheck(this, MDCFloatingLabelFoundation);
            /** @private {function(!Event): undefined} */


            var _this = _possibleConstructorReturn(this, (MDCFloatingLabelFoundation.__proto__ || Object.getPrototypeOf(MDCFloatingLabelFoundation)).call(this, _extends(MDCFloatingLabelFoundation.defaultAdapter, adapter)));

            _this.shakeAnimationEndHandler_ = function () {
              return _this.handleShakeAnimationEnd_();
            };

            return _this;
          }

          _createClass(MDCFloatingLabelFoundation, [{
            key: 'init',
            value: function init() {
              this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);
            }
          }, {
            key: 'destroy',
            value: function destroy() {
              this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);
            }
            /**
             * Returns the width of the label element.
             * @return {number}
             */

          }, {
            key: 'getWidth',
            value: function getWidth() {
              return this.adapter_.getWidth();
            }
            /**
             * Styles the label to produce the label shake for errors.
             * @param {boolean} shouldShake adds shake class if true,
             * otherwise removes shake class.
             */

          }, {
            key: 'shake',
            value: function shake(shouldShake) {
              var LABEL_SHAKE = MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;

              if (shouldShake) {
                this.adapter_.addClass(LABEL_SHAKE);
              } else {
                this.adapter_.removeClass(LABEL_SHAKE);
              }
            }
            /**
             * Styles the label to float or dock.
             * @param {boolean} shouldFloat adds float class if true, otherwise remove
             * float and shake class to dock label.
             */

          }, {
            key: 'float',
            value: function float(shouldFloat) {
              var _MDCFloatingLabelFoun = MDCFloatingLabelFoundation.cssClasses,
                  LABEL_FLOAT_ABOVE = _MDCFloatingLabelFoun.LABEL_FLOAT_ABOVE,
                  LABEL_SHAKE = _MDCFloatingLabelFoun.LABEL_SHAKE;

              if (shouldFloat) {
                this.adapter_.addClass(LABEL_FLOAT_ABOVE);
              } else {
                this.adapter_.removeClass(LABEL_FLOAT_ABOVE);
                this.adapter_.removeClass(LABEL_SHAKE);
              }
            }
            /**
             * Handles an interaction event on the root element.
             */

          }, {
            key: 'handleShakeAnimationEnd_',
            value: function handleShakeAnimationEnd_() {
              var LABEL_SHAKE = MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;
              this.adapter_.removeClass(LABEL_SHAKE);
            }
          }]);

          return MDCFloatingLabelFoundation;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
        /* default */
        ]);
        /* harmony default export */


        __webpack_exports__["a"] = MDCFloatingLabelFoundation;
        /***/
      },

      /***/
      27:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "a", function () {
          return cssClasses;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /** @enum {string} */


        var cssClasses = {
          LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',
          LABEL_SHAKE: 'mdc-floating-label--shake',
          ROOT: 'mdc-floating-label'
        };
        /***/
      },

      /***/
      3:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint no-unused-vars: [2, {"args": "none"}] */

        /**
         * Adapter for MDC Ripple. Provides an interface for managing
         * - classes
         * - dom
         * - CSS variables
         * - position
         * - dimensions
         * - scroll position
         * - event handlers
         * - unbounded, active and disabled states
         *
         * Additionally, provides type information for the adapter to the Closure
         * compiler.
         *
         * Implement this adapter for your framework of choice to delegate updates to
         * the component in your framework of choice. See architecture documentation
         * for more details.
         * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
         *
         * @record
         */


        var MDCRippleAdapter = function () {
          function MDCRippleAdapter() {
            _classCallCheck(this, MDCRippleAdapter);
          }

          _createClass(MDCRippleAdapter, [{
            key: "browserSupportsCssVars",

            /** @return {boolean} */
            value: function browserSupportsCssVars() {}
            /** @return {boolean} */

          }, {
            key: "isUnbounded",
            value: function isUnbounded() {}
            /** @return {boolean} */

          }, {
            key: "isSurfaceActive",
            value: function isSurfaceActive() {}
            /** @return {boolean} */

          }, {
            key: "isSurfaceDisabled",
            value: function isSurfaceDisabled() {}
            /** @param {string} className */

          }, {
            key: "addClass",
            value: function addClass(className) {}
            /** @param {string} className */

          }, {
            key: "removeClass",
            value: function removeClass(className) {}
            /** @param {!EventTarget} target */

          }, {
            key: "containsEventTarget",
            value: function containsEventTarget(target) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "registerInteractionHandler",
            value: function registerInteractionHandler(evtType, handler) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "deregisterInteractionHandler",
            value: function deregisterInteractionHandler(evtType, handler) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "registerDocumentInteractionHandler",
            value: function registerDocumentInteractionHandler(evtType, handler) {}
            /**
             * @param {string} evtType
             * @param {!Function} handler
             */

          }, {
            key: "deregisterDocumentInteractionHandler",
            value: function deregisterDocumentInteractionHandler(evtType, handler) {}
            /**
             * @param {!Function} handler
             */

          }, {
            key: "registerResizeHandler",
            value: function registerResizeHandler(handler) {}
            /**
             * @param {!Function} handler
             */

          }, {
            key: "deregisterResizeHandler",
            value: function deregisterResizeHandler(handler) {}
            /**
             * @param {string} varName
             * @param {?number|string} value
             */

          }, {
            key: "updateCssVariable",
            value: function updateCssVariable(varName, value) {}
            /** @return {!ClientRect} */

          }, {
            key: "computeBoundingRect",
            value: function computeBoundingRect() {}
            /** @return {{x: number, y: number}} */

          }, {
            key: "getWindowPageOffset",
            value: function getWindowPageOffset() {}
          }]);

          return MDCRippleAdapter;
        }();
        /* unused harmony default export */


        var _unused_webpack_default_export = MDCRippleAdapter;
        /***/
      },

      /***/
      30:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "MDCLineRipple", function () {
          return MDCLineRipple;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(20);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(31);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCLineRippleFoundation", function () {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
        });

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2018 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @extends {MDCComponent<!MDCLineRippleFoundation>}
         * @final
         */


        var MDCLineRipple = function (_MDCComponent) {
          _inherits(MDCLineRipple, _MDCComponent);

          function MDCLineRipple() {
            _classCallCheck(this, MDCLineRipple);

            return _possibleConstructorReturn(this, (MDCLineRipple.__proto__ || Object.getPrototypeOf(MDCLineRipple)).apply(this, arguments));
          }

          _createClass(MDCLineRipple, [{
            key: 'activate',

            /**
             * Activates the line ripple
             */
            value: function activate() {
              this.foundation_.activate();
            }
            /**
             * Deactivates the line ripple
             */

          }, {
            key: 'deactivate',
            value: function deactivate() {
              this.foundation_.deactivate();
            }
            /**
             * Sets the transform origin given a user's click location. The `rippleCenter` is the
             * x-coordinate of the middle of the ripple.
             * @param {number} xCoordinate
             */

          }, {
            key: 'setRippleCenter',
            value: function setRippleCenter(xCoordinate) {
              this.foundation_.setRippleCenter(xCoordinate);
            }
            /**
             * @return {!MDCLineRippleFoundation}
             */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              var _this2 = this;

              return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
              /* default */
              ](
              /** @type {!MDCLineRippleAdapter} */
              _extends({
                addClass: function addClass(className) {
                  return _this2.root_.classList.add(className);
                },
                removeClass: function removeClass(className) {
                  return _this2.root_.classList.remove(className);
                },
                hasClass: function hasClass(className) {
                  return _this2.root_.classList.contains(className);
                },
                setStyle: function setStyle(propertyName, value) {
                  return _this2.root_.style[propertyName] = value;
                },
                registerEventHandler: function registerEventHandler(evtType, handler) {
                  return _this2.root_.addEventListener(evtType, handler);
                },
                deregisterEventHandler: function deregisterEventHandler(evtType, handler) {
                  return _this2.root_.removeEventListener(evtType, handler);
                }
              }));
            }
          }], [{
            key: 'attachTo',

            /**
             * @param {!Element} root
             * @return {!MDCLineRipple}
             */
            value: function attachTo(root) {
              return new MDCLineRipple(root);
            }
          }]);

          return MDCLineRipple;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
        /* default */
        ]);
        /***/

      },

      /***/
      31:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(20);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(32);

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2018 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @extends {MDCFoundation<!MDCLineRippleAdapter>}
         * @final
         */


        var MDCLineRippleFoundation = function (_MDCFoundation) {
          _inherits(MDCLineRippleFoundation, _MDCFoundation);

          _createClass(MDCLineRippleFoundation, null, [{
            key: 'cssClasses',

            /** @return enum {string} */
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ];
            }
            /**
             * {@see MDCLineRippleAdapter} for typing information on parameters and return
             * types.
             * @return {!MDCLineRippleAdapter}
             */

          }, {
            key: 'defaultAdapter',
            get: function get() {
              return (
                /** @type {!MDCLineRippleAdapter} */
                {
                  addClass: function addClass() {},
                  removeClass: function removeClass() {},
                  hasClass: function hasClass() {},
                  setStyle: function setStyle() {},
                  registerEventHandler: function registerEventHandler() {},
                  deregisterEventHandler: function deregisterEventHandler() {}
                }
              );
            }
            /**
             * @param {!MDCLineRippleAdapter=} adapter
             */

          }]);

          function MDCLineRippleFoundation(adapter) {
            _classCallCheck(this, MDCLineRippleFoundation);
            /** @private {function(!Event): undefined} */


            var _this = _possibleConstructorReturn(this, (MDCLineRippleFoundation.__proto__ || Object.getPrototypeOf(MDCLineRippleFoundation)).call(this, _extends(MDCLineRippleFoundation.defaultAdapter, adapter)));

            _this.transitionEndHandler_ = function (evt) {
              return _this.handleTransitionEnd(evt);
            };

            return _this;
          }

          _createClass(MDCLineRippleFoundation, [{
            key: 'init',
            value: function init() {
              this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);
            }
          }, {
            key: 'destroy',
            value: function destroy() {
              this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);
            }
            /**
             * Activates the line ripple
             */

          }, {
            key: 'activate',
            value: function activate() {
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].LINE_RIPPLE_DEACTIVATING);
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].LINE_RIPPLE_ACTIVE);
            }
            /**
             * Sets the center of the ripple animation to the given X coordinate.
             * @param {number} xCoordinate
             */

          }, {
            key: 'setRippleCenter',
            value: function setRippleCenter(xCoordinate) {
              this.adapter_.setStyle('transform-origin', xCoordinate + 'px center');
            }
            /**
             * Deactivates the line ripple
             */

          }, {
            key: 'deactivate',
            value: function deactivate() {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].LINE_RIPPLE_DEACTIVATING);
            }
            /**
             * Handles a transition end event
             * @param {!Event} evt
             */

          }, {
            key: 'handleTransitionEnd',
            value: function handleTransitionEnd(evt) {
              // Wait for the line ripple to be either transparent or opaque
              // before emitting the animation end event
              var isDeactivating = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].LINE_RIPPLE_DEACTIVATING);

              if (evt.propertyName === 'opacity') {
                if (isDeactivating) {
                  this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                  /* cssClasses */
                  ].LINE_RIPPLE_ACTIVE);
                  this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                  /* cssClasses */
                  ].LINE_RIPPLE_DEACTIVATING);
                }
              }
            }
          }]);

          return MDCLineRippleFoundation;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
        /* default */
        ]);
        /* harmony default export */


        __webpack_exports__["a"] = MDCLineRippleFoundation;
        /***/
      },

      /***/
      32:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "a", function () {
          return cssClasses;
        });
        /**
         * @license
         * Copyright 2018 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /** @enum {string} */


        var cssClasses = {
          LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',
          LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating'
        };
        /***/
      },

      /***/
      35:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "MDCNotchedOutline", function () {
          return MDCNotchedOutline;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(22);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(36);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__material_floating_label_index__ = __webpack_require__(16);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(23);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCNotchedOutlineFoundation", function () {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
        });

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @extends {MDCComponent<!MDCNotchedOutlineFoundation>}
         * @final
         */


        var MDCNotchedOutline = function (_MDCComponent) {
          _inherits(MDCNotchedOutline, _MDCComponent);

          _createClass(MDCNotchedOutline, null, [{
            key: 'attachTo',

            /**
             * @param {!Element} root
             * @return {!MDCNotchedOutline}
             */
            value: function attachTo(root) {
              return new MDCNotchedOutline(root);
            }
            /** @param {...?} args */

          }]);

          function MDCNotchedOutline() {
            var _ref;

            _classCallCheck(this, MDCNotchedOutline);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            /** @private {Element} */


            var _this = _possibleConstructorReturn(this, (_ref = MDCNotchedOutline.__proto__ || Object.getPrototypeOf(MDCNotchedOutline)).call.apply(_ref, [this].concat(args)));

            _this.notchElement_;
            return _this;
          }

          _createClass(MDCNotchedOutline, [{
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {
              var label = this.root_.querySelector('.' + __WEBPACK_IMPORTED_MODULE_3__material_floating_label_index__["MDCFloatingLabelFoundation"].cssClasses.ROOT);
              this.notchElement_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["c"
              /* strings */
              ].NOTCH_ELEMENT_SELECTOR);

              if (label) {
                label.style.transitionDuration = '0s';
                this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
                /* cssClasses */
                ].OUTLINE_UPGRADED);
                requestAnimationFrame(function () {
                  label.style.transitionDuration = '';
                });
              } else {
                this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
                /* cssClasses */
                ].NO_LABEL);
              }
            }
            /**
              * Updates classes and styles to open the notch to the specified width.
              * @param {number} notchWidth The notch width in the outline.
              */

          }, {
            key: 'notch',
            value: function notch(notchWidth) {
              this.foundation_.notch(notchWidth);
            }
            /**
             * Updates classes and styles to close the notch.
             */

          }, {
            key: 'closeNotch',
            value: function closeNotch() {
              this.foundation_.closeNotch();
            }
            /**
             * @return {!MDCNotchedOutlineFoundation}
             */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              var _this2 = this;

              return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
              /* default */
              ](
              /** @type {!MDCNotchedOutlineAdapter} */
              _extends({
                addClass: function addClass(className) {
                  return _this2.root_.classList.add(className);
                },
                removeClass: function removeClass(className) {
                  return _this2.root_.classList.remove(className);
                },
                setNotchWidthProperty: function setNotchWidthProperty(width) {
                  return _this2.notchElement_.style.setProperty('width', width + 'px');
                },
                removeNotchWidthProperty: function removeNotchWidthProperty() {
                  return _this2.notchElement_.style.removeProperty('width');
                }
              }));
            }
          }]);

          return MDCNotchedOutline;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
        /* default */
        ]);
        /***/

      },

      /***/
      36:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(22);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(23);

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}
         * @final
         */


        var MDCNotchedOutlineFoundation = function (_MDCFoundation) {
          _inherits(MDCNotchedOutlineFoundation, _MDCFoundation);

          _createClass(MDCNotchedOutlineFoundation, null, [{
            key: 'strings',

            /** @return enum {string} */
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["c"
              /* strings */
              ];
            }
            /** @return enum {string} */

          }, {
            key: 'cssClasses',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ];
            }
            /** @return enum {number} */

          }, {
            key: 'numbers',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ];
            }
            /**
             * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return
             * types.
             * @return {!MDCNotchedOutlineAdapter}
             */

          }, {
            key: 'defaultAdapter',
            get: function get() {
              return (
                /** @type {!MDCNotchedOutlineAdapter} */
                {
                  addClass: function addClass() {},
                  removeClass: function removeClass() {},
                  setNotchWidthProperty: function setNotchWidthProperty() {},
                  removeNotchWidthProperty: function removeNotchWidthProperty() {}
                }
              );
            }
            /**
             * @param {!MDCNotchedOutlineAdapter} adapter
             */

          }]);

          function MDCNotchedOutlineFoundation(adapter) {
            _classCallCheck(this, MDCNotchedOutlineFoundation);

            return _possibleConstructorReturn(this, (MDCNotchedOutlineFoundation.__proto__ || Object.getPrototypeOf(MDCNotchedOutlineFoundation)).call(this, _extends(MDCNotchedOutlineFoundation.defaultAdapter, adapter)));
          }
          /**
           * Adds the outline notched selector and updates the notch width
           * calculated based off of notchWidth.
           * @param {number} notchWidth
           */


          _createClass(MDCNotchedOutlineFoundation, [{
            key: 'notch',
            value: function notch(notchWidth) {
              var OUTLINE_NOTCHED = MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;

              if (notchWidth > 0) {
                notchWidth += __WEBPACK_IMPORTED_MODULE_2__constants__["b"
                /* numbers */
                ].NOTCH_ELEMENT_PADDING; // Add padding from left/right.
              }

              this.adapter_.setNotchWidthProperty(notchWidth);
              this.adapter_.addClass(OUTLINE_NOTCHED);
            }
            /**
             * Removes notched outline selector to close the notch in the outline.
             */

          }, {
            key: 'closeNotch',
            value: function closeNotch() {
              var OUTLINE_NOTCHED = MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;
              this.adapter_.removeClass(OUTLINE_NOTCHED);
              this.adapter_.removeNotchWidthProperty();
            }
          }]);

          return MDCNotchedOutlineFoundation;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
        /* default */
        ]);
        /* harmony default export */


        __webpack_exports__["a"] = MDCNotchedOutlineFoundation;
        /***/
      },

      /***/
      4:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "MDCRipple", function () {
          return MDCRipple;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "RippleCapableSurface", function () {
          return RippleCapableSurface;
        });
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(3);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(5);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(2);
        /* harmony reexport (binding) */


        __webpack_require__.d(__webpack_exports__, "MDCRippleFoundation", function () {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
        });
        /* harmony reexport (module object) */


        __webpack_require__.d(__webpack_exports__, "util", function () {
          return __WEBPACK_IMPORTED_MODULE_3__util__;
        });

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @extends MDCComponent<!MDCRippleFoundation>
         */


        var MDCRipple = function (_MDCComponent) {
          _inherits(MDCRipple, _MDCComponent);
          /** @param {...?} args */


          function MDCRipple() {
            var _ref;

            _classCallCheck(this, MDCRipple);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            /** @type {boolean} */


            var _this = _possibleConstructorReturn(this, (_ref = MDCRipple.__proto__ || Object.getPrototypeOf(MDCRipple)).call.apply(_ref, [this].concat(args)));

            _this.disabled = false;
            /** @private {boolean} */

            _this.unbounded_;
            return _this;
          }
          /**
           * @param {!Element} root
           * @param {{isUnbounded: (boolean|undefined)}=} options
           * @return {!MDCRipple}
           */


          _createClass(MDCRipple, [{
            key: 'setUnbounded_',

            /**
             * Closure Compiler throws an access control error when directly accessing a
             * protected or private property inside a getter/setter, like unbounded above.
             * By accessing the protected property inside a method, we solve that problem.
             * That's why this function exists.
             * @private
             */
            value: function setUnbounded_() {
              this.foundation_.setUnbounded(this.unbounded_);
            }
          }, {
            key: 'activate',
            value: function activate() {
              this.foundation_.activate();
            }
          }, {
            key: 'deactivate',
            value: function deactivate() {
              this.foundation_.deactivate();
            }
          }, {
            key: 'layout',
            value: function layout() {
              this.foundation_.layout();
            }
            /**
             * @return {!MDCRippleFoundation}
             * @override
             */

          }, {
            key: 'getDefaultFoundation',
            value: function getDefaultFoundation() {
              return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
              /* default */
              ](MDCRipple.createAdapter(this));
            }
            /** @override */

          }, {
            key: 'initialSyncWithDOM',
            value: function initialSyncWithDOM() {
              this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;
            }
          }, {
            key: 'unbounded',

            /** @return {boolean} */
            get: function get() {
              return this.unbounded_;
            }
            /** @param {boolean} unbounded */
            ,
            set: function set(unbounded) {
              this.unbounded_ = Boolean(unbounded);
              this.setUnbounded_();
            }
          }], [{
            key: 'attachTo',
            value: function attachTo(root) {
              var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
                  _ref2$isUnbounded = _ref2.isUnbounded,
                  isUnbounded = _ref2$isUnbounded === undefined ? undefined : _ref2$isUnbounded;

              var ripple = new MDCRipple(root); // Only override unbounded behavior if option is explicitly specified

              if (isUnbounded !== undefined) {
                ripple.unbounded =
                /** @type {boolean} */
                isUnbounded;
              }

              return ripple;
            }
            /**
             * @param {!RippleCapableSurface} instance
             * @return {!MDCRippleAdapter}
             */

          }, {
            key: 'createAdapter',
            value: function createAdapter(instance) {
              var MATCHES = __WEBPACK_IMPORTED_MODULE_3__util__["getMatchesProperty"](HTMLElement.prototype);

              return {
                browserSupportsCssVars: function browserSupportsCssVars() {
                  return __WEBPACK_IMPORTED_MODULE_3__util__["supportsCssVariables"](window);
                },
                isUnbounded: function isUnbounded() {
                  return instance.unbounded;
                },
                isSurfaceActive: function isSurfaceActive() {
                  return instance.root_[MATCHES](':active');
                },
                isSurfaceDisabled: function isSurfaceDisabled() {
                  return instance.disabled;
                },
                addClass: function addClass(className) {
                  return instance.root_.classList.add(className);
                },
                removeClass: function removeClass(className) {
                  return instance.root_.classList.remove(className);
                },
                containsEventTarget: function containsEventTarget(target) {
                  return instance.root_.contains(target);
                },
                registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
                  return instance.root_.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
                  return instance.root_.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                registerDocumentInteractionHandler: function registerDocumentInteractionHandler(evtType, handler) {
                  return document.documentElement.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler(evtType, handler) {
                  return document.documentElement.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
                },
                registerResizeHandler: function registerResizeHandler(handler) {
                  return window.addEventListener('resize', handler);
                },
                deregisterResizeHandler: function deregisterResizeHandler(handler) {
                  return window.removeEventListener('resize', handler);
                },
                updateCssVariable: function updateCssVariable(varName, value) {
                  return instance.root_.style.setProperty(varName, value);
                },
                computeBoundingRect: function computeBoundingRect() {
                  return instance.root_.getBoundingClientRect();
                },
                getWindowPageOffset: function getWindowPageOffset() {
                  return {
                    x: window.pageXOffset,
                    y: window.pageYOffset
                  };
                }
              };
            }
          }]);

          return MDCRipple;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
        /* default */
        ]);
        /**
         * See Material Design spec for more details on when to use ripples.
         * https://material.io/guidelines/motion/choreography.html#choreography-creation
         * @record
         */


        var RippleCapableSurface = function RippleCapableSurface() {
          _classCallCheck(this, RippleCapableSurface);
        };
        /** @protected {!Element} */


        RippleCapableSurface.prototype.root_;
        /**
         * Whether or not the ripple bleeds out of the bounds of the element.
         * @type {boolean|undefined}
         */

        RippleCapableSurface.prototype.unbounded;
        /**
         * Whether or not the ripple is attached to a disabled component.
         * @type {boolean|undefined}
         */

        RippleCapableSurface.prototype.disabled;
        /***/
      },

      /***/
      5:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(3);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(6);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(2);

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @typedef {{
         *   isActivated: (boolean|undefined),
         *   hasDeactivationUXRun: (boolean|undefined),
         *   wasActivatedByPointer: (boolean|undefined),
         *   wasElementMadeActive: (boolean|undefined),
         *   activationEvent: (!Event|undefined),
         *   isProgrammatic: (boolean|undefined)
         * }}
         */


        var ActivationStateType = void 0;
        /**
         * @typedef {{
         *   activate: (string|undefined),
         *   deactivate: (string|undefined),
         *   focus: (string|undefined),
         *   blur: (string|undefined)
         * }}
         */

        var ListenerInfoType = void 0;
        /**
         * @typedef {{
         *   activate: function(!Event),
         *   deactivate: function(!Event=),
         *   focus: function(),
         *   blur: function()
         * }}
         */

        var ListenersType = void 0;
        /**
         * @typedef {{
         *   x: number,
         *   y: number
         * }}
         */

        var PointType = void 0; // Activation events registered on the root element of each instance for activation

        var ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown']; // Deactivation events registered on documentElement when a pointer-related down event occurs

        var POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu']; // Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations

        /** @type {!Array<!EventTarget>} */

        var activatedTargets = [];
        /**
         * @extends {MDCFoundation<!MDCRippleAdapter>}
         */

        var MDCRippleFoundation = function (_MDCFoundation) {
          _inherits(MDCRippleFoundation, _MDCFoundation);

          _createClass(MDCRippleFoundation, null, [{
            key: 'cssClasses',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ];
            }
          }, {
            key: 'strings',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["c"
              /* strings */
              ];
            }
          }, {
            key: 'numbers',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ];
            }
          }, {
            key: 'defaultAdapter',
            get: function get() {
              return {
                browserSupportsCssVars: function browserSupportsCssVars()
                /* boolean - cached */
                {},
                isUnbounded: function isUnbounded()
                /* boolean */
                {},
                isSurfaceActive: function isSurfaceActive()
                /* boolean */
                {},
                isSurfaceDisabled: function isSurfaceDisabled()
                /* boolean */
                {},
                addClass: function addClass()
                /* className: string */
                {},
                removeClass: function removeClass()
                /* className: string */
                {},
                containsEventTarget: function containsEventTarget()
                /* target: !EventTarget */
                {},
                registerInteractionHandler: function registerInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                deregisterInteractionHandler: function deregisterInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                registerDocumentInteractionHandler: function registerDocumentInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler()
                /* evtType: string, handler: EventListener */
                {},
                registerResizeHandler: function registerResizeHandler()
                /* handler: EventListener */
                {},
                deregisterResizeHandler: function deregisterResizeHandler()
                /* handler: EventListener */
                {},
                updateCssVariable: function updateCssVariable()
                /* varName: string, value: string */
                {},
                computeBoundingRect: function computeBoundingRect()
                /* ClientRect */
                {},
                getWindowPageOffset: function getWindowPageOffset()
                /* {x: number, y: number} */
                {}
              };
            }
          }]);

          function MDCRippleFoundation(adapter) {
            _classCallCheck(this, MDCRippleFoundation);
            /** @private {number} */


            var _this = _possibleConstructorReturn(this, (MDCRippleFoundation.__proto__ || Object.getPrototypeOf(MDCRippleFoundation)).call(this, _extends(MDCRippleFoundation.defaultAdapter, adapter)));

            _this.layoutFrame_ = 0;
            /** @private {!ClientRect} */

            _this.frame_ =
            /** @type {!ClientRect} */
            {
              width: 0,
              height: 0
            };
            /** @private {!ActivationStateType} */

            _this.activationState_ = _this.defaultActivationState_();
            /** @private {number} */

            _this.initialSize_ = 0;
            /** @private {number} */

            _this.maxRadius_ = 0;
            /** @private {function(!Event)} */

            _this.activateHandler_ = function (e) {
              return _this.activate_(e);
            };
            /** @private {function(!Event=)} */


            _this.deactivateHandler_ = function () {
              return _this.deactivate_();
            };
            /** @private {function(!Event=)} */


            _this.focusHandler_ = function () {
              return _this.handleFocus();
            };
            /** @private {function(!Event=)} */


            _this.blurHandler_ = function () {
              return _this.handleBlur();
            };
            /** @private {!Function} */


            _this.resizeHandler_ = function () {
              return _this.layout();
            };
            /** @private {{left: number, top:number}} */


            _this.unboundedCoords_ = {
              left: 0,
              top: 0
            };
            /** @private {number} */

            _this.fgScale_ = 0;
            /** @private {number} */

            _this.activationTimer_ = 0;
            /** @private {number} */

            _this.fgDeactivationRemovalTimer_ = 0;
            /** @private {boolean} */

            _this.activationAnimationHasEnded_ = false;
            /** @private {!Function} */

            _this.activationTimerCallback_ = function () {
              _this.activationAnimationHasEnded_ = true;

              _this.runDeactivationUXLogicIfReady_();
            };
            /** @private {!Event|undefined} */


            _this.previousActivationEvent_;
            return _this;
          }
          /**
           * We compute this property so that we are not querying information about the client
           * until the point in time where the foundation requests it. This prevents scenarios where
           * client-side feature-detection may happen too early, such as when components are rendered on the server
           * and then initialized at mount time on the client.
           * @return {boolean}
           * @private
           */


          _createClass(MDCRippleFoundation, [{
            key: 'supportsPressRipple_',
            value: function supportsPressRipple_() {
              return this.adapter_.browserSupportsCssVars();
            }
            /**
             * @return {!ActivationStateType}
             */

          }, {
            key: 'defaultActivationState_',
            value: function defaultActivationState_() {
              return {
                isActivated: false,
                hasDeactivationUXRun: false,
                wasActivatedByPointer: false,
                wasElementMadeActive: false,
                activationEvent: undefined,
                isProgrammatic: false
              };
            }
            /** @override */

          }, {
            key: 'init',
            value: function init() {
              var _this2 = this;

              var supportsPressRipple = this.supportsPressRipple_();
              this.registerRootHandlers_(supportsPressRipple);

              if (supportsPressRipple) {
                var _MDCRippleFoundation$ = MDCRippleFoundation.cssClasses,
                    ROOT = _MDCRippleFoundation$.ROOT,
                    UNBOUNDED = _MDCRippleFoundation$.UNBOUNDED;
                requestAnimationFrame(function () {
                  _this2.adapter_.addClass(ROOT);

                  if (_this2.adapter_.isUnbounded()) {
                    _this2.adapter_.addClass(UNBOUNDED); // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple


                    _this2.layoutInternal_();
                  }
                });
              }
            }
            /** @override */

          }, {
            key: 'destroy',
            value: function destroy() {
              var _this3 = this;

              if (this.supportsPressRipple_()) {
                if (this.activationTimer_) {
                  clearTimeout(this.activationTimer_);
                  this.activationTimer_ = 0;
                  this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);
                }

                if (this.fgDeactivationRemovalTimer_) {
                  clearTimeout(this.fgDeactivationRemovalTimer_);
                  this.fgDeactivationRemovalTimer_ = 0;
                  this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);
                }

                var _MDCRippleFoundation$2 = MDCRippleFoundation.cssClasses,
                    ROOT = _MDCRippleFoundation$2.ROOT,
                    UNBOUNDED = _MDCRippleFoundation$2.UNBOUNDED;
                requestAnimationFrame(function () {
                  _this3.adapter_.removeClass(ROOT);

                  _this3.adapter_.removeClass(UNBOUNDED);

                  _this3.removeCssVars_();
                });
              }

              this.deregisterRootHandlers_();
              this.deregisterDeactivationHandlers_();
            }
            /**
             * @param {boolean} supportsPressRipple Passed from init to save a redundant function call
             * @private
             */

          }, {
            key: 'registerRootHandlers_',
            value: function registerRootHandlers_(supportsPressRipple) {
              var _this4 = this;

              if (supportsPressRipple) {
                ACTIVATION_EVENT_TYPES.forEach(function (type) {
                  _this4.adapter_.registerInteractionHandler(type, _this4.activateHandler_);
                });

                if (this.adapter_.isUnbounded()) {
                  this.adapter_.registerResizeHandler(this.resizeHandler_);
                }
              }

              this.adapter_.registerInteractionHandler('focus', this.focusHandler_);
              this.adapter_.registerInteractionHandler('blur', this.blurHandler_);
            }
            /**
             * @param {!Event} e
             * @private
             */

          }, {
            key: 'registerDeactivationHandlers_',
            value: function registerDeactivationHandlers_(e) {
              var _this5 = this;

              if (e.type === 'keydown') {
                this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);
              } else {
                POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
                  _this5.adapter_.registerDocumentInteractionHandler(type, _this5.deactivateHandler_);
                });
              }
            }
            /** @private */

          }, {
            key: 'deregisterRootHandlers_',
            value: function deregisterRootHandlers_() {
              var _this6 = this;

              ACTIVATION_EVENT_TYPES.forEach(function (type) {
                _this6.adapter_.deregisterInteractionHandler(type, _this6.activateHandler_);
              });
              this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);
              this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);

              if (this.adapter_.isUnbounded()) {
                this.adapter_.deregisterResizeHandler(this.resizeHandler_);
              }
            }
            /** @private */

          }, {
            key: 'deregisterDeactivationHandlers_',
            value: function deregisterDeactivationHandlers_() {
              var _this7 = this;

              this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);
              POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
                _this7.adapter_.deregisterDocumentInteractionHandler(type, _this7.deactivateHandler_);
              });
            }
            /** @private */

          }, {
            key: 'removeCssVars_',
            value: function removeCssVars_() {
              var _this8 = this;

              var strings = MDCRippleFoundation.strings;
              Object.keys(strings).forEach(function (k) {
                if (k.indexOf('VAR_') === 0) {
                  _this8.adapter_.updateCssVariable(strings[k], null);
                }
              });
            }
            /**
             * @param {!Event=} e
             * @private
             */

          }, {
            key: 'activate_',
            value: function activate_(e) {
              var _this9 = this;

              if (this.adapter_.isSurfaceDisabled()) {
                return;
              }

              var activationState = this.activationState_;

              if (activationState.isActivated) {
                return;
              } // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction


              var previousActivationEvent = this.previousActivationEvent_;
              var isSameInteraction = previousActivationEvent && e !== undefined && previousActivationEvent.type !== e.type;

              if (isSameInteraction) {
                return;
              }

              activationState.isActivated = true;
              activationState.isProgrammatic = e === undefined;
              activationState.activationEvent = e;
              activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e !== undefined && (e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown');
              var hasActivatedChild = e !== undefined && activatedTargets.length > 0 && activatedTargets.some(function (target) {
                return _this9.adapter_.containsEventTarget(target);
              });

              if (hasActivatedChild) {
                // Immediately reset activation state, while preserving logic that prevents touch follow-on events
                this.resetActivationState_();
                return;
              }

              if (e !== undefined) {
                activatedTargets.push(
                /** @type {!EventTarget} */
                e.target);
                this.registerDeactivationHandlers_(e);
              }

              activationState.wasElementMadeActive = this.checkElementMadeActive_(e);

              if (activationState.wasElementMadeActive) {
                this.animateActivation_();
              }

              requestAnimationFrame(function () {
                // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples
                activatedTargets = [];

                if (!activationState.wasElementMadeActive && e !== undefined && (e.key === ' ' || e.keyCode === 32)) {
                  // If space was pressed, try again within an rAF call to detect :active, because different UAs report
                  // active states inconsistently when they're called within event handling code:
                  // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971
                  // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741
                  // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS
                  // variable is set within a rAF callback for a submit button interaction (#2241).
                  activationState.wasElementMadeActive = _this9.checkElementMadeActive_(e);

                  if (activationState.wasElementMadeActive) {
                    _this9.animateActivation_();
                  }
                }

                if (!activationState.wasElementMadeActive) {
                  // Reset activation state immediately if element was not made active.
                  _this9.activationState_ = _this9.defaultActivationState_();
                }
              });
            }
            /**
             * @param {!Event=} e
             * @private
             */

          }, {
            key: 'checkElementMadeActive_',
            value: function checkElementMadeActive_(e) {
              return e !== undefined && e.type === 'keydown' ? this.adapter_.isSurfaceActive() : true;
            }
            /**
             * @param {!Event=} event Optional event containing position information.
             */

          }, {
            key: 'activate',
            value: function activate(event) {
              this.activate_(event);
            }
            /** @private */

          }, {
            key: 'animateActivation_',
            value: function animateActivation_() {
              var _this10 = this;

              var _MDCRippleFoundation$3 = MDCRippleFoundation.strings,
                  VAR_FG_TRANSLATE_START = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_START,
                  VAR_FG_TRANSLATE_END = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_END;
              var _MDCRippleFoundation$4 = MDCRippleFoundation.cssClasses,
                  FG_DEACTIVATION = _MDCRippleFoundation$4.FG_DEACTIVATION,
                  FG_ACTIVATION = _MDCRippleFoundation$4.FG_ACTIVATION;
              var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;
              this.layoutInternal_();
              var translateStart = '';
              var translateEnd = '';

              if (!this.adapter_.isUnbounded()) {
                var _getFgTranslationCoor = this.getFgTranslationCoordinates_(),
                    startPoint = _getFgTranslationCoor.startPoint,
                    endPoint = _getFgTranslationCoor.endPoint;

                translateStart = startPoint.x + 'px, ' + startPoint.y + 'px';
                translateEnd = endPoint.x + 'px, ' + endPoint.y + 'px';
              }

              this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);
              this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd); // Cancel any ongoing activation/deactivation animations

              clearTimeout(this.activationTimer_);
              clearTimeout(this.fgDeactivationRemovalTimer_);
              this.rmBoundedActivationClasses_();
              this.adapter_.removeClass(FG_DEACTIVATION); // Force layout in order to re-trigger the animation.

              this.adapter_.computeBoundingRect();
              this.adapter_.addClass(FG_ACTIVATION);
              this.activationTimer_ = setTimeout(function () {
                return _this10.activationTimerCallback_();
              }, DEACTIVATION_TIMEOUT_MS);
            }
            /**
             * @private
             * @return {{startPoint: PointType, endPoint: PointType}}
             */

          }, {
            key: 'getFgTranslationCoordinates_',
            value: function getFgTranslationCoordinates_() {
              var _activationState_ = this.activationState_,
                  activationEvent = _activationState_.activationEvent,
                  wasActivatedByPointer = _activationState_.wasActivatedByPointer;
              var startPoint = void 0;

              if (wasActivatedByPointer) {
                startPoint = Object(__WEBPACK_IMPORTED_MODULE_3__util__["getNormalizedEventCoords"])(
                /** @type {!Event} */
                activationEvent, this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect());
              } else {
                startPoint = {
                  x: this.frame_.width / 2,
                  y: this.frame_.height / 2
                };
              } // Center the element around the start point.


              startPoint = {
                x: startPoint.x - this.initialSize_ / 2,
                y: startPoint.y - this.initialSize_ / 2
              };
              var endPoint = {
                x: this.frame_.width / 2 - this.initialSize_ / 2,
                y: this.frame_.height / 2 - this.initialSize_ / 2
              };
              return {
                startPoint: startPoint,
                endPoint: endPoint
              };
            }
            /** @private */

          }, {
            key: 'runDeactivationUXLogicIfReady_',
            value: function runDeactivationUXLogicIfReady_() {
              var _this11 = this; // This method is called both when a pointing device is released, and when the activation animation ends.
              // The deactivation animation should only run after both of those occur.


              var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;
              var _activationState_2 = this.activationState_,
                  hasDeactivationUXRun = _activationState_2.hasDeactivationUXRun,
                  isActivated = _activationState_2.isActivated;
              var activationHasEnded = hasDeactivationUXRun || !isActivated;

              if (activationHasEnded && this.activationAnimationHasEnded_) {
                this.rmBoundedActivationClasses_();
                this.adapter_.addClass(FG_DEACTIVATION);
                this.fgDeactivationRemovalTimer_ = setTimeout(function () {
                  _this11.adapter_.removeClass(FG_DEACTIVATION);
                }, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
                /* numbers */
                ].FG_DEACTIVATION_MS);
              }
            }
            /** @private */

          }, {
            key: 'rmBoundedActivationClasses_',
            value: function rmBoundedActivationClasses_() {
              var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;
              this.adapter_.removeClass(FG_ACTIVATION);
              this.activationAnimationHasEnded_ = false;
              this.adapter_.computeBoundingRect();
            }
          }, {
            key: 'resetActivationState_',
            value: function resetActivationState_() {
              var _this12 = this;

              this.previousActivationEvent_ = this.activationState_.activationEvent;
              this.activationState_ = this.defaultActivationState_(); // Touch devices may fire additional events for the same interaction within a short time.
              // Store the previous event until it's safe to assume that subsequent events are for new interactions.

              setTimeout(function () {
                return _this12.previousActivationEvent_ = undefined;
              }, MDCRippleFoundation.numbers.TAP_DELAY_MS);
            }
            /**
             * @private
             */

          }, {
            key: 'deactivate_',
            value: function deactivate_() {
              var _this13 = this;

              var activationState = this.activationState_; // This can happen in scenarios such as when you have a keyup event that blurs the element.

              if (!activationState.isActivated) {
                return;
              }

              var state =
              /** @type {!ActivationStateType} */
              _extends({}, activationState);

              if (activationState.isProgrammatic) {
                requestAnimationFrame(function () {
                  return _this13.animateDeactivation_(state);
                });
                this.resetActivationState_();
              } else {
                this.deregisterDeactivationHandlers_();
                requestAnimationFrame(function () {
                  _this13.activationState_.hasDeactivationUXRun = true;

                  _this13.animateDeactivation_(state);

                  _this13.resetActivationState_();
                });
              }
            }
          }, {
            key: 'deactivate',
            value: function deactivate() {
              this.deactivate_();
            }
            /**
             * @param {!ActivationStateType} options
             * @private
             */

          }, {
            key: 'animateDeactivation_',
            value: function animateDeactivation_(_ref) {
              var wasActivatedByPointer = _ref.wasActivatedByPointer,
                  wasElementMadeActive = _ref.wasElementMadeActive;

              if (wasActivatedByPointer || wasElementMadeActive) {
                this.runDeactivationUXLogicIfReady_();
              }
            }
          }, {
            key: 'layout',
            value: function layout() {
              var _this14 = this;

              if (this.layoutFrame_) {
                cancelAnimationFrame(this.layoutFrame_);
              }

              this.layoutFrame_ = requestAnimationFrame(function () {
                _this14.layoutInternal_();

                _this14.layoutFrame_ = 0;
              });
            }
            /** @private */

          }, {
            key: 'layoutInternal_',
            value: function layoutInternal_() {
              var _this15 = this;

              this.frame_ = this.adapter_.computeBoundingRect();
              var maxDim = Math.max(this.frame_.height, this.frame_.width); // Surface diameter is treated differently for unbounded vs. bounded ripples.
              // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately
              // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically
              // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter
              // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via
              // `overflow: hidden`.

              var getBoundedRadius = function getBoundedRadius() {
                var hypotenuse = Math.sqrt(Math.pow(_this15.frame_.width, 2) + Math.pow(_this15.frame_.height, 2));
                return hypotenuse + MDCRippleFoundation.numbers.PADDING;
              };

              this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius(); // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform

              this.initialSize_ = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);
              this.fgScale_ = this.maxRadius_ / this.initialSize_;
              this.updateLayoutCssVars_();
            }
            /** @private */

          }, {
            key: 'updateLayoutCssVars_',
            value: function updateLayoutCssVars_() {
              var _MDCRippleFoundation$5 = MDCRippleFoundation.strings,
                  VAR_FG_SIZE = _MDCRippleFoundation$5.VAR_FG_SIZE,
                  VAR_LEFT = _MDCRippleFoundation$5.VAR_LEFT,
                  VAR_TOP = _MDCRippleFoundation$5.VAR_TOP,
                  VAR_FG_SCALE = _MDCRippleFoundation$5.VAR_FG_SCALE;
              this.adapter_.updateCssVariable(VAR_FG_SIZE, this.initialSize_ + 'px');
              this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);

              if (this.adapter_.isUnbounded()) {
                this.unboundedCoords_ = {
                  left: Math.round(this.frame_.width / 2 - this.initialSize_ / 2),
                  top: Math.round(this.frame_.height / 2 - this.initialSize_ / 2)
                };
                this.adapter_.updateCssVariable(VAR_LEFT, this.unboundedCoords_.left + 'px');
                this.adapter_.updateCssVariable(VAR_TOP, this.unboundedCoords_.top + 'px');
              }
            }
            /** @param {boolean} unbounded */

          }, {
            key: 'setUnbounded',
            value: function setUnbounded(unbounded) {
              var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;

              if (unbounded) {
                this.adapter_.addClass(UNBOUNDED);
              } else {
                this.adapter_.removeClass(UNBOUNDED);
              }
            }
          }, {
            key: 'handleFocus',
            value: function handleFocus() {
              var _this16 = this;

              requestAnimationFrame(function () {
                return _this16.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
              });
            }
          }, {
            key: 'handleBlur',
            value: function handleBlur() {
              var _this17 = this;

              requestAnimationFrame(function () {
                return _this17.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
              });
            }
          }]);

          return MDCRippleFoundation;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
        /* default */
        ]);
        /* harmony default export */


        __webpack_exports__["a"] = MDCRippleFoundation;
        /***/
      },

      /***/
      6:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "a", function () {
          return cssClasses;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "c", function () {
          return strings;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "b", function () {
          return numbers;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */


        var cssClasses = {
          // Ripple is a special case where the "root" component is really a "mixin" of sorts,
          // given that it's an 'upgrade' to an existing component. That being said it is the root
          // CSS class that all other CSS classes derive from.
          ROOT: 'mdc-ripple-upgraded',
          UNBOUNDED: 'mdc-ripple-upgraded--unbounded',
          BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',
          FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',
          FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation'
        };
        var strings = {
          VAR_LEFT: '--mdc-ripple-left',
          VAR_TOP: '--mdc-ripple-top',
          VAR_FG_SIZE: '--mdc-ripple-fg-size',
          VAR_FG_SCALE: '--mdc-ripple-fg-scale',
          VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',
          VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end'
        };
        var numbers = {
          PADDING: 10,
          INITIAL_ORIGIN_SCALE: 0.6,
          DEACTIVATION_TIMEOUT_MS: 225,
          // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)
          FG_DEACTIVATION_MS: 150,
          // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)
          TAP_DELAY_MS: 300
        };
        /***/
      },

      /***/
      61:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(84);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(158);

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}
         * @final
         */


        var MDCTextFieldHelperTextFoundation = function (_MDCFoundation) {
          _inherits(MDCTextFieldHelperTextFoundation, _MDCFoundation);

          _createClass(MDCTextFieldHelperTextFoundation, null, [{
            key: 'cssClasses',

            /** @return enum {string} */
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ];
            }
            /** @return enum {string} */

          }, {
            key: 'strings',
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ];
            }
            /**
             * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return
             * types.
             * @return {!MDCTextFieldHelperTextAdapter}
             */

          }, {
            key: 'defaultAdapter',
            get: function get() {
              return (
                /** @type {!MDCTextFieldHelperTextAdapter} */
                {
                  addClass: function addClass() {},
                  removeClass: function removeClass() {},
                  hasClass: function hasClass() {},
                  setAttr: function setAttr() {},
                  removeAttr: function removeAttr() {},
                  setContent: function setContent() {}
                }
              );
            }
            /**
             * @param {!MDCTextFieldHelperTextAdapter} adapter
             */

          }]);

          function MDCTextFieldHelperTextFoundation(adapter) {
            _classCallCheck(this, MDCTextFieldHelperTextFoundation);

            return _possibleConstructorReturn(this, (MDCTextFieldHelperTextFoundation.__proto__ || Object.getPrototypeOf(MDCTextFieldHelperTextFoundation)).call(this, _extends(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter)));
          }
          /**
           * Sets the content of the helper text field.
           * @param {string} content
           */


          _createClass(MDCTextFieldHelperTextFoundation, [{
            key: 'setContent',
            value: function setContent(content) {
              this.adapter_.setContent(content);
            }
            /** @param {boolean} isPersistent Sets the persistency of the helper text. */

          }, {
            key: 'setPersistent',
            value: function setPersistent(isPersistent) {
              if (isPersistent) {
                this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].HELPER_TEXT_PERSISTENT);
              } else {
                this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].HELPER_TEXT_PERSISTENT);
              }
            }
            /**
             * @param {boolean} isValidation True to make the helper text act as an
             *   error validation message.
             */

          }, {
            key: 'setValidation',
            value: function setValidation(isValidation) {
              if (isValidation) {
                this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].HELPER_TEXT_VALIDATION_MSG);
              } else {
                this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].HELPER_TEXT_VALIDATION_MSG);
              }
            }
            /** Makes the helper text visible to the screen reader. */

          }, {
            key: 'showToScreenReader',
            value: function showToScreenReader() {
              this.adapter_.removeAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ARIA_HIDDEN);
            }
            /**
             * Sets the validity of the helper text based on the input validity.
             * @param {boolean} inputIsValid
             */

          }, {
            key: 'setValidity',
            value: function setValidity(inputIsValid) {
              var helperTextIsPersistent = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].HELPER_TEXT_PERSISTENT);
              var helperTextIsValidationMsg = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].HELPER_TEXT_VALIDATION_MSG);
              var validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;

              if (validationMsgNeedsDisplay) {
                this.adapter_.setAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
                /* strings */
                ].ROLE, 'alert');
              } else {
                this.adapter_.removeAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
                /* strings */
                ].ROLE);
              }

              if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {
                this.hide_();
              }
            }
            /**
             * Hides the help text from screen readers.
             * @private
             */

          }, {
            key: 'hide_',
            value: function hide_() {
              this.adapter_.setAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ARIA_HIDDEN, 'true');
            }
          }]);

          return MDCTextFieldHelperTextFoundation;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
        /* default */
        ]);
        /* harmony default export */


        __webpack_exports__["a"] = MDCTextFieldHelperTextFoundation;
        /***/
      },

      /***/
      62:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(85);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(159);

        var _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /**
         * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}
         * @final
         */


        var MDCTextFieldIconFoundation = function (_MDCFoundation) {
          _inherits(MDCTextFieldIconFoundation, _MDCFoundation);

          _createClass(MDCTextFieldIconFoundation, null, [{
            key: 'strings',

            /** @return enum {string} */
            get: function get() {
              return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* strings */
              ];
            }
            /**
             * {@see MDCTextFieldIconAdapter} for typing information on parameters and return
             * types.
             * @return {!MDCTextFieldIconAdapter}
             */

          }, {
            key: 'defaultAdapter',
            get: function get() {
              return (
                /** @type {!MDCTextFieldIconAdapter} */
                {
                  getAttr: function getAttr() {},
                  setAttr: function setAttr() {},
                  removeAttr: function removeAttr() {},
                  setContent: function setContent() {},
                  registerInteractionHandler: function registerInteractionHandler() {},
                  deregisterInteractionHandler: function deregisterInteractionHandler() {},
                  notifyIconAction: function notifyIconAction() {}
                }
              );
            }
            /**
             * @param {!MDCTextFieldIconAdapter} adapter
             */

          }]);

          function MDCTextFieldIconFoundation(adapter) {
            _classCallCheck(this, MDCTextFieldIconFoundation);
            /** @private {string?} */


            var _this = _possibleConstructorReturn(this, (MDCTextFieldIconFoundation.__proto__ || Object.getPrototypeOf(MDCTextFieldIconFoundation)).call(this, _extends(MDCTextFieldIconFoundation.defaultAdapter, adapter)));

            _this.savedTabIndex_ = null;
            /** @private {function(!Event): undefined} */

            _this.interactionHandler_ = function (evt) {
              return _this.handleInteraction(evt);
            };

            return _this;
          }

          _createClass(MDCTextFieldIconFoundation, [{
            key: 'init',
            value: function init() {
              var _this2 = this;

              this.savedTabIndex_ = this.adapter_.getAttr('tabindex');
              ['click', 'keydown'].forEach(function (evtType) {
                _this2.adapter_.registerInteractionHandler(evtType, _this2.interactionHandler_);
              });
            }
          }, {
            key: 'destroy',
            value: function destroy() {
              var _this3 = this;

              ['click', 'keydown'].forEach(function (evtType) {
                _this3.adapter_.deregisterInteractionHandler(evtType, _this3.interactionHandler_);
              });
            }
            /** @param {boolean} disabled */

          }, {
            key: 'setDisabled',
            value: function setDisabled(disabled) {
              if (!this.savedTabIndex_) {
                return;
              }

              if (disabled) {
                this.adapter_.setAttr('tabindex', '-1');
                this.adapter_.removeAttr('role');
              } else {
                this.adapter_.setAttr('tabindex', this.savedTabIndex_);
                this.adapter_.setAttr('role', __WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* strings */
                ].ICON_ROLE);
              }
            }
            /** @param {string} label */

          }, {
            key: 'setAriaLabel',
            value: function setAriaLabel(label) {
              this.adapter_.setAttr('aria-label', label);
            }
            /** @param {string} content */

          }, {
            key: 'setContent',
            value: function setContent(content) {
              this.adapter_.setContent(content);
            }
            /**
             * Handles an interaction event
             * @param {!Event} evt
             */

          }, {
            key: 'handleInteraction',
            value: function handleInteraction(evt) {
              if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {
                this.adapter_.notifyIconAction();
              }
            }
          }]);

          return MDCTextFieldIconFoundation;
        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
        /* default */
        ]);
        /* harmony default export */


        __webpack_exports__["a"] = MDCTextFieldIconFoundation;
        /***/
      },

      /***/
      82:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, "c", function () {
          return cssClasses;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "e", function () {
          return strings;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "d", function () {
          return numbers;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "b", function () {
          return VALIDATION_ATTR_WHITELIST;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "a", function () {
          return ALWAYS_FLOAT_TYPES;
        });
        /**
         * @license
         * Copyright 2016 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /** @enum {string} */


        var strings = {
          ARIA_CONTROLS: 'aria-controls',
          INPUT_SELECTOR: '.mdc-text-field__input',
          LABEL_SELECTOR: '.mdc-floating-label',
          ICON_SELECTOR: '.mdc-text-field__icon',
          OUTLINE_SELECTOR: '.mdc-notched-outline',
          LINE_RIPPLE_SELECTOR: '.mdc-line-ripple'
        };
        /** @enum {string} */

        var cssClasses = {
          ROOT: 'mdc-text-field',
          DISABLED: 'mdc-text-field--disabled',
          DENSE: 'mdc-text-field--dense',
          FOCUSED: 'mdc-text-field--focused',
          INVALID: 'mdc-text-field--invalid',
          TEXTAREA: 'mdc-text-field--textarea',
          OUTLINED: 'mdc-text-field--outlined',
          WITH_LEADING_ICON: 'mdc-text-field--with-leading-icon'
        };
        /** @enum {number} */

        var numbers = {
          LABEL_SCALE: 0.75,
          DENSE_LABEL_SCALE: 0.923
        }; // whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation
        // under section: `Validation-related attributes`

        var VALIDATION_ATTR_WHITELIST = ['pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength']; // Label should always float for these types as they show some UI even if value is empty.

        var ALWAYS_FLOAT_TYPES = ['color', 'date', 'datetime-local', 'month', 'range', 'time', 'week'];
        /***/
      },

      /***/
      83:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export MDCTextFieldAdapter */

        /* unused harmony export NativeInputType */

        /* unused harmony export FoundationMapType */

        /* harmony import */

        var __WEBPACK_IMPORTED_MODULE_0__helper_text_foundation__ = __webpack_require__(61);
        /* harmony import */


        var __WEBPACK_IMPORTED_MODULE_1__icon_foundation__ = __webpack_require__(62);

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint-disable no-unused-vars */

        /* eslint no-unused-vars: [2, {"args": "none"}] */

        /**
         * @typedef {{
         *   value: string,
         *   disabled: boolean,
         *   badInput: boolean,
         *   validity: {
         *     badInput: boolean,
         *     valid: boolean,
         *   },
         * }}
         */


        var NativeInputType = void 0;
        /**
         * @typedef {{
         *   helperText: (!MDCTextFieldHelperTextFoundation|undefined),
         *   leadingIcon: (!MDCTextFieldIconFoundation|undefined),
         *   trailingIcon: (!MDCTextFieldIconFoundation|undefined),
         * }}
         */

        var FoundationMapType = void 0;
        /**
         * Adapter for MDC Text Field.
         *
         * Defines the shape of the adapter expected by the foundation. Implement this
         * adapter to integrate the Text Field into your framework. See
         * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
         * for more information.
         *
         * @record
         */

        var MDCTextFieldAdapter = function () {
          function MDCTextFieldAdapter() {
            _classCallCheck(this, MDCTextFieldAdapter);
          }

          _createClass(MDCTextFieldAdapter, [{
            key: 'addClass',

            /**
             * Adds a class to the root Element.
             * @param {string} className
             */
            value: function addClass(className) {}
            /**
             * Removes a class from the root Element.
             * @param {string} className
             */

          }, {
            key: 'removeClass',
            value: function removeClass(className) {}
            /**
             * Returns true if the root element contains the given class name.
             * @param {string} className
             * @return {boolean}
             */

          }, {
            key: 'hasClass',
            value: function hasClass(className) {}
            /**
             * Registers an event handler on the root element for a given event.
             * @param {string} type
             * @param {function(!Event): undefined} handler
             */

          }, {
            key: 'registerTextFieldInteractionHandler',
            value: function registerTextFieldInteractionHandler(type, handler) {}
            /**
             * Deregisters an event handler on the root element for a given event.
             * @param {string} type
             * @param {function(!Event): undefined} handler
             */

          }, {
            key: 'deregisterTextFieldInteractionHandler',
            value: function deregisterTextFieldInteractionHandler(type, handler) {}
            /**
             * Registers an event listener on the native input element for a given event.
             * @param {string} evtType
             * @param {function(!Event): undefined} handler
             */

          }, {
            key: 'registerInputInteractionHandler',
            value: function registerInputInteractionHandler(evtType, handler) {}
            /**
             * Deregisters an event listener on the native input element for a given event.
             * @param {string} evtType
             * @param {function(!Event): undefined} handler
             */

          }, {
            key: 'deregisterInputInteractionHandler',
            value: function deregisterInputInteractionHandler(evtType, handler) {}
            /**
             * Registers a validation attribute change listener on the input element.
             * Handler accepts list of attribute names.
             * @param {function(!Array<string>): undefined} handler
             * @return {!MutationObserver}
             */

          }, {
            key: 'registerValidationAttributeChangeHandler',
            value: function registerValidationAttributeChangeHandler(handler) {}
            /**
             * Disconnects a validation attribute observer on the input element.
             * @param {!MutationObserver} observer
             */

          }, {
            key: 'deregisterValidationAttributeChangeHandler',
            value: function deregisterValidationAttributeChangeHandler(observer) {}
            /**
             * Returns an object representing the native text input element, with a
             * similar API shape. The object returned should include the value, disabled
             * and badInput properties, as well as the checkValidity() function. We never
             * alter the value within our code, however we do update the disabled
             * property, so if you choose to duck-type the return value for this method
             * in your implementation it's important to keep this in mind. Also note that
             * this method can return null, which the foundation will handle gracefully.
             * @return {?Element|?NativeInputType}
             */

          }, {
            key: 'getNativeInput',
            value: function getNativeInput() {}
            /**
             * Returns true if the textfield is focused.
             * We achieve this via `document.activeElement === this.root_`.
             * @return {boolean}
             */

          }, {
            key: 'isFocused',
            value: function isFocused() {}
            /**
             * Activates the line ripple.
             */

          }, {
            key: 'activateLineRipple',
            value: function activateLineRipple() {}
            /**
             * Deactivates the line ripple.
             */

          }, {
            key: 'deactivateLineRipple',
            value: function deactivateLineRipple() {}
            /**
             * Sets the transform origin of the line ripple.
             * @param {number} normalizedX
             */

          }, {
            key: 'setLineRippleTransformOrigin',
            value: function setLineRippleTransformOrigin(normalizedX) {}
            /**
             * Only implement if label exists.
             * Shakes label if shouldShake is true.
             * @param {boolean} shouldShake
             */

          }, {
            key: 'shakeLabel',
            value: function shakeLabel(shouldShake) {}
            /**
             * Only implement if label exists.
             * Floats the label above the input element if shouldFloat is true.
             * @param {boolean} shouldFloat
             */

          }, {
            key: 'floatLabel',
            value: function floatLabel(shouldFloat) {}
            /**
             * Returns true if label element exists, false if it doesn't.
             * @return {boolean}
             */

          }, {
            key: 'hasLabel',
            value: function hasLabel() {}
            /**
             * Only implement if label exists.
             * Returns width of label in pixels.
             * @return {number}
             */

          }, {
            key: 'getLabelWidth',
            value: function getLabelWidth() {}
            /**
             * Returns true if outline element exists, false if it doesn't.
             * @return {boolean}
             */

          }, {
            key: 'hasOutline',
            value: function hasOutline() {}
            /**
             * Only implement if outline element exists.
             * @param {number} labelWidth
             */

          }, {
            key: 'notchOutline',
            value: function notchOutline(labelWidth) {}
            /**
             * Only implement if outline element exists.
             * Closes notch in outline element.
             */

          }, {
            key: 'closeOutline',
            value: function closeOutline() {}
          }]);

          return MDCTextFieldAdapter;
        }();
        /***/

      },

      /***/
      84:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint no-unused-vars: [2, {"args": "none"}] */

        /**
         * Adapter for MDC Text Field Helper Text.
         *
         * Defines the shape of the adapter expected by the foundation. Implement this
         * adapter to integrate the TextField helper text into your framework. See
         * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
         * for more information.
         *
         * @record
         */


        var MDCTextFieldHelperTextAdapter = function () {
          function MDCTextFieldHelperTextAdapter() {
            _classCallCheck(this, MDCTextFieldHelperTextAdapter);
          }

          _createClass(MDCTextFieldHelperTextAdapter, [{
            key: "addClass",

            /**
             * Adds a class to the helper text element.
             * @param {string} className
             */
            value: function addClass(className) {}
            /**
             * Removes a class from the helper text element.
             * @param {string} className
             */

          }, {
            key: "removeClass",
            value: function removeClass(className) {}
            /**
             * Returns whether or not the helper text element contains the given class.
             * @param {string} className
             * @return {boolean}
             */

          }, {
            key: "hasClass",
            value: function hasClass(className) {}
            /**
             * Sets an attribute with a given value on the helper text element.
             * @param {string} attr
             * @param {string} value
             */

          }, {
            key: "setAttr",
            value: function setAttr(attr, value) {}
            /**
             * Removes an attribute from the helper text element.
             * @param {string} attr
             */

          }, {
            key: "removeAttr",
            value: function removeAttr(attr) {}
            /**
             * Sets the text content for the helper text element.
             * @param {string} content
             */

          }, {
            key: "setContent",
            value: function setContent(content) {}
          }]);

          return MDCTextFieldHelperTextAdapter;
        }();
        /* unused harmony default export */


        var _unused_webpack_default_export = MDCTextFieldHelperTextAdapter;
        /***/
      },

      /***/
      85:
      /***/
      function _(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        /**
         * @license
         * Copyright 2017 Google Inc.
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         */

        /* eslint no-unused-vars: [2, {"args": "none"}] */

        /**
         * Adapter for MDC Text Field Icon.
         *
         * Defines the shape of the adapter expected by the foundation. Implement this
         * adapter to integrate the text field icon into your framework. See
         * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
         * for more information.
         *
         * @record
         */


        var MDCTextFieldIconAdapter = function () {
          function MDCTextFieldIconAdapter() {
            _classCallCheck(this, MDCTextFieldIconAdapter);
          }

          _createClass(MDCTextFieldIconAdapter, [{
            key: "getAttr",

            /**
             * Gets the value of an attribute on the icon element.
             * @param {string} attr
             * @return {string}
             */
            value: function getAttr(attr) {}
            /**
             * Sets an attribute on the icon element.
             * @param {string} attr
             * @param {string} value
             */

          }, {
            key: "setAttr",
            value: function setAttr(attr, value) {}
            /**
             * Removes an attribute from the icon element.
             * @param {string} attr
             */

          }, {
            key: "removeAttr",
            value: function removeAttr(attr) {}
            /**
             * Sets the text content of the icon element.
             * @param {string} content
             */

          }, {
            key: "setContent",
            value: function setContent(content) {}
            /**
             * Registers an event listener on the icon element for a given event.
             * @param {string} evtType
             * @param {function(!Event): undefined} handler
             */

          }, {
            key: "registerInteractionHandler",
            value: function registerInteractionHandler(evtType, handler) {}
            /**
             * Deregisters an event listener on the icon element for a given event.
             * @param {string} evtType
             * @param {function(!Event): undefined} handler
             */

          }, {
            key: "deregisterInteractionHandler",
            value: function deregisterInteractionHandler(evtType, handler) {}
            /**
             * Emits a custom event "MDCTextField:icon" denoting a user has clicked the icon.
             */

          }, {
            key: "notifyIconAction",
            value: function notifyIconAction() {}
          }]);

          return MDCTextFieldIconAdapter;
        }();
        /* unused harmony default export */


        var _unused_webpack_default_export = MDCTextFieldIconAdapter;
        /***/
      }
      /******/

    })
  );
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/@material/top-app-bar/adapter.js":
/*!*******************************************************!*\
  !*** ./node_modules/@material/top-app-bar/adapter.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Top App Bar
 *
 * Defines the shape of the adapter expected by the foundation. Implement this
 * adapter to integrate the Top App Bar into your framework. See
 * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
 * for more information.
 *
 * @record
 */
var MDCTopAppBarAdapter =
/*#__PURE__*/
function () {
  function MDCTopAppBarAdapter() {
    _classCallCheck(this, MDCTopAppBarAdapter);
  }

  _createClass(MDCTopAppBarAdapter, [{
    key: "addClass",

    /**
     * Adds a class to the root Element.
     * @param {string} className
     */
    value: function addClass(className) {}
    /**
     * Removes a class from the root Element.
     * @param {string} className
     */

  }, {
    key: "removeClass",
    value: function removeClass(className) {}
    /**
     * Returns true if the root Element contains the given class.
     * @param {string} className
     * @return {boolean}
     */

  }, {
    key: "hasClass",
    value: function hasClass(className) {}
    /**
     * Sets the specified inline style property on the root Element to the given value.
     * @param {string} property
     * @param {string} value
     */

  }, {
    key: "setStyle",
    value: function setStyle(property, value) {}
    /**
     * Gets the height of the top app bar.
     * @return {number}
     */

  }, {
    key: "getTopAppBarHeight",
    value: function getTopAppBarHeight() {}
    /**
     * Registers an event handler on the navigation icon element for a given event.
     * @param {string} type
     * @param {function(!Event): undefined} handler
     */

  }, {
    key: "registerNavigationIconInteractionHandler",
    value: function registerNavigationIconInteractionHandler(type, handler) {}
    /**
     * Deregisters an event handler on the navigation icon element for a given event.
     * @param {string} type
     * @param {function(!Event): undefined} handler
     */

  }, {
    key: "deregisterNavigationIconInteractionHandler",
    value: function deregisterNavigationIconInteractionHandler(type, handler) {}
    /**
     * Emits an event when the navigation icon is clicked.
     */

  }, {
    key: "notifyNavigationIconClicked",
    value: function notifyNavigationIconClicked() {}
    /** @param {function(!Event)} handler */

  }, {
    key: "registerScrollHandler",
    value: function registerScrollHandler(handler) {}
    /** @param {function(!Event)} handler */

  }, {
    key: "deregisterScrollHandler",
    value: function deregisterScrollHandler(handler) {}
    /** @param {function(!Event)} handler */

  }, {
    key: "registerResizeHandler",
    value: function registerResizeHandler(handler) {}
    /** @param {function(!Event)} handler */

  }, {
    key: "deregisterResizeHandler",
    value: function deregisterResizeHandler(handler) {}
    /** @return {number} */

  }, {
    key: "getViewportScrollY",
    value: function getViewportScrollY() {}
    /** @return {number} */

  }, {
    key: "getTotalActionItems",
    value: function getTotalActionItems() {}
  }]);

  return MDCTopAppBarAdapter;
}();

/* harmony default export */ __webpack_exports__["default"] = (MDCTopAppBarAdapter);

/***/ }),

/***/ "./node_modules/@material/top-app-bar/constants.js":
/*!*********************************************************!*\
  !*** ./node_modules/@material/top-app-bar/constants.js ***!
  \*********************************************************/
/*! exports provided: strings, cssClasses, numbers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "strings", function() { return strings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cssClasses", function() { return cssClasses; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "numbers", function() { return numbers; });
/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
var cssClasses = {
  FIXED_CLASS: 'mdc-top-app-bar--fixed',
  FIXED_SCROLLED_CLASS: 'mdc-top-app-bar--fixed-scrolled',
  SHORT_CLASS: 'mdc-top-app-bar--short',
  SHORT_HAS_ACTION_ITEM_CLASS: 'mdc-top-app-bar--short-has-action-item',
  SHORT_COLLAPSED_CLASS: 'mdc-top-app-bar--short-collapsed'
};
/** @enum {number} */

var numbers = {
  DEBOUNCE_THROTTLE_RESIZE_TIME_MS: 100,
  MAX_TOP_APP_BAR_HEIGHT: 128
};
/** @enum {string} */

var strings = {
  ACTION_ITEM_SELECTOR: '.mdc-top-app-bar__action-item',
  NAVIGATION_EVENT: 'MDCTopAppBar:nav',
  NAVIGATION_ICON_SELECTOR: '.mdc-top-app-bar__navigation-icon',
  ROOT_SELECTOR: '.mdc-top-app-bar',
  TITLE_SELECTOR: '.mdc-top-app-bar__title'
};


/***/ }),

/***/ "./node_modules/@material/top-app-bar/fixed/foundation.js":
/*!****************************************************************!*\
  !*** ./node_modules/@material/top-app-bar/fixed/foundation.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/@material/top-app-bar/constants.js");
/* harmony import */ var _adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../adapter */ "./node_modules/@material/top-app-bar/adapter.js");
/* harmony import */ var _foundation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../foundation */ "./node_modules/@material/top-app-bar/foundation.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */



/**
 * @extends {MDCTopAppBarFoundation<!MDCFixedTopAppBarFoundation>}
 * @final
 */

var MDCFixedTopAppBarFoundation =
/*#__PURE__*/
function (_MDCTopAppBarFoundati) {
  _inherits(MDCFixedTopAppBarFoundation, _MDCTopAppBarFoundati);

  /**
   * @param {!MDCTopAppBarAdapter} adapter
   */
  function MDCFixedTopAppBarFoundation(adapter) {
    var _this;

    _classCallCheck(this, MDCFixedTopAppBarFoundation);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(MDCFixedTopAppBarFoundation).call(this, adapter));
    /** State variable for the previous scroll iteration top app bar state */

    _this.wasScrolled_ = false;

    _this.scrollHandler_ = function () {
      return _this.fixedScrollHandler_();
    };

    return _this;
  }

  _createClass(MDCFixedTopAppBarFoundation, [{
    key: "init",
    value: function init() {
      _get(_getPrototypeOf(MDCFixedTopAppBarFoundation.prototype), "init", this).call(this);

      this.adapter_.registerScrollHandler(this.scrollHandler_);
    }
  }, {
    key: "destroy",
    value: function destroy() {
      _get(_getPrototypeOf(MDCFixedTopAppBarFoundation.prototype), "destroy", this).call(this);

      this.adapter_.deregisterScrollHandler(this.scrollHandler_);
    }
    /**
     * Scroll handler for applying/removing the modifier class
     * on the fixed top app bar.
     */

  }, {
    key: "fixedScrollHandler_",
    value: function fixedScrollHandler_() {
      var currentScroll = this.adapter_.getViewportScrollY();

      if (currentScroll <= 0) {
        if (this.wasScrolled_) {
          this.adapter_.removeClass(_constants__WEBPACK_IMPORTED_MODULE_0__["cssClasses"].FIXED_SCROLLED_CLASS);
          this.wasScrolled_ = false;
        }
      } else {
        if (!this.wasScrolled_) {
          this.adapter_.addClass(_constants__WEBPACK_IMPORTED_MODULE_0__["cssClasses"].FIXED_SCROLLED_CLASS);
          this.wasScrolled_ = true;
        }
      }
    }
  }]);

  return MDCFixedTopAppBarFoundation;
}(_foundation__WEBPACK_IMPORTED_MODULE_2__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (MDCFixedTopAppBarFoundation);

/***/ }),

/***/ "./node_modules/@material/top-app-bar/foundation.js":
/*!**********************************************************!*\
  !*** ./node_modules/@material/top-app-bar/foundation.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/@material/top-app-bar/constants.js");
/* harmony import */ var _adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./adapter */ "./node_modules/@material/top-app-bar/adapter.js");
/* harmony import */ var _material_base_foundation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @material/base/foundation */ "./node_modules/@material/base/foundation.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */



/**
 * @extends {MDCFoundation<!MDCTopAppBarAdapter>}
 */

var MDCTopAppBarBaseFoundation =
/*#__PURE__*/
function (_MDCFoundation) {
  _inherits(MDCTopAppBarBaseFoundation, _MDCFoundation);

  _createClass(MDCTopAppBarBaseFoundation, null, [{
    key: "strings",

    /** @return enum {string} */
    get: function get() {
      return _constants__WEBPACK_IMPORTED_MODULE_0__["strings"];
    }
    /** @return enum {string} */

  }, {
    key: "cssClasses",
    get: function get() {
      return _constants__WEBPACK_IMPORTED_MODULE_0__["cssClasses"];
    }
    /** @return enum {number} */

  }, {
    key: "numbers",
    get: function get() {
      return _constants__WEBPACK_IMPORTED_MODULE_0__["numbers"];
    }
    /**
     * {@see MDCTopAppBarAdapter} for typing information on parameters and return
     * types.
     * @return {!MDCTopAppBarAdapter}
     */

  }, {
    key: "defaultAdapter",
    get: function get() {
      return (
        /** @type {!MDCTopAppBarAdapter} */
        {
          hasClass: function hasClass()
          /* className: string */
          {},
          addClass: function addClass()
          /* className: string */
          {},
          removeClass: function removeClass()
          /* className: string */
          {},
          setStyle: function setStyle()
          /* property: string, value: string */
          {},
          getTopAppBarHeight: function getTopAppBarHeight() {},
          registerNavigationIconInteractionHandler: function registerNavigationIconInteractionHandler()
          /* type: string, handler: EventListener */
          {},
          deregisterNavigationIconInteractionHandler: function deregisterNavigationIconInteractionHandler()
          /* type: string, handler: EventListener */
          {},
          notifyNavigationIconClicked: function notifyNavigationIconClicked() {},
          registerScrollHandler: function registerScrollHandler()
          /* handler: EventListener */
          {},
          deregisterScrollHandler: function deregisterScrollHandler()
          /* handler: EventListener */
          {},
          registerResizeHandler: function registerResizeHandler()
          /* handler: EventListener */
          {},
          deregisterResizeHandler: function deregisterResizeHandler()
          /* handler: EventListener */
          {},
          getViewportScrollY: function getViewportScrollY() {
            return (
              /* number */
              0
            );
          },
          getTotalActionItems: function getTotalActionItems() {
            return (
              /* number */
              0
            );
          }
        }
      );
    }
    /**
     * @param {!MDCTopAppBarAdapter} adapter
     */

  }]);

  function MDCTopAppBarBaseFoundation(
  /** @type {!MDCTopAppBarAdapter} */
  adapter) {
    var _this;

    _classCallCheck(this, MDCTopAppBarBaseFoundation);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(MDCTopAppBarBaseFoundation).call(this, Object.assign(MDCTopAppBarBaseFoundation.defaultAdapter, adapter)));

    _this.navClickHandler_ = function () {
      return _this.adapter_.notifyNavigationIconClicked();
    };

    _this.scrollHandler_ = function () {};

    return _this;
  }

  _createClass(MDCTopAppBarBaseFoundation, [{
    key: "init",
    value: function init() {
      this.adapter_.registerNavigationIconInteractionHandler('click', this.navClickHandler_);
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.adapter_.deregisterNavigationIconInteractionHandler('click', this.navClickHandler_);
    }
  }, {
    key: "initScrollHandler",
    value: function initScrollHandler() {
      this.adapter_.registerScrollHandler(this.scrollHandler_);
    }
  }, {
    key: "destroyScrollHandler",
    value: function destroyScrollHandler() {
      this.adapter_.deregisterScrollHandler(this.scrollHandler_);
    }
  }]);

  return MDCTopAppBarBaseFoundation;
}(_material_base_foundation__WEBPACK_IMPORTED_MODULE_2__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (MDCTopAppBarBaseFoundation);

/***/ }),

/***/ "./node_modules/@material/top-app-bar/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@material/top-app-bar/index.js ***!
  \*****************************************************/
/*! exports provided: MDCTopAppBar, MDCTopAppBarBaseFoundation, MDCTopAppBarFoundation, MDCFixedTopAppBarFoundation, MDCShortTopAppBarFoundation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MDCTopAppBar", function() { return MDCTopAppBar; });
/* harmony import */ var _adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adapter */ "./node_modules/@material/top-app-bar/adapter.js");
/* harmony import */ var _material_base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @material/base/component */ "./node_modules/@material/base/component.js");
/* harmony import */ var _material_ripple_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @material/ripple/index */ "./node_modules/@material/ripple/index.js");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ "./node_modules/@material/top-app-bar/constants.js");
/* harmony import */ var _foundation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./foundation */ "./node_modules/@material/top-app-bar/foundation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MDCTopAppBarBaseFoundation", function() { return _foundation__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _fixed_foundation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fixed/foundation */ "./node_modules/@material/top-app-bar/fixed/foundation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MDCFixedTopAppBarFoundation", function() { return _fixed_foundation__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _short_foundation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./short/foundation */ "./node_modules/@material/top-app-bar/short/foundation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MDCShortTopAppBarFoundation", function() { return _short_foundation__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _standard_foundation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./standard/foundation */ "./node_modules/@material/top-app-bar/standard/foundation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MDCTopAppBarFoundation", function() { return _standard_foundation__WEBPACK_IMPORTED_MODULE_7__["default"]; });

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */








/**
 * @extends {MDCComponent<!MDCTopAppBarBaseFoundation>}
 * @final
 */

var MDCTopAppBar =
/*#__PURE__*/
function (_MDCComponent) {
  _inherits(MDCTopAppBar, _MDCComponent);

  /**
   * @param {...?} args
   */
  function MDCTopAppBar() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, MDCTopAppBar);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MDCTopAppBar)).call.apply(_getPrototypeOf2, [this].concat(args)));
    /** @private {?Element} */

    _this.navIcon_;
    /** @type {?Array<MDCRipple>} */

    _this.iconRipples_;
    /** @type {Object} */

    _this.scrollTarget_;
    return _this;
  }

  _createClass(MDCTopAppBar, [{
    key: "initialize",
    value: function initialize() {
      var rippleFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (el) {
        return _material_ripple_index__WEBPACK_IMPORTED_MODULE_2__["MDCRipple"].attachTo(el);
      };
      this.navIcon_ = this.root_.querySelector(_constants__WEBPACK_IMPORTED_MODULE_3__["strings"].NAVIGATION_ICON_SELECTOR); // Get all icons in the toolbar and instantiate the ripples

      var icons = [].slice.call(this.root_.querySelectorAll(_constants__WEBPACK_IMPORTED_MODULE_3__["strings"].ACTION_ITEM_SELECTOR));

      if (this.navIcon_) {
        icons.push(this.navIcon_);
      }

      this.iconRipples_ = icons.map(function (icon) {
        var ripple = rippleFactory(icon);
        ripple.unbounded = true;
        return ripple;
      });
      this.scrollTarget_ = window;
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.iconRipples_.forEach(function (iconRipple) {
        return iconRipple.destroy();
      });

      _get(_getPrototypeOf(MDCTopAppBar.prototype), "destroy", this).call(this);
    }
  }, {
    key: "setScrollTarget",
    value: function setScrollTarget(target) {
      this.foundation_.destroyScrollHandler();
      this.scrollTarget_ = target;
      this.foundation_.initScrollHandler();
    }
    /**
     * @param {!Element} root
     * @return {!MDCTopAppBar}
     */

  }, {
    key: "getDefaultFoundation",

    /**
     * @return {!MDCTopAppBarBaseFoundation}
     */
    value: function getDefaultFoundation() {
      var _this2 = this;

      /** @type {!MDCTopAppBarAdapter} */
      var adapter =
      /** @type {!MDCTopAppBarAdapter} */
      Object.assign({
        hasClass: function hasClass(className) {
          return _this2.root_.classList.contains(className);
        },
        addClass: function addClass(className) {
          return _this2.root_.classList.add(className);
        },
        removeClass: function removeClass(className) {
          return _this2.root_.classList.remove(className);
        },
        setStyle: function setStyle(property, value) {
          return _this2.root_.style.setProperty(property, value);
        },
        getTopAppBarHeight: function getTopAppBarHeight() {
          return _this2.root_.clientHeight;
        },
        registerNavigationIconInteractionHandler: function registerNavigationIconInteractionHandler(evtType, handler) {
          if (_this2.navIcon_) {
            _this2.navIcon_.addEventListener(evtType, handler);
          }
        },
        deregisterNavigationIconInteractionHandler: function deregisterNavigationIconInteractionHandler(evtType, handler) {
          if (_this2.navIcon_) {
            _this2.navIcon_.removeEventListener(evtType, handler);
          }
        },
        notifyNavigationIconClicked: function notifyNavigationIconClicked() {
          _this2.emit(_constants__WEBPACK_IMPORTED_MODULE_3__["strings"].NAVIGATION_EVENT, {});
        },
        registerScrollHandler: function registerScrollHandler(handler) {
          return _this2.scrollTarget_.addEventListener('scroll', handler);
        },
        deregisterScrollHandler: function deregisterScrollHandler(handler) {
          return _this2.scrollTarget_.removeEventListener('scroll', handler);
        },
        registerResizeHandler: function registerResizeHandler(handler) {
          return window.addEventListener('resize', handler);
        },
        deregisterResizeHandler: function deregisterResizeHandler(handler) {
          return window.removeEventListener('resize', handler);
        },
        getViewportScrollY: function getViewportScrollY() {
          return _this2.scrollTarget_[_this2.scrollTarget_ === window ? 'pageYOffset' : 'scrollTop'];
        },
        getTotalActionItems: function getTotalActionItems() {
          return _this2.root_.querySelectorAll(_constants__WEBPACK_IMPORTED_MODULE_3__["strings"].ACTION_ITEM_SELECTOR).length;
        }
      });
      /** @type {!MDCTopAppBarBaseFoundation} */

      var foundation;

      if (this.root_.classList.contains(_constants__WEBPACK_IMPORTED_MODULE_3__["cssClasses"].SHORT_CLASS)) {
        foundation = new _short_foundation__WEBPACK_IMPORTED_MODULE_6__["default"](adapter);
      } else if (this.root_.classList.contains(_constants__WEBPACK_IMPORTED_MODULE_3__["cssClasses"].FIXED_CLASS)) {
        foundation = new _fixed_foundation__WEBPACK_IMPORTED_MODULE_5__["default"](adapter);
      } else {
        foundation = new _standard_foundation__WEBPACK_IMPORTED_MODULE_7__["default"](adapter);
      }

      return foundation;
    }
  }], [{
    key: "attachTo",
    value: function attachTo(root) {
      return new MDCTopAppBar(root);
    }
  }]);

  return MDCTopAppBar;
}(_material_base_component__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./node_modules/@material/top-app-bar/short/foundation.js":
/*!****************************************************************!*\
  !*** ./node_modules/@material/top-app-bar/short/foundation.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../adapter */ "./node_modules/@material/top-app-bar/adapter.js");
/* harmony import */ var _foundation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../foundation */ "./node_modules/@material/top-app-bar/foundation.js");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./node_modules/@material/top-app-bar/constants.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */



/**
 * @extends {MDCTopAppBarBaseFoundation<!MDCShortTopAppBarFoundation>}
 * @final
 */

var MDCShortTopAppBarFoundation =
/*#__PURE__*/
function (_MDCTopAppBarBaseFoun) {
  _inherits(MDCShortTopAppBarFoundation, _MDCTopAppBarBaseFoun);

  /**
   * @param {!MDCTopAppBarAdapter} adapter
   */
  function MDCShortTopAppBarFoundation(adapter) {
    var _this;

    _classCallCheck(this, MDCShortTopAppBarFoundation);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(MDCShortTopAppBarFoundation).call(this, adapter)); // State variable for the current top app bar state

    _this.isCollapsed = false;

    _this.scrollHandler_ = function () {
      return _this.shortAppBarScrollHandler_();
    };

    return _this;
  }

  _createClass(MDCShortTopAppBarFoundation, [{
    key: "init",
    value: function init() {
      _get(_getPrototypeOf(MDCShortTopAppBarFoundation.prototype), "init", this).call(this);

      var isAlwaysCollapsed = this.adapter_.hasClass(_constants__WEBPACK_IMPORTED_MODULE_2__["cssClasses"].SHORT_COLLAPSED_CLASS);

      if (this.adapter_.getTotalActionItems() > 0) {
        this.adapter_.addClass(_constants__WEBPACK_IMPORTED_MODULE_2__["cssClasses"].SHORT_HAS_ACTION_ITEM_CLASS);
      }

      if (!isAlwaysCollapsed) {
        this.adapter_.registerScrollHandler(this.scrollHandler_);
        this.shortAppBarScrollHandler_();
      }
    }
  }, {
    key: "destroy",
    value: function destroy() {
      _get(_getPrototypeOf(MDCShortTopAppBarFoundation.prototype), "destroy", this).call(this);

      this.adapter_.deregisterScrollHandler(this.scrollHandler_);
    }
    /**
     * Scroll handler for applying/removing the collapsed modifier class
     * on the short top app bar.
     * @private
     */

  }, {
    key: "shortAppBarScrollHandler_",
    value: function shortAppBarScrollHandler_() {
      var currentScroll = this.adapter_.getViewportScrollY();

      if (currentScroll <= 0) {
        if (this.isCollapsed) {
          this.adapter_.removeClass(_constants__WEBPACK_IMPORTED_MODULE_2__["cssClasses"].SHORT_COLLAPSED_CLASS);
          this.isCollapsed = false;
        }
      } else {
        if (!this.isCollapsed) {
          this.adapter_.addClass(_constants__WEBPACK_IMPORTED_MODULE_2__["cssClasses"].SHORT_COLLAPSED_CLASS);
          this.isCollapsed = true;
        }
      }
    }
  }]);

  return MDCShortTopAppBarFoundation;
}(_foundation__WEBPACK_IMPORTED_MODULE_1__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (MDCShortTopAppBarFoundation);

/***/ }),

/***/ "./node_modules/@material/top-app-bar/standard/foundation.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@material/top-app-bar/standard/foundation.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../adapter */ "./node_modules/@material/top-app-bar/adapter.js");
/* harmony import */ var _foundation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../foundation */ "./node_modules/@material/top-app-bar/foundation.js");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./node_modules/@material/top-app-bar/constants.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */



var INITIAL_VALUE = 0;
/**
 * @extends {MDCTopAppBarBaseFoundation<!MDCTopAppBarFoundation>}
 * @final
 */

var MDCTopAppBarFoundation =
/*#__PURE__*/
function (_MDCTopAppBarBaseFoun) {
  _inherits(MDCTopAppBarFoundation, _MDCTopAppBarBaseFoun);

  /**
   * @param {!MDCTopAppBarAdapter} adapter
   */
  function MDCTopAppBarFoundation(adapter) {
    var _this;

    _classCallCheck(this, MDCTopAppBarFoundation);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(MDCTopAppBarFoundation).call(this, adapter));
    /**
     * Used for diffs of current scroll position vs previous scroll position
     * @private {number}
     */

    _this.lastScrollPosition_ = _this.adapter_.getViewportScrollY();
    /**
     * Used to verify when the top app bar is completely showing or completely hidden
     * @private {number}
     */

    _this.topAppBarHeight_ = _this.adapter_.getTopAppBarHeight();
    /**
     * wasDocked_ is used to indicate if the top app bar was docked in the previous
     * scroll handler iteration.
     * @private {boolean}
     */

    _this.wasDocked_ = true;
    /**
     * isDockedShowing_ is used to indicate if the top app bar is docked in the fully
     * shown position.
     * @private {boolean}
     */

    _this.isDockedShowing_ = true;
    /**
     * Variable for current scroll position of the top app bar
     * @private {number}
     */

    _this.currentAppBarOffsetTop_ = 0;
    /**
     * Used to prevent the top app bar from being scrolled out of view during resize events
     * @private {boolean} */

    _this.isCurrentlyBeingResized_ = false;
    /**
     * The timeout that's used to throttle the resize events
     * @private {number}
     */

    _this.resizeThrottleId_ = INITIAL_VALUE;
    /**
     * The timeout that's used to debounce toggling the isCurrentlyBeingResized_ variable after a resize
     * @private {number}
     */

    _this.resizeDebounceId_ = INITIAL_VALUE;

    _this.scrollHandler_ = function () {
      return _this.topAppBarScrollHandler_();
    };

    _this.resizeHandler_ = function () {
      return _this.topAppBarResizeHandler_();
    };

    return _this;
  }

  _createClass(MDCTopAppBarFoundation, [{
    key: "init",
    value: function init() {
      _get(_getPrototypeOf(MDCTopAppBarFoundation.prototype), "init", this).call(this);

      this.adapter_.registerScrollHandler(this.scrollHandler_);
      this.adapter_.registerResizeHandler(this.resizeHandler_);
    }
  }, {
    key: "destroy",
    value: function destroy() {
      _get(_getPrototypeOf(MDCTopAppBarFoundation.prototype), "destroy", this).call(this);

      this.adapter_.deregisterScrollHandler(this.scrollHandler_);
      this.adapter_.deregisterResizeHandler(this.resizeHandler_);
      this.adapter_.setStyle('top', '');
    }
    /**
     * Function to determine if the DOM needs to update.
     * @return {boolean}
     * @private
     */

  }, {
    key: "checkForUpdate_",
    value: function checkForUpdate_() {
      var offscreenBoundaryTop = -this.topAppBarHeight_;
      var hasAnyPixelsOffscreen = this.currentAppBarOffsetTop_ < 0;
      var hasAnyPixelsOnscreen = this.currentAppBarOffsetTop_ > offscreenBoundaryTop;
      var partiallyShowing = hasAnyPixelsOffscreen && hasAnyPixelsOnscreen; // If it's partially showing, it can't be docked.

      if (partiallyShowing) {
        this.wasDocked_ = false;
      } else {
        // Not previously docked and not partially showing, it's now docked.
        if (!this.wasDocked_) {
          this.wasDocked_ = true;
          return true;
        } else if (this.isDockedShowing_ !== hasAnyPixelsOnscreen) {
          this.isDockedShowing_ = hasAnyPixelsOnscreen;
          return true;
        }
      }

      return partiallyShowing;
    }
    /**
     * Function to move the top app bar if needed.
     * @private
     */

  }, {
    key: "moveTopAppBar_",
    value: function moveTopAppBar_() {
      if (this.checkForUpdate_()) {
        // Once the top app bar is fully hidden we use the max potential top app bar height as our offset
        // so the top app bar doesn't show if the window resizes and the new height > the old height.
        var offset = this.currentAppBarOffsetTop_;

        if (Math.abs(offset) >= this.topAppBarHeight_) {
          offset = -_constants__WEBPACK_IMPORTED_MODULE_2__["numbers"].MAX_TOP_APP_BAR_HEIGHT;
        }

        this.adapter_.setStyle('top', offset + 'px');
      }
    }
    /**
     * Scroll handler for the default scroll behavior of the top app bar.
     * @private
     */

  }, {
    key: "topAppBarScrollHandler_",
    value: function topAppBarScrollHandler_() {
      var currentScrollPosition = Math.max(this.adapter_.getViewportScrollY(), 0);
      var diff = currentScrollPosition - this.lastScrollPosition_;
      this.lastScrollPosition_ = currentScrollPosition; // If the window is being resized the lastScrollPosition_ needs to be updated but the
      // current scroll of the top app bar should stay in the same position.

      if (!this.isCurrentlyBeingResized_) {
        this.currentAppBarOffsetTop_ -= diff;

        if (this.currentAppBarOffsetTop_ > 0) {
          this.currentAppBarOffsetTop_ = 0;
        } else if (Math.abs(this.currentAppBarOffsetTop_) > this.topAppBarHeight_) {
          this.currentAppBarOffsetTop_ = -this.topAppBarHeight_;
        }

        this.moveTopAppBar_();
      }
    }
    /**
     * Top app bar resize handler that throttle/debounce functions that execute updates.
     * @private
     */

  }, {
    key: "topAppBarResizeHandler_",
    value: function topAppBarResizeHandler_() {
      var _this2 = this;

      // Throttle resize events 10 p/s
      if (!this.resizeThrottleId_) {
        this.resizeThrottleId_ = setTimeout(function () {
          _this2.resizeThrottleId_ = INITIAL_VALUE;

          _this2.throttledResizeHandler_();
        }, _constants__WEBPACK_IMPORTED_MODULE_2__["numbers"].DEBOUNCE_THROTTLE_RESIZE_TIME_MS);
      }

      this.isCurrentlyBeingResized_ = true;

      if (this.resizeDebounceId_) {
        clearTimeout(this.resizeDebounceId_);
      }

      this.resizeDebounceId_ = setTimeout(function () {
        _this2.topAppBarScrollHandler_();

        _this2.isCurrentlyBeingResized_ = false;
        _this2.resizeDebounceId_ = INITIAL_VALUE;
      }, _constants__WEBPACK_IMPORTED_MODULE_2__["numbers"].DEBOUNCE_THROTTLE_RESIZE_TIME_MS);
    }
    /**
     * Throttled function that updates the top app bar scrolled values if the
     * top app bar height changes.
     * @private
     */

  }, {
    key: "throttledResizeHandler_",
    value: function throttledResizeHandler_() {
      var currentHeight = this.adapter_.getTopAppBarHeight();

      if (this.topAppBarHeight_ !== currentHeight) {
        this.wasDocked_ = false; // Since the top app bar has a different height depending on the screen width, this
        // will ensure that the top app bar remains in the correct location if
        // completely hidden and a resize makes the top app bar a different height.

        this.currentAppBarOffsetTop_ -= this.topAppBarHeight_ - currentHeight;
        this.topAppBarHeight_ = currentHeight;
      }

      this.topAppBarScrollHandler_();
    }
  }]);

  return MDCTopAppBarFoundation;
}(_foundation__WEBPACK_IMPORTED_MODULE_1__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (MDCTopAppBarFoundation);

/***/ }),

/***/ "./node_modules/@stimulus/core/dist/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/index.js ***!
  \***************************************************/
/*! exports provided: Application, Context, Controller, defaultSchema */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_application__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/application */ "./node_modules/@stimulus/core/dist/src/application.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Application", function() { return _src_application__WEBPACK_IMPORTED_MODULE_0__["Application"]; });

/* harmony import */ var _src_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/context */ "./node_modules/@stimulus/core/dist/src/context.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Context", function() { return _src_context__WEBPACK_IMPORTED_MODULE_1__["Context"]; });

/* harmony import */ var _src_controller__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/controller */ "./node_modules/@stimulus/core/dist/src/controller.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Controller", function() { return _src_controller__WEBPACK_IMPORTED_MODULE_2__["Controller"]; });

/* harmony import */ var _src_schema__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/schema */ "./node_modules/@stimulus/core/dist/src/schema.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultSchema", function() { return _src_schema__WEBPACK_IMPORTED_MODULE_3__["defaultSchema"]; });






/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/action.js":
/*!********************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/action.js ***!
  \********************************************************/
/*! exports provided: Action, getDefaultEventNameForElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Action", function() { return Action; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDefaultEventNameForElement", function() { return getDefaultEventNameForElement; });
/* harmony import */ var _action_descriptor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./action_descriptor */ "./node_modules/@stimulus/core/dist/src/action_descriptor.js");


var Action =
/** @class */
function () {
  function Action(element, index, descriptor) {
    this.element = element;
    this.index = index;
    this.eventTarget = descriptor.eventTarget || element;
    this.eventName = descriptor.eventName || getDefaultEventNameForElement(element) || error("missing event name");
    this.identifier = descriptor.identifier || error("missing identifier");
    this.methodName = descriptor.methodName || error("missing method name");
  }

  Action.forToken = function (token) {
    return new this(token.element, token.index, Object(_action_descriptor__WEBPACK_IMPORTED_MODULE_0__["parseDescriptorString"])(token.content));
  };

  Action.prototype.toString = function () {
    var eventNameSuffix = this.eventTargetName ? "@" + this.eventTargetName : "";
    return "" + this.eventName + eventNameSuffix + "->" + this.identifier + "#" + this.methodName;
  };

  Object.defineProperty(Action.prototype, "eventTargetName", {
    get: function get() {
      return Object(_action_descriptor__WEBPACK_IMPORTED_MODULE_0__["stringifyEventTarget"])(this.eventTarget);
    },
    enumerable: true,
    configurable: true
  });
  return Action;
}();


var defaultEventNames = {
  "a": function a(e) {
    return "click";
  },
  "button": function button(e) {
    return "click";
  },
  "form": function form(e) {
    return "submit";
  },
  "input": function input(e) {
    return e.getAttribute("type") == "submit" ? "click" : "change";
  },
  "select": function select(e) {
    return "change";
  },
  "textarea": function textarea(e) {
    return "change";
  }
};
function getDefaultEventNameForElement(element) {
  var tagName = element.tagName.toLowerCase();

  if (tagName in defaultEventNames) {
    return defaultEventNames[tagName](element);
  }
}

function error(message) {
  throw new Error(message);
}

/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/action_descriptor.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/action_descriptor.js ***!
  \*******************************************************************/
/*! exports provided: parseDescriptorString, stringifyEventTarget */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseDescriptorString", function() { return parseDescriptorString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stringifyEventTarget", function() { return stringifyEventTarget; });
// capture nos.:            12   23 4               43   1 5   56 7  76
var descriptorPattern = /^((.+?)(@(window|document))?->)?(.+?)(#(.+))?$/;
function parseDescriptorString(descriptorString) {
  var source = descriptorString.trim();
  var matches = source.match(descriptorPattern) || [];
  return {
    eventTarget: parseEventTarget(matches[4]),
    eventName: matches[2],
    identifier: matches[5],
    methodName: matches[7]
  };
}

function parseEventTarget(eventTargetName) {
  if (eventTargetName == "window") {
    return window;
  } else if (eventTargetName == "document") {
    return document;
  }
}

function stringifyEventTarget(eventTarget) {
  if (eventTarget == window) {
    return "window";
  } else if (eventTarget == document) {
    return "document";
  }
}

/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/application.js":
/*!*************************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/application.js ***!
  \*************************************************************/
/*! exports provided: Application */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Application", function() { return Application; });
/* harmony import */ var _dispatcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dispatcher */ "./node_modules/@stimulus/core/dist/src/dispatcher.js");
/* harmony import */ var _router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./router */ "./node_modules/@stimulus/core/dist/src/router.js");
/* harmony import */ var _schema__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schema */ "./node_modules/@stimulus/core/dist/src/schema.js");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : new P(function (resolve) {
        resolve(result.value);
      }).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [0, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};





var Application =
/** @class */
function () {
  function Application(element, schema) {
    if (element === void 0) {
      element = document.documentElement;
    }

    if (schema === void 0) {
      schema = _schema__WEBPACK_IMPORTED_MODULE_2__["defaultSchema"];
    }

    this.element = element;
    this.schema = schema;
    this.dispatcher = new _dispatcher__WEBPACK_IMPORTED_MODULE_0__["Dispatcher"](this);
    this.router = new _router__WEBPACK_IMPORTED_MODULE_1__["Router"](this);
  }

  Application.start = function (element, schema) {
    var application = new Application(element, schema);
    application.start();
    return application;
  };

  Application.prototype.start = function () {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , domReady()];

          case 1:
            _a.sent();

            this.router.start();
            this.dispatcher.start();
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  Application.prototype.stop = function () {
    this.router.stop();
    this.dispatcher.stop();
  };

  Application.prototype.register = function (identifier, controllerConstructor) {
    this.load({
      identifier: identifier,
      controllerConstructor: controllerConstructor
    });
  };

  Application.prototype.load = function (head) {
    var _this = this;

    var rest = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      rest[_i - 1] = arguments[_i];
    }

    var definitions = Array.isArray(head) ? head : [head].concat(rest);
    definitions.forEach(function (definition) {
      return _this.router.loadDefinition(definition);
    });
  };

  Application.prototype.unload = function (head) {
    var _this = this;

    var rest = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      rest[_i - 1] = arguments[_i];
    }

    var identifiers = Array.isArray(head) ? head : [head].concat(rest);
    identifiers.forEach(function (identifier) {
      return _this.router.unloadIdentifier(identifier);
    });
  };

  Object.defineProperty(Application.prototype, "controllers", {
    // Controllers
    get: function get() {
      return this.router.contexts.map(function (context) {
        return context.controller;
      });
    },
    enumerable: true,
    configurable: true
  });

  Application.prototype.getControllerForElementAndIdentifier = function (element, identifier) {
    var context = this.router.getContextForElementAndIdentifier(element, identifier);
    return context ? context.controller : null;
  }; // Error handling


  Application.prototype.handleError = function (error, message, detail) {
    console.error("%s\n\n%o\n\n%o", message, error, detail);
  };

  return Application;
}();



function domReady() {
  return new Promise(function (resolve) {
    if (document.readyState == "loading") {
      document.addEventListener("DOMContentLoaded", resolve);
    } else {
      resolve();
    }
  });
}

/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/binding.js":
/*!*********************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/binding.js ***!
  \*********************************************************/
/*! exports provided: Binding */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Binding", function() { return Binding; });
var Binding =
/** @class */
function () {
  function Binding(context, action) {
    this.context = context;
    this.action = action;
  }

  Object.defineProperty(Binding.prototype, "index", {
    get: function get() {
      return this.action.index;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Binding.prototype, "eventTarget", {
    get: function get() {
      return this.action.eventTarget;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Binding.prototype, "identifier", {
    get: function get() {
      return this.context.identifier;
    },
    enumerable: true,
    configurable: true
  });

  Binding.prototype.handleEvent = function (event) {
    if (this.willBeInvokedByEvent(event)) {
      this.invokeWithEvent(event);
    }
  };

  Object.defineProperty(Binding.prototype, "eventName", {
    get: function get() {
      return this.action.eventName;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Binding.prototype, "method", {
    get: function get() {
      var method = this.controller[this.methodName];

      if (typeof method == "function") {
        return method;
      }

      throw new Error("Action \"" + this.action + "\" references undefined method \"" + this.methodName + "\"");
    },
    enumerable: true,
    configurable: true
  });

  Binding.prototype.invokeWithEvent = function (event) {
    try {
      this.method.call(this.controller, event);
    } catch (error) {
      var _a = this,
          identifier = _a.identifier,
          controller = _a.controller,
          element = _a.element,
          index = _a.index;

      var detail = {
        identifier: identifier,
        controller: controller,
        element: element,
        index: index,
        event: event
      };
      this.context.handleError(error, "invoking action \"" + this.action + "\"", detail);
    }
  };

  Binding.prototype.willBeInvokedByEvent = function (event) {
    var eventTarget = event.target;

    if (this.element === eventTarget) {
      return true;
    } else if (eventTarget instanceof Element && this.element.contains(eventTarget)) {
      return this.scope.containsElement(eventTarget);
    } else {
      return true;
    }
  };

  Object.defineProperty(Binding.prototype, "controller", {
    get: function get() {
      return this.context.controller;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Binding.prototype, "methodName", {
    get: function get() {
      return this.action.methodName;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Binding.prototype, "element", {
    get: function get() {
      return this.scope.element;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Binding.prototype, "scope", {
    get: function get() {
      return this.context.scope;
    },
    enumerable: true,
    configurable: true
  });
  return Binding;
}();



/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/binding_observer.js":
/*!******************************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/binding_observer.js ***!
  \******************************************************************/
/*! exports provided: BindingObserver */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BindingObserver", function() { return BindingObserver; });
/* harmony import */ var _action__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./action */ "./node_modules/@stimulus/core/dist/src/action.js");
/* harmony import */ var _binding__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binding */ "./node_modules/@stimulus/core/dist/src/binding.js");
/* harmony import */ var _stimulus_mutation_observers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stimulus/mutation-observers */ "./node_modules/@stimulus/mutation-observers/dist/index.js");




var BindingObserver =
/** @class */
function () {
  function BindingObserver(context, delegate) {
    this.context = context;
    this.delegate = delegate;
    this.bindingsByAction = new Map();
  }

  BindingObserver.prototype.start = function () {
    if (!this.valueListObserver) {
      this.valueListObserver = new _stimulus_mutation_observers__WEBPACK_IMPORTED_MODULE_2__["ValueListObserver"](this.element, this.actionAttribute, this);
      this.valueListObserver.start();
    }
  };

  BindingObserver.prototype.stop = function () {
    if (this.valueListObserver) {
      this.valueListObserver.stop();
      delete this.valueListObserver;
      this.disconnectAllActions();
    }
  };

  Object.defineProperty(BindingObserver.prototype, "element", {
    get: function get() {
      return this.context.element;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(BindingObserver.prototype, "identifier", {
    get: function get() {
      return this.context.identifier;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(BindingObserver.prototype, "actionAttribute", {
    get: function get() {
      return this.schema.actionAttribute;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(BindingObserver.prototype, "schema", {
    get: function get() {
      return this.context.schema;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(BindingObserver.prototype, "bindings", {
    get: function get() {
      return Array.from(this.bindingsByAction.values());
    },
    enumerable: true,
    configurable: true
  });

  BindingObserver.prototype.connectAction = function (action) {
    var binding = new _binding__WEBPACK_IMPORTED_MODULE_1__["Binding"](this.context, action);
    this.bindingsByAction.set(action, binding);
    this.delegate.bindingConnected(binding);
  };

  BindingObserver.prototype.disconnectAction = function (action) {
    var binding = this.bindingsByAction.get(action);

    if (binding) {
      this.bindingsByAction.delete(action);
      this.delegate.bindingDisconnected(binding);
    }
  };

  BindingObserver.prototype.disconnectAllActions = function () {
    var _this = this;

    this.bindings.forEach(function (binding) {
      return _this.delegate.bindingDisconnected(binding);
    });
    this.bindingsByAction.clear();
  }; // Value observer delegate


  BindingObserver.prototype.parseValueForToken = function (token) {
    var action = _action__WEBPACK_IMPORTED_MODULE_0__["Action"].forToken(token);

    if (action.identifier == this.identifier) {
      return action;
    }
  };

  BindingObserver.prototype.elementMatchedValue = function (element, action) {
    this.connectAction(action);
  };

  BindingObserver.prototype.elementUnmatchedValue = function (element, action) {
    this.disconnectAction(action);
  };

  return BindingObserver;
}();



/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/context.js":
/*!*********************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/context.js ***!
  \*********************************************************/
/*! exports provided: Context */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Context", function() { return Context; });
/* harmony import */ var _binding_observer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./binding_observer */ "./node_modules/@stimulus/core/dist/src/binding_observer.js");


var Context =
/** @class */
function () {
  function Context(module, scope) {
    this.module = module;
    this.scope = scope;
    this.controller = new module.controllerConstructor(this);
    this.bindingObserver = new _binding_observer__WEBPACK_IMPORTED_MODULE_0__["BindingObserver"](this, this.dispatcher);

    try {
      this.controller.initialize();
    } catch (error) {
      this.handleError(error, "initializing controller");
    }
  }

  Context.prototype.connect = function () {
    this.bindingObserver.start();

    try {
      this.controller.connect();
    } catch (error) {
      this.handleError(error, "connecting controller");
    }
  };

  Context.prototype.disconnect = function () {
    try {
      this.controller.disconnect();
    } catch (error) {
      this.handleError(error, "disconnecting controller");
    }

    this.bindingObserver.stop();
  };

  Object.defineProperty(Context.prototype, "application", {
    get: function get() {
      return this.module.application;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Context.prototype, "identifier", {
    get: function get() {
      return this.module.identifier;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Context.prototype, "schema", {
    get: function get() {
      return this.application.schema;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Context.prototype, "dispatcher", {
    get: function get() {
      return this.application.dispatcher;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Context.prototype, "element", {
    get: function get() {
      return this.scope.element;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Context.prototype, "parentElement", {
    get: function get() {
      return this.element.parentElement;
    },
    enumerable: true,
    configurable: true
  }); // Error handling

  Context.prototype.handleError = function (error, message, detail) {
    if (detail === void 0) {
      detail = {};
    }

    var _a = this,
        identifier = _a.identifier,
        controller = _a.controller,
        element = _a.element;

    detail = Object.assign({
      identifier: identifier,
      controller: controller,
      element: element
    }, detail);
    this.application.handleError(error, "Error " + message, detail);
  };

  return Context;
}();



/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/controller.js":
/*!************************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/controller.js ***!
  \************************************************************/
/*! exports provided: Controller */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Controller", function() { return Controller; });
/* harmony import */ var _target_properties__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./target_properties */ "./node_modules/@stimulus/core/dist/src/target_properties.js");


var Controller =
/** @class */
function () {
  function Controller(context) {
    this.context = context;
  }

  Controller.bless = function () {
    Object(_target_properties__WEBPACK_IMPORTED_MODULE_0__["defineTargetProperties"])(this);
  };

  Object.defineProperty(Controller.prototype, "application", {
    get: function get() {
      return this.context.application;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Controller.prototype, "scope", {
    get: function get() {
      return this.context.scope;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Controller.prototype, "element", {
    get: function get() {
      return this.scope.element;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Controller.prototype, "identifier", {
    get: function get() {
      return this.scope.identifier;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Controller.prototype, "targets", {
    get: function get() {
      return this.scope.targets;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Controller.prototype, "data", {
    get: function get() {
      return this.scope.data;
    },
    enumerable: true,
    configurable: true
  });

  Controller.prototype.initialize = function () {// Override in your subclass to set up initial controller state
  };

  Controller.prototype.connect = function () {// Override in your subclass to respond when the controller is connected to the DOM
  };

  Controller.prototype.disconnect = function () {// Override in your subclass to respond when the controller is disconnected from the DOM
  };

  Controller.targets = [];
  return Controller;
}();



/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/data_map.js":
/*!**********************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/data_map.js ***!
  \**********************************************************/
/*! exports provided: DataMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataMap", function() { return DataMap; });
var DataMap =
/** @class */
function () {
  function DataMap(scope) {
    this.scope = scope;
  }

  Object.defineProperty(DataMap.prototype, "element", {
    get: function get() {
      return this.scope.element;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(DataMap.prototype, "identifier", {
    get: function get() {
      return this.scope.identifier;
    },
    enumerable: true,
    configurable: true
  });

  DataMap.prototype.get = function (key) {
    key = this.getFormattedKey(key);
    return this.element.getAttribute(key);
  };

  DataMap.prototype.set = function (key, value) {
    key = this.getFormattedKey(key);
    this.element.setAttribute(key, value);
    return this.get(key);
  };

  DataMap.prototype.has = function (key) {
    key = this.getFormattedKey(key);
    return this.element.hasAttribute(key);
  };

  DataMap.prototype.delete = function (key) {
    if (this.has(key)) {
      key = this.getFormattedKey(key);
      this.element.removeAttribute(key);
      return true;
    } else {
      return false;
    }
  };

  DataMap.prototype.getFormattedKey = function (key) {
    return "data-" + this.identifier + "-" + dasherize(key);
  };

  return DataMap;
}();



function dasherize(value) {
  return value.replace(/([A-Z])/g, function (_, char) {
    return "-" + char.toLowerCase();
  });
}

/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/definition.js":
/*!************************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/definition.js ***!
  \************************************************************/
/*! exports provided: blessDefinition */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blessDefinition", function() { return blessDefinition; });
var __extends = undefined && undefined.__extends || function () {
  var extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (b.hasOwnProperty(p)) d[p] = b[p];
    }
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
/** @hidden */


function blessDefinition(definition) {
  return {
    identifier: definition.identifier,
    controllerConstructor: blessControllerConstructor(definition.controllerConstructor)
  };
}

function blessControllerConstructor(controllerConstructor) {
  var constructor = extend(controllerConstructor);
  constructor.bless();
  return constructor;
}

var extend = function () {
  function extendWithReflect(constructor) {
    function Controller() {
      var _newTarget = this && this instanceof Controller ? this.constructor : void 0;

      return Reflect.construct(constructor, arguments, _newTarget);
    }

    Controller.prototype = Object.create(constructor.prototype, {
      constructor: {
        value: Controller
      }
    });
    Reflect.setPrototypeOf(Controller, constructor);
    return Controller;
  }

  function testReflectExtension() {
    var a = function a() {
      this.a.call(this);
    };

    var b = extendWithReflect(a);

    b.prototype.a = function () {};

    return new b();
  }

  try {
    testReflectExtension();
    return extendWithReflect;
  } catch (error) {
    return function (constructor) {
      return (
        /** @class */
        function (_super) {
          __extends(Controller, _super);

          function Controller() {
            return _super !== null && _super.apply(this, arguments) || this;
          }

          return Controller;
        }(constructor)
      );
    };
  }
}();

/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/dispatcher.js":
/*!************************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/dispatcher.js ***!
  \************************************************************/
/*! exports provided: Dispatcher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Dispatcher", function() { return Dispatcher; });
/* harmony import */ var _event_listener__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./event_listener */ "./node_modules/@stimulus/core/dist/src/event_listener.js");


var Dispatcher =
/** @class */
function () {
  function Dispatcher(application) {
    this.application = application;
    this.eventListenerMaps = new Map();
    this.started = false;
  }

  Dispatcher.prototype.start = function () {
    if (!this.started) {
      this.started = true;
      this.eventListeners.forEach(function (eventListener) {
        return eventListener.connect();
      });
    }
  };

  Dispatcher.prototype.stop = function () {
    if (this.started) {
      this.started = false;
      this.eventListeners.forEach(function (eventListener) {
        return eventListener.disconnect();
      });
    }
  };

  Object.defineProperty(Dispatcher.prototype, "eventListeners", {
    get: function get() {
      return Array.from(this.eventListenerMaps.values()).reduce(function (listeners, map) {
        return listeners.concat(Array.from(map.values()));
      }, []);
    },
    enumerable: true,
    configurable: true
  }); // Binding observer delegate

  /** @hidden */

  Dispatcher.prototype.bindingConnected = function (binding) {
    this.fetchEventListenerForBinding(binding).bindingConnected(binding);
  };
  /** @hidden */


  Dispatcher.prototype.bindingDisconnected = function (binding) {
    this.fetchEventListenerForBinding(binding).bindingDisconnected(binding);
  }; // Error handling


  Dispatcher.prototype.handleError = function (error, message, detail) {
    if (detail === void 0) {
      detail = {};
    }

    this.application.handleError(error, "Error " + message, detail);
  };

  Dispatcher.prototype.fetchEventListenerForBinding = function (binding) {
    var eventTarget = binding.eventTarget,
        eventName = binding.eventName;
    return this.fetchEventListener(eventTarget, eventName);
  };

  Dispatcher.prototype.fetchEventListener = function (eventTarget, eventName) {
    var eventListenerMap = this.fetchEventListenerMapForEventTarget(eventTarget);
    var eventListener = eventListenerMap.get(eventName);

    if (!eventListener) {
      eventListener = this.createEventListener(eventTarget, eventName);
      eventListenerMap.set(eventName, eventListener);
    }

    return eventListener;
  };

  Dispatcher.prototype.createEventListener = function (eventTarget, eventName) {
    var eventListener = new _event_listener__WEBPACK_IMPORTED_MODULE_0__["EventListener"](eventTarget, eventName);

    if (this.started) {
      eventListener.connect();
    }

    return eventListener;
  };

  Dispatcher.prototype.fetchEventListenerMapForEventTarget = function (eventTarget) {
    var eventListenerMap = this.eventListenerMaps.get(eventTarget);

    if (!eventListenerMap) {
      eventListenerMap = new Map();
      this.eventListenerMaps.set(eventTarget, eventListenerMap);
    }

    return eventListenerMap;
  };

  return Dispatcher;
}();



/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/event_listener.js":
/*!****************************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/event_listener.js ***!
  \****************************************************************/
/*! exports provided: EventListener */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventListener", function() { return EventListener; });
var EventListener =
/** @class */
function () {
  function EventListener(eventTarget, eventName) {
    this.eventTarget = eventTarget;
    this.eventName = eventName;
    this.unorderedBindings = new Set();
  }

  EventListener.prototype.connect = function () {
    this.eventTarget.addEventListener(this.eventName, this, false);
  };

  EventListener.prototype.disconnect = function () {
    this.eventTarget.removeEventListener(this.eventName, this, false);
  }; // Binding observer delegate

  /** @hidden */


  EventListener.prototype.bindingConnected = function (binding) {
    this.unorderedBindings.add(binding);
  };
  /** @hidden */


  EventListener.prototype.bindingDisconnected = function (binding) {
    this.unorderedBindings.delete(binding);
  };

  EventListener.prototype.handleEvent = function (event) {
    var extendedEvent = extendEvent(event);

    for (var _i = 0, _a = this.bindings; _i < _a.length; _i++) {
      var binding = _a[_i];

      if (extendedEvent.immediatePropagationStopped) {
        break;
      } else {
        binding.handleEvent(extendedEvent);
      }
    }
  };

  Object.defineProperty(EventListener.prototype, "bindings", {
    get: function get() {
      return Array.from(this.unorderedBindings).sort(function (left, right) {
        var leftIndex = left.index,
            rightIndex = right.index;
        return leftIndex < rightIndex ? -1 : leftIndex > rightIndex ? 1 : 0;
      });
    },
    enumerable: true,
    configurable: true
  });
  return EventListener;
}();



function extendEvent(event) {
  if ("immediatePropagationStopped" in event) {
    return event;
  } else {
    var stopImmediatePropagation_1 = event.stopImmediatePropagation;
    return Object.assign(event, {
      immediatePropagationStopped: false,
      stopImmediatePropagation: function stopImmediatePropagation() {
        this.immediatePropagationStopped = true;
        stopImmediatePropagation_1.call(this);
      }
    });
  }
}

/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/module.js":
/*!********************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/module.js ***!
  \********************************************************/
/*! exports provided: Module */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Module", function() { return Module; });
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./context */ "./node_modules/@stimulus/core/dist/src/context.js");
/* harmony import */ var _definition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./definition */ "./node_modules/@stimulus/core/dist/src/definition.js");



var Module =
/** @class */
function () {
  function Module(application, definition) {
    this.application = application;
    this.definition = Object(_definition__WEBPACK_IMPORTED_MODULE_1__["blessDefinition"])(definition);
    this.contextsByScope = new WeakMap();
    this.connectedContexts = new Set();
  }

  Object.defineProperty(Module.prototype, "identifier", {
    get: function get() {
      return this.definition.identifier;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Module.prototype, "controllerConstructor", {
    get: function get() {
      return this.definition.controllerConstructor;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Module.prototype, "contexts", {
    get: function get() {
      return Array.from(this.connectedContexts);
    },
    enumerable: true,
    configurable: true
  });

  Module.prototype.connectContextForScope = function (scope) {
    var context = this.fetchContextForScope(scope);
    this.connectedContexts.add(context);
    context.connect();
  };

  Module.prototype.disconnectContextForScope = function (scope) {
    var context = this.contextsByScope.get(scope);

    if (context) {
      this.connectedContexts.delete(context);
      context.disconnect();
    }
  };

  Module.prototype.fetchContextForScope = function (scope) {
    var context = this.contextsByScope.get(scope);

    if (!context) {
      context = new _context__WEBPACK_IMPORTED_MODULE_0__["Context"](this, scope);
      this.contextsByScope.set(scope, context);
    }

    return context;
  };

  return Module;
}();



/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/router.js":
/*!********************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/router.js ***!
  \********************************************************/
/*! exports provided: Router */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Router", function() { return Router; });
/* harmony import */ var _module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./module */ "./node_modules/@stimulus/core/dist/src/module.js");
/* harmony import */ var _stimulus_multimap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stimulus/multimap */ "./node_modules/@stimulus/multimap/dist/index.js");
/* harmony import */ var _scope_observer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scope_observer */ "./node_modules/@stimulus/core/dist/src/scope_observer.js");




var Router =
/** @class */
function () {
  function Router(application) {
    this.application = application;
    this.scopeObserver = new _scope_observer__WEBPACK_IMPORTED_MODULE_2__["ScopeObserver"](this.element, this.schema, this);
    this.scopesByIdentifier = new _stimulus_multimap__WEBPACK_IMPORTED_MODULE_1__["Multimap"]();
    this.modulesByIdentifier = new Map();
  }

  Object.defineProperty(Router.prototype, "element", {
    get: function get() {
      return this.application.element;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Router.prototype, "schema", {
    get: function get() {
      return this.application.schema;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Router.prototype, "controllerAttribute", {
    get: function get() {
      return this.schema.controllerAttribute;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Router.prototype, "modules", {
    get: function get() {
      return Array.from(this.modulesByIdentifier.values());
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Router.prototype, "contexts", {
    get: function get() {
      return this.modules.reduce(function (contexts, module) {
        return contexts.concat(module.contexts);
      }, []);
    },
    enumerable: true,
    configurable: true
  });

  Router.prototype.start = function () {
    this.scopeObserver.start();
  };

  Router.prototype.stop = function () {
    this.scopeObserver.stop();
  };

  Router.prototype.loadDefinition = function (definition) {
    this.unloadIdentifier(definition.identifier);
    var module = new _module__WEBPACK_IMPORTED_MODULE_0__["Module"](this.application, definition);
    this.connectModule(module);
  };

  Router.prototype.unloadIdentifier = function (identifier) {
    var module = this.modulesByIdentifier.get(identifier);

    if (module) {
      this.disconnectModule(module);
    }
  };

  Router.prototype.getContextForElementAndIdentifier = function (element, identifier) {
    var module = this.modulesByIdentifier.get(identifier);

    if (module) {
      return module.contexts.find(function (context) {
        return context.element == element;
      });
    }
  }; // Error handler delegate

  /** @hidden */


  Router.prototype.handleError = function (error, message, detail) {
    this.application.handleError(error, message, detail);
  }; // Scope observer delegate

  /** @hidden */


  Router.prototype.scopeConnected = function (scope) {
    this.scopesByIdentifier.add(scope.identifier, scope);
    var module = this.modulesByIdentifier.get(scope.identifier);

    if (module) {
      module.connectContextForScope(scope);
    }
  };
  /** @hidden */


  Router.prototype.scopeDisconnected = function (scope) {
    this.scopesByIdentifier.delete(scope.identifier, scope);
    var module = this.modulesByIdentifier.get(scope.identifier);

    if (module) {
      module.disconnectContextForScope(scope);
    }
  }; // Modules


  Router.prototype.connectModule = function (module) {
    this.modulesByIdentifier.set(module.identifier, module);
    var scopes = this.scopesByIdentifier.getValuesForKey(module.identifier);
    scopes.forEach(function (scope) {
      return module.connectContextForScope(scope);
    });
  };

  Router.prototype.disconnectModule = function (module) {
    this.modulesByIdentifier.delete(module.identifier);
    var scopes = this.scopesByIdentifier.getValuesForKey(module.identifier);
    scopes.forEach(function (scope) {
      return module.disconnectContextForScope(scope);
    });
  };

  return Router;
}();



/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/schema.js":
/*!********************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/schema.js ***!
  \********************************************************/
/*! exports provided: defaultSchema */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultSchema", function() { return defaultSchema; });
var defaultSchema = {
  controllerAttribute: "data-controller",
  actionAttribute: "data-action",
  targetAttribute: "data-target"
};

/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/scope.js":
/*!*******************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/scope.js ***!
  \*******************************************************/
/*! exports provided: Scope */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scope", function() { return Scope; });
/* harmony import */ var _data_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data_map */ "./node_modules/@stimulus/core/dist/src/data_map.js");
/* harmony import */ var _target_set__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./target_set */ "./node_modules/@stimulus/core/dist/src/target_set.js");
/* harmony import */ var _selectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./selectors */ "./node_modules/@stimulus/core/dist/src/selectors.js");




var Scope =
/** @class */
function () {
  function Scope(schema, identifier, element) {
    this.schema = schema;
    this.identifier = identifier;
    this.element = element;
    this.targets = new _target_set__WEBPACK_IMPORTED_MODULE_1__["TargetSet"](this);
    this.data = new _data_map__WEBPACK_IMPORTED_MODULE_0__["DataMap"](this);
  }

  Scope.prototype.findElement = function (selector) {
    return this.findAllElements(selector)[0];
  };

  Scope.prototype.findAllElements = function (selector) {
    var head = this.element.matches(selector) ? [this.element] : [];
    var tail = this.filterElements(Array.from(this.element.querySelectorAll(selector)));
    return head.concat(tail);
  };

  Scope.prototype.filterElements = function (elements) {
    var _this = this;

    return elements.filter(function (element) {
      return _this.containsElement(element);
    });
  };

  Scope.prototype.containsElement = function (element) {
    return element.closest(this.controllerSelector) === this.element;
  };

  Object.defineProperty(Scope.prototype, "controllerSelector", {
    get: function get() {
      return Object(_selectors__WEBPACK_IMPORTED_MODULE_2__["attributeValueContainsToken"])(this.schema.controllerAttribute, this.identifier);
    },
    enumerable: true,
    configurable: true
  });
  return Scope;
}();



/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/scope_observer.js":
/*!****************************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/scope_observer.js ***!
  \****************************************************************/
/*! exports provided: ScopeObserver */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScopeObserver", function() { return ScopeObserver; });
/* harmony import */ var _scope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scope */ "./node_modules/@stimulus/core/dist/src/scope.js");
/* harmony import */ var _stimulus_mutation_observers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stimulus/mutation-observers */ "./node_modules/@stimulus/mutation-observers/dist/index.js");



var ScopeObserver =
/** @class */
function () {
  function ScopeObserver(element, schema, delegate) {
    this.element = element;
    this.schema = schema;
    this.delegate = delegate;
    this.valueListObserver = new _stimulus_mutation_observers__WEBPACK_IMPORTED_MODULE_1__["ValueListObserver"](this.element, this.controllerAttribute, this);
    this.scopesByIdentifierByElement = new WeakMap();
    this.scopeReferenceCounts = new WeakMap();
  }

  ScopeObserver.prototype.start = function () {
    this.valueListObserver.start();
  };

  ScopeObserver.prototype.stop = function () {
    this.valueListObserver.stop();
  };

  Object.defineProperty(ScopeObserver.prototype, "controllerAttribute", {
    get: function get() {
      return this.schema.controllerAttribute;
    },
    enumerable: true,
    configurable: true
  }); // Value observer delegate

  /** @hidden */

  ScopeObserver.prototype.parseValueForToken = function (token) {
    var element = token.element,
        identifier = token.content;
    var scopesByIdentifier = this.fetchScopesByIdentifierForElement(element);
    var scope = scopesByIdentifier.get(identifier);

    if (!scope) {
      scope = new _scope__WEBPACK_IMPORTED_MODULE_0__["Scope"](this.schema, identifier, element);
      scopesByIdentifier.set(identifier, scope);
    }

    return scope;
  };
  /** @hidden */


  ScopeObserver.prototype.elementMatchedValue = function (element, value) {
    var referenceCount = (this.scopeReferenceCounts.get(value) || 0) + 1;
    this.scopeReferenceCounts.set(value, referenceCount);

    if (referenceCount == 1) {
      this.delegate.scopeConnected(value);
    }
  };
  /** @hidden */


  ScopeObserver.prototype.elementUnmatchedValue = function (element, value) {
    var referenceCount = this.scopeReferenceCounts.get(value);

    if (referenceCount) {
      this.scopeReferenceCounts.set(value, referenceCount - 1);

      if (referenceCount == 1) {
        this.delegate.scopeDisconnected(value);
      }
    }
  };

  ScopeObserver.prototype.fetchScopesByIdentifierForElement = function (element) {
    var scopesByIdentifier = this.scopesByIdentifierByElement.get(element);

    if (!scopesByIdentifier) {
      scopesByIdentifier = new Map();
      this.scopesByIdentifierByElement.set(element, scopesByIdentifier);
    }

    return scopesByIdentifier;
  };

  return ScopeObserver;
}();



/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/selectors.js":
/*!***********************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/selectors.js ***!
  \***********************************************************/
/*! exports provided: attributeValueContainsToken */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "attributeValueContainsToken", function() { return attributeValueContainsToken; });
/** @hidden */
function attributeValueContainsToken(attributeName, token) {
  return "[" + attributeName + "~=\"" + token + "\"]";
}

/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/target_properties.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/target_properties.js ***!
  \*******************************************************************/
/*! exports provided: defineTargetProperties */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defineTargetProperties", function() { return defineTargetProperties; });
/** @hidden */
function defineTargetProperties(constructor) {
  var prototype = constructor.prototype;
  var targetNames = getTargetNamesForConstructor(constructor);
  targetNames.forEach(function (name) {
    var _a;

    return defineLinkedProperties(prototype, (_a = {}, _a[name + "Target"] = {
      get: function get() {
        var target = this.targets.find(name);

        if (target) {
          return target;
        } else {
          throw new Error("Missing target element \"" + this.identifier + "." + name + "\"");
        }
      }
    }, _a[name + "Targets"] = {
      get: function get() {
        return this.targets.findAll(name);
      }
    }, _a["has" + capitalize(name) + "Target"] = {
      get: function get() {
        return this.targets.has(name);
      }
    }, _a));
  });
}

function getTargetNamesForConstructor(constructor) {
  var ancestors = getAncestorsForConstructor(constructor);
  return Array.from(ancestors.reduce(function (targetNames, constructor) {
    getOwnTargetNamesForConstructor(constructor).forEach(function (name) {
      return targetNames.add(name);
    });
    return targetNames;
  }, new Set()));
}

function getAncestorsForConstructor(constructor) {
  var ancestors = [];

  while (constructor) {
    ancestors.push(constructor);
    constructor = Object.getPrototypeOf(constructor);
  }

  return ancestors;
}

function getOwnTargetNamesForConstructor(constructor) {
  var definition = constructor["targets"];
  return Array.isArray(definition) ? definition : [];
}

function defineLinkedProperties(object, properties) {
  Object.keys(properties).forEach(function (name) {
    if (!(name in object)) {
      var descriptor = properties[name];
      Object.defineProperty(object, name, descriptor);
    }
  });
}

function capitalize(name) {
  return name.charAt(0).toUpperCase() + name.slice(1);
}

/***/ }),

/***/ "./node_modules/@stimulus/core/dist/src/target_set.js":
/*!************************************************************!*\
  !*** ./node_modules/@stimulus/core/dist/src/target_set.js ***!
  \************************************************************/
/*! exports provided: TargetSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TargetSet", function() { return TargetSet; });
/* harmony import */ var _selectors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selectors */ "./node_modules/@stimulus/core/dist/src/selectors.js");


var TargetSet =
/** @class */
function () {
  function TargetSet(scope) {
    this.scope = scope;
  }

  Object.defineProperty(TargetSet.prototype, "element", {
    get: function get() {
      return this.scope.element;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(TargetSet.prototype, "identifier", {
    get: function get() {
      return this.scope.identifier;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(TargetSet.prototype, "schema", {
    get: function get() {
      return this.scope.schema;
    },
    enumerable: true,
    configurable: true
  });

  TargetSet.prototype.has = function (targetName) {
    return this.find(targetName) != null;
  };

  TargetSet.prototype.find = function () {
    var targetNames = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      targetNames[_i] = arguments[_i];
    }

    var selector = this.getSelectorForTargetNames(targetNames);
    return this.scope.findElement(selector);
  };

  TargetSet.prototype.findAll = function () {
    var targetNames = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      targetNames[_i] = arguments[_i];
    }

    var selector = this.getSelectorForTargetNames(targetNames);
    return this.scope.findAllElements(selector);
  };

  TargetSet.prototype.getSelectorForTargetNames = function (targetNames) {
    var _this = this;

    return targetNames.map(function (targetName) {
      return _this.getSelectorForTargetName(targetName);
    }).join(", ");
  };

  TargetSet.prototype.getSelectorForTargetName = function (targetName) {
    var targetDescriptor = this.identifier + "." + targetName;
    return Object(_selectors__WEBPACK_IMPORTED_MODULE_0__["attributeValueContainsToken"])(this.schema.targetAttribute, targetDescriptor);
  };

  return TargetSet;
}();



/***/ }),

/***/ "./node_modules/@stimulus/multimap/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@stimulus/multimap/dist/index.js ***!
  \*******************************************************/
/*! exports provided: Multimap, IndexedMultimap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_multimap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/multimap */ "./node_modules/@stimulus/multimap/dist/src/multimap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Multimap", function() { return _src_multimap__WEBPACK_IMPORTED_MODULE_0__["Multimap"]; });

/* harmony import */ var _src_indexed_multimap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/indexed_multimap */ "./node_modules/@stimulus/multimap/dist/src/indexed_multimap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IndexedMultimap", function() { return _src_indexed_multimap__WEBPACK_IMPORTED_MODULE_1__["IndexedMultimap"]; });




/***/ }),

/***/ "./node_modules/@stimulus/multimap/dist/src/indexed_multimap.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@stimulus/multimap/dist/src/indexed_multimap.js ***!
  \**********************************************************************/
/*! exports provided: IndexedMultimap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IndexedMultimap", function() { return IndexedMultimap; });
/* harmony import */ var _multimap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./multimap */ "./node_modules/@stimulus/multimap/dist/src/multimap.js");
/* harmony import */ var _set_operations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./set_operations */ "./node_modules/@stimulus/multimap/dist/src/set_operations.js");
var __extends = undefined && undefined.__extends || function () {
  var extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (b.hasOwnProperty(p)) d[p] = b[p];
    }
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();




var IndexedMultimap =
/** @class */
function (_super) {
  __extends(IndexedMultimap, _super);

  function IndexedMultimap() {
    var _this = _super.call(this) || this;

    _this.keysByValue = new Map();
    return _this;
  }

  Object.defineProperty(IndexedMultimap.prototype, "values", {
    get: function get() {
      return Array.from(this.keysByValue.keys());
    },
    enumerable: true,
    configurable: true
  });

  IndexedMultimap.prototype.add = function (key, value) {
    _super.prototype.add.call(this, key, value);

    Object(_set_operations__WEBPACK_IMPORTED_MODULE_1__["add"])(this.keysByValue, value, key);
  };

  IndexedMultimap.prototype.delete = function (key, value) {
    _super.prototype.delete.call(this, key, value);

    Object(_set_operations__WEBPACK_IMPORTED_MODULE_1__["del"])(this.keysByValue, value, key);
  };

  IndexedMultimap.prototype.hasValue = function (value) {
    return this.keysByValue.has(value);
  };

  IndexedMultimap.prototype.getKeysForValue = function (value) {
    var set = this.keysByValue.get(value);
    return set ? Array.from(set) : [];
  };

  return IndexedMultimap;
}(_multimap__WEBPACK_IMPORTED_MODULE_0__["Multimap"]);



/***/ }),

/***/ "./node_modules/@stimulus/multimap/dist/src/multimap.js":
/*!**************************************************************!*\
  !*** ./node_modules/@stimulus/multimap/dist/src/multimap.js ***!
  \**************************************************************/
/*! exports provided: Multimap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Multimap", function() { return Multimap; });
/* harmony import */ var _set_operations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./set_operations */ "./node_modules/@stimulus/multimap/dist/src/set_operations.js");


var Multimap =
/** @class */
function () {
  function Multimap() {
    this.valuesByKey = new Map();
  }

  Object.defineProperty(Multimap.prototype, "values", {
    get: function get() {
      var sets = Array.from(this.valuesByKey.values());
      return sets.reduce(function (values, set) {
        return values.concat(Array.from(set));
      }, []);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Multimap.prototype, "size", {
    get: function get() {
      var sets = Array.from(this.valuesByKey.values());
      return sets.reduce(function (size, set) {
        return size + set.size;
      }, 0);
    },
    enumerable: true,
    configurable: true
  });

  Multimap.prototype.add = function (key, value) {
    Object(_set_operations__WEBPACK_IMPORTED_MODULE_0__["add"])(this.valuesByKey, key, value);
  };

  Multimap.prototype.delete = function (key, value) {
    Object(_set_operations__WEBPACK_IMPORTED_MODULE_0__["del"])(this.valuesByKey, key, value);
  };

  Multimap.prototype.has = function (key, value) {
    var values = this.valuesByKey.get(key);
    return values != null && values.has(value);
  };

  Multimap.prototype.hasKey = function (key) {
    return this.valuesByKey.has(key);
  };

  Multimap.prototype.hasValue = function (value) {
    var sets = Array.from(this.valuesByKey.values());
    return sets.some(function (set) {
      return set.has(value);
    });
  };

  Multimap.prototype.getValuesForKey = function (key) {
    var values = this.valuesByKey.get(key);
    return values ? Array.from(values) : [];
  };

  Multimap.prototype.getKeysForValue = function (value) {
    return Array.from(this.valuesByKey).filter(function (_a) {
      var key = _a[0],
          values = _a[1];
      return values.has(value);
    }).map(function (_a) {
      var key = _a[0],
          values = _a[1];
      return key;
    });
  };

  return Multimap;
}();



/***/ }),

/***/ "./node_modules/@stimulus/multimap/dist/src/set_operations.js":
/*!********************************************************************!*\
  !*** ./node_modules/@stimulus/multimap/dist/src/set_operations.js ***!
  \********************************************************************/
/*! exports provided: add, del, fetch, prune */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "del", function() { return del; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetch", function() { return fetch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prune", function() { return prune; });
function add(map, key, value) {
  fetch(map, key).add(value);
}
function del(map, key, value) {
  fetch(map, key).delete(value);
  prune(map, key);
}
function fetch(map, key) {
  var values = map.get(key);

  if (!values) {
    values = new Set();
    map.set(key, values);
  }

  return values;
}
function prune(map, key) {
  var values = map.get(key);

  if (values != null && values.size == 0) {
    map.delete(key);
  }
}

/***/ }),

/***/ "./node_modules/@stimulus/mutation-observers/dist/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@stimulus/mutation-observers/dist/index.js ***!
  \*****************************************************************/
/*! exports provided: AttributeObserver, ElementObserver, TokenListObserver, ValueListObserver */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_attribute_observer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/attribute_observer */ "./node_modules/@stimulus/mutation-observers/dist/src/attribute_observer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttributeObserver", function() { return _src_attribute_observer__WEBPACK_IMPORTED_MODULE_0__["AttributeObserver"]; });

/* harmony import */ var _src_element_observer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/element_observer */ "./node_modules/@stimulus/mutation-observers/dist/src/element_observer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ElementObserver", function() { return _src_element_observer__WEBPACK_IMPORTED_MODULE_1__["ElementObserver"]; });

/* harmony import */ var _src_token_list_observer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/token_list_observer */ "./node_modules/@stimulus/mutation-observers/dist/src/token_list_observer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TokenListObserver", function() { return _src_token_list_observer__WEBPACK_IMPORTED_MODULE_2__["TokenListObserver"]; });

/* harmony import */ var _src_value_list_observer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/value_list_observer */ "./node_modules/@stimulus/mutation-observers/dist/src/value_list_observer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValueListObserver", function() { return _src_value_list_observer__WEBPACK_IMPORTED_MODULE_3__["ValueListObserver"]; });






/***/ }),

/***/ "./node_modules/@stimulus/mutation-observers/dist/src/attribute_observer.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@stimulus/mutation-observers/dist/src/attribute_observer.js ***!
  \**********************************************************************************/
/*! exports provided: AttributeObserver */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttributeObserver", function() { return AttributeObserver; });
/* harmony import */ var _element_observer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./element_observer */ "./node_modules/@stimulus/mutation-observers/dist/src/element_observer.js");


var AttributeObserver =
/** @class */
function () {
  function AttributeObserver(element, attributeName, delegate) {
    this.attributeName = attributeName;
    this.delegate = delegate;
    this.elementObserver = new _element_observer__WEBPACK_IMPORTED_MODULE_0__["ElementObserver"](element, this);
  }

  Object.defineProperty(AttributeObserver.prototype, "element", {
    get: function get() {
      return this.elementObserver.element;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AttributeObserver.prototype, "selector", {
    get: function get() {
      return "[" + this.attributeName + "]";
    },
    enumerable: true,
    configurable: true
  });

  AttributeObserver.prototype.start = function () {
    this.elementObserver.start();
  };

  AttributeObserver.prototype.stop = function () {
    this.elementObserver.stop();
  };

  AttributeObserver.prototype.refresh = function () {
    this.elementObserver.refresh();
  };

  Object.defineProperty(AttributeObserver.prototype, "started", {
    get: function get() {
      return this.elementObserver.started;
    },
    enumerable: true,
    configurable: true
  }); // Element observer delegate

  AttributeObserver.prototype.matchElement = function (element) {
    return element.hasAttribute(this.attributeName);
  };

  AttributeObserver.prototype.matchElementsInTree = function (tree) {
    var match = this.matchElement(tree) ? [tree] : [];
    var matches = Array.from(tree.querySelectorAll(this.selector));
    return match.concat(matches);
  };

  AttributeObserver.prototype.elementMatched = function (element) {
    if (this.delegate.elementMatchedAttribute) {
      this.delegate.elementMatchedAttribute(element, this.attributeName);
    }
  };

  AttributeObserver.prototype.elementUnmatched = function (element) {
    if (this.delegate.elementUnmatchedAttribute) {
      this.delegate.elementUnmatchedAttribute(element, this.attributeName);
    }
  };

  AttributeObserver.prototype.elementAttributeChanged = function (element, attributeName) {
    if (this.delegate.elementAttributeValueChanged && this.attributeName == attributeName) {
      this.delegate.elementAttributeValueChanged(element, attributeName);
    }
  };

  return AttributeObserver;
}();



/***/ }),

/***/ "./node_modules/@stimulus/mutation-observers/dist/src/element_observer.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@stimulus/mutation-observers/dist/src/element_observer.js ***!
  \********************************************************************************/
/*! exports provided: ElementObserver */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ElementObserver", function() { return ElementObserver; });
var ElementObserver =
/** @class */
function () {
  function ElementObserver(element, delegate) {
    var _this = this;

    this.element = element;
    this.started = false;
    this.delegate = delegate;
    this.elements = new Set();
    this.mutationObserver = new MutationObserver(function (mutations) {
      return _this.processMutations(mutations);
    });
  }

  ElementObserver.prototype.start = function () {
    if (!this.started) {
      this.started = true;
      this.mutationObserver.observe(this.element, {
        attributes: true,
        childList: true,
        subtree: true
      });
      this.refresh();
    }
  };

  ElementObserver.prototype.stop = function () {
    if (this.started) {
      this.mutationObserver.takeRecords();
      this.mutationObserver.disconnect();
      this.started = false;
    }
  };

  ElementObserver.prototype.refresh = function () {
    if (this.started) {
      var matches = new Set(this.matchElementsInTree());

      for (var _i = 0, _a = Array.from(this.elements); _i < _a.length; _i++) {
        var element = _a[_i];

        if (!matches.has(element)) {
          this.removeElement(element);
        }
      }

      for (var _b = 0, _c = Array.from(matches); _b < _c.length; _b++) {
        var element = _c[_b];
        this.addElement(element);
      }
    }
  }; // Mutation record processing


  ElementObserver.prototype.processMutations = function (mutations) {
    if (this.started) {
      for (var _i = 0, mutations_1 = mutations; _i < mutations_1.length; _i++) {
        var mutation = mutations_1[_i];
        this.processMutation(mutation);
      }
    }
  };

  ElementObserver.prototype.processMutation = function (mutation) {
    if (mutation.type == "attributes") {
      this.processAttributeChange(mutation.target, mutation.attributeName);
    } else if (mutation.type == "childList") {
      this.processRemovedNodes(mutation.removedNodes);
      this.processAddedNodes(mutation.addedNodes);
    }
  };

  ElementObserver.prototype.processAttributeChange = function (node, attributeName) {
    var element = node;

    if (this.elements.has(element)) {
      if (this.delegate.elementAttributeChanged && this.matchElement(element)) {
        this.delegate.elementAttributeChanged(element, attributeName);
      } else {
        this.removeElement(element);
      }
    } else if (this.matchElement(element)) {
      this.addElement(element);
    }
  };

  ElementObserver.prototype.processRemovedNodes = function (nodes) {
    for (var _i = 0, _a = Array.from(nodes); _i < _a.length; _i++) {
      var node = _a[_i];
      var element = this.elementFromNode(node);

      if (element) {
        this.processTree(element, this.removeElement);
      }
    }
  };

  ElementObserver.prototype.processAddedNodes = function (nodes) {
    for (var _i = 0, _a = Array.from(nodes); _i < _a.length; _i++) {
      var node = _a[_i];
      var element = this.elementFromNode(node);

      if (element && this.elementIsActive(element)) {
        this.processTree(element, this.addElement);
      }
    }
  }; // Element matching


  ElementObserver.prototype.matchElement = function (element) {
    return this.delegate.matchElement(element);
  };

  ElementObserver.prototype.matchElementsInTree = function (tree) {
    if (tree === void 0) {
      tree = this.element;
    }

    return this.delegate.matchElementsInTree(tree);
  };

  ElementObserver.prototype.processTree = function (tree, processor) {
    for (var _i = 0, _a = this.matchElementsInTree(tree); _i < _a.length; _i++) {
      var element = _a[_i];
      processor.call(this, element);
    }
  };

  ElementObserver.prototype.elementFromNode = function (node) {
    if (node.nodeType == Node.ELEMENT_NODE) {
      return node;
    }
  };

  ElementObserver.prototype.elementIsActive = function (element) {
    if (element.isConnected != this.element.isConnected) {
      return false;
    } else {
      return this.element.contains(element);
    }
  }; // Element tracking


  ElementObserver.prototype.addElement = function (element) {
    if (!this.elements.has(element)) {
      if (this.elementIsActive(element)) {
        this.elements.add(element);

        if (this.delegate.elementMatched) {
          this.delegate.elementMatched(element);
        }
      }
    }
  };

  ElementObserver.prototype.removeElement = function (element) {
    if (this.elements.has(element)) {
      this.elements.delete(element);

      if (this.delegate.elementUnmatched) {
        this.delegate.elementUnmatched(element);
      }
    }
  };

  return ElementObserver;
}();



/***/ }),

/***/ "./node_modules/@stimulus/mutation-observers/dist/src/token_list_observer.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@stimulus/mutation-observers/dist/src/token_list_observer.js ***!
  \***********************************************************************************/
/*! exports provided: TokenListObserver */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TokenListObserver", function() { return TokenListObserver; });
/* harmony import */ var _attribute_observer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./attribute_observer */ "./node_modules/@stimulus/mutation-observers/dist/src/attribute_observer.js");
/* harmony import */ var _stimulus_multimap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stimulus/multimap */ "./node_modules/@stimulus/multimap/dist/index.js");



var TokenListObserver =
/** @class */
function () {
  function TokenListObserver(element, attributeName, delegate) {
    this.attributeObserver = new _attribute_observer__WEBPACK_IMPORTED_MODULE_0__["AttributeObserver"](element, attributeName, this);
    this.delegate = delegate;
    this.tokensByElement = new _stimulus_multimap__WEBPACK_IMPORTED_MODULE_1__["Multimap"]();
  }

  Object.defineProperty(TokenListObserver.prototype, "started", {
    get: function get() {
      return this.attributeObserver.started;
    },
    enumerable: true,
    configurable: true
  });

  TokenListObserver.prototype.start = function () {
    this.attributeObserver.start();
  };

  TokenListObserver.prototype.stop = function () {
    this.attributeObserver.stop();
  };

  TokenListObserver.prototype.refresh = function () {
    this.attributeObserver.refresh();
  };

  Object.defineProperty(TokenListObserver.prototype, "element", {
    get: function get() {
      return this.attributeObserver.element;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(TokenListObserver.prototype, "attributeName", {
    get: function get() {
      return this.attributeObserver.attributeName;
    },
    enumerable: true,
    configurable: true
  }); // Attribute observer delegate

  TokenListObserver.prototype.elementMatchedAttribute = function (element) {
    this.tokensMatched(this.readTokensForElement(element));
  };

  TokenListObserver.prototype.elementAttributeValueChanged = function (element) {
    var _a = this.refreshTokensForElement(element),
        unmatchedTokens = _a[0],
        matchedTokens = _a[1];

    this.tokensUnmatched(unmatchedTokens);
    this.tokensMatched(matchedTokens);
  };

  TokenListObserver.prototype.elementUnmatchedAttribute = function (element) {
    this.tokensUnmatched(this.tokensByElement.getValuesForKey(element));
  };

  TokenListObserver.prototype.tokensMatched = function (tokens) {
    var _this = this;

    tokens.forEach(function (token) {
      return _this.tokenMatched(token);
    });
  };

  TokenListObserver.prototype.tokensUnmatched = function (tokens) {
    var _this = this;

    tokens.forEach(function (token) {
      return _this.tokenUnmatched(token);
    });
  };

  TokenListObserver.prototype.tokenMatched = function (token) {
    this.delegate.tokenMatched(token);
    this.tokensByElement.add(token.element, token);
  };

  TokenListObserver.prototype.tokenUnmatched = function (token) {
    this.delegate.tokenUnmatched(token);
    this.tokensByElement.delete(token.element, token);
  };

  TokenListObserver.prototype.refreshTokensForElement = function (element) {
    var previousTokens = this.tokensByElement.getValuesForKey(element);
    var currentTokens = this.readTokensForElement(element);
    var firstDifferingIndex = zip(previousTokens, currentTokens).findIndex(function (_a) {
      var previousToken = _a[0],
          currentToken = _a[1];
      return !tokensAreEqual(previousToken, currentToken);
    });

    if (firstDifferingIndex == -1) {
      return [[], []];
    } else {
      return [previousTokens.slice(firstDifferingIndex), currentTokens.slice(firstDifferingIndex)];
    }
  };

  TokenListObserver.prototype.readTokensForElement = function (element) {
    var attributeName = this.attributeName;
    var tokenString = element.getAttribute(attributeName) || "";
    return parseTokenString(tokenString, element, attributeName);
  };

  return TokenListObserver;
}();



function parseTokenString(tokenString, element, attributeName) {
  return tokenString.trim().split(/\s+/).filter(function (content) {
    return content.length;
  }).map(function (content, index) {
    return {
      element: element,
      attributeName: attributeName,
      content: content,
      index: index
    };
  });
}

function zip(left, right) {
  var length = Math.max(left.length, right.length);
  return Array.from({
    length: length
  }, function (_, index) {
    return [left[index], right[index]];
  });
}

function tokensAreEqual(left, right) {
  return left && right && left.index == right.index && left.content == right.content;
}

/***/ }),

/***/ "./node_modules/@stimulus/mutation-observers/dist/src/value_list_observer.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@stimulus/mutation-observers/dist/src/value_list_observer.js ***!
  \***********************************************************************************/
/*! exports provided: ValueListObserver */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValueListObserver", function() { return ValueListObserver; });
/* harmony import */ var _token_list_observer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token_list_observer */ "./node_modules/@stimulus/mutation-observers/dist/src/token_list_observer.js");


var ValueListObserver =
/** @class */
function () {
  function ValueListObserver(element, attributeName, delegate) {
    this.tokenListObserver = new _token_list_observer__WEBPACK_IMPORTED_MODULE_0__["TokenListObserver"](element, attributeName, this);
    this.delegate = delegate;
    this.parseResultsByToken = new WeakMap();
    this.valuesByTokenByElement = new WeakMap();
  }

  Object.defineProperty(ValueListObserver.prototype, "started", {
    get: function get() {
      return this.tokenListObserver.started;
    },
    enumerable: true,
    configurable: true
  });

  ValueListObserver.prototype.start = function () {
    this.tokenListObserver.start();
  };

  ValueListObserver.prototype.stop = function () {
    this.tokenListObserver.stop();
  };

  ValueListObserver.prototype.refresh = function () {
    this.tokenListObserver.refresh();
  };

  Object.defineProperty(ValueListObserver.prototype, "element", {
    get: function get() {
      return this.tokenListObserver.element;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ValueListObserver.prototype, "attributeName", {
    get: function get() {
      return this.tokenListObserver.attributeName;
    },
    enumerable: true,
    configurable: true
  });

  ValueListObserver.prototype.tokenMatched = function (token) {
    var element = token.element;
    var value = this.fetchParseResultForToken(token).value;

    if (value) {
      this.fetchValuesByTokenForElement(element).set(token, value);
      this.delegate.elementMatchedValue(element, value);
    }
  };

  ValueListObserver.prototype.tokenUnmatched = function (token) {
    var element = token.element;
    var value = this.fetchParseResultForToken(token).value;

    if (value) {
      this.fetchValuesByTokenForElement(element).delete(token);
      this.delegate.elementUnmatchedValue(element, value);
    }
  };

  ValueListObserver.prototype.fetchParseResultForToken = function (token) {
    var parseResult = this.parseResultsByToken.get(token);

    if (!parseResult) {
      parseResult = this.parseToken(token);
      this.parseResultsByToken.set(token, parseResult);
    }

    return parseResult;
  };

  ValueListObserver.prototype.fetchValuesByTokenForElement = function (element) {
    var valuesByToken = this.valuesByTokenByElement.get(element);

    if (!valuesByToken) {
      valuesByToken = new Map();
      this.valuesByTokenByElement.set(element, valuesByToken);
    }

    return valuesByToken;
  };

  ValueListObserver.prototype.parseToken = function (token) {
    try {
      var value = this.delegate.parseValueForToken(token);
      return {
        value: value
      };
    } catch (error) {
      return {
        error: error
      };
    }
  };

  return ValueListObserver;
}();



/***/ }),

/***/ "./node_modules/@stimulus/webpack-helpers/dist/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@stimulus/webpack-helpers/dist/index.js ***!
  \**************************************************************/
/*! exports provided: definitionsFromContext, identifierForContextKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "definitionsFromContext", function() { return definitionsFromContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identifierForContextKey", function() { return identifierForContextKey; });
function definitionsFromContext(context) {
  return context.keys().map(function (key) {
    return definitionForModuleWithContextAndKey(context, key);
  }).filter(function (value) {
    return value;
  });
}

function definitionForModuleWithContextAndKey(context, key) {
  var identifier = identifierForContextKey(key);

  if (identifier) {
    return definitionForModuleAndIdentifier(context(key), identifier);
  }
}

function definitionForModuleAndIdentifier(module, identifier) {
  var controllerConstructor = module.default;

  if (typeof controllerConstructor == "function") {
    return {
      identifier: identifier,
      controllerConstructor: controllerConstructor
    };
  }
}

function identifierForContextKey(key) {
  var logicalName = (key.match(/^(?:\.\/)?(.+)(?:[_-]controller\..+?)$/) || [])[1];

  if (logicalName) {
    return logicalName.replace(/_/g, "-").replace(/\//g, "--");
  }
}

/***/ }),

/***/ "./node_modules/decode-uri-component/index.js":
/*!****************************************************!*\
  !*** ./node_modules/decode-uri-component/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var token = '%[a-f0-9]{2}';
var singleMatcher = new RegExp(token, 'gi');
var multiMatcher = new RegExp('(' + token + ')+', 'gi');

function decodeComponents(components, split) {
  try {
    // Try to decode the entire string first
    return decodeURIComponent(components.join(''));
  } catch (err) {// Do nothing
  }

  if (components.length === 1) {
    return components;
  }

  split = split || 1; // Split the array in 2 parts

  var left = components.slice(0, split);
  var right = components.slice(split);
  return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
}

function decode(input) {
  try {
    return decodeURIComponent(input);
  } catch (err) {
    var tokens = input.match(singleMatcher);

    for (var i = 1; i < tokens.length; i++) {
      input = decodeComponents(tokens, i).join('');
      tokens = input.match(singleMatcher);
    }

    return input;
  }
}

function customDecodeURIComponent(input) {
  // Keep track of all the replacements and prefill the map with the `BOM`
  var replaceMap = {
    '%FE%FF': "\uFFFD\uFFFD",
    '%FF%FE': "\uFFFD\uFFFD"
  };
  var match = multiMatcher.exec(input);

  while (match) {
    try {
      // Decode as big chunks as possible
      replaceMap[match[0]] = decodeURIComponent(match[0]);
    } catch (err) {
      var result = decode(match[0]);

      if (result !== match[0]) {
        replaceMap[match[0]] = result;
      }
    }

    match = multiMatcher.exec(input);
  } // Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else


  replaceMap['%C2'] = "\uFFFD";
  var entries = Object.keys(replaceMap);

  for (var i = 0; i < entries.length; i++) {
    // Replace all decoded components
    var key = entries[i];
    input = input.replace(new RegExp(key, 'g'), replaceMap[key]);
  }

  return input;
}

module.exports = function (encodedURI) {
  if (typeof encodedURI !== 'string') {
    throw new TypeError('Expected `encodedURI` to be of type `string`, got `' + _typeof(encodedURI) + '`');
  }

  try {
    encodedURI = encodedURI.replace(/\+/g, ' '); // Try the built in decoder first

    return decodeURIComponent(encodedURI);
  } catch (err) {
    // Fallback to a more advanced decoder
    return customDecodeURIComponent(encodedURI);
  }
};

/***/ }),

/***/ "./node_modules/lit-html/lib/default-template-processor.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lit-html/lib/default-template-processor.js ***!
  \*****************************************************************/
/*! exports provided: DefaultTemplateProcessor, defaultTemplateProcessor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultTemplateProcessor", function() { return DefaultTemplateProcessor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultTemplateProcessor", function() { return defaultTemplateProcessor; });
/* harmony import */ var _parts_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parts.js */ "./node_modules/lit-html/lib/parts.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */

/**
 * Creates Parts when a template is instantiated.
 */

var DefaultTemplateProcessor =
/*#__PURE__*/
function () {
  function DefaultTemplateProcessor() {
    _classCallCheck(this, DefaultTemplateProcessor);
  }

  _createClass(DefaultTemplateProcessor, [{
    key: "handleAttributeExpressions",

    /**
     * Create parts for an attribute-position binding, given the event, attribute
     * name, and string literals.
     *
     * @param element The element containing the binding
     * @param name  The attribute name
     * @param strings The string literals. There are always at least two strings,
     *   event for fully-controlled bindings with a single expression.
     */
    value: function handleAttributeExpressions(element, name, strings, options) {
      var prefix = name[0];

      if (prefix === '.') {
        var _comitter = new _parts_js__WEBPACK_IMPORTED_MODULE_0__["PropertyCommitter"](element, name.slice(1), strings);

        return _comitter.parts;
      }

      if (prefix === '@') {
        return [new _parts_js__WEBPACK_IMPORTED_MODULE_0__["EventPart"](element, name.slice(1), options.eventContext)];
      }

      if (prefix === '?') {
        return [new _parts_js__WEBPACK_IMPORTED_MODULE_0__["BooleanAttributePart"](element, name.slice(1), strings)];
      }

      var comitter = new _parts_js__WEBPACK_IMPORTED_MODULE_0__["AttributeCommitter"](element, name, strings);
      return comitter.parts;
    }
    /**
     * Create parts for a text-position binding.
     * @param templateFactory
     */

  }, {
    key: "handleTextExpression",
    value: function handleTextExpression(options) {
      return new _parts_js__WEBPACK_IMPORTED_MODULE_0__["NodePart"](options);
    }
  }]);

  return DefaultTemplateProcessor;
}();
var defaultTemplateProcessor = new DefaultTemplateProcessor();

/***/ }),

/***/ "./node_modules/lit-html/lib/directive.js":
/*!************************************************!*\
  !*** ./node_modules/lit-html/lib/directive.js ***!
  \************************************************/
/*! exports provided: directive, isDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "directive", function() { return directive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDirective", function() { return isDirective; });
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
var directives = new WeakMap();
/**
 * Brands a function as a directive so that lit-html will call the function
 * during template rendering, rather than passing as a value.
 *
 * @param f The directive factory function. Must be a function that returns a
 * function of the signature `(part: Part) => void`. The returned function will
 * be called with the part object
 *
 * @example
 *
 * ```
 * import {directive, html} from 'lit-html';
 *
 * const immutable = directive((v) => (part) => {
 *   if (part.value !== v) {
 *     part.setValue(v)
 *   }
 * });
 * ```
 */

var directive = function directive(f) {
  return function () {
    var d = f.apply(void 0, arguments);
    directives.set(d, true);
    return d;
  };
};
var isDirective = function isDirective(o) {
  return typeof o === 'function' && directives.has(o);
};

/***/ }),

/***/ "./node_modules/lit-html/lib/dom.js":
/*!******************************************!*\
  !*** ./node_modules/lit-html/lib/dom.js ***!
  \******************************************/
/*! exports provided: isCEPolyfill, reparentNodes, removeNodes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCEPolyfill", function() { return isCEPolyfill; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reparentNodes", function() { return reparentNodes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeNodes", function() { return removeNodes; });
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
var isCEPolyfill = window.customElements !== undefined && window.customElements.polyfillWrapFlushCallback !== undefined;
/**
 * Reparents nodes, starting from `startNode` (inclusive) to `endNode`
 * (exclusive), into another container (could be the same container), before
 * `beforeNode`. If `beforeNode` is null, it appends the nodes to the
 * container.
 */

var reparentNodes = function reparentNodes(container, start) {
  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  var before = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  var node = start;

  while (node !== end) {
    var n = node.nextSibling;
    container.insertBefore(node, before);
    node = n;
  }
};
/**
 * Removes nodes, starting from `startNode` (inclusive) to `endNode`
 * (exclusive), from `container`.
 */

var removeNodes = function removeNodes(container, startNode) {
  var endNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  var node = startNode;

  while (node !== endNode) {
    var n = node.nextSibling;
    container.removeChild(node);
    node = n;
  }
};

/***/ }),

/***/ "./node_modules/lit-html/lib/part.js":
/*!*******************************************!*\
  !*** ./node_modules/lit-html/lib/part.js ***!
  \*******************************************/
/*! exports provided: noChange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noChange", function() { return noChange; });
/**
 * A sentinel value that signals that a value was handled by a directive and
 * should not be written to the DOM.
 */
var noChange = {};

/***/ }),

/***/ "./node_modules/lit-html/lib/parts.js":
/*!********************************************!*\
  !*** ./node_modules/lit-html/lib/parts.js ***!
  \********************************************/
/*! exports provided: isPrimitive, AttributeCommitter, AttributePart, NodePart, BooleanAttributePart, PropertyCommitter, PropertyPart, EventPart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPrimitive", function() { return isPrimitive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttributeCommitter", function() { return AttributeCommitter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttributePart", function() { return AttributePart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NodePart", function() { return NodePart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BooleanAttributePart", function() { return BooleanAttributePart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PropertyCommitter", function() { return PropertyCommitter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PropertyPart", function() { return PropertyPart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventPart", function() { return EventPart; });
/* harmony import */ var _directive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./directive.js */ "./node_modules/lit-html/lib/directive.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom.js */ "./node_modules/lit-html/lib/dom.js");
/* harmony import */ var _part_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./part.js */ "./node_modules/lit-html/lib/part.js");
/* harmony import */ var _template_instance_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./template-instance.js */ "./node_modules/lit-html/lib/template-instance.js");
/* harmony import */ var _template_result_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./template-result.js */ "./node_modules/lit-html/lib/template-result.js");
/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./template.js */ "./node_modules/lit-html/lib/template.js");
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */






var isPrimitive = function isPrimitive(value) {
  return value === null || !(_typeof(value) === 'object' || typeof value === 'function');
};
/**
 * Sets attribute values for AttributeParts, so that the value is only set once
 * even if there are multiple parts for an attribute.
 */

var AttributeCommitter =
/*#__PURE__*/
function () {
  function AttributeCommitter(element, name, strings) {
    _classCallCheck(this, AttributeCommitter);

    this.dirty = true;
    this.element = element;
    this.name = name;
    this.strings = strings;
    this.parts = [];

    for (var i = 0; i < strings.length - 1; i++) {
      this.parts[i] = this._createPart();
    }
  }
  /**
   * Creates a single part. Override this to create a differnt type of part.
   */


  _createClass(AttributeCommitter, [{
    key: "_createPart",
    value: function _createPart() {
      return new AttributePart(this);
    }
  }, {
    key: "_getValue",
    value: function _getValue() {
      var strings = this.strings;
      var l = strings.length - 1;
      var text = '';

      for (var i = 0; i < l; i++) {
        text += strings[i];
        var part = this.parts[i];

        if (part !== undefined) {
          var v = part.value;

          if (v != null && (Array.isArray(v) || typeof v !== 'string' && v[Symbol.iterator])) {
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
              for (var _iterator = v[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var t = _step.value;
                text += typeof t === 'string' ? t : String(t);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          } else {
            text += typeof v === 'string' ? v : String(v);
          }
        }
      }

      text += strings[l];
      return text;
    }
  }, {
    key: "commit",
    value: function commit() {
      if (this.dirty) {
        this.dirty = false;
        this.element.setAttribute(this.name, this._getValue());
      }
    }
  }]);

  return AttributeCommitter;
}();
var AttributePart =
/*#__PURE__*/
function () {
  function AttributePart(comitter) {
    _classCallCheck(this, AttributePart);

    this.value = undefined;
    this.committer = comitter;
  }

  _createClass(AttributePart, [{
    key: "setValue",
    value: function setValue(value) {
      if (value !== _part_js__WEBPACK_IMPORTED_MODULE_2__["noChange"] && (!isPrimitive(value) || value !== this.value)) {
        this.value = value; // If the value is a not a directive, dirty the committer so that it'll
        // call setAttribute. If the value is a directive, it'll dirty the
        // committer if it calls setValue().

        if (!Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__["isDirective"])(value)) {
          this.committer.dirty = true;
        }
      }
    }
  }, {
    key: "commit",
    value: function commit() {
      while (Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__["isDirective"])(this.value)) {
        var directive = this.value;
        this.value = _part_js__WEBPACK_IMPORTED_MODULE_2__["noChange"];
        directive(this);
      }

      if (this.value === _part_js__WEBPACK_IMPORTED_MODULE_2__["noChange"]) {
        return;
      }

      this.committer.commit();
    }
  }]);

  return AttributePart;
}();
var NodePart =
/*#__PURE__*/
function () {
  function NodePart(options) {
    _classCallCheck(this, NodePart);

    this.value = undefined;
    this._pendingValue = undefined;
    this.options = options;
  }
  /**
   * Inserts this part into a container.
   *
   * This part must be empty, as its contents are not automatically moved.
   */


  _createClass(NodePart, [{
    key: "appendInto",
    value: function appendInto(container) {
      this.startNode = container.appendChild(Object(_template_js__WEBPACK_IMPORTED_MODULE_5__["createMarker"])());
      this.endNode = container.appendChild(Object(_template_js__WEBPACK_IMPORTED_MODULE_5__["createMarker"])());
    }
    /**
     * Inserts this part between `ref` and `ref`'s next sibling. Both `ref` and
     * its next sibling must be static, unchanging nodes such as those that appear
     * in a literal section of a template.
     *
     * This part must be empty, as its contents are not automatically moved.
     */

  }, {
    key: "insertAfterNode",
    value: function insertAfterNode(ref) {
      this.startNode = ref;
      this.endNode = ref.nextSibling;
    }
    /**
     * Appends this part into a parent part.
     *
     * This part must be empty, as its contents are not automatically moved.
     */

  }, {
    key: "appendIntoPart",
    value: function appendIntoPart(part) {
      part._insert(this.startNode = Object(_template_js__WEBPACK_IMPORTED_MODULE_5__["createMarker"])());

      part._insert(this.endNode = Object(_template_js__WEBPACK_IMPORTED_MODULE_5__["createMarker"])());
    }
    /**
     * Appends this part after `ref`
     *
     * This part must be empty, as its contents are not automatically moved.
     */

  }, {
    key: "insertAfterPart",
    value: function insertAfterPart(ref) {
      ref._insert(this.startNode = Object(_template_js__WEBPACK_IMPORTED_MODULE_5__["createMarker"])());

      this.endNode = ref.endNode;
      ref.endNode = this.startNode;
    }
  }, {
    key: "setValue",
    value: function setValue(value) {
      this._pendingValue = value;
    }
  }, {
    key: "commit",
    value: function commit() {
      while (Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__["isDirective"])(this._pendingValue)) {
        var directive = this._pendingValue;
        this._pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__["noChange"];
        directive(this);
      }

      var value = this._pendingValue;

      if (value === _part_js__WEBPACK_IMPORTED_MODULE_2__["noChange"]) {
        return;
      }

      if (isPrimitive(value)) {
        if (value !== this.value) {
          this._commitText(value);
        }
      } else if (value instanceof _template_result_js__WEBPACK_IMPORTED_MODULE_4__["TemplateResult"]) {
        this._commitTemplateResult(value);
      } else if (value instanceof Node) {
        this._commitNode(value);
      } else if (Array.isArray(value) || value[Symbol.iterator]) {
        this._commitIterable(value);
      } else {
        // Fallback, will render the string representation
        this._commitText(value);
      }
    }
  }, {
    key: "_insert",
    value: function _insert(node) {
      this.endNode.parentNode.insertBefore(node, this.endNode);
    }
  }, {
    key: "_commitNode",
    value: function _commitNode(value) {
      if (this.value === value) {
        return;
      }

      this.clear();

      this._insert(value);

      this.value = value;
    }
  }, {
    key: "_commitText",
    value: function _commitText(value) {
      var node = this.startNode.nextSibling;
      value = value == null ? '' : value;

      if (node === this.endNode.previousSibling && node.nodeType === Node.TEXT_NODE) {
        // If we only have a single text node between the markers, we can just
        // set its value, rather than replacing it.
        // TODO(justinfagnani): Can we just check if this.value is primitive?
        node.textContent = value;
      } else {
        this._commitNode(document.createTextNode(typeof value === 'string' ? value : String(value)));
      }

      this.value = value;
    }
  }, {
    key: "_commitTemplateResult",
    value: function _commitTemplateResult(value) {
      var template = this.options.templateFactory(value);

      if (this.value && this.value.template === template) {
        this.value.update(value.values);
      } else {
        // Make sure we propagate the template processor from the TemplateResult
        // so that we use its syntax extension, etc. The template factory comes
        // from the render function options so that it can control template
        // caching and preprocessing.
        var instance = new _template_instance_js__WEBPACK_IMPORTED_MODULE_3__["TemplateInstance"](template, value.processor, this.options);

        var fragment = instance._clone();

        instance.update(value.values);

        this._commitNode(fragment);

        this.value = instance;
      }
    }
  }, {
    key: "_commitIterable",
    value: function _commitIterable(value) {
      // For an Iterable, we create a new InstancePart per item, then set its
      // value to the item. This is a little bit of overhead for every item in
      // an Iterable, but it lets us recurse easily and efficiently update Arrays
      // of TemplateResults that will be commonly returned from expressions like:
      // array.map((i) => html`${i}`), by reusing existing TemplateInstances.
      // If _value is an array, then the previous render was of an
      // iterable and _value will contain the NodeParts from the previous
      // render. If _value is not an array, clear this part and make a new
      // array for NodeParts.
      if (!Array.isArray(this.value)) {
        this.value = [];
        this.clear();
      } // Lets us keep track of how many items we stamped so we can clear leftover
      // items from a previous render


      var itemParts = this.value;
      var partIndex = 0;
      var itemPart;
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = value[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var item = _step2.value;
          // Try to reuse an existing part
          itemPart = itemParts[partIndex]; // If no existing part, create a new one

          if (itemPart === undefined) {
            itemPart = new NodePart(this.options);
            itemParts.push(itemPart);

            if (partIndex === 0) {
              itemPart.appendIntoPart(this);
            } else {
              itemPart.insertAfterPart(itemParts[partIndex - 1]);
            }
          }

          itemPart.setValue(item);
          itemPart.commit();
          partIndex++;
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      if (partIndex < itemParts.length) {
        // Truncate the parts array so _value reflects the current state
        itemParts.length = partIndex;
        this.clear(itemPart && itemPart.endNode);
      }
    }
  }, {
    key: "clear",
    value: function clear() {
      var startNode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.startNode;
      Object(_dom_js__WEBPACK_IMPORTED_MODULE_1__["removeNodes"])(this.startNode.parentNode, startNode.nextSibling, this.endNode);
    }
  }]);

  return NodePart;
}();
/**
 * Implements a boolean attribute, roughly as defined in the HTML
 * specification.
 *
 * If the value is truthy, then the attribute is present with a value of
 * ''. If the value is falsey, the attribute is removed.
 */

var BooleanAttributePart =
/*#__PURE__*/
function () {
  function BooleanAttributePart(element, name, strings) {
    _classCallCheck(this, BooleanAttributePart);

    this.value = undefined;
    this._pendingValue = undefined;

    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {
      throw new Error('Boolean attributes can only contain a single expression');
    }

    this.element = element;
    this.name = name;
    this.strings = strings;
  }

  _createClass(BooleanAttributePart, [{
    key: "setValue",
    value: function setValue(value) {
      this._pendingValue = value;
    }
  }, {
    key: "commit",
    value: function commit() {
      while (Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__["isDirective"])(this._pendingValue)) {
        var directive = this._pendingValue;
        this._pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__["noChange"];
        directive(this);
      }

      if (this._pendingValue === _part_js__WEBPACK_IMPORTED_MODULE_2__["noChange"]) {
        return;
      }

      var value = !!this._pendingValue;

      if (this.value !== value) {
        if (value) {
          this.element.setAttribute(this.name, '');
        } else {
          this.element.removeAttribute(this.name);
        }
      }

      this.value = value;
      this._pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__["noChange"];
    }
  }]);

  return BooleanAttributePart;
}();
/**
 * Sets attribute values for PropertyParts, so that the value is only set once
 * even if there are multiple parts for a property.
 *
 * If an expression controls the whole property value, then the value is simply
 * assigned to the property under control. If there are string literals or
 * multiple expressions, then the strings are expressions are interpolated into
 * a string first.
 */

var PropertyCommitter =
/*#__PURE__*/
function (_AttributeCommitter) {
  _inherits(PropertyCommitter, _AttributeCommitter);

  function PropertyCommitter(element, name, strings) {
    var _this;

    _classCallCheck(this, PropertyCommitter);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(PropertyCommitter).call(this, element, name, strings));
    _this.single = strings.length === 2 && strings[0] === '' && strings[1] === '';
    return _this;
  }

  _createClass(PropertyCommitter, [{
    key: "_createPart",
    value: function _createPart() {
      return new PropertyPart(this);
    }
  }, {
    key: "_getValue",
    value: function _getValue() {
      if (this.single) {
        return this.parts[0].value;
      }

      return _get(_getPrototypeOf(PropertyCommitter.prototype), "_getValue", this).call(this);
    }
  }, {
    key: "commit",
    value: function commit() {
      if (this.dirty) {
        this.dirty = false;
        this.element[this.name] = this._getValue();
      }
    }
  }]);

  return PropertyCommitter;
}(AttributeCommitter);
var PropertyPart =
/*#__PURE__*/
function (_AttributePart) {
  _inherits(PropertyPart, _AttributePart);

  function PropertyPart() {
    _classCallCheck(this, PropertyPart);

    return _possibleConstructorReturn(this, _getPrototypeOf(PropertyPart).apply(this, arguments));
  }

  return PropertyPart;
}(AttributePart); // Detect event listener options support. If the `capture` property is read
// from the options object, then options are supported. If not, then the thrid
// argument to add/removeEventListener is interpreted as the boolean capture
// value so we should only pass the `capture` property.

var eventOptionsSupported = false;

try {
  var options = {
    get capture() {
      eventOptionsSupported = true;
      return false;
    }

  };
  window.addEventListener('test', options, options);
  window.removeEventListener('test', options, options);
} catch (_e) {}

var EventPart =
/*#__PURE__*/
function () {
  function EventPart(element, eventName, eventContext) {
    var _this2 = this;

    _classCallCheck(this, EventPart);

    this.value = undefined;
    this._pendingValue = undefined;
    this.element = element;
    this.eventName = eventName;
    this.eventContext = eventContext;

    this._boundHandleEvent = function (e) {
      return _this2.handleEvent(e);
    };
  }

  _createClass(EventPart, [{
    key: "setValue",
    value: function setValue(value) {
      this._pendingValue = value;
    }
  }, {
    key: "commit",
    value: function commit() {
      while (Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__["isDirective"])(this._pendingValue)) {
        var directive = this._pendingValue;
        this._pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__["noChange"];
        directive(this);
      }

      if (this._pendingValue === _part_js__WEBPACK_IMPORTED_MODULE_2__["noChange"]) {
        return;
      }

      var newListener = this._pendingValue;
      var oldListener = this.value;
      var shouldRemoveListener = newListener == null || oldListener != null && (newListener.capture !== oldListener.capture || newListener.once !== oldListener.once || newListener.passive !== oldListener.passive);
      var shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);

      if (shouldRemoveListener) {
        this.element.removeEventListener(this.eventName, this._boundHandleEvent, this._options);
      }

      if (shouldAddListener) {
        this._options = getOptions(newListener);
        this.element.addEventListener(this.eventName, this._boundHandleEvent, this._options);
      }

      this.value = newListener;
      this._pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__["noChange"];
    }
  }, {
    key: "handleEvent",
    value: function handleEvent(event) {
      if (typeof this.value === 'function') {
        this.value.call(this.eventContext || this.element, event);
      } else {
        this.value.handleEvent(event);
      }
    }
  }]);

  return EventPart;
}(); // We copy options because of the inconsistent behavior of browsers when reading
// the third argument of add/removeEventListener. IE11 doesn't support options
// at all. Chrome 41 only reads `capture` if the argument is an object.

var getOptions = function getOptions(o) {
  return o && (eventOptionsSupported ? {
    capture: o.capture,
    passive: o.passive,
    once: o.once
  } : o.capture);
};

/***/ }),

/***/ "./node_modules/lit-html/lib/render.js":
/*!*********************************************!*\
  !*** ./node_modules/lit-html/lib/render.js ***!
  \*********************************************/
/*! exports provided: parts, render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parts", function() { return parts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom.js */ "./node_modules/lit-html/lib/dom.js");
/* harmony import */ var _parts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parts.js */ "./node_modules/lit-html/lib/parts.js");
/* harmony import */ var _template_factory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./template-factory.js */ "./node_modules/lit-html/lib/template-factory.js");
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */



var parts = new WeakMap();
/**
 * Renders a template to a container.
 *
 * To update a container with new values, reevaluate the template literal and
 * call `render` with the new result.
 *
 * @param result a TemplateResult created by evaluating a template tag like
 *     `html` or `svg`.
 * @param container A DOM parent to render to. The entire contents are either
 *     replaced, or efficiently updated if the same result type was previous
 *     rendered there.
 * @param options RenderOptions for the entire render tree rendered to this
 *     container. Render options must *not* change between renders to the same
 *     container, as those changes will not effect previously rendered DOM.
 */

var render = function render(result, container, options) {
  var part = parts.get(container);

  if (part === undefined) {
    Object(_dom_js__WEBPACK_IMPORTED_MODULE_0__["removeNodes"])(container, container.firstChild);
    parts.set(container, part = new _parts_js__WEBPACK_IMPORTED_MODULE_1__["NodePart"](Object.assign({
      templateFactory: _template_factory_js__WEBPACK_IMPORTED_MODULE_2__["templateFactory"]
    }, options)));
    part.appendInto(container);
  }

  part.setValue(result);
  part.commit();
};

/***/ }),

/***/ "./node_modules/lit-html/lib/template-factory.js":
/*!*******************************************************!*\
  !*** ./node_modules/lit-html/lib/template-factory.js ***!
  \*******************************************************/
/*! exports provided: templateFactory, templateCaches */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateFactory", function() { return templateFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateCaches", function() { return templateCaches; });
/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./template.js */ "./node_modules/lit-html/lib/template.js");
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */

/**
 * The default TemplateFactory which caches Templates keyed on
 * result.type and result.strings.
 */

function templateFactory(result) {
  var templateCache = templateCaches.get(result.type);

  if (templateCache === undefined) {
    templateCache = {
      stringsArray: new WeakMap(),
      keyString: new Map()
    };
    templateCaches.set(result.type, templateCache);
  }

  var template = templateCache.stringsArray.get(result.strings);

  if (template !== undefined) {
    return template;
  } // If the TemplateStringsArray is new, generate a key from the strings
  // This key is shared between all templates with identical content


  var key = result.strings.join(_template_js__WEBPACK_IMPORTED_MODULE_0__["marker"]); // Check if we already have a Template for this key

  template = templateCache.keyString.get(key);

  if (template === undefined) {
    // If we have not seen this key before, create a new Template
    template = new _template_js__WEBPACK_IMPORTED_MODULE_0__["Template"](result, result.getTemplateElement()); // Cache the Template for this key

    templateCache.keyString.set(key, template);
  } // Cache all future queries for this TemplateStringsArray


  templateCache.stringsArray.set(result.strings, template);
  return template;
}
var templateCaches = new Map();

/***/ }),

/***/ "./node_modules/lit-html/lib/template-instance.js":
/*!********************************************************!*\
  !*** ./node_modules/lit-html/lib/template-instance.js ***!
  \********************************************************/
/*! exports provided: TemplateInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TemplateInstance", function() { return TemplateInstance; });
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom.js */ "./node_modules/lit-html/lib/dom.js");
/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./template.js */ "./node_modules/lit-html/lib/template.js");
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */


/**
 * An instance of a `Template` that can be attached to the DOM and updated
 * with new values.
 */

var TemplateInstance =
/*#__PURE__*/
function () {
  function TemplateInstance(template, processor, options) {
    _classCallCheck(this, TemplateInstance);

    this._parts = [];
    this.template = template;
    this.processor = processor;
    this.options = options;
  }

  _createClass(TemplateInstance, [{
    key: "update",
    value: function update(values) {
      var i = 0;
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this._parts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var part = _step.value;

          if (part !== undefined) {
            part.setValue(values[i]);
          }

          i++;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = this._parts[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var _part = _step2.value;

          if (_part !== undefined) {
            _part.commit();
          }
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }
    }
  }, {
    key: "_clone",
    value: function _clone() {
      var _this = this;

      // When using the Custom Elements polyfill, clone the node, rather than
      // importing it, to keep the fragment in the template's document. This
      // leaves the fragment inert so custom elements won't upgrade and
      // potentially modify their contents by creating a polyfilled ShadowRoot
      // while we traverse the tree.
      var fragment = _dom_js__WEBPACK_IMPORTED_MODULE_0__["isCEPolyfill"] ? this.template.element.content.cloneNode(true) : document.importNode(this.template.element.content, true);
      var parts = this.template.parts;
      var partIndex = 0;
      var nodeIndex = 0;

      var _prepareInstance = function _prepareInstance(fragment) {
        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be
        // null
        var walker = document.createTreeWalker(fragment, 133
        /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */
        , null, false);
        var node = walker.nextNode(); // Loop through all the nodes and parts of a template

        while (partIndex < parts.length && node !== null) {
          var part = parts[partIndex]; // Consecutive Parts may have the same node index, in the case of
          // multiple bound attributes on an element. So each iteration we either
          // increment the nodeIndex, if we aren't on a node with a part, or the
          // partIndex if we are. By not incrementing the nodeIndex when we find a
          // part, we allow for the next part to be associated with the current
          // node if neccessasry.

          if (!Object(_template_js__WEBPACK_IMPORTED_MODULE_1__["isTemplatePartActive"])(part)) {
            _this._parts.push(undefined);

            partIndex++;
          } else if (nodeIndex === part.index) {
            if (part.type === 'node') {
              var _part2 = _this.processor.handleTextExpression(_this.options);

              _part2.insertAfterNode(node);

              _this._parts.push(_part2);
            } else {
              var _this$_parts;

              (_this$_parts = _this._parts).push.apply(_this$_parts, _toConsumableArray(_this.processor.handleAttributeExpressions(node, part.name, part.strings, _this.options)));
            }

            partIndex++;
          } else {
            nodeIndex++;

            if (node.nodeName === 'TEMPLATE') {
              _prepareInstance(node.content);
            }

            node = walker.nextNode();
          }
        }
      };

      _prepareInstance(fragment);

      if (_dom_js__WEBPACK_IMPORTED_MODULE_0__["isCEPolyfill"]) {
        document.adoptNode(fragment);
        customElements.upgrade(fragment);
      }

      return fragment;
    }
  }]);

  return TemplateInstance;
}();

/***/ }),

/***/ "./node_modules/lit-html/lib/template-result.js":
/*!******************************************************!*\
  !*** ./node_modules/lit-html/lib/template-result.js ***!
  \******************************************************/
/*! exports provided: TemplateResult, SVGTemplateResult */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TemplateResult", function() { return TemplateResult; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SVGTemplateResult", function() { return SVGTemplateResult; });
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom.js */ "./node_modules/lit-html/lib/dom.js");
/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./template.js */ "./node_modules/lit-html/lib/template.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */


/**
 * The return type of `html`, which holds a Template and the values from
 * interpolated expressions.
 */

var TemplateResult =
/*#__PURE__*/
function () {
  function TemplateResult(strings, values, type, processor) {
    _classCallCheck(this, TemplateResult);

    this.strings = strings;
    this.values = values;
    this.type = type;
    this.processor = processor;
  }
  /**
   * Returns a string of HTML used to create a `<template>` element.
   */


  _createClass(TemplateResult, [{
    key: "getHTML",
    value: function getHTML() {
      var endIndex = this.strings.length - 1;
      var html = '';

      for (var i = 0; i < endIndex; i++) {
        var s = this.strings[i]; // This replace() call does two things:
        // 1) Appends a suffix to all bound attribute names to opt out of special
        // attribute value parsing that IE11 and Edge do, like for style and
        // many SVG attributes. The Template class also appends the same suffix
        // when looking up attributes to creat Parts.
        // 2) Adds an unquoted-attribute-safe marker for the first expression in
        // an attribute. Subsequent attribute expressions will use node markers,
        // and this is safe since attributes with multiple expressions are
        // guaranteed to be quoted.

        var addedMarker = false;
        html += s.replace(_template_js__WEBPACK_IMPORTED_MODULE_1__["lastAttributeNameRegex"], function (_match, whitespace, name, value) {
          addedMarker = true;
          return whitespace + name + _template_js__WEBPACK_IMPORTED_MODULE_1__["boundAttributeSuffix"] + value + _template_js__WEBPACK_IMPORTED_MODULE_1__["marker"];
        });

        if (!addedMarker) {
          html += _template_js__WEBPACK_IMPORTED_MODULE_1__["nodeMarker"];
        }
      }

      return html + this.strings[endIndex];
    }
  }, {
    key: "getTemplateElement",
    value: function getTemplateElement() {
      var template = document.createElement('template');
      template.innerHTML = this.getHTML();
      return template;
    }
  }]);

  return TemplateResult;
}();
/**
 * A TemplateResult for SVG fragments.
 *
 * This class wraps HTMl in an `<svg>` tag in order to parse its contents in the
 * SVG namespace, then modifies the template to remove the `<svg>` tag so that
 * clones only container the original fragment.
 */

var SVGTemplateResult =
/*#__PURE__*/
function (_TemplateResult) {
  _inherits(SVGTemplateResult, _TemplateResult);

  function SVGTemplateResult() {
    _classCallCheck(this, SVGTemplateResult);

    return _possibleConstructorReturn(this, _getPrototypeOf(SVGTemplateResult).apply(this, arguments));
  }

  _createClass(SVGTemplateResult, [{
    key: "getHTML",
    value: function getHTML() {
      return "<svg>".concat(_get(_getPrototypeOf(SVGTemplateResult.prototype), "getHTML", this).call(this), "</svg>");
    }
  }, {
    key: "getTemplateElement",
    value: function getTemplateElement() {
      var template = _get(_getPrototypeOf(SVGTemplateResult.prototype), "getTemplateElement", this).call(this);

      var content = template.content;
      var svgElement = content.firstChild;
      content.removeChild(svgElement);
      Object(_dom_js__WEBPACK_IMPORTED_MODULE_0__["reparentNodes"])(content, svgElement.firstChild);
      return template;
    }
  }]);

  return SVGTemplateResult;
}(TemplateResult);

/***/ }),

/***/ "./node_modules/lit-html/lib/template.js":
/*!***********************************************!*\
  !*** ./node_modules/lit-html/lib/template.js ***!
  \***********************************************/
/*! exports provided: marker, nodeMarker, markerRegex, boundAttributeSuffix, Template, isTemplatePartActive, createMarker, lastAttributeNameRegex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "marker", function() { return marker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nodeMarker", function() { return nodeMarker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "markerRegex", function() { return markerRegex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "boundAttributeSuffix", function() { return boundAttributeSuffix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Template", function() { return Template; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTemplatePartActive", function() { return isTemplatePartActive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMarker", function() { return createMarker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lastAttributeNameRegex", function() { return lastAttributeNameRegex; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */

/**
 * An expression marker with embedded unique key to avoid collision with
 * possible text in templates.
 */
var marker = "{{lit-".concat(String(Math.random()).slice(2), "}}");
/**
 * An expression marker used text-positions, multi-binding attributes, and
 * attributes with markup-like text values.
 */

var nodeMarker = "<!--".concat(marker, "-->");
var markerRegex = new RegExp("".concat(marker, "|").concat(nodeMarker));
/**
 * Suffix appended to all bound attribute names.
 */

var boundAttributeSuffix = '$lit$';
/**
 * An updateable Template that tracks the location of dynamic parts.
 */

var Template = function Template(result, element) {
  var _this = this;

  _classCallCheck(this, Template);

  this.parts = [];
  this.element = element;
  var index = -1;
  var partIndex = 0;
  var nodesToRemove = [];

  var _prepareTemplate = function _prepareTemplate(template) {
    var content = template.content; // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be
    // null

    var walker = document.createTreeWalker(content, 133
    /* NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT |
    NodeFilter.SHOW_TEXT */
    , null, false); // The actual previous node, accounting for removals: if a node is removed
    // it will never be the previousNode.

    var previousNode; // Used to set previousNode at the top of the loop.

    var currentNode;

    while (walker.nextNode()) {
      index++;
      previousNode = currentNode;
      var node = currentNode = walker.currentNode;

      if (node.nodeType === 1
      /* Node.ELEMENT_NODE */
      ) {
          if (node.hasAttributes()) {
            var attributes = node.attributes; // Per
            // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,
            // attributes are not guaranteed to be returned in document order.
            // In particular, Edge/IE can return them out of order, so we cannot
            // assume a correspondance between part index and attribute index.

            var count = 0;

            for (var i = 0; i < attributes.length; i++) {
              if (attributes[i].value.indexOf(marker) >= 0) {
                count++;
              }
            }

            while (count-- > 0) {
              // Get the template literal section leading up to the first
              // expression in this attribute
              var stringForPart = result.strings[partIndex]; // Find the attribute name

              var name = lastAttributeNameRegex.exec(stringForPart)[2]; // Find the corresponding attribute
              // All bound attributes have had a suffix added in
              // TemplateResult#getHTML to opt out of special attribute
              // handling. To look up the attribute value we also need to add
              // the suffix.

              var attributeLookupName = name.toLowerCase() + boundAttributeSuffix;
              var attributeValue = node.getAttribute(attributeLookupName);
              var strings = attributeValue.split(markerRegex);

              _this.parts.push({
                type: 'attribute',
                index: index,
                name: name,
                strings: strings
              });

              node.removeAttribute(attributeLookupName);
              partIndex += strings.length - 1;
            }
          }

          if (node.tagName === 'TEMPLATE') {
            _prepareTemplate(node);
          }
        } else if (node.nodeType === 3
      /* Node.TEXT_NODE */
      ) {
          var nodeValue = node.nodeValue;

          if (nodeValue.indexOf(marker) < 0) {
            continue;
          }

          var parent = node.parentNode;

          var _strings = nodeValue.split(markerRegex);

          var lastIndex = _strings.length - 1; // We have a part for each match found

          partIndex += lastIndex; // Generate a new text node for each literal section
          // These nodes are also used as the markers for node parts

          for (var _i = 0; _i < lastIndex; _i++) {
            parent.insertBefore(_strings[_i] === '' ? createMarker() : document.createTextNode(_strings[_i]), node);

            _this.parts.push({
              type: 'node',
              index: index++
            });
          }

          parent.insertBefore(_strings[lastIndex] === '' ? createMarker() : document.createTextNode(_strings[lastIndex]), node);
          nodesToRemove.push(node);
        } else if (node.nodeType === 8
      /* Node.COMMENT_NODE */
      ) {
          if (node.nodeValue === marker) {
            var _parent = node.parentNode; // Add a new marker node to be the startNode of the Part if any of
            // the following are true:
            //  * We don't have a previousSibling
            //  * previousSibling is being removed (thus it's not the
            //    `previousNode`)
            //  * previousSibling is not a Text node
            //
            // TODO(justinfagnani): We should be able to use the previousNode
            // here as the marker node and reduce the number of extra nodes we
            // add to a template. See
            // https://github.com/PolymerLabs/lit-html/issues/147

            var previousSibling = node.previousSibling;

            if (previousSibling === null || previousSibling !== previousNode || previousSibling.nodeType !== Node.TEXT_NODE) {
              _parent.insertBefore(createMarker(), node);
            } else {
              index--;
            }

            _this.parts.push({
              type: 'node',
              index: index++
            });

            nodesToRemove.push(node); // If we don't have a nextSibling add a marker node.
            // We don't have to check if the next node is going to be removed,
            // because that node will induce a new marker if so.

            if (node.nextSibling === null) {
              _parent.insertBefore(createMarker(), node);
            } else {
              index--;
            }

            currentNode = previousNode;
            partIndex++;
          } else {
            var _i2 = -1;

            while ((_i2 = node.nodeValue.indexOf(marker, _i2 + 1)) !== -1) {
              // Comment node has a binding marker inside, make an inactive part
              // The binding won't work, but subsequent bindings will
              // TODO (justinfagnani): consider whether it's even worth it to
              // make bindings in comments work
              _this.parts.push({
                type: 'node',
                index: -1
              });
            }
          }
        }
    }
  };

  _prepareTemplate(element); // Remove text binding nodes after the walk to not disturb the TreeWalker


  for (var _i3 = 0; _i3 < nodesToRemove.length; _i3++) {
    var n = nodesToRemove[_i3];
    n.parentNode.removeChild(n);
  }
};
var isTemplatePartActive = function isTemplatePartActive(part) {
  return part.index !== -1;
}; // Allows `document.createComment('')` to be renamed for a
// small manual size-savings.

var createMarker = function createMarker() {
  return document.createComment('');
};
/**
 * This regex extracts the attribute name preceding an attribute-position
 * expression. It does this by matching the syntax allowed for attributes
 * against the string literal directly preceding the expression, assuming that
 * the expression is in an attribute-value position.
 *
 * See attributes in the HTML spec:
 * https://www.w3.org/TR/html5/syntax.html#attributes-0
 *
 * "\0-\x1F\x7F-\x9F" are Unicode control characters
 *
 * " \x09\x0a\x0c\x0d" are HTML space characters:
 * https://www.w3.org/TR/html5/infrastructure.html#space-character
 *
 * So an attribute is:
 *  * The name: any character except a control character, space character, ('),
 *    ("), ">", "=", or "/"
 *  * Followed by zero or more space characters
 *  * Followed by "="
 *  * Followed by zero or more space characters
 *  * Followed by:
 *    * Any character except space, ('), ("), "<", ">", "=", (`), or
 *    * (") then any non-("), or
 *    * (') then any non-(')
 */

var lastAttributeNameRegex = /([ \x09\x0a\x0c\x0d])([^\0-\x1F\x7F-\x9F \x09\x0a\x0c\x0d"'>=/]+)([ \x09\x0a\x0c\x0d]*=[ \x09\x0a\x0c\x0d]*(?:[^ \x09\x0a\x0c\x0d"'`<>=]*|"[^"]*|'[^']*))$/;

/***/ }),

/***/ "./node_modules/lit-html/lit-html.js":
/*!*******************************************!*\
  !*** ./node_modules/lit-html/lit-html.js ***!
  \*******************************************/
/*! exports provided: DefaultTemplateProcessor, defaultTemplateProcessor, directive, isDirective, removeNodes, reparentNodes, noChange, AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isPrimitive, NodePart, PropertyCommitter, PropertyPart, parts, render, templateCaches, templateFactory, TemplateInstance, SVGTemplateResult, TemplateResult, createMarker, isTemplatePartActive, Template, html, svg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "html", function() { return html; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "svg", function() { return svg; });
/* harmony import */ var _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/default-template-processor.js */ "./node_modules/lit-html/lib/default-template-processor.js");
/* harmony import */ var _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/template-result.js */ "./node_modules/lit-html/lib/template-result.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DefaultTemplateProcessor", function() { return _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__["DefaultTemplateProcessor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultTemplateProcessor", function() { return _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__["defaultTemplateProcessor"]; });

/* harmony import */ var _lib_directive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/directive.js */ "./node_modules/lit-html/lib/directive.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "directive", function() { return _lib_directive_js__WEBPACK_IMPORTED_MODULE_2__["directive"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDirective", function() { return _lib_directive_js__WEBPACK_IMPORTED_MODULE_2__["isDirective"]; });

/* harmony import */ var _lib_dom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/dom.js */ "./node_modules/lit-html/lib/dom.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeNodes", function() { return _lib_dom_js__WEBPACK_IMPORTED_MODULE_3__["removeNodes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reparentNodes", function() { return _lib_dom_js__WEBPACK_IMPORTED_MODULE_3__["reparentNodes"]; });

/* harmony import */ var _lib_part_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/part.js */ "./node_modules/lit-html/lib/part.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "noChange", function() { return _lib_part_js__WEBPACK_IMPORTED_MODULE_4__["noChange"]; });

/* harmony import */ var _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/parts.js */ "./node_modules/lit-html/lib/parts.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttributeCommitter", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__["AttributeCommitter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttributePart", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__["AttributePart"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BooleanAttributePart", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__["BooleanAttributePart"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventPart", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__["EventPart"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPrimitive", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__["isPrimitive"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NodePart", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__["NodePart"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PropertyCommitter", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__["PropertyCommitter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PropertyPart", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__["PropertyPart"]; });

/* harmony import */ var _lib_render_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/render.js */ "./node_modules/lit-html/lib/render.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parts", function() { return _lib_render_js__WEBPACK_IMPORTED_MODULE_6__["parts"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _lib_render_js__WEBPACK_IMPORTED_MODULE_6__["render"]; });

/* harmony import */ var _lib_template_factory_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/template-factory.js */ "./node_modules/lit-html/lib/template-factory.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "templateCaches", function() { return _lib_template_factory_js__WEBPACK_IMPORTED_MODULE_7__["templateCaches"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "templateFactory", function() { return _lib_template_factory_js__WEBPACK_IMPORTED_MODULE_7__["templateFactory"]; });

/* harmony import */ var _lib_template_instance_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lib/template-instance.js */ "./node_modules/lit-html/lib/template-instance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TemplateInstance", function() { return _lib_template_instance_js__WEBPACK_IMPORTED_MODULE_8__["TemplateInstance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SVGTemplateResult", function() { return _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__["SVGTemplateResult"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TemplateResult", function() { return _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__["TemplateResult"]; });

/* harmony import */ var _lib_template_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lib/template.js */ "./node_modules/lit-html/lib/template.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMarker", function() { return _lib_template_js__WEBPACK_IMPORTED_MODULE_9__["createMarker"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isTemplatePartActive", function() { return _lib_template_js__WEBPACK_IMPORTED_MODULE_9__["isTemplatePartActive"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Template", function() { return _lib_template_js__WEBPACK_IMPORTED_MODULE_9__["Template"]; });

/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */



 // TODO(justinfagnani): remove line when we get NodePart moving methods









/**
 * Interprets a template literal as an HTML template that can efficiently
 * render to and update a container.
 */

var html = function html(strings) {
  for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    values[_key - 1] = arguments[_key];
  }

  return new _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__["TemplateResult"](strings, values, 'html', _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__["defaultTemplateProcessor"]);
};
/**
 * Interprets a template literal as an SVG template that can efficiently
 * render to and update a container.
 */

var svg = function svg(strings) {
  for (var _len2 = arguments.length, values = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    values[_key2 - 1] = arguments[_key2];
  }

  return new _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__["SVGTemplateResult"](strings, values, 'svg', _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__["defaultTemplateProcessor"]);
};

/***/ }),

/***/ "./node_modules/material-components-web/dist/material-components-web.js":
/*!******************************************************************************!*\
  !*** ./node_modules/material-components-web/dist/material-components-web.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 Material Components for the Web
 Copyright (c) 2019 Google Inc.
 License: MIT
*/
(function webpackUniversalModuleDefinition(root, factory) {
  if (( false ? undefined : _typeof(exports)) === 'object' && ( false ? undefined : _typeof(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}
})(this, function () {
  return (
    /******/
    function (modules) {
      // webpackBootstrap

      /******/
      // The module cache

      /******/
      var installedModules = {};
      /******/

      /******/
      // The require function

      /******/

      function __webpack_require__(moduleId) {
        /******/

        /******/
        // Check if module is in cache

        /******/
        if (installedModules[moduleId]) {
          /******/
          return installedModules[moduleId].exports;
          /******/
        }
        /******/
        // Create a new module (and put it into the cache)

        /******/


        var module = installedModules[moduleId] = {
          /******/
          i: moduleId,

          /******/
          l: false,

          /******/
          exports: {}
          /******/

        };
        /******/

        /******/
        // Execute the module function

        /******/

        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/

        /******/
        // Flag the module as loaded

        /******/

        module.l = true;
        /******/

        /******/
        // Return the exports of the module

        /******/

        return module.exports;
        /******/
      }
      /******/

      /******/

      /******/
      // expose the modules object (__webpack_modules__)

      /******/


      __webpack_require__.m = modules;
      /******/

      /******/
      // expose the module cache

      /******/

      __webpack_require__.c = installedModules;
      /******/

      /******/
      // define getter function for harmony exports

      /******/

      __webpack_require__.d = function (exports, name, getter) {
        /******/
        if (!__webpack_require__.o(exports, name)) {
          /******/
          Object.defineProperty(exports, name, {
            /******/
            configurable: false,

            /******/
            enumerable: true,

            /******/
            get: getter
            /******/

          });
          /******/
        }
        /******/

      };
      /******/

      /******/
      // getDefaultExport function for compatibility with non-harmony modules

      /******/


      __webpack_require__.n = function (module) {
        /******/
        var getter = module && module.__esModule ?
        /******/
        function getDefault() {
          return module['default'];
        } :
        /******/
        function getModuleExports() {
          return module;
        };
        /******/

        __webpack_require__.d(getter, 'a', getter);
        /******/


        return getter;
        /******/
      };
      /******/

      /******/
      // Object.prototype.hasOwnProperty.call

      /******/


      __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      /******/

      /******/
      // __webpack_public_path__

      /******/


      __webpack_require__.p = "";
      /******/

      /******/
      // Load entry module and return exports

      /******/

      return __webpack_require__(__webpack_require__.s = 63);
      /******/
    }(
    /************************************************************************/

    /******/
    [
    /* 0 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @template A
       */


      var MDCFoundation = function () {
        _createClass(MDCFoundation, null, [{
          key: "cssClasses",

          /** @return enum{cssClasses} */
          get: function get() {
            // Classes extending MDCFoundation should implement this method to return an object which exports every
            // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}
            return {};
          }
          /** @return enum{strings} */

        }, {
          key: "strings",
          get: function get() {
            // Classes extending MDCFoundation should implement this method to return an object which exports all
            // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}
            return {};
          }
          /** @return enum{numbers} */

        }, {
          key: "numbers",
          get: function get() {
            // Classes extending MDCFoundation should implement this method to return an object which exports all
            // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}
            return {};
          }
          /** @return {!Object} */

        }, {
          key: "defaultAdapter",
          get: function get() {
            // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient
            // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter
            // validation.
            return {};
          }
          /**
           * @param {A=} adapter
           */

        }]);

        function MDCFoundation() {
          var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

          _classCallCheck(this, MDCFoundation);
          /** @protected {!A} */


          this.adapter_ = adapter;
        }

        _createClass(MDCFoundation, [{
          key: "init",
          value: function init() {// Subclasses should override this method to perform initialization routines (registering events, etc.)
          }
        }, {
          key: "destroy",
          value: function destroy() {// Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)
          }
        }]);

        return MDCFoundation;
      }();
      /* harmony default export */


      __webpack_exports__["a"] = MDCFoundation;
      /***/
    },
    /* 1 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @template F
       */


      var MDCComponent = function () {
        _createClass(MDCComponent, null, [{
          key: 'attachTo',

          /**
           * @param {!Element} root
           * @return {!MDCComponent}
           */
          value: function attachTo(root) {
            // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and
            // returns an instantiated component with its root set to that element. Also note that in the cases of
            // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized
            // from getDefaultFoundation().
            return new MDCComponent(root, new __WEBPACK_IMPORTED_MODULE_0__foundation__["a"
            /* default */
            ]());
          }
          /**
           * @param {!Element} root
           * @param {F=} foundation
           * @param {...?} args
           */

        }]);

        function MDCComponent(root) {
          var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

          _classCallCheck(this, MDCComponent);
          /** @protected {!Element} */


          this.root_ = root;

          for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
            args[_key - 2] = arguments[_key];
          }

          this.initialize.apply(this, args); // Note that we initialize foundation here and not within the constructor's default param so that
          // this.root_ is defined and can be used within the foundation class.

          /** @protected {!F} */

          this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;
          this.foundation_.init();
          this.initialSyncWithDOM();
        }

        _createClass(MDCComponent, [{
          key: 'initialize',
          value: function initialize()
          /* ...args */
          {} // Subclasses can override this to do any additional setup work that would be considered part of a
          // "constructor". Essentially, it is a hook into the parent constructor before the foundation is
          // initialized. Any additional arguments besides root and foundation will be passed in here.

          /**
           * @return {!F} foundation
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            // Subclasses must override this method to return a properly configured foundation class for the
            // component.
            throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {// Subclasses should override this method if they need to perform work to synchronize with a host DOM
            // object. An example of this would be a form control wrapper that needs to synchronize its internal state
            // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM
            // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            // Subclasses may implement this method to release any resources / deregister any listeners they have
            // attached. An example of this might be deregistering a resize event from the window object.
            this.foundation_.destroy();
          }
          /**
           * Wrapper method to add an event listener to the component's root element. This is most useful when
           * listening for custom events.
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: 'listen',
          value: function listen(evtType, handler) {
            this.root_.addEventListener(evtType, handler);
          }
          /**
           * Wrapper method to remove an event listener to the component's root element. This is most useful when
           * unlistening for custom events.
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: 'unlisten',
          value: function unlisten(evtType, handler) {
            this.root_.removeEventListener(evtType, handler);
          }
          /**
           * Fires a cross-browser-compatible custom event from the component root of the given type,
           * with the given data.
           * @param {string} evtType
           * @param {!Object} evtData
           * @param {boolean=} shouldBubble
           */

        }, {
          key: 'emit',
          value: function emit(evtType, evtData) {
            var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var evt = void 0;

            if (typeof CustomEvent === 'function') {
              evt = new CustomEvent(evtType, {
                detail: evtData,
                bubbles: shouldBubble
              });
            } else {
              evt = document.createEvent('CustomEvent');
              evt.initCustomEvent(evtType, shouldBubble, false, evtData);
            }

            this.root_.dispatchEvent(evt);
          }
        }]);

        return MDCComponent;
      }();
      /* harmony default export */


      __webpack_exports__["a"] = MDCComponent;
      /***/
    },
    /* 2 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCRipple", function () {
        return MDCRipple;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "RippleCapableSurface", function () {
        return RippleCapableSurface;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(28);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(67);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(5);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCRippleFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "util", function () {
        return __WEBPACK_IMPORTED_MODULE_3__util__;
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends MDCComponent<!MDCRippleFoundation>
       */


      var MDCRipple = function (_MDCComponent) {
        _inherits(MDCRipple, _MDCComponent);
        /** @param {...?} args */


        function MDCRipple() {
          var _ref;

          _classCallCheck(this, MDCRipple);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @type {boolean} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCRipple.__proto__ || Object.getPrototypeOf(MDCRipple)).call.apply(_ref, [this].concat(args)));

          _this.disabled = false;
          /** @private {boolean} */

          _this.unbounded_;
          return _this;
        }
        /**
         * @param {!Element} root
         * @param {{isUnbounded: (boolean|undefined)}=} options
         * @return {!MDCRipple}
         */


        _createClass(MDCRipple, [{
          key: 'setUnbounded_',

          /**
           * Closure Compiler throws an access control error when directly accessing a
           * protected or private property inside a getter/setter, like unbounded above.
           * By accessing the protected property inside a method, we solve that problem.
           * That's why this function exists.
           * @private
           */
          value: function setUnbounded_() {
            this.foundation_.setUnbounded(this.unbounded_);
          }
        }, {
          key: 'activate',
          value: function activate() {
            this.foundation_.activate();
          }
        }, {
          key: 'deactivate',
          value: function deactivate() {
            this.foundation_.deactivate();
          }
        }, {
          key: 'layout',
          value: function layout() {
            this.foundation_.layout();
          }
          /**
           * @return {!MDCRippleFoundation}
           * @override
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ](MDCRipple.createAdapter(this));
          }
          /** @override */

        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;
          }
        }, {
          key: 'unbounded',

          /** @return {boolean} */
          get: function get() {
            return this.unbounded_;
          }
          /** @param {boolean} unbounded */
          ,
          set: function set(unbounded) {
            this.unbounded_ = Boolean(unbounded);
            this.setUnbounded_();
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
                _ref2$isUnbounded = _ref2.isUnbounded,
                isUnbounded = _ref2$isUnbounded === undefined ? undefined : _ref2$isUnbounded;

            var ripple = new MDCRipple(root); // Only override unbounded behavior if option is explicitly specified

            if (isUnbounded !== undefined) {
              ripple.unbounded =
              /** @type {boolean} */
              isUnbounded;
            }

            return ripple;
          }
          /**
           * @param {!RippleCapableSurface} instance
           * @return {!MDCRippleAdapter}
           */

        }, {
          key: 'createAdapter',
          value: function createAdapter(instance) {
            var MATCHES = __WEBPACK_IMPORTED_MODULE_3__util__["getMatchesProperty"](HTMLElement.prototype);

            return {
              browserSupportsCssVars: function browserSupportsCssVars() {
                return __WEBPACK_IMPORTED_MODULE_3__util__["supportsCssVariables"](window);
              },
              isUnbounded: function isUnbounded() {
                return instance.unbounded;
              },
              isSurfaceActive: function isSurfaceActive() {
                return instance.root_[MATCHES](':active');
              },
              isSurfaceDisabled: function isSurfaceDisabled() {
                return instance.disabled;
              },
              addClass: function addClass(className) {
                return instance.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return instance.root_.classList.remove(className);
              },
              containsEventTarget: function containsEventTarget(target) {
                return instance.root_.contains(target);
              },
              registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
                return instance.root_.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
              },
              deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
                return instance.root_.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
              },
              registerDocumentInteractionHandler: function registerDocumentInteractionHandler(evtType, handler) {
                return document.documentElement.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
              },
              deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler(evtType, handler) {
                return document.documentElement.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__["applyPassive"]());
              },
              registerResizeHandler: function registerResizeHandler(handler) {
                return window.addEventListener('resize', handler);
              },
              deregisterResizeHandler: function deregisterResizeHandler(handler) {
                return window.removeEventListener('resize', handler);
              },
              updateCssVariable: function updateCssVariable(varName, value) {
                return instance.root_.style.setProperty(varName, value);
              },
              computeBoundingRect: function computeBoundingRect() {
                return instance.root_.getBoundingClientRect();
              },
              getWindowPageOffset: function getWindowPageOffset() {
                return {
                  x: window.pageXOffset,
                  y: window.pageYOffset
                };
              }
            };
          }
        }]);

        return MDCRipple;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /**
       * See Material Design spec for more details on when to use ripples.
       * https://material.io/guidelines/motion/choreography.html#choreography-creation
       * @record
       */


      var RippleCapableSurface = function RippleCapableSurface() {
        _classCallCheck(this, RippleCapableSurface);
      };
      /** @protected {!Element} */


      RippleCapableSurface.prototype.root_;
      /**
       * Whether or not the ripple bleeds out of the bounds of the element.
       * @type {boolean|undefined}
       */

      RippleCapableSurface.prototype.unbounded;
      /**
       * Whether or not the ripple is attached to a disabled component.
       * @type {boolean|undefined}
       */

      RippleCapableSurface.prototype.disabled;
      /***/
    },
    /* 3 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCSelectionControlState", function () {
        return MDCSelectionControlState;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCSelectionControl", function () {
        return MDCSelectionControl;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_ripple_index__ = __webpack_require__(2);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @typedef {{
       *   checked: boolean,
       *   indeterminate: boolean,
       *   disabled: boolean,
       *   value: ?string
       * }}
       */


      var MDCSelectionControlState = void 0;
      /**
       * @record
       */

      var MDCSelectionControl = function () {
        function MDCSelectionControl() {
          _classCallCheck(this, MDCSelectionControl);
        }

        _createClass(MDCSelectionControl, [{
          key: 'ripple',

          /** @return {?MDCRipple} */
          get: function get() {}
        }]);

        return MDCSelectionControl;
      }();
      /***/

    },
    /* 4 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* unused harmony export MDCTabScrollerAnimation */

      /* unused harmony export MDCTabScrollerHorizontalEdges */

      /* unused harmony export MDCTabScrollerAdapter */

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * MDCTabScrollerAnimation contains the values required for animating from the
       * current scroll position to the new scroll position. The "finalScrollPosition"
       * value represents the new scroll position while the "scrollDelta" value is the
       * corresponding transformation that is applied to the scroll content. Together,
       * they create the animation by first updating the scroll value then applying
       * the transformation and animating the transition. Both pieces are necessary
       * for the scroll animation to work. The values are used as-is by the tab
       * scroller animation method, ensuring that all logic for determining scroll
       * position or transformation is abstracted away from the animation method.
       * @typedef {{finalScrollPosition: number, scrollDelta: number}}
       */


      var MDCTabScrollerAnimation = void 0;
      /**
       * MDCTabScrollerHorizontalEdges represents the left and right edges of the
       * scroll content. These values vary depending on how scrolling in RTL is
       * implemented by the browser. One value is always 0 and one value is always
       * the max scrollable value as either a positive or negative integer.
       * @typedef {{left: number, right: number}}
       */

      var MDCTabScrollerHorizontalEdges = void 0;
      /**
       * Adapter for MDC Tab Scroller.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the Tab  into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */

      var MDCTabScrollerAdapter = function () {
        function MDCTabScrollerAdapter() {
          _classCallCheck(this, MDCTabScrollerAdapter);
        }

        _createClass(MDCTabScrollerAdapter, [{
          key: "addClass",

          /**
           * Adds the given className to the root element.
           * @param {string} className The className to add
           */
          value: function addClass(className) {}
          /**
           * Removes the given className from the root element.
           * @param {string} className The className to remove
           */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * Adds the given className to the scroll area element.
           * @param {string} className The className to add
           */

        }, {
          key: "addScrollAreaClass",
          value: function addScrollAreaClass(className) {}
          /**
           * Returns whether the event target matches given className.
           * @param {EventTarget} evtTarget The event target
           * @param {string} selector The selector to check
           * @return {boolean}
           */

        }, {
          key: "eventTargetMatchesSelector",
          value: function eventTargetMatchesSelector(evtTarget, selector) {}
          /**
           * Sets a style property of the area element to the passed value.
           * @param {string} propName The style property name to set
           * @param {string} value The style property value
           */

        }, {
          key: "setScrollAreaStyleProperty",
          value: function setScrollAreaStyleProperty(propName, value) {}
          /**
           * Sets a style property of the content element to the passed value.
           * @param {string} propName The style property name to set
           * @param {string} value The style property value
           */

        }, {
          key: "setScrollContentStyleProperty",
          value: function setScrollContentStyleProperty(propName, value) {}
          /**
           * Returns the scroll content element's computed style value of the given css property `propertyName`.
           * We achieve this via `getComputedStyle(...).getPropertyValue(propertyName)`.
           * @param {string} propertyName
           * @return {string}
           */

        }, {
          key: "getScrollContentStyleValue",
          value: function getScrollContentStyleValue(propertyName) {}
          /**
           * Sets the scrollLeft value of the scroll area element to the passed value.
           * @param {number} scrollLeft The new scrollLeft value
           */

        }, {
          key: "setScrollAreaScrollLeft",
          value: function setScrollAreaScrollLeft(scrollLeft) {}
          /**
           * Returns the scrollLeft value of the scroll area element.
           * @return {number}
           */

        }, {
          key: "getScrollAreaScrollLeft",
          value: function getScrollAreaScrollLeft() {}
          /**
           * Returns the offsetWidth of the scroll content element.
           * @return {number}
           */

        }, {
          key: "getScrollContentOffsetWidth",
          value: function getScrollContentOffsetWidth() {}
          /**
           * Returns the offsetWitdth of the scroll area element.
           * @return {number}
           */

        }, {
          key: "getScrollAreaOffsetWidth",
          value: function getScrollAreaOffsetWidth() {}
          /**
           * Returns the bounding client rect of the scroll area element.
           * @return {!ClientRect}
           */

        }, {
          key: "computeScrollAreaClientRect",
          value: function computeScrollAreaClientRect() {}
          /**
           * Returns the bounding client rect of the scroll content element.
           * @return {!ClientRect}
           */

        }, {
          key: "computeScrollContentClientRect",
          value: function computeScrollContentClientRect() {}
          /**
           * Returns the height of the browser's horizontal scrollbars (in px).
           * @return {number}
           */

        }, {
          key: "computeHorizontalScrollbarHeight",
          value: function computeHorizontalScrollbarHeight() {}
        }]);

        return MDCTabScrollerAdapter;
      }();
      /***/

    },
    /* 5 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "supportsCssVariables", function () {
        return supportsCssVariables;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "applyPassive", function () {
        return applyPassive;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getMatchesProperty", function () {
        return getMatchesProperty;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getNormalizedEventCoords", function () {
        return getNormalizedEventCoords;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.
       * @private {boolean|undefined}
       */


      var supportsCssVariables_ = void 0;
      /**
       * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.
       * @private {boolean|undefined}
       */

      var supportsPassive_ = void 0;
      /**
       * @param {!Window} windowObj
       * @return {boolean}
       */

      function detectEdgePseudoVarBug(windowObj) {
        // Detect versions of Edge with buggy var() support
        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/
        var document = windowObj.document;
        var node = document.createElement('div');
        node.className = 'mdc-ripple-surface--test-edge-var-bug';
        document.body.appendChild(node); // The bug exists if ::before style ends up propagating to the parent element.
        // Additionally, getComputedStyle returns null in iframes with display: "none" in Firefox,
        // but Firefox is known to support CSS custom properties correctly.
        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397

        var computedStyle = windowObj.getComputedStyle(node);
        var hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';
        node.remove();
        return hasPseudoVarBug;
      }
      /**
       * @param {!Window} windowObj
       * @param {boolean=} forceRefresh
       * @return {boolean|undefined}
       */


      function supportsCssVariables(windowObj) {
        var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        var supportsCssVariables = supportsCssVariables_;

        if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {
          return supportsCssVariables;
        }

        var supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';

        if (!supportsFunctionPresent) {
          return;
        }

        var explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes'); // See: https://bugs.webkit.org/show_bug.cgi?id=154669
        // See: README section on Safari

        var weAreFeatureDetectingSafari10plus = windowObj.CSS.supports('(--css-vars: yes)') && windowObj.CSS.supports('color', '#00000000');

        if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {
          supportsCssVariables = !detectEdgePseudoVarBug(windowObj);
        } else {
          supportsCssVariables = false;
        }

        if (!forceRefresh) {
          supportsCssVariables_ = supportsCssVariables;
        }

        return supportsCssVariables;
      } //

      /**
       * Determine whether the current browser supports passive event listeners, and if so, use them.
       * @param {!Window=} globalObj
       * @param {boolean=} forceRefresh
       * @return {boolean|!EventListenerOptions}
       */


      function applyPassive() {
        var globalObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
        var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        if (supportsPassive_ === undefined || forceRefresh) {
          var isSupported = false;

          try {
            globalObj.document.addEventListener('test', null, {
              get passive() {
                isSupported = true;
                return isSupported;
              }

            });
          } catch (e) {}

          supportsPassive_ = isSupported;
        }

        return supportsPassive_ ?
        /** @type {!EventListenerOptions} */
        {
          passive: true
        } : false;
      }
      /**
       * @param {!Object} HTMLElementPrototype
       * @return {string}
       */


      function getMatchesProperty(HTMLElementPrototype) {
        /**
         * Order is important because we return the first existing method we find.
         * Do not change the order of the items in the below array.
         */
        var matchesMethods = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'];
        var method = 'matches';

        for (var i = 0; i < matchesMethods.length; i++) {
          var matchesMethod = matchesMethods[i];

          if (matchesMethod in HTMLElementPrototype) {
            method = matchesMethod;
            break;
          }
        }

        return method;
      }
      /**
       * @param {!Event} ev
       * @param {{x: number, y: number}} pageOffset
       * @param {!ClientRect} clientRect
       * @return {{x: number, y: number}}
       */


      function getNormalizedEventCoords(ev, pageOffset, clientRect) {
        var x = pageOffset.x,
            y = pageOffset.y;
        var documentX = x + clientRect.left;
        var documentY = y + clientRect.top;
        var normalizedX = void 0;
        var normalizedY = void 0; // Determine touch point relative to the ripple container.

        if (ev.type === 'touchstart') {
          ev =
          /** @type {!TouchEvent} */
          ev;
          normalizedX = ev.changedTouches[0].pageX - documentX;
          normalizedY = ev.changedTouches[0].pageY - documentY;
        } else {
          ev =
          /** @type {!MouseEvent} */
          ev;
          normalizedX = ev.pageX - documentX;
          normalizedY = ev.pageY - documentY;
        }

        return {
          x: normalizedX,
          y: normalizedY
        };
      }
      /***/

    },
    /* 6 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Top App Bar
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the Top App Bar into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCTopAppBarAdapter = function () {
        function MDCTopAppBarAdapter() {
          _classCallCheck(this, MDCTopAppBarAdapter);
        }

        _createClass(MDCTopAppBarAdapter, [{
          key: "addClass",

          /**
           * Adds a class to the root Element.
           * @param {string} className
           */
          value: function addClass(className) {}
          /**
           * Removes a class from the root Element.
           * @param {string} className
           */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * Returns true if the root Element contains the given class.
           * @param {string} className
           * @return {boolean}
           */

        }, {
          key: "hasClass",
          value: function hasClass(className) {}
          /**
           * Sets the specified inline style property on the root Element to the given value.
           * @param {string} property
           * @param {string} value
           */

        }, {
          key: "setStyle",
          value: function setStyle(property, value) {}
          /**
           * Gets the height of the top app bar.
           * @return {number}
           */

        }, {
          key: "getTopAppBarHeight",
          value: function getTopAppBarHeight() {}
          /**
           * Registers an event handler on the navigation icon element for a given event.
           * @param {string} type
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "registerNavigationIconInteractionHandler",
          value: function registerNavigationIconInteractionHandler(type, handler) {}
          /**
           * Deregisters an event handler on the navigation icon element for a given event.
           * @param {string} type
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "deregisterNavigationIconInteractionHandler",
          value: function deregisterNavigationIconInteractionHandler(type, handler) {}
          /**
           * Emits an event when the navigation icon is clicked.
           */

        }, {
          key: "notifyNavigationIconClicked",
          value: function notifyNavigationIconClicked() {}
          /** @param {function(!Event)} handler */

        }, {
          key: "registerScrollHandler",
          value: function registerScrollHandler(handler) {}
          /** @param {function(!Event)} handler */

        }, {
          key: "deregisterScrollHandler",
          value: function deregisterScrollHandler(handler) {}
          /** @param {function(!Event)} handler */

        }, {
          key: "registerResizeHandler",
          value: function registerResizeHandler(handler) {}
          /** @param {function(!Event)} handler */

        }, {
          key: "deregisterResizeHandler",
          value: function deregisterResizeHandler(handler) {}
          /** @return {number} */

        }, {
          key: "getViewportScrollY",
          value: function getViewportScrollY() {}
          /** @return {number} */

        }, {
          key: "getTotalActionItems",
          value: function getTotalActionItems() {}
        }]);

        return MDCTopAppBarAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCTopAppBarAdapter;
      /***/
    },
    /* 7 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "c", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return numbers;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        FIXED_CLASS: 'mdc-top-app-bar--fixed',
        FIXED_SCROLLED_CLASS: 'mdc-top-app-bar--fixed-scrolled',
        SHORT_CLASS: 'mdc-top-app-bar--short',
        SHORT_HAS_ACTION_ITEM_CLASS: 'mdc-top-app-bar--short-has-action-item',
        SHORT_COLLAPSED_CLASS: 'mdc-top-app-bar--short-collapsed'
      };
      /** @enum {number} */

      var numbers = {
        DEBOUNCE_THROTTLE_RESIZE_TIME_MS: 100,
        MAX_TOP_APP_BAR_HEIGHT: 128
      };
      /** @enum {string} */

      var strings = {
        ACTION_ITEM_SELECTOR: '.mdc-top-app-bar__action-item',
        NAVIGATION_EVENT: 'MDCTopAppBar:nav',
        NAVIGATION_ICON_SELECTOR: '.mdc-top-app-bar__navigation-icon',
        ROOT_SELECTOR: '.mdc-top-app-bar',
        TITLE_SELECTOR: '.mdc-top-app-bar__title'
      };
      /***/
    },
    /* 8 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "closest", function () {
        return closest;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "matches", function () {
        return matches;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @fileoverview A "ponyfill" is a polyfill that doesn't modify the global prototype chain.
       * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.
       */

      /**
       * @param {!Element} element
       * @param {string} selector
       * @return {?Element}
       */


      function closest(element, selector) {
        if (element.closest) {
          return element.closest(selector);
        }

        var el = element;

        while (el) {
          if (matches(el, selector)) {
            return el;
          }

          el = el.parentElement;
        }

        return null;
      }
      /**
       * @param {!Element} element
       * @param {string} selector
       * @return {boolean}
       */


      function matches(element, selector) {
        var nativeMatches = element.matches || element.webkitMatchesSelector || element.msMatchesSelector;
        return nativeMatches.call(element, selector);
      }
      /***/

    },
    /* 9 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCFloatingLabel", function () {
        return MDCFloatingLabel;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(40);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(89);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCFloatingLabelFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCComponent<!MDCFloatingLabelFoundation>}
       * @final
       */


      var MDCFloatingLabel = function (_MDCComponent) {
        _inherits(MDCFloatingLabel, _MDCComponent);

        function MDCFloatingLabel() {
          _classCallCheck(this, MDCFloatingLabel);

          return _possibleConstructorReturn(this, (MDCFloatingLabel.__proto__ || Object.getPrototypeOf(MDCFloatingLabel)).apply(this, arguments));
        }

        _createClass(MDCFloatingLabel, [{
          key: 'shake',

          /**
           * Styles the label to produce the label shake for errors.
           * @param {boolean} shouldShake styles the label to shake by adding shake class
           * if true, otherwise will stop shaking by removing shake class.
           */
          value: function shake(shouldShake) {
            this.foundation_.shake(shouldShake);
          }
          /**
           * Styles label to float/dock.
           * @param {boolean} shouldFloat styles the label to float by adding float class
           * if true, otherwise docks the label by removing the float class.
           */

        }, {
          key: 'float',
          value: function float(shouldFloat) {
            this.foundation_.float(shouldFloat);
          }
          /**
           * @return {number}
           */

        }, {
          key: 'getWidth',
          value: function getWidth() {
            return this.foundation_.getWidth();
          }
          /**
           * @return {!MDCFloatingLabelFoundation}
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ]({
              addClass: function addClass(className) {
                return _this2.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this2.root_.classList.remove(className);
              },
              getWidth: function getWidth() {
                return _this2.root_.scrollWidth;
              },
              registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
                return _this2.root_.addEventListener(evtType, handler);
              },
              deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
                return _this2.root_.removeEventListener(evtType, handler);
              }
            });
          }
        }], [{
          key: 'attachTo',

          /**
           * @param {!Element} root
           * @return {!MDCFloatingLabel}
           */
          value: function attachTo(root) {
            return new MDCFloatingLabel(root);
          }
        }]);

        return MDCFloatingLabel;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 10 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* unused harmony export MDCTabDimensions */

      /* unused harmony export MDCTabInteractionEventType */

      /* unused harmony export MDCTabAdapter */

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * MDCTabDimensions provides details about the left and right edges of the Tab
       * root element and the Tab content element. These values are used to determine
       * the visual position of the Tab with respect it's parent container.
       * @typedef {{rootLeft: number, rootRight: number, contentLeft: number, contentRight: number}}
       */


      var MDCTabDimensions = void 0;
      /**
       * @typedef {{
       *   detail: {
       *     tabId: string,
       *   },
       *   bubbles: boolean,
       * }}
       */

      var MDCTabInteractionEventType = void 0;
      /**
       * Adapter for MDC Tab.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the Tab  into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */

      var MDCTabAdapter = function () {
        function MDCTabAdapter() {
          _classCallCheck(this, MDCTabAdapter);
        }

        _createClass(MDCTabAdapter, [{
          key: "addClass",

          /**
           * Adds the given className to the root element.
           * @param {string} className The className to add
           */
          value: function addClass(className) {}
          /**
           * Removes the given className from the root element.
           * @param {string} className The className to remove
           */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * Returns whether the root element has the given className.
           * @param {string} className The className to remove
           * @return {boolean}
           */

        }, {
          key: "hasClass",
          value: function hasClass(className) {}
          /**
           * Sets the given attrName of the root element to the given value.
           * @param {string} attr The attribute name to set
           * @param {string} value The value so give the attribute
           */

        }, {
          key: "setAttr",
          value: function setAttr(attr, value) {}
          /**
           * Activates the indicator element.
           * @param {!ClientRect=} previousIndicatorClientRect The client rect of the previously activated indicator
           */

        }, {
          key: "activateIndicator",
          value: function activateIndicator(previousIndicatorClientRect) {}
          /** Deactivates the indicator. */

        }, {
          key: "deactivateIndicator",
          value: function deactivateIndicator() {}
          /**
           * Emits the MDCTab:interacted event for use by parent components
           */

        }, {
          key: "notifyInteracted",
          value: function notifyInteracted() {}
          /**
           * Returns the offsetLeft value of the root element.
           * @return {number}
           */

        }, {
          key: "getOffsetLeft",
          value: function getOffsetLeft() {}
          /**
           * Returns the offsetWidth value of the root element.
           * @return {number}
           */

        }, {
          key: "getOffsetWidth",
          value: function getOffsetWidth() {}
          /**
           * Returns the offsetLeft of the content element.
           * @return {number}
           */

        }, {
          key: "getContentOffsetLeft",
          value: function getContentOffsetLeft() {}
          /**
           * Returns the offsetWidth of the content element.
           * @return {number}
           */

        }, {
          key: "getContentOffsetWidth",
          value: function getContentOffsetWidth() {}
          /**
           * Applies focus to the root element
           */

        }, {
          key: "focus",
          value: function focus() {}
        }]);

        return MDCTabAdapter;
      }();
      /***/

    },
    /* 11 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__adapter__ = __webpack_require__(4);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @abstract
       */


      var MDCTabScrollerRTL = function () {
        /** @param {!MDCTabScrollerAdapter} adapter */
        function MDCTabScrollerRTL(adapter) {
          _classCallCheck(this, MDCTabScrollerRTL);
          /** @private */


          this.adapter_ = adapter;
        }
        /**
         * @param {number} translateX The current translateX position
         * @return {number}
         * @abstract
         */


        _createClass(MDCTabScrollerRTL, [{
          key: 'getScrollPositionRTL',
          value: function getScrollPositionRTL(translateX) {}
          /**
           * @param {number} scrollX
           * @return {!MDCTabScrollerAnimation}
           * @abstract
           */

        }, {
          key: 'scrollToRTL',
          value: function scrollToRTL(scrollX) {}
          /**
           * @param {number} scrollX
           * @return {!MDCTabScrollerAnimation}
           * @abstract
           */

        }, {
          key: 'incrementScrollRTL',
          value: function incrementScrollRTL(scrollX) {}
          /**
           * @param {number} scrollX The current scrollX position
           * @param {number} translateX The current translateX position
           * @return {number}
           * @abstract
           */

        }, {
          key: 'getAnimatingScrollPosition',
          value: function getAnimatingScrollPosition(scrollX, translateX) {}
        }]);

        return MDCTabScrollerRTL;
      }();
      /* harmony default export */


      __webpack_exports__["a"] = MDCTabScrollerRTL;
      /***/
    },
    /* 12 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(7);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__material_base_foundation__ = __webpack_require__(0);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCFoundation<!MDCTopAppBarAdapter>}
       */


      var MDCTopAppBarBaseFoundation = function (_MDCFoundation) {
        _inherits(MDCTopAppBarBaseFoundation, _MDCFoundation);

        _createClass(MDCTopAppBarBaseFoundation, null, [{
          key: 'strings',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_0__constants__["c"
            /* strings */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_0__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return enum {number} */

        }, {
          key: 'numbers',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_0__constants__["b"
            /* numbers */
            ];
          }
          /**
           * {@see MDCTopAppBarAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCTopAppBarAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCTopAppBarAdapter} */
              {
                hasClass: function hasClass()
                /* className: string */
                {},
                addClass: function addClass()
                /* className: string */
                {},
                removeClass: function removeClass()
                /* className: string */
                {},
                setStyle: function setStyle()
                /* property: string, value: string */
                {},
                getTopAppBarHeight: function getTopAppBarHeight() {},
                registerNavigationIconInteractionHandler: function registerNavigationIconInteractionHandler()
                /* type: string, handler: EventListener */
                {},
                deregisterNavigationIconInteractionHandler: function deregisterNavigationIconInteractionHandler()
                /* type: string, handler: EventListener */
                {},
                notifyNavigationIconClicked: function notifyNavigationIconClicked() {},
                registerScrollHandler: function registerScrollHandler()
                /* handler: EventListener */
                {},
                deregisterScrollHandler: function deregisterScrollHandler()
                /* handler: EventListener */
                {},
                registerResizeHandler: function registerResizeHandler()
                /* handler: EventListener */
                {},
                deregisterResizeHandler: function deregisterResizeHandler()
                /* handler: EventListener */
                {},
                getViewportScrollY: function getViewportScrollY() {
                  return (
                    /* number */
                    0
                  );
                },
                getTotalActionItems: function getTotalActionItems() {
                  return (
                    /* number */
                    0
                  );
                }
              }
            );
          }
          /**
           * @param {!MDCTopAppBarAdapter} adapter
           */

        }]);

        function MDCTopAppBarBaseFoundation(
        /** @type {!MDCTopAppBarAdapter} */
        adapter) {
          _classCallCheck(this, MDCTopAppBarBaseFoundation);

          var _this = _possibleConstructorReturn(this, (MDCTopAppBarBaseFoundation.__proto__ || Object.getPrototypeOf(MDCTopAppBarBaseFoundation)).call(this, _extends(MDCTopAppBarBaseFoundation.defaultAdapter, adapter)));

          _this.navClickHandler_ = function () {
            return _this.adapter_.notifyNavigationIconClicked();
          };

          _this.scrollHandler_ = function () {};

          return _this;
        }

        _createClass(MDCTopAppBarBaseFoundation, [{
          key: 'init',
          value: function init() {
            this.adapter_.registerNavigationIconInteractionHandler('click', this.navClickHandler_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.adapter_.deregisterNavigationIconInteractionHandler('click', this.navClickHandler_);
          }
        }, {
          key: 'initScrollHandler',
          value: function initScrollHandler() {
            this.adapter_.registerScrollHandler(this.scrollHandler_);
          }
        }, {
          key: 'destroyScrollHandler',
          value: function destroyScrollHandler() {
            this.adapter_.deregisterScrollHandler(this.scrollHandler_);
          }
        }]);

        return MDCTopAppBarBaseFoundation;
      }(__WEBPACK_IMPORTED_MODULE_2__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCTopAppBarBaseFoundation;
      /***/
    },
    /* 13 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "c", function () {
        return transformStyleProperties;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return getCorrectEventName;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return getCorrectPropertyName;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @typedef {{
       *   noPrefix: string,
       *   webkitPrefix: string,
       *   styleProperty: string
       * }}
       */


      var VendorPropertyMapType = void 0;
      /** @const {Object<string, !VendorPropertyMapType>} */

      var eventTypeMap = {
        'animationstart': {
          noPrefix: 'animationstart',
          webkitPrefix: 'webkitAnimationStart',
          styleProperty: 'animation'
        },
        'animationend': {
          noPrefix: 'animationend',
          webkitPrefix: 'webkitAnimationEnd',
          styleProperty: 'animation'
        },
        'animationiteration': {
          noPrefix: 'animationiteration',
          webkitPrefix: 'webkitAnimationIteration',
          styleProperty: 'animation'
        },
        'transitionend': {
          noPrefix: 'transitionend',
          webkitPrefix: 'webkitTransitionEnd',
          styleProperty: 'transition'
        }
      };
      /** @const {Object<string, !VendorPropertyMapType>} */

      var cssPropertyMap = {
        'animation': {
          noPrefix: 'animation',
          webkitPrefix: '-webkit-animation'
        },
        'transform': {
          noPrefix: 'transform',
          webkitPrefix: '-webkit-transform'
        },
        'transition': {
          noPrefix: 'transition',
          webkitPrefix: '-webkit-transition'
        }
      };
      /**
       * @param {!Object} windowObj
       * @return {boolean}
       */

      function hasProperShape(windowObj) {
        return windowObj['document'] !== undefined && typeof windowObj['document']['createElement'] === 'function';
      }
      /**
       * @param {string} eventType
       * @return {boolean}
       */


      function eventFoundInMaps(eventType) {
        return eventType in eventTypeMap || eventType in cssPropertyMap;
      }
      /**
       * @param {string} eventType
       * @param {!Object<string, !VendorPropertyMapType>} map
       * @param {!Element} el
       * @return {string}
       */


      function getJavaScriptEventName(eventType, map, el) {
        return map[eventType].styleProperty in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;
      }
      /**
       * Helper function to determine browser prefix for CSS3 animation events
       * and property names.
       * @param {!Object} windowObj
       * @param {string} eventType
       * @return {string}
       */


      function getAnimationName(windowObj, eventType) {
        if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType)) {
          return eventType;
        }

        var map =
        /** @type {!Object<string, !VendorPropertyMapType>} */
        eventType in eventTypeMap ? eventTypeMap : cssPropertyMap;
        var el = windowObj['document']['createElement']('div');
        var eventName = '';

        if (map === eventTypeMap) {
          eventName = getJavaScriptEventName(eventType, map, el);
        } else {
          eventName = map[eventType].noPrefix in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;
        }

        return eventName;
      } // Public functions to access getAnimationName() for JavaScript events or CSS
      // property names.


      var transformStyleProperties = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'MSTransform'];
      /**
       * @param {!Object} windowObj
       * @param {string} eventType
       * @return {string}
       */

      function getCorrectEventName(windowObj, eventType) {
        return getAnimationName(windowObj, eventType);
      }
      /**
       * @param {!Object} windowObj
       * @param {string} eventType
       * @return {string}
       */


      function getCorrectPropertyName(windowObj, eventType) {
        return getAnimationName(windowObj, eventType);
      }
      /***/

    },
    /* 14 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Drawer
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the Drawer into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCDrawerAdapter = function () {
        function MDCDrawerAdapter() {
          _classCallCheck(this, MDCDrawerAdapter);
        }

        _createClass(MDCDrawerAdapter, [{
          key: "addClass",

          /**
           * Adds a class to the root Element.
           * @param {string} className
           */
          value: function addClass(className) {}
          /**
           * Removes a class from the root Element.
           * @param {string} className
           */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * Returns true if the root Element contains the given class.
           * @param {string} className
           * @return {boolean}
           */

        }, {
          key: "hasClass",
          value: function hasClass(className) {}
          /**
           * @param {!Element} element target element to verify class name
           * @param {string} className class name
           */

        }, {
          key: "elementHasClass",
          value: function elementHasClass(element, className) {}
          /**
           * Saves the focus of currently active element.
           */

        }, {
          key: "saveFocus",
          value: function saveFocus() {}
          /**
           * Restores focus to element previously saved with 'saveFocus'.
           */

        }, {
          key: "restoreFocus",
          value: function restoreFocus() {}
          /**
           * Focuses the active / selected navigation item.
           */

        }, {
          key: "focusActiveNavigationItem",
          value: function focusActiveNavigationItem() {}
          /**
           * Emits a custom event "MDCDrawer:closed" denoting the drawer has closed.
           */

        }, {
          key: "notifyClose",
          value: function notifyClose() {}
          /**
           * Emits a custom event "MDCDrawer:opened" denoting the drawer has opened.
           */

        }, {
          key: "notifyOpen",
          value: function notifyOpen() {}
          /**
           * Traps focus on root element and focuses the active navigation element.
           */

        }, {
          key: "trapFocus",
          value: function trapFocus() {}
          /**
           * Releases focus trap from root element which was set by `trapFocus`
           * and restores focus to where it was prior to calling `trapFocus`.
           */

        }, {
          key: "releaseFocus",
          value: function releaseFocus() {}
        }]);

        return MDCDrawerAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCDrawerAdapter;
      /***/
    },
    /* 15 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCList", function () {
        return MDCList;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(16);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__adapter__ = __webpack_require__(37);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__material_dom_ponyfill__ = __webpack_require__(8);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(38);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCListFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_1__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */
      // eslint-disable-line no-unused-vars

      /**
       * @extends MDCComponent<!MDCListFoundation>
       */


      var MDCList = function (_MDCComponent) {
        _inherits(MDCList, _MDCComponent);
        /** @param {...?} args */


        function MDCList() {
          var _ref;

          _classCallCheck(this, MDCList);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {!Function} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCList.__proto__ || Object.getPrototypeOf(MDCList)).call.apply(_ref, [this].concat(args)));

          _this.handleKeydown_;
          /** @private {!Function} */

          _this.handleClick_;
          /** @private {!Function} */

          _this.focusInEventListener_;
          /** @private {!Function} */

          _this.focusOutEventListener_;
          return _this;
        }
        /**
         * @param {!Element} root
         * @return {!MDCList}
         */


        _createClass(MDCList, [{
          key: 'destroy',
          value: function destroy() {
            this.root_.removeEventListener('keydown', this.handleKeydown_);
            this.root_.removeEventListener('click', this.handleClick_);
            this.root_.removeEventListener('focusin', this.focusInEventListener_);
            this.root_.removeEventListener('focusout', this.focusOutEventListener_);
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            this.handleClick_ = this.handleClickEvent_.bind(this);
            this.handleKeydown_ = this.handleKeydownEvent_.bind(this);
            this.focusInEventListener_ = this.handleFocusInEvent_.bind(this);
            this.focusOutEventListener_ = this.handleFocusOutEvent_.bind(this);
            this.root_.addEventListener('keydown', this.handleKeydown_);
            this.root_.addEventListener('focusin', this.focusInEventListener_);
            this.root_.addEventListener('focusout', this.focusOutEventListener_);
            this.root_.addEventListener('click', this.handleClick_);
            this.layout();
            this.initializeListType();
          }
        }, {
          key: 'layout',
          value: function layout() {
            var direction = this.root_.getAttribute(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].ARIA_ORIENTATION);
            this.vertical = direction !== __WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].ARIA_ORIENTATION_HORIZONTAL; // List items need to have at least tabindex=-1 to be focusable.

            [].slice.call(this.root_.querySelectorAll('.mdc-list-item:not([tabindex])')).forEach(function (ele) {
              ele.setAttribute('tabindex', -1);
            }); // Child button/a elements are not tabbable until the list item is focused.

            [].slice.call(this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].FOCUSABLE_CHILD_ELEMENTS)).forEach(function (ele) {
              return ele.setAttribute('tabindex', -1);
            });
            this.foundation_.layout();
          }
          /**
           * Used to figure out which list item this event is targetting. Or returns -1 if
           * there is no list item
           * @param {Event} evt
           * @private
           */

        }, {
          key: 'getListItemIndex_',
          value: function getListItemIndex_(evt) {
            var eventTarget =
            /** @type {HTMLElement} */
            evt.target;
            var index = -1; // Find the first ancestor that is a list item or the list.

            while (!eventTarget.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].LIST_ITEM_CLASS) && !eventTarget.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].ROOT)) {
              eventTarget = eventTarget.parentElement;
            } // Get the index of the element if it is a list item.


            if (eventTarget.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].LIST_ITEM_CLASS)) {
              index = this.listElements.indexOf(eventTarget);
            }

            return index;
          }
          /**
           * Used to figure out which element was clicked before sending the event to the foundation.
           * @param {Event} evt
           * @private
           */

        }, {
          key: 'handleFocusInEvent_',
          value: function handleFocusInEvent_(evt) {
            var index = this.getListItemIndex_(evt);
            this.foundation_.handleFocusIn(evt, index);
          }
          /**
           * Used to figure out which element was clicked before sending the event to the foundation.
           * @param {Event} evt
           * @private
           */

        }, {
          key: 'handleFocusOutEvent_',
          value: function handleFocusOutEvent_(evt) {
            var index = this.getListItemIndex_(evt);
            this.foundation_.handleFocusOut(evt, index);
          }
          /**
           * Used to figure out which element was focused when keydown event occurred before sending the event to the
           * foundation.
           * @param {Event} evt
           * @private
           */

        }, {
          key: 'handleKeydownEvent_',
          value: function handleKeydownEvent_(evt) {
            var index = this.getListItemIndex_(evt);

            if (index >= 0) {
              this.foundation_.handleKeydown(evt, evt.target.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
              /* cssClasses */
              ].LIST_ITEM_CLASS), index);
            }
          }
          /**
           * Used to figure out which element was clicked before sending the event to the foundation.
           * @param {Event} evt
           * @private
           */

        }, {
          key: 'handleClickEvent_',
          value: function handleClickEvent_(evt) {
            var index = this.getListItemIndex_(evt); // Toggle the checkbox only if it's not the target of the event, or the checkbox will have 2 change events.

            var toggleCheckbox = !Object(__WEBPACK_IMPORTED_MODULE_3__material_dom_ponyfill__["matches"])(
            /** @type {!Element} */
            evt.target, __WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].CHECKBOX_RADIO_SELECTOR);
            this.foundation_.handleClick(index, toggleCheckbox);
          }
          /**
           * Initialize selectedIndex value based on pre-selected checkbox list items, single selection or radio.
           */

        }, {
          key: 'initializeListType',
          value: function initializeListType() {
            var _this2 = this;

            var checkboxListItems = this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].ARIA_ROLE_CHECKBOX_SELECTOR);
            var singleSelectedListItem = this.root_.querySelector('.' + __WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].LIST_ITEM_ACTIVATED_CLASS + ',\n        .' + __WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].LIST_ITEM_SELECTED_CLASS);
            var radioSelectedListItem = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].ARIA_CHECKED_RADIO_SELECTOR);

            if (checkboxListItems.length) {
              var preselectedItems = this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
              /* strings */
              ].ARIA_CHECKED_CHECKBOX_SELECTOR);
              this.selectedIndex = [].map.call(preselectedItems, function (listItem) {
                return _this2.listElements.indexOf(listItem);
              });
            } else if (singleSelectedListItem) {
              if (singleSelectedListItem.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
              /* cssClasses */
              ].LIST_ITEM_ACTIVATED_CLASS)) {
                this.foundation_.setUseActivatedClass(true);
              }

              this.singleSelection = true;
              this.selectedIndex = this.listElements.indexOf(singleSelectedListItem);
            } else if (radioSelectedListItem) {
              this.selectedIndex = this.listElements.indexOf(radioSelectedListItem);
            }
          }
          /** @param {boolean} value */

        }, {
          key: 'getDefaultFoundation',

          /** @return {!MDCListFoundation} */
          value: function getDefaultFoundation() {
            var _this3 = this;

            return new __WEBPACK_IMPORTED_MODULE_1__foundation__["a"
            /* default */
            ](
            /** @type {!MDCListAdapter} */
            _extends({
              getListItemCount: function getListItemCount() {
                return _this3.listElements.length;
              },
              getFocusedElementIndex: function getFocusedElementIndex() {
                return _this3.listElements.indexOf(document.activeElement);
              },
              setAttributeForElementIndex: function setAttributeForElementIndex(index, attr, value) {
                var element = _this3.listElements[index];

                if (element) {
                  element.setAttribute(attr, value);
                }
              },
              removeAttributeForElementIndex: function removeAttributeForElementIndex(index, attr) {
                var element = _this3.listElements[index];

                if (element) {
                  element.removeAttribute(attr);
                }
              },
              addClassForElementIndex: function addClassForElementIndex(index, className) {
                var element = _this3.listElements[index];

                if (element) {
                  element.classList.add(className);
                }
              },
              removeClassForElementIndex: function removeClassForElementIndex(index, className) {
                var element = _this3.listElements[index];

                if (element) {
                  element.classList.remove(className);
                }
              },
              focusItemAtIndex: function focusItemAtIndex(index) {
                var element = _this3.listElements[index];

                if (element) {
                  element.focus();
                }
              },
              setTabIndexForListItemChildren: function setTabIndexForListItemChildren(listItemIndex, tabIndexValue) {
                var element = _this3.listElements[listItemIndex];
                var listItemChildren = [].slice.call(element.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].CHILD_ELEMENTS_TO_TOGGLE_TABINDEX));
                listItemChildren.forEach(function (ele) {
                  return ele.setAttribute('tabindex', tabIndexValue);
                });
              },
              followHref: function followHref(index) {
                var listItem = _this3.listElements[index];

                if (listItem && listItem.href) {
                  listItem.click();
                }
              },
              hasCheckboxAtIndex: function hasCheckboxAtIndex(index) {
                var listItem = _this3.listElements[index];
                return !!listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].CHECKBOX_SELECTOR);
              },
              hasRadioAtIndex: function hasRadioAtIndex(index) {
                var listItem = _this3.listElements[index];
                return !!listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].RADIO_SELECTOR);
              },
              isCheckboxCheckedAtIndex: function isCheckboxCheckedAtIndex(index) {
                var listItem = _this3.listElements[index];
                var toggleEl = listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].CHECKBOX_SELECTOR);
                return toggleEl.checked;
              },
              setCheckedCheckboxOrRadioAtIndex: function setCheckedCheckboxOrRadioAtIndex(index, isChecked) {
                var listItem = _this3.listElements[index];
                var toggleEl = listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].CHECKBOX_RADIO_SELECTOR);
                toggleEl.checked = isChecked;
                var event = document.createEvent('Event');
                event.initEvent('change', true, true);
                toggleEl.dispatchEvent(event);
              },
              isFocusInsideList: function isFocusInsideList() {
                return _this3.root_.contains(document.activeElement);
              }
            }));
          }
        }, {
          key: 'vertical',
          set: function set(value) {
            this.foundation_.setVerticalOrientation(value);
          }
          /** @return Array<!Element>*/

        }, {
          key: 'listElements',
          get: function get() {
            return [].slice.call(this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].ENABLED_ITEMS_SELECTOR));
          }
          /** @param {boolean} value */

        }, {
          key: 'wrapFocus',
          set: function set(value) {
            this.foundation_.setWrapFocus(value);
          }
          /** @param {boolean} isSingleSelectionList */

        }, {
          key: 'singleSelection',
          set: function set(isSingleSelectionList) {
            this.foundation_.setSingleSelection(isSingleSelectionList);
          }
          /** @return {!Index} */

        }, {
          key: 'selectedIndex',
          get: function get() {
            return this.foundation_.getSelectedIndex();
          }
          /** @param {!Index} index */
          ,
          set: function set(index) {
            this.foundation_.setSelectedIndex(index);
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCList(root);
          }
        }]);

        return MDCList;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 16 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(37);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(38);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */
      // eslint-disable-line no-unused-vars


      var ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];

      var MDCListFoundation = function (_MDCFoundation) {
        _inherits(MDCListFoundation, _MDCFoundation);

        _createClass(MDCListFoundation, null, [{
          key: 'strings',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /**
           * {@see MDCListAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCListAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCListAdapter} */
              {
                getListItemCount: function getListItemCount() {},
                getFocusedElementIndex: function getFocusedElementIndex() {},
                setAttributeForElementIndex: function setAttributeForElementIndex() {},
                removeAttributeForElementIndex: function removeAttributeForElementIndex() {},
                addClassForElementIndex: function addClassForElementIndex() {},
                removeClassForElementIndex: function removeClassForElementIndex() {},
                focusItemAtIndex: function focusItemAtIndex() {},
                setTabIndexForListItemChildren: function setTabIndexForListItemChildren() {},
                followHref: function followHref() {},
                hasRadioAtIndex: function hasRadioAtIndex() {},
                hasCheckboxAtIndex: function hasCheckboxAtIndex() {},
                isCheckboxCheckedAtIndex: function isCheckboxCheckedAtIndex() {},
                setCheckedCheckboxOrRadioAtIndex: function setCheckedCheckboxOrRadioAtIndex() {},
                isFocusInsideList: function isFocusInsideList() {}
              }
            );
          }
          /**
           * @param {!MDCListAdapter=} adapter
           */

        }]);

        function MDCListFoundation(adapter) {
          _classCallCheck(this, MDCListFoundation);
          /** @private {boolean} */


          var _this = _possibleConstructorReturn(this, (MDCListFoundation.__proto__ || Object.getPrototypeOf(MDCListFoundation)).call(this, _extends(MDCListFoundation.defaultAdapter, adapter)));

          _this.wrapFocus_ = false;
          /** @private {boolean} */

          _this.isVertical_ = true;
          /** @private {boolean} */

          _this.isSingleSelectionList_ = false;
          /** @private {!Index} */

          _this.selectedIndex_ = -1;
          /** @private {number} */

          _this.focusedItemIndex_ = -1;
          /** @private {boolean} */

          _this.useActivatedClass_ = false;
          /** @private {boolean} */

          _this.isCheckboxList_ = false;
          /** @private {boolean} */

          _this.isRadioList_ = false;
          return _this;
        }

        _createClass(MDCListFoundation, [{
          key: 'layout',
          value: function layout() {
            if (this.adapter_.getListItemCount() === 0) return;

            if (this.adapter_.hasCheckboxAtIndex(0)) {
              this.isCheckboxList_ = true;
            } else if (this.adapter_.hasRadioAtIndex(0)) {
              this.isRadioList_ = true;
            }
          }
          /**
           * Sets the private wrapFocus_ variable.
           * @param {boolean} value
           */

        }, {
          key: 'setWrapFocus',
          value: function setWrapFocus(value) {
            this.wrapFocus_ = value;
          }
          /**
           * Sets the isVertical_ private variable.
           * @param {boolean} value
           */

        }, {
          key: 'setVerticalOrientation',
          value: function setVerticalOrientation(value) {
            this.isVertical_ = value;
          }
          /**
           * Sets the isSingleSelectionList_ private variable.
           * @param {boolean} value
           */

        }, {
          key: 'setSingleSelection',
          value: function setSingleSelection(value) {
            this.isSingleSelectionList_ = value;
          }
          /**
           * Sets the useActivatedClass_ private variable.
           * @param {boolean} useActivated
           */

        }, {
          key: 'setUseActivatedClass',
          value: function setUseActivatedClass(useActivated) {
            this.useActivatedClass_ = useActivated;
          }
          /** @return {!Index} */

        }, {
          key: 'getSelectedIndex',
          value: function getSelectedIndex() {
            return this.selectedIndex_;
          }
          /** @param {!Index} index */

        }, {
          key: 'setSelectedIndex',
          value: function setSelectedIndex(index) {
            if (!this.isIndexValid_(index)) return;

            if (this.isCheckboxList_) {
              this.setCheckboxAtIndex_(
              /** @type {!Array<number>} */
              index);
            } else if (this.isRadioList_) {
              this.setRadioAtIndex_(
              /** @type {number} */
              index);
            } else {
              this.setSingleSelectionAtIndex_(
              /** @type {number} */
              index);
            }
          }
          /**
           * Focus in handler for the list items.
           * @param evt
           * @param {number} listItemIndex
           */

        }, {
          key: 'handleFocusIn',
          value: function handleFocusIn(evt, listItemIndex) {
            if (listItemIndex >= 0) {
              this.adapter_.setTabIndexForListItemChildren(listItemIndex, 0);
            }
          }
          /**
           * Focus out handler for the list items.
           * @param {Event} evt
           * @param {number} listItemIndex
           */

        }, {
          key: 'handleFocusOut',
          value: function handleFocusOut(evt, listItemIndex) {
            var _this2 = this;

            if (listItemIndex >= 0) {
              this.adapter_.setTabIndexForListItemChildren(listItemIndex, -1);
            }
            /**
             * Between Focusout & Focusin some browsers do not have focus on any element. Setting a delay to wait till the focus
             * is moved to next element.
             */


            setTimeout(function () {
              if (!_this2.adapter_.isFocusInsideList()) {
                _this2.setTabindexToFirstSelectedItem_();
              }
            }, 0);
          }
          /**
           * Key handler for the list.
           * @param {Event} evt
           * @param {boolean} isRootListItem
           * @param {number} listItemIndex
           */

        }, {
          key: 'handleKeydown',
          value: function handleKeydown(evt, isRootListItem, listItemIndex) {
            var arrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;
            var arrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;
            var arrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;
            var arrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;
            var isHome = evt.key === 'Home' || evt.keyCode === 36;
            var isEnd = evt.key === 'End' || evt.keyCode === 35;
            var isEnter = evt.key === 'Enter' || evt.keyCode === 13;
            var isSpace = evt.key === 'Space' || evt.keyCode === 32;
            var currentIndex = this.adapter_.getFocusedElementIndex();
            var nextIndex = -1;

            if (currentIndex === -1) {
              currentIndex = listItemIndex;

              if (currentIndex < 0) {
                // If this event doesn't have a mdc-list-item ancestor from the
                // current list (not from a sublist), return early.
                return;
              }
            }

            if (this.isVertical_ && arrowDown || !this.isVertical_ && arrowRight) {
              this.preventDefaultEvent_(evt);
              nextIndex = this.focusNextElement(currentIndex);
            } else if (this.isVertical_ && arrowUp || !this.isVertical_ && arrowLeft) {
              this.preventDefaultEvent_(evt);
              nextIndex = this.focusPrevElement(currentIndex);
            } else if (isHome) {
              this.preventDefaultEvent_(evt);
              nextIndex = this.focusFirstElement();
            } else if (isEnd) {
              this.preventDefaultEvent_(evt);
              nextIndex = this.focusLastElement();
            } else if (isEnter || isSpace) {
              if (isRootListItem) {
                if (this.isSelectableList_()) {
                  this.setSelectedIndexOnAction_(currentIndex);
                  this.preventDefaultEvent_(evt);
                } // Explicitly activate links, since we're preventing default on Enter, and Space doesn't activate them.


                this.adapter_.followHref(currentIndex);
              }
            }

            this.focusedItemIndex_ = currentIndex;

            if (nextIndex >= 0) {
              this.setTabindexAtIndex_(nextIndex);
              this.focusedItemIndex_ = nextIndex;
            }
          }
          /**
           * Click handler for the list.
           * @param {number} index
           * @param {boolean} toggleCheckbox
           */

        }, {
          key: 'handleClick',
          value: function handleClick(index, toggleCheckbox) {
            if (index === -1) return;

            if (this.isSelectableList_()) {
              this.setSelectedIndexOnAction_(index, toggleCheckbox);
            }

            this.setTabindexAtIndex_(index);
            this.focusedItemIndex_ = index;
          }
          /**
           * Ensures that preventDefault is only called if the containing element doesn't
           * consume the event, and it will cause an unintended scroll.
           * @param {Event} evt
           * @private
           */

        }, {
          key: 'preventDefaultEvent_',
          value: function preventDefaultEvent_(evt) {
            var tagName = ('' + evt.target.tagName).toLowerCase();

            if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {
              evt.preventDefault();
            }
          }
          /**
           * Focuses the next element on the list.
           * @param {number} index
           * @return {number}
           */

        }, {
          key: 'focusNextElement',
          value: function focusNextElement(index) {
            var count = this.adapter_.getListItemCount();
            var nextIndex = index + 1;

            if (nextIndex >= count) {
              if (this.wrapFocus_) {
                nextIndex = 0;
              } else {
                // Return early because last item is already focused.
                return index;
              }
            }

            this.adapter_.focusItemAtIndex(nextIndex);
            return nextIndex;
          }
          /**
           * Focuses the previous element on the list.
           * @param {number} index
           * @return {number}
           */

        }, {
          key: 'focusPrevElement',
          value: function focusPrevElement(index) {
            var prevIndex = index - 1;

            if (prevIndex < 0) {
              if (this.wrapFocus_) {
                prevIndex = this.adapter_.getListItemCount() - 1;
              } else {
                // Return early because first item is already focused.
                return index;
              }
            }

            this.adapter_.focusItemAtIndex(prevIndex);
            return prevIndex;
          }
          /**
           * @return {number}
           */

        }, {
          key: 'focusFirstElement',
          value: function focusFirstElement() {
            this.adapter_.focusItemAtIndex(0);
            return 0;
          }
          /**
           * @return {number}
           */

        }, {
          key: 'focusLastElement',
          value: function focusLastElement() {
            var lastIndex = this.adapter_.getListItemCount() - 1;
            this.adapter_.focusItemAtIndex(lastIndex);
            return lastIndex;
          }
          /**
           * @param {number} index
           * @private
           */

        }, {
          key: 'setSingleSelectionAtIndex_',
          value: function setSingleSelectionAtIndex_(index) {
            var selectedClassName = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].LIST_ITEM_SELECTED_CLASS;

            if (this.useActivatedClass_) {
              selectedClassName = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].LIST_ITEM_ACTIVATED_CLASS;
            }

            if (this.selectedIndex_ >= 0 && this.selectedIndex_ !== index) {
              this.adapter_.removeClassForElementIndex(this.selectedIndex_, selectedClassName);
              this.adapter_.setAttributeForElementIndex(this.selectedIndex_, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ARIA_SELECTED, 'false');
            }

            this.adapter_.addClassForElementIndex(index, selectedClassName);
            this.adapter_.setAttributeForElementIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_SELECTED, 'true');
            this.selectedIndex_ = index;
          }
          /**
           * Toggles radio at give index. Radio doesn't change the checked state if it is already checked.
           * @param {number} index
           * @private
           */

        }, {
          key: 'setRadioAtIndex_',
          value: function setRadioAtIndex_(index) {
            this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, true);

            if (this.selectedIndex_ >= 0) {
              this.adapter_.setAttributeForElementIndex(this.selectedIndex_, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ARIA_CHECKED, 'false');
            }

            this.adapter_.setAttributeForElementIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_CHECKED, 'true');
            this.selectedIndex_ = index;
          }
          /**
           * @param {!Array<number>} index
           * @private
           */

        }, {
          key: 'setCheckboxAtIndex_',
          value: function setCheckboxAtIndex_(index) {
            for (var i = 0; i < this.adapter_.getListItemCount(); i++) {
              var isChecked = false;

              if (index.indexOf(i) >= 0) {
                isChecked = true;
              }

              this.adapter_.setCheckedCheckboxOrRadioAtIndex(i, isChecked);
              this.adapter_.setAttributeForElementIndex(i, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ARIA_CHECKED, isChecked ? 'true' : 'false');
            }

            this.selectedIndex_ = index;
          }
          /**
           * @param {number} index
           * @private
           */

        }, {
          key: 'setTabindexAtIndex_',
          value: function setTabindexAtIndex_(index) {
            if (this.focusedItemIndex_ === -1 && index !== 0) {
              // If no list item was selected set first list item's tabindex to -1.
              // Generally, tabindex is set to 0 on first list item of list that has no preselected items.
              this.adapter_.setAttributeForElementIndex(0, 'tabindex', -1);
            } else if (this.focusedItemIndex_ >= 0 && this.focusedItemIndex_ !== index) {
              this.adapter_.setAttributeForElementIndex(this.focusedItemIndex_, 'tabindex', -1);
            }

            this.adapter_.setAttributeForElementIndex(index, 'tabindex', 0);
          }
          /**
           * @return {boolean} Return true if it is single selectin list, checkbox list or radio list.
           * @private
           */

        }, {
          key: 'isSelectableList_',
          value: function isSelectableList_() {
            return this.isSingleSelectionList_ || this.isCheckboxList_ || this.isRadioList_;
          }
          /** @private */

        }, {
          key: 'setTabindexToFirstSelectedItem_',
          value: function setTabindexToFirstSelectedItem_() {
            var targetIndex = 0;

            if (this.isSelectableList_()) {
              if (typeof this.selectedIndex_ === 'number' && this.selectedIndex_ !== -1) {
                targetIndex = this.selectedIndex_;
              } else if (this.selectedIndex_ instanceof Array && this.selectedIndex_.length > 0) {
                targetIndex = this.selectedIndex_.reduce(function (currentIndex, minIndex) {
                  return Math.min(currentIndex, minIndex);
                });
              }
            }

            this.setTabindexAtIndex_(targetIndex);
          }
          /**
           * @param {!Index} index
           * @return {boolean}
           * @private
           */

        }, {
          key: 'isIndexValid_',
          value: function isIndexValid_(index) {
            var _this3 = this;

            if (index instanceof Array) {
              if (!this.isCheckboxList_) {
                throw new Error('MDCListFoundation: Array of index is only supported for checkbox based list');
              }

              if (index.length === 0) {
                return true;
              } else {
                return index.some(function (i) {
                  return _this3.isIndexInRange_(i);
                });
              }
            } else if (typeof index === 'number') {
              if (this.isCheckboxList_) {
                throw new Error('MDCListFoundation: Expected array of index for checkbox based list but got number: ' + index);
              }

              return this.isIndexInRange_(index);
            } else {
              return false;
            }
          }
          /**
           * @param {number} index
           * @return {boolean}
           * @private
           */

        }, {
          key: 'isIndexInRange_',
          value: function isIndexInRange_(index) {
            var listSize = this.adapter_.getListItemCount();
            return index >= 0 && index < listSize;
          }
          /**
           * @param {number} index
           * @param {boolean=} toggleCheckbox
           * @private
           */

        }, {
          key: 'setSelectedIndexOnAction_',
          value: function setSelectedIndexOnAction_(index) {
            var toggleCheckbox = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

            if (this.isCheckboxList_) {
              this.toggleCheckboxAtIndex_(index, toggleCheckbox);
            } else {
              this.setSelectedIndex(index);
            }
          }
          /**
           * @param {number} index
           * @param {boolean} toggleCheckbox
           * @private
           */

        }, {
          key: 'toggleCheckboxAtIndex_',
          value: function toggleCheckboxAtIndex_(index, toggleCheckbox) {
            var isChecked = this.adapter_.isCheckboxCheckedAtIndex(index);

            if (toggleCheckbox) {
              isChecked = !isChecked;
              this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, isChecked);
            }

            this.adapter_.setAttributeForElementIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_CHECKED, isChecked ? 'true' : 'false'); // If none of the checkbox items are selected and selectedIndex is not initialized then provide a default value.

            if (this.selectedIndex_ === -1) {
              this.selectedIndex_ = [];
            }

            if (isChecked) {
              this.selectedIndex_.push(index);
            } else {
              this.selectedIndex_ = this.selectedIndex_.filter(function (i) {
                return i !== index;
              });
            }
          }
        }]);

        return MDCListFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCListFoundation;
      /***/
    },
    /* 17 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCLineRipple", function () {
        return MDCLineRipple;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(41);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(109);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCLineRippleFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCComponent<!MDCLineRippleFoundation>}
       * @final
       */


      var MDCLineRipple = function (_MDCComponent) {
        _inherits(MDCLineRipple, _MDCComponent);

        function MDCLineRipple() {
          _classCallCheck(this, MDCLineRipple);

          return _possibleConstructorReturn(this, (MDCLineRipple.__proto__ || Object.getPrototypeOf(MDCLineRipple)).apply(this, arguments));
        }

        _createClass(MDCLineRipple, [{
          key: 'activate',

          /**
           * Activates the line ripple
           */
          value: function activate() {
            this.foundation_.activate();
          }
          /**
           * Deactivates the line ripple
           */

        }, {
          key: 'deactivate',
          value: function deactivate() {
            this.foundation_.deactivate();
          }
          /**
           * Sets the transform origin given a user's click location. The `rippleCenter` is the
           * x-coordinate of the middle of the ripple.
           * @param {number} xCoordinate
           */

        }, {
          key: 'setRippleCenter',
          value: function setRippleCenter(xCoordinate) {
            this.foundation_.setRippleCenter(xCoordinate);
          }
          /**
           * @return {!MDCLineRippleFoundation}
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ](
            /** @type {!MDCLineRippleAdapter} */
            _extends({
              addClass: function addClass(className) {
                return _this2.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this2.root_.classList.remove(className);
              },
              hasClass: function hasClass(className) {
                return _this2.root_.classList.contains(className);
              },
              setStyle: function setStyle(propertyName, value) {
                return _this2.root_.style[propertyName] = value;
              },
              registerEventHandler: function registerEventHandler(evtType, handler) {
                return _this2.root_.addEventListener(evtType, handler);
              },
              deregisterEventHandler: function deregisterEventHandler(evtType, handler) {
                return _this2.root_.removeEventListener(evtType, handler);
              }
            }));
          }
        }], [{
          key: 'attachTo',

          /**
           * @param {!Element} root
           * @return {!MDCLineRipple}
           */
          value: function attachTo(root) {
            return new MDCLineRipple(root);
          }
        }]);

        return MDCLineRipple;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 18 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        ROOT: 'mdc-menu',
        MENU_SELECTED_LIST_ITEM: 'mdc-menu-item--selected',
        MENU_SELECTION_GROUP: 'mdc-menu__selection-group'
      };
      /** @enum {string} */

      var strings = {
        SELECTED_EVENT: 'MDCMenu:selected',
        ARIA_SELECTED_ATTR: 'aria-selected',
        LIST_SELECTOR: '.mdc-list',
        CHECKBOX_SELECTOR: 'input[type="checkbox"]'
      };
      /***/
    },
    /* 19 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "b", function () {
        return MDCMenuSurfaceFoundation;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return AnchorMargin;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(43);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(20);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        } else {
          obj[key] = value;
        }

        return obj;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @typedef {{
       *   top: number,
       *   right: number,
       *   bottom: number,
       *   left: number
       * }}
       */


      var AnchorMargin = void 0;
      /* eslint-disable no-unused-vars */

      /**
       * @typedef {{
       *   viewport: { width: number, height: number },
       *   viewportDistance: {top: number, right: number, bottom: number, left: number},
       *   anchorHeight: number,
       *   anchorWidth: number,
       *   surfaceHeight: number,
       *   surfaceWidth: number,
       *   bodyDimensions,
       *   windowScroll,
       * }}
       */

      var AutoLayoutMeasurements = void 0;
      /* eslint-enable no-unused-vars */

      /**
       * @extends {MDCFoundation<!MDCMenuSurfaceAdapter>}
       */

      var MDCMenuSurfaceFoundation = function (_MDCFoundation) {
        _inherits(MDCMenuSurfaceFoundation, _MDCFoundation);

        _createClass(MDCMenuSurfaceFoundation, null, [{
          key: 'cssClasses',

          /** @return enum{cssClasses} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["c"
            /* cssClasses */
            ];
          }
          /** @return enum{string} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["e"
            /* strings */
            ];
          }
          /** @return enum {number} */

        }, {
          key: 'numbers',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["d"
            /* numbers */
            ];
          }
          /** @return enum{number} */

        }, {
          key: 'Corner',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* Corner */
            ];
          }
          /**
           * {@see MDCMenuSurfaceAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCMenuSurfaceAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCMenuSurfaceAdapter} */
              {
                addClass: function addClass() {},
                removeClass: function removeClass() {},
                hasClass: function hasClass() {
                  return false;
                },
                hasAnchor: function hasAnchor() {
                  return false;
                },
                notifyClose: function notifyClose() {},
                notifyOpen: function notifyOpen() {},
                isElementInContainer: function isElementInContainer() {
                  return false;
                },
                isRtl: function isRtl() {
                  return false;
                },
                setTransformOrigin: function setTransformOrigin() {},
                isFocused: function isFocused() {
                  return false;
                },
                saveFocus: function saveFocus() {},
                restoreFocus: function restoreFocus() {},
                isFirstElementFocused: function isFirstElementFocused() {},
                isLastElementFocused: function isLastElementFocused() {},
                focusFirstElement: function focusFirstElement() {},
                focusLastElement: function focusLastElement() {},
                getInnerDimensions: function getInnerDimensions() {
                  return {};
                },
                getAnchorDimensions: function getAnchorDimensions() {
                  return {};
                },
                getWindowDimensions: function getWindowDimensions() {
                  return {};
                },
                getBodyDimensions: function getBodyDimensions() {
                  return {};
                },
                getWindowScroll: function getWindowScroll() {
                  return {};
                },
                setPosition: function setPosition() {},
                setMaxHeight: function setMaxHeight() {}
              }
            );
          }
          /** @param {!MDCMenuSurfaceAdapter} adapter */

        }]);

        function MDCMenuSurfaceFoundation(adapter) {
          _classCallCheck(this, MDCMenuSurfaceFoundation);
          /** @private {boolean} */


          var _this = _possibleConstructorReturn(this, (MDCMenuSurfaceFoundation.__proto__ || Object.getPrototypeOf(MDCMenuSurfaceFoundation)).call(this, _extends(MDCMenuSurfaceFoundation.defaultAdapter, adapter)));

          _this.isOpen_ = false;
          /** @private {number} */

          _this.openAnimationEndTimerId_ = 0;
          /** @private {number} */

          _this.closeAnimationEndTimerId_ = 0;
          /** @private {number} */

          _this.animationRequestId_ = 0;
          /** @private {!{ width: number, height: number }} */

          _this.dimensions_;
          /** @private {!Corner} */

          _this.anchorCorner_ = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
          /* Corner */
          ].TOP_START;
          /** @private {!AnchorMargin} */

          _this.anchorMargin_ = {
            top: 0,
            right: 0,
            bottom: 0,
            left: 0
          };
          /** @private {?AutoLayoutMeasurements} */

          _this.measures_ = null;
          /** @private {boolean} */

          _this.quickOpen_ = false;
          /** @private {boolean} */

          _this.hoistedElement_ = false;
          /** @private {boolean} */

          _this.isFixedPosition_ = false;
          /** @private {!{x: number, y: number}} */

          _this.position_ = {
            x: 0,
            y: 0
          };
          return _this;
        }

        _createClass(MDCMenuSurfaceFoundation, [{
          key: 'init',
          value: function init() {
            var _MDCMenuSurfaceFounda = MDCMenuSurfaceFoundation.cssClasses,
                ROOT = _MDCMenuSurfaceFounda.ROOT,
                OPEN = _MDCMenuSurfaceFounda.OPEN;

            if (!this.adapter_.hasClass(ROOT)) {
              throw new Error(ROOT + ' class required in root element.');
            }

            if (this.adapter_.hasClass(OPEN)) {
              this.isOpen_ = true;
            }
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            clearTimeout(this.openAnimationEndTimerId_);
            clearTimeout(this.closeAnimationEndTimerId_); // Cancel any currently running animations.

            cancelAnimationFrame(this.animationRequestId_);
          }
          /**
           * @param {!Corner} corner Default anchor corner alignment of top-left menu surface corner.
           */

        }, {
          key: 'setAnchorCorner',
          value: function setAnchorCorner(corner) {
            this.anchorCorner_ = corner;
          }
          /**
           * @param {!AnchorMargin} margin set of margin values from anchor.
           */

        }, {
          key: 'setAnchorMargin',
          value: function setAnchorMargin(margin) {
            this.anchorMargin_.top = typeof margin.top === 'number' ? margin.top : 0;
            this.anchorMargin_.right = typeof margin.right === 'number' ? margin.right : 0;
            this.anchorMargin_.bottom = typeof margin.bottom === 'number' ? margin.bottom : 0;
            this.anchorMargin_.left = typeof margin.left === 'number' ? margin.left : 0;
          }
          /**
           * Used to indicate if the menu-surface is hoisted to the body.
           * @param {boolean} isHoisted
           */

        }, {
          key: 'setIsHoisted',
          value: function setIsHoisted(isHoisted) {
            this.hoistedElement_ = isHoisted;
          }
          /**
           * Used to set the menu-surface calculations based on a fixed position menu.
           * @param {boolean} isFixedPosition
           */

        }, {
          key: 'setFixedPosition',
          value: function setFixedPosition(isFixedPosition) {
            this.isFixedPosition_ = isFixedPosition;
          }
          /**
           * Sets the menu-surface position on the page.
           * @param {number} x
           * @param {number} y
           */

        }, {
          key: 'setAbsolutePosition',
          value: function setAbsolutePosition(x, y) {
            this.position_.x = this.typeCheckisFinite_(x) ? x : 0;
            this.position_.y = this.typeCheckisFinite_(y) ? y : 0;
          }
          /** @param {boolean} quickOpen */

        }, {
          key: 'setQuickOpen',
          value: function setQuickOpen(quickOpen) {
            this.quickOpen_ = quickOpen;
          }
          /**
           * Handle clicks and close if not within menu-surface element.
           * @param {!Event} evt
           */

        }, {
          key: 'handleBodyClick',
          value: function handleBodyClick(evt) {
            var el = evt.target;

            if (this.adapter_.isElementInContainer(el)) {
              return;
            }

            this.close();
          }
        }, {
          key: 'handleKeydown',

          /**
           * Handle keys that close the surface.
           * @param {!Event} evt
           */
          value: function handleKeydown(evt) {
            var keyCode = evt.keyCode,
                key = evt.key,
                shiftKey = evt.shiftKey;
            var isEscape = key === 'Escape' || keyCode === 27;
            var isTab = key === 'Tab' || keyCode === 9;

            if (isEscape) {
              this.close();
            } else if (isTab) {
              if (this.adapter_.isLastElementFocused() && !shiftKey) {
                this.adapter_.focusFirstElement();
                evt.preventDefault();
              } else if (this.adapter_.isFirstElementFocused() && shiftKey) {
                this.adapter_.focusLastElement();
                evt.preventDefault();
              }
            }
          }
          /**
           * @return {!AutoLayoutMeasurements} Measurements used to position menu surface popup.
           */

        }, {
          key: 'getAutoLayoutMeasurements_',
          value: function getAutoLayoutMeasurements_() {
            var anchorRect = this.adapter_.getAnchorDimensions();
            var viewport = this.adapter_.getWindowDimensions();
            var bodyDimensions = this.adapter_.getBodyDimensions();
            var windowScroll = this.adapter_.getWindowScroll();

            if (!anchorRect) {
              anchorRect =
              /** @type {ClientRect} */
              {
                x: this.position_.x,
                y: this.position_.y,
                top: this.position_.y,
                bottom: this.position_.y,
                left: this.position_.x,
                right: this.position_.x,
                height: 0,
                width: 0
              };
            }

            return {
              viewport: viewport,
              bodyDimensions: bodyDimensions,
              windowScroll: windowScroll,
              viewportDistance: {
                top: anchorRect.top,
                right: viewport.width - anchorRect.right,
                left: anchorRect.left,
                bottom: viewport.height - anchorRect.bottom
              },
              anchorHeight: anchorRect.height,
              anchorWidth: anchorRect.width,
              surfaceHeight: this.dimensions_.height,
              surfaceWidth: this.dimensions_.width
            };
          }
          /**
           * Computes the corner of the anchor from which to animate and position the menu surface.
           * @return {!Corner}
           * @private
           */

        }, {
          key: 'getOriginCorner_',
          value: function getOriginCorner_() {
            // Defaults: open from the top left.
            var corner = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* Corner */
            ].TOP_LEFT;
            var _measures_ = this.measures_,
                viewportDistance = _measures_.viewportDistance,
                anchorHeight = _measures_.anchorHeight,
                anchorWidth = _measures_.anchorWidth,
                surfaceHeight = _measures_.surfaceHeight,
                surfaceWidth = _measures_.surfaceWidth;
            var isBottomAligned = Boolean(this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].BOTTOM);
            var availableTop = isBottomAligned ? viewportDistance.top + anchorHeight + this.anchorMargin_.bottom : viewportDistance.top + this.anchorMargin_.top;
            var availableBottom = isBottomAligned ? viewportDistance.bottom - this.anchorMargin_.bottom : viewportDistance.bottom + anchorHeight - this.anchorMargin_.top;
            var topOverflow = surfaceHeight - availableTop;
            var bottomOverflow = surfaceHeight - availableBottom;

            if (bottomOverflow > 0 && topOverflow < bottomOverflow) {
              corner |= __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* CornerBit */
              ].BOTTOM;
            }

            var isRtl = this.adapter_.isRtl();
            var isFlipRtl = Boolean(this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].FLIP_RTL);
            var avoidHorizontalOverlap = Boolean(this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].RIGHT);
            var isAlignedRight = avoidHorizontalOverlap && !isRtl || !avoidHorizontalOverlap && isFlipRtl && isRtl;
            var availableLeft = isAlignedRight ? viewportDistance.left + anchorWidth + this.anchorMargin_.right : viewportDistance.left + this.anchorMargin_.left;
            var availableRight = isAlignedRight ? viewportDistance.right - this.anchorMargin_.right : viewportDistance.right + anchorWidth - this.anchorMargin_.left;
            var leftOverflow = surfaceWidth - availableLeft;
            var rightOverflow = surfaceWidth - availableRight;

            if (leftOverflow < 0 && isAlignedRight && isRtl || avoidHorizontalOverlap && !isAlignedRight && leftOverflow < 0 || rightOverflow > 0 && leftOverflow < rightOverflow) {
              corner |= __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* CornerBit */
              ].RIGHT;
            }

            return (
              /** @type {Corner} */
              corner
            );
          }
          /**
           * @param {!Corner} corner Origin corner of the menu surface.
           * @return {number} Horizontal offset of menu surface origin corner from corresponding anchor corner.
           * @private
           */

        }, {
          key: 'getHorizontalOriginOffset_',
          value: function getHorizontalOriginOffset_(corner) {
            var anchorWidth = this.measures_.anchorWidth; // isRightAligned corresponds to using the 'right' property on the surface.

            var isRightAligned = Boolean(corner & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].RIGHT);
            var avoidHorizontalOverlap = Boolean(this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].RIGHT);

            if (isRightAligned) {
              var rightOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.left : this.anchorMargin_.right; // For hoisted or fixed elements, adjust the offset by the difference between viewport width and body width so
              // when we calculate the right value (`adjustPositionForHoistedElement_`) based on the element position,
              // the right property is correct.

              if (this.hoistedElement_ || this.isFixedPosition_) {
                return rightOffset - (this.measures_.viewport.width - this.measures_.bodyDimensions.width);
              }

              return rightOffset;
            }

            return avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.right : this.anchorMargin_.left;
          }
          /**
           * @param {!Corner} corner Origin corner of the menu surface.
           * @return {number} Vertical offset of menu surface origin corner from corresponding anchor corner.
           * @private
           */

        }, {
          key: 'getVerticalOriginOffset_',
          value: function getVerticalOriginOffset_(corner) {
            var anchorHeight = this.measures_.anchorHeight;
            var isBottomAligned = Boolean(corner & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].BOTTOM);
            var avoidVerticalOverlap = Boolean(this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].BOTTOM);
            var y = 0;

            if (isBottomAligned) {
              y = avoidVerticalOverlap ? anchorHeight - this.anchorMargin_.top : -this.anchorMargin_.bottom;
            } else {
              y = avoidVerticalOverlap ? anchorHeight + this.anchorMargin_.bottom : this.anchorMargin_.top;
            }

            return y;
          }
          /**
           * @param {!Corner} corner Origin corner of the menu surface.
           * @return {number} Maximum height of the menu surface, based on available space. 0 indicates should not be set.
           * @private
           */

        }, {
          key: 'getMenuSurfaceMaxHeight_',
          value: function getMenuSurfaceMaxHeight_(corner) {
            var maxHeight = 0;
            var viewportDistance = this.measures_.viewportDistance;
            var isBottomAligned = Boolean(corner & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].BOTTOM);
            var MARGIN_TO_EDGE = MDCMenuSurfaceFoundation.numbers.MARGIN_TO_EDGE; // When maximum height is not specified, it is handled from css.

            if (isBottomAligned) {
              maxHeight = viewportDistance.top + this.anchorMargin_.top - MARGIN_TO_EDGE;

              if (!(this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* CornerBit */
              ].BOTTOM)) {
                maxHeight += this.measures_.anchorHeight;
              }
            } else {
              maxHeight = viewportDistance.bottom - this.anchorMargin_.bottom + this.measures_.anchorHeight - MARGIN_TO_EDGE;

              if (this.anchorCorner_ & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* CornerBit */
              ].BOTTOM) {
                maxHeight -= this.measures_.anchorHeight;
              }
            }

            return maxHeight;
          }
          /** @private */

        }, {
          key: 'autoPosition_',
          value: function autoPosition_() {
            var _position; // Compute measurements for autoposition methods reuse.


            this.measures_ = this.getAutoLayoutMeasurements_();
            var corner = this.getOriginCorner_();
            var maxMenuSurfaceHeight = this.getMenuSurfaceMaxHeight_(corner);
            var verticalAlignment = corner & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].BOTTOM ? 'bottom' : 'top';
            var horizontalAlignment = corner & __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* CornerBit */
            ].RIGHT ? 'right' : 'left';
            var horizontalOffset = this.getHorizontalOriginOffset_(corner);
            var verticalOffset = this.getVerticalOriginOffset_(corner);
            var position = (_position = {}, _defineProperty(_position, horizontalAlignment, horizontalOffset ? horizontalOffset : '0'), _defineProperty(_position, verticalAlignment, verticalOffset ? verticalOffset : '0'), _position);
            var _measures_2 = this.measures_,
                anchorWidth = _measures_2.anchorWidth,
                surfaceWidth = _measures_2.surfaceWidth; // Center align when anchor width is comparable or greater than menu surface, otherwise keep corner.

            if (anchorWidth / surfaceWidth > __WEBPACK_IMPORTED_MODULE_2__constants__["d"
            /* numbers */
            ].ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO) {
              horizontalAlignment = 'center';
            } // If the menu-surface has been hoisted to the body, it's no longer relative to the anchor element


            if (this.hoistedElement_ || this.isFixedPosition_) {
              position = this.adjustPositionForHoistedElement_(position);
            }

            for (var prop in position) {
              if (position.hasOwnProperty(prop) && position[prop] !== '0') {
                position[prop] = parseInt(position[prop], 10) + 'px';
              }
            }

            this.adapter_.setTransformOrigin(horizontalAlignment + ' ' + verticalAlignment);
            this.adapter_.setPosition(position);
            this.adapter_.setMaxHeight(maxMenuSurfaceHeight ? maxMenuSurfaceHeight + 'px' : ''); // Clear measures after positioning is complete.

            this.measures_ = null;
          }
          /**
           * Calculates the offsets for positioning the menu-surface when the menu-surface has been
           * hoisted to the body.
           * @param {!{
           *   top: (string|undefined),
           *   right: (string|undefined),
           *   bottom: (string|undefined),
           *   left: (string|undefined)
           * }} position
           * @return {!{
           *   top: (string|undefined),
           *   right: (string|undefined),
           *   bottom: (string|undefined),
           *   left: (string|undefined)
           * }} position
           * @private
           */

        }, {
          key: 'adjustPositionForHoistedElement_',
          value: function adjustPositionForHoistedElement_(position) {
            var _measures_3 = this.measures_,
                windowScroll = _measures_3.windowScroll,
                viewportDistance = _measures_3.viewportDistance;

            for (var prop in position) {
              if (position.hasOwnProperty(prop)) {
                // Hoisted surfaces need to have the anchor elements location on the page added to the
                // position properties for proper alignment on the body.
                if (viewportDistance.hasOwnProperty(prop)) {
                  position[prop] = parseInt(position[prop], 10) + viewportDistance[prop];
                } // Surfaces that are absolutely positioned need to have additional calculations for scroll
                // and bottom positioning.


                if (!this.isFixedPosition_) {
                  if (prop === 'top') {
                    position[prop] = parseInt(position[prop], 10) + windowScroll.y;
                  } else if (prop === 'bottom') {
                    position[prop] = parseInt(position[prop], 10) - windowScroll.y;
                  } else if (prop === 'left') {
                    position[prop] = parseInt(position[prop], 10) + windowScroll.x;
                  } else if (prop === 'right') {
                    position[prop] = parseInt(position[prop], 10) - windowScroll.x;
                  }
                }
              }
            }

            return position;
          }
          /**
           * Open the menu surface.
           */

        }, {
          key: 'open',
          value: function open() {
            var _this2 = this;

            this.adapter_.saveFocus();

            if (!this.quickOpen_) {
              this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_OPEN);
            }

            this.animationRequestId_ = requestAnimationFrame(function () {
              _this2.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.OPEN);

              _this2.dimensions_ = _this2.adapter_.getInnerDimensions();

              _this2.autoPosition_();

              if (_this2.quickOpen_) {
                _this2.adapter_.notifyOpen();
              } else {
                _this2.openAnimationEndTimerId_ = setTimeout(function () {
                  _this2.openAnimationEndTimerId_ = 0;

                  _this2.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_OPEN);

                  _this2.adapter_.notifyOpen();
                }, __WEBPACK_IMPORTED_MODULE_2__constants__["d"
                /* numbers */
                ].TRANSITION_OPEN_DURATION);
              }
            });
            this.isOpen_ = true;
          }
          /**
           * Closes the menu surface.
           */

        }, {
          key: 'close',
          value: function close() {
            var _this3 = this;

            if (!this.quickOpen_) {
              this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_CLOSED);
            }

            requestAnimationFrame(function () {
              _this3.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.OPEN);

              if (_this3.quickOpen_) {
                _this3.adapter_.notifyClose();
              } else {
                _this3.closeAnimationEndTimerId_ = setTimeout(function () {
                  _this3.closeAnimationEndTimerId_ = 0;

                  _this3.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_CLOSED);

                  _this3.adapter_.notifyClose();
                }, __WEBPACK_IMPORTED_MODULE_2__constants__["d"
                /* numbers */
                ].TRANSITION_CLOSE_DURATION);
              }
            });
            this.isOpen_ = false;
            this.maybeRestoreFocus_();
          }
          /**
           * The last focused element when the menu surface was opened should regain focus, if the user is
           * focused on or within the menu surface when it is closed.
           * @private
           */

        }, {
          key: 'maybeRestoreFocus_',
          value: function maybeRestoreFocus_() {
            if (this.adapter_.isFocused() || this.adapter_.isElementInContainer(document.activeElement)) {
              this.adapter_.restoreFocus();
            }
          }
          /** @return {boolean} */

        }, {
          key: 'isOpen',
          value: function isOpen() {
            return this.isOpen_;
          }
          /**
           * isFinite that doesn't force conversion to number type.
           * Equivalent to Number.isFinite in ES2015, but is not included in IE11.
           * @param {number} num
           * @return {boolean}
           * @private
           */

        }, {
          key: 'typeCheckisFinite_',
          value: function typeCheckisFinite_(num) {
            return typeof num === 'number' && isFinite(num);
          }
        }]);

        return MDCMenuSurfaceFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /***/

    },
    /* 20 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "c", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "e", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "d", function () {
        return numbers;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return CornerBit;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return Corner;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        ANCHOR: 'mdc-menu-surface--anchor',
        ANIMATING_CLOSED: 'mdc-menu-surface--animating-closed',
        ANIMATING_OPEN: 'mdc-menu-surface--animating-open',
        FIXED: 'mdc-menu-surface--fixed',
        OPEN: 'mdc-menu-surface--open',
        ROOT: 'mdc-menu-surface'
      };
      /** @enum {string} */

      var strings = {
        CLOSED_EVENT: 'MDCMenuSurface:closed',
        OPENED_EVENT: 'MDCMenuSurface:opened',
        FOCUSABLE_ELEMENTS: 'button:not(:disabled), [href]:not([aria-disabled="true"]), input:not(:disabled), ' + 'select:not(:disabled), textarea:not(:disabled), [tabindex]:not([tabindex="-1"]):not([aria-disabled="true"])'
      };
      /** @enum {number} */

      var numbers = {
        // Total duration of menu-surface open animation.
        TRANSITION_OPEN_DURATION: 120,
        // Total duration of menu-surface close animation.
        TRANSITION_CLOSE_DURATION: 75,
        // Margin left to the edge of the viewport when menu-surface is at maximum possible height.
        MARGIN_TO_EDGE: 32,
        // Ratio of anchor width to menu-surface width for switching from corner positioning to center positioning.
        ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO: 0.67
      };
      /**
       * Enum for bits in the {@see Corner) bitmap.
       * @enum {number}
       */

      var CornerBit = {
        BOTTOM: 1,
        CENTER: 2,
        RIGHT: 4,
        FLIP_RTL: 8
      };
      /**
       * Enum for representing an element corner for positioning the menu-surface.
       *
       * The START constants map to LEFT if element directionality is left
       * to right and RIGHT if the directionality is right to left.
       * Likewise END maps to RIGHT or LEFT depending on the directionality.
       *
       * @enum {number}
       */

      var Corner = {
        TOP_LEFT: 0,
        TOP_RIGHT: CornerBit.RIGHT,
        BOTTOM_LEFT: CornerBit.BOTTOM,
        BOTTOM_RIGHT: CornerBit.BOTTOM | CornerBit.RIGHT,
        TOP_START: CornerBit.FLIP_RTL,
        TOP_END: CornerBit.FLIP_RTL | CornerBit.RIGHT,
        BOTTOM_START: CornerBit.BOTTOM | CornerBit.FLIP_RTL,
        BOTTOM_END: CornerBit.BOTTOM | CornerBit.RIGHT | CornerBit.FLIP_RTL
      };
      /***/
    },
    /* 21 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCNotchedOutline", function () {
        return MDCNotchedOutline;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(45);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(114);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__material_floating_label_index__ = __webpack_require__(9);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(46);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCNotchedOutlineFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCComponent<!MDCNotchedOutlineFoundation>}
       * @final
       */


      var MDCNotchedOutline = function (_MDCComponent) {
        _inherits(MDCNotchedOutline, _MDCComponent);

        _createClass(MDCNotchedOutline, null, [{
          key: 'attachTo',

          /**
           * @param {!Element} root
           * @return {!MDCNotchedOutline}
           */
          value: function attachTo(root) {
            return new MDCNotchedOutline(root);
          }
          /** @param {...?} args */

        }]);

        function MDCNotchedOutline() {
          var _ref;

          _classCallCheck(this, MDCNotchedOutline);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {Element} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCNotchedOutline.__proto__ || Object.getPrototypeOf(MDCNotchedOutline)).call.apply(_ref, [this].concat(args)));

          _this.notchElement_;
          return _this;
        }

        _createClass(MDCNotchedOutline, [{
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var label = this.root_.querySelector('.' + __WEBPACK_IMPORTED_MODULE_3__material_floating_label_index__["MDCFloatingLabelFoundation"].cssClasses.ROOT);
            this.notchElement_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["c"
            /* strings */
            ].NOTCH_ELEMENT_SELECTOR);

            if (label) {
              label.style.transitionDuration = '0s';
              this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
              /* cssClasses */
              ].OUTLINE_UPGRADED);
              requestAnimationFrame(function () {
                label.style.transitionDuration = '';
              });
            } else {
              this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
              /* cssClasses */
              ].NO_LABEL);
            }
          }
          /**
            * Updates classes and styles to open the notch to the specified width.
            * @param {number} notchWidth The notch width in the outline.
            */

        }, {
          key: 'notch',
          value: function notch(notchWidth) {
            this.foundation_.notch(notchWidth);
          }
          /**
           * Updates classes and styles to close the notch.
           */

        }, {
          key: 'closeNotch',
          value: function closeNotch() {
            this.foundation_.closeNotch();
          }
          /**
           * @return {!MDCNotchedOutlineFoundation}
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ](
            /** @type {!MDCNotchedOutlineAdapter} */
            _extends({
              addClass: function addClass(className) {
                return _this2.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this2.root_.classList.remove(className);
              },
              setNotchWidthProperty: function setNotchWidthProperty(width) {
                return _this2.notchElement_.style.setProperty('width', width + 'px');
              },
              removeNotchWidthProperty: function removeNotchWidthProperty() {
                return _this2.notchElement_.style.removeProperty('width');
              }
            }));
          }
        }]);

        return MDCNotchedOutline;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 22 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return MDCSelectIcon;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(48);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(121);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCComponent<!MDCSelectIconFoundation>}
       * @final
       */


      var MDCSelectIcon = function (_MDCComponent) {
        _inherits(MDCSelectIcon, _MDCComponent);

        function MDCSelectIcon() {
          _classCallCheck(this, MDCSelectIcon);

          return _possibleConstructorReturn(this, (MDCSelectIcon.__proto__ || Object.getPrototypeOf(MDCSelectIcon)).apply(this, arguments));
        }

        _createClass(MDCSelectIcon, [{
          key: 'getDefaultFoundation',

          /**
           * @return {!MDCSelectIconFoundation}
           */
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ](
            /** @type {!MDCSelectIconAdapter} */
            _extends({
              getAttr: function getAttr(attr) {
                return _this2.root_.getAttribute(attr);
              },
              setAttr: function setAttr(attr, value) {
                return _this2.root_.setAttribute(attr, value);
              },
              removeAttr: function removeAttr(attr) {
                return _this2.root_.removeAttribute(attr);
              },
              setContent: function setContent(content) {
                _this2.root_.textContent = content;
              },
              registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
                return _this2.root_.addEventListener(evtType, handler);
              },
              deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
                return _this2.root_.removeEventListener(evtType, handler);
              },
              notifyIconAction: function notifyIconAction() {
                return _this2.emit(__WEBPACK_IMPORTED_MODULE_2__foundation__["a"
                /* default */
                ].strings.ICON_EVENT, {}
                /* evtData */
                , true
                /* shouldBubble */
                );
              }
            }));
          }
        }, {
          key: 'foundation',

          /**
           * @return {!MDCSelectIconFoundation}
           */
          get: function get() {
            return this.foundation_;
          }
        }], [{
          key: 'attachTo',

          /**
           * @param {!Element} root
           * @return {!MDCSelectIcon}
           */
          value: function attachTo(root) {
            return new MDCSelectIcon(root);
          }
        }]);

        return MDCSelectIcon;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 23 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return MDCSelectHelperText;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(49);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(123);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCComponent<!MDCSelectHelperTextFoundation>}
       * @final
       */


      var MDCSelectHelperText = function (_MDCComponent) {
        _inherits(MDCSelectHelperText, _MDCComponent);

        function MDCSelectHelperText() {
          _classCallCheck(this, MDCSelectHelperText);

          return _possibleConstructorReturn(this, (MDCSelectHelperText.__proto__ || Object.getPrototypeOf(MDCSelectHelperText)).apply(this, arguments));
        }

        _createClass(MDCSelectHelperText, [{
          key: 'getDefaultFoundation',

          /**
           * @return {!MDCSelectHelperTextFoundation}
           */
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ](
            /** @type {!MDCSelectHelperTextAdapter} */
            _extends({
              addClass: function addClass(className) {
                return _this2.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this2.root_.classList.remove(className);
              },
              hasClass: function hasClass(className) {
                return _this2.root_.classList.contains(className);
              },
              setAttr: function setAttr(attr, value) {
                return _this2.root_.setAttribute(attr, value);
              },
              removeAttr: function removeAttr(attr) {
                return _this2.root_.removeAttribute(attr);
              },
              setContent: function setContent(content) {
                _this2.root_.textContent = content;
              }
            }));
          }
        }, {
          key: 'foundation',

          /**
           * @return {!MDCSelectHelperTextFoundation}
           */
          get: function get() {
            return this.foundation_;
          }
        }], [{
          key: 'attachTo',

          /**
           * @param {!Element} root
           * @return {!MDCSelectHelperText}
           */
          value: function attachTo(root) {
            return new MDCSelectHelperText(root);
          }
        }]);

        return MDCSelectHelperText;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 24 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "c", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return numbers;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var cssClasses = {
        OPENING: 'mdc-snackbar--opening',
        OPEN: 'mdc-snackbar--open',
        CLOSING: 'mdc-snackbar--closing'
      };
      var strings = {
        SURFACE_SELECTOR: '.mdc-snackbar__surface',
        LABEL_SELECTOR: '.mdc-snackbar__label',
        ACTION_SELECTOR: '.mdc-snackbar__action',
        DISMISS_SELECTOR: '.mdc-snackbar__dismiss',
        OPENING_EVENT: 'MDCSnackbar:opening',
        OPENED_EVENT: 'MDCSnackbar:opened',
        CLOSING_EVENT: 'MDCSnackbar:closing',
        CLOSED_EVENT: 'MDCSnackbar:closed',
        REASON_ACTION: 'action',
        REASON_DISMISS: 'dismiss',
        ARIA_LIVE_LABEL_TEXT_ATTR: 'data-mdc-snackbar-label-text'
      };
      var numbers = {
        MIN_AUTO_DISMISS_TIMEOUT_MS: 4000,
        MAX_AUTO_DISMISS_TIMEOUT_MS: 10000,
        DEFAULT_AUTO_DISMISS_TIMEOUT_MS: 5000,
        // These variables need to be kept in sync with the values in _variables.scss.
        SNACKBAR_ANIMATION_OPEN_TIME_MS: 150,
        SNACKBAR_ANIMATION_CLOSE_TIME_MS: 75,

        /**
         * Number of milliseconds to wait between temporarily clearing the label text
         * in the DOM and subsequently restoring it. This is necessary to force IE 11
         * to pick up the `aria-live` content change and announce it to the user.
         */
        ARIA_LIVE_DELAY_MS: 1000
      };
      /***/
    },
    /* 25 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(55);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(135);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCFoundation<!MDCTabIndicatorAdapter>}
       * @abstract
       */


      var MDCTabIndicatorFoundation = function (_MDCFoundation) {
        _inherits(MDCTabIndicatorFoundation, _MDCFoundation);

        _createClass(MDCTabIndicatorFoundation, null, [{
          key: 'cssClasses',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ];
          }
          /**
           * @see MDCTabIndicatorAdapter for typing information
           * @return {!MDCTabIndicatorAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCTabIndicatorAdapter} */
              {
                addClass: function addClass() {},
                removeClass: function removeClass() {},
                computeContentClientRect: function computeContentClientRect() {},
                setContentStyleProperty: function setContentStyleProperty() {}
              }
            );
          }
          /** @param {!MDCTabIndicatorAdapter} adapter */

        }]);

        function MDCTabIndicatorFoundation(adapter) {
          _classCallCheck(this, MDCTabIndicatorFoundation);

          return _possibleConstructorReturn(this, (MDCTabIndicatorFoundation.__proto__ || Object.getPrototypeOf(MDCTabIndicatorFoundation)).call(this, _extends(MDCTabIndicatorFoundation.defaultAdapter, adapter)));
        }
        /** @return {!ClientRect} */


        _createClass(MDCTabIndicatorFoundation, [{
          key: 'computeContentClientRect',
          value: function computeContentClientRect() {
            return this.adapter_.computeContentClientRect();
          }
          /**
           * Activates the indicator
           * @param {!ClientRect=} previousIndicatorClientRect
           * @abstract
           */

        }, {
          key: 'activate',
          value: function activate(previousIndicatorClientRect) {} // eslint-disable-line no-unused-vars

          /** @abstract */

        }, {
          key: 'deactivate',
          value: function deactivate() {}
        }]);

        return MDCTabIndicatorFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCTabIndicatorFoundation;
      /***/
    },
    /* 26 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(61);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(149);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}
       * @final
       */


      var MDCTextFieldHelperTextFoundation = function (_MDCFoundation) {
        _inherits(MDCTextFieldHelperTextFoundation, _MDCFoundation);

        _createClass(MDCTextFieldHelperTextFoundation, null, [{
          key: 'cssClasses',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ];
          }
          /**
           * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCTextFieldHelperTextAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCTextFieldHelperTextAdapter} */
              {
                addClass: function addClass() {},
                removeClass: function removeClass() {},
                hasClass: function hasClass() {},
                setAttr: function setAttr() {},
                removeAttr: function removeAttr() {},
                setContent: function setContent() {}
              }
            );
          }
          /**
           * @param {!MDCTextFieldHelperTextAdapter} adapter
           */

        }]);

        function MDCTextFieldHelperTextFoundation(adapter) {
          _classCallCheck(this, MDCTextFieldHelperTextFoundation);

          return _possibleConstructorReturn(this, (MDCTextFieldHelperTextFoundation.__proto__ || Object.getPrototypeOf(MDCTextFieldHelperTextFoundation)).call(this, _extends(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter)));
        }
        /**
         * Sets the content of the helper text field.
         * @param {string} content
         */


        _createClass(MDCTextFieldHelperTextFoundation, [{
          key: 'setContent',
          value: function setContent(content) {
            this.adapter_.setContent(content);
          }
          /** @param {boolean} isPersistent Sets the persistency of the helper text. */

        }, {
          key: 'setPersistent',
          value: function setPersistent(isPersistent) {
            if (isPersistent) {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].HELPER_TEXT_PERSISTENT);
            } else {
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].HELPER_TEXT_PERSISTENT);
            }
          }
          /**
           * @param {boolean} isValidation True to make the helper text act as an
           *   error validation message.
           */

        }, {
          key: 'setValidation',
          value: function setValidation(isValidation) {
            if (isValidation) {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].HELPER_TEXT_VALIDATION_MSG);
            } else {
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].HELPER_TEXT_VALIDATION_MSG);
            }
          }
          /** Makes the helper text visible to the screen reader. */

        }, {
          key: 'showToScreenReader',
          value: function showToScreenReader() {
            this.adapter_.removeAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_HIDDEN);
          }
          /**
           * Sets the validity of the helper text based on the input validity.
           * @param {boolean} inputIsValid
           */

        }, {
          key: 'setValidity',
          value: function setValidity(inputIsValid) {
            var helperTextIsPersistent = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].HELPER_TEXT_PERSISTENT);
            var helperTextIsValidationMsg = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].HELPER_TEXT_VALIDATION_MSG);
            var validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;

            if (validationMsgNeedsDisplay) {
              this.adapter_.setAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ROLE, 'alert');
            } else {
              this.adapter_.removeAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ROLE);
            }

            if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {
              this.hide_();
            }
          }
          /**
           * Hides the help text from screen readers.
           * @private
           */

        }, {
          key: 'hide_',
          value: function hide_() {
            this.adapter_.setAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_HIDDEN, 'true');
          }
        }]);

        return MDCTextFieldHelperTextFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCTextFieldHelperTextFoundation;
      /***/
    },
    /* 27 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(62);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(150);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}
       * @final
       */


      var MDCTextFieldIconFoundation = function (_MDCFoundation) {
        _inherits(MDCTextFieldIconFoundation, _MDCFoundation);

        _createClass(MDCTextFieldIconFoundation, null, [{
          key: 'strings',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* strings */
            ];
          }
          /**
           * {@see MDCTextFieldIconAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCTextFieldIconAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCTextFieldIconAdapter} */
              {
                getAttr: function getAttr() {},
                setAttr: function setAttr() {},
                removeAttr: function removeAttr() {},
                setContent: function setContent() {},
                registerInteractionHandler: function registerInteractionHandler() {},
                deregisterInteractionHandler: function deregisterInteractionHandler() {},
                notifyIconAction: function notifyIconAction() {}
              }
            );
          }
          /**
           * @param {!MDCTextFieldIconAdapter} adapter
           */

        }]);

        function MDCTextFieldIconFoundation(adapter) {
          _classCallCheck(this, MDCTextFieldIconFoundation);
          /** @private {string?} */


          var _this = _possibleConstructorReturn(this, (MDCTextFieldIconFoundation.__proto__ || Object.getPrototypeOf(MDCTextFieldIconFoundation)).call(this, _extends(MDCTextFieldIconFoundation.defaultAdapter, adapter)));

          _this.savedTabIndex_ = null;
          /** @private {function(!Event): undefined} */

          _this.interactionHandler_ = function (evt) {
            return _this.handleInteraction(evt);
          };

          return _this;
        }

        _createClass(MDCTextFieldIconFoundation, [{
          key: 'init',
          value: function init() {
            var _this2 = this;

            this.savedTabIndex_ = this.adapter_.getAttr('tabindex');
            ['click', 'keydown'].forEach(function (evtType) {
              _this2.adapter_.registerInteractionHandler(evtType, _this2.interactionHandler_);
            });
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            var _this3 = this;

            ['click', 'keydown'].forEach(function (evtType) {
              _this3.adapter_.deregisterInteractionHandler(evtType, _this3.interactionHandler_);
            });
          }
          /** @param {boolean} disabled */

        }, {
          key: 'setDisabled',
          value: function setDisabled(disabled) {
            if (!this.savedTabIndex_) {
              return;
            }

            if (disabled) {
              this.adapter_.setAttr('tabindex', '-1');
              this.adapter_.removeAttr('role');
            } else {
              this.adapter_.setAttr('tabindex', this.savedTabIndex_);
              this.adapter_.setAttr('role', __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* strings */
              ].ICON_ROLE);
            }
          }
          /** @param {string} label */

        }, {
          key: 'setAriaLabel',
          value: function setAriaLabel(label) {
            this.adapter_.setAttr('aria-label', label);
          }
          /** @param {string} content */

        }, {
          key: 'setContent',
          value: function setContent(content) {
            this.adapter_.setContent(content);
          }
          /**
           * Handles an interaction event
           * @param {!Event} evt
           */

        }, {
          key: 'handleInteraction',
          value: function handleInteraction(evt) {
            if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {
              this.adapter_.notifyIconAction();
            }
          }
        }]);

        return MDCTextFieldIconFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCTextFieldIconFoundation;
      /***/
    },
    /* 28 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Ripple. Provides an interface for managing
       * - classes
       * - dom
       * - CSS variables
       * - position
       * - dimensions
       * - scroll position
       * - event handlers
       * - unbounded, active and disabled states
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCRippleAdapter = function () {
        function MDCRippleAdapter() {
          _classCallCheck(this, MDCRippleAdapter);
        }

        _createClass(MDCRippleAdapter, [{
          key: "browserSupportsCssVars",

          /** @return {boolean} */
          value: function browserSupportsCssVars() {}
          /** @return {boolean} */

        }, {
          key: "isUnbounded",
          value: function isUnbounded() {}
          /** @return {boolean} */

        }, {
          key: "isSurfaceActive",
          value: function isSurfaceActive() {}
          /** @return {boolean} */

        }, {
          key: "isSurfaceDisabled",
          value: function isSurfaceDisabled() {}
          /** @param {string} className */

        }, {
          key: "addClass",
          value: function addClass(className) {}
          /** @param {string} className */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /** @param {!EventTarget} target */

        }, {
          key: "containsEventTarget",
          value: function containsEventTarget(target) {}
          /**
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: "registerInteractionHandler",
          value: function registerInteractionHandler(evtType, handler) {}
          /**
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: "deregisterInteractionHandler",
          value: function deregisterInteractionHandler(evtType, handler) {}
          /**
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: "registerDocumentInteractionHandler",
          value: function registerDocumentInteractionHandler(evtType, handler) {}
          /**
           * @param {string} evtType
           * @param {!Function} handler
           */

        }, {
          key: "deregisterDocumentInteractionHandler",
          value: function deregisterDocumentInteractionHandler(evtType, handler) {}
          /**
           * @param {!Function} handler
           */

        }, {
          key: "registerResizeHandler",
          value: function registerResizeHandler(handler) {}
          /**
           * @param {!Function} handler
           */

        }, {
          key: "deregisterResizeHandler",
          value: function deregisterResizeHandler(handler) {}
          /**
           * @param {string} varName
           * @param {?number|string} value
           */

        }, {
          key: "updateCssVariable",
          value: function updateCssVariable(varName, value) {}
          /** @return {!ClientRect} */

        }, {
          key: "computeBoundingRect",
          value: function computeBoundingRect() {}
          /** @return {{x: number, y: number}} */

        }, {
          key: "getWindowPageOffset",
          value: function getWindowPageOffset() {}
        }]);

        return MDCRippleAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCRippleAdapter;
      /***/
    },
    /* 29 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return MDCChip;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__ = __webpack_require__(2);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__adapter__ = __webpack_require__(30);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__foundation__ = __webpack_require__(31);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(32);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return __WEBPACK_IMPORTED_MODULE_3__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var INTERACTION_EVENTS = ['click', 'keydown'];
      /**
       * @extends {MDCComponent<!MDCChipFoundation>}
       * @final
       */

      var MDCChip = function (_MDCComponent) {
        _inherits(MDCChip, _MDCComponent);
        /**
         * @param {...?} args
         */


        function MDCChip() {
          var _ref;

          _classCallCheck(this, MDCChip);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @type {string} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCChip.__proto__ || Object.getPrototypeOf(MDCChip)).call.apply(_ref, [this].concat(args)));

          _this.id;
          /** @private {?Element} */

          _this.leadingIcon_;
          /** @private {?Element} */

          _this.trailingIcon_;
          /** @private {!MDCRipple} */

          _this.ripple_;
          /** @private {?function(?Event): undefined} */

          _this.handleInteraction_;
          /** @private {?function(!Event): undefined} */

          _this.handleTransitionEnd_;
          /** @private {function(!Event): undefined} */

          _this.handleTrailingIconInteraction_;
          return _this;
        }
        /**
         * @param {!Element} root
         * @return {!MDCChip}
         */


        _createClass(MDCChip, [{
          key: 'initialize',
          value: function initialize() {
            var _this2 = this;

            var rippleFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (el, foundation) {
              return new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__["MDCRipple"](el, foundation);
            };
            this.id = this.root_.id;
            this.leadingIcon_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].LEADING_ICON_SELECTOR);
            this.trailingIcon_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].TRAILING_ICON_SELECTOR); // Adjust ripple size for chips with animated growing width. This applies when filter chips without
            // a leading icon are selected, and a leading checkmark will cause the chip width to expand.

            var checkmarkEl = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* strings */
            ].CHECKMARK_SELECTOR);

            if (checkmarkEl && !this.leadingIcon_) {
              var adapter = _extends(__WEBPACK_IMPORTED_MODULE_1__material_ripple_index__["MDCRipple"].createAdapter(this), {
                computeBoundingRect: function computeBoundingRect() {
                  var height = _this2.root_.getBoundingClientRect().height; // The checkmark's width is initially set to 0, so use the checkmark's height as a proxy since the
                  // checkmark should always be square.


                  var width = _this2.root_.getBoundingClientRect().width + checkmarkEl.getBoundingClientRect().height;
                  return {
                    height: height,
                    width: width
                  };
                }
              });

              this.ripple_ = rippleFactory(this.root_, new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__["MDCRippleFoundation"](adapter));
            } else {
              this.ripple_ = rippleFactory(this.root_);
            }
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var _this3 = this;

            this.handleInteraction_ = function (evt) {
              return _this3.foundation_.handleInteraction(evt);
            };

            this.handleTransitionEnd_ = function (evt) {
              return _this3.foundation_.handleTransitionEnd(evt);
            };

            this.handleTrailingIconInteraction_ = function (evt) {
              return _this3.foundation_.handleTrailingIconInteraction(evt);
            };

            INTERACTION_EVENTS.forEach(function (evtType) {
              _this3.root_.addEventListener(evtType, _this3.handleInteraction_);
            });
            this.root_.addEventListener('transitionend', this.handleTransitionEnd_);

            if (this.trailingIcon_) {
              INTERACTION_EVENTS.forEach(function (evtType) {
                _this3.trailingIcon_.addEventListener(evtType, _this3.handleTrailingIconInteraction_);
              });
            }
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            var _this4 = this;

            this.ripple_.destroy();
            INTERACTION_EVENTS.forEach(function (evtType) {
              _this4.root_.removeEventListener(evtType, _this4.handleInteraction_);
            });
            this.root_.removeEventListener('transitionend', this.handleTransitionEnd_);

            if (this.trailingIcon_) {
              INTERACTION_EVENTS.forEach(function (evtType) {
                _this4.trailingIcon_.removeEventListener(evtType, _this4.handleTrailingIconInteraction_);
              });
            }

            _get(MDCChip.prototype.__proto__ || Object.getPrototypeOf(MDCChip.prototype), 'destroy', this).call(this);
          }
          /**
           * Returns whether the chip is selected.
           * @return {boolean}
           */

        }, {
          key: 'beginExit',

          /**
           * Begins the exit animation which leads to removal of the chip.
           */
          value: function beginExit() {
            this.foundation_.beginExit();
          }
          /**
           * @return {!MDCChipFoundation}
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this5 = this;

            return new __WEBPACK_IMPORTED_MODULE_3__foundation__["a"
            /* MDCChipFoundation */
            ](
            /** @type {!MDCChipAdapter} */
            _extends({
              addClass: function addClass(className) {
                return _this5.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this5.root_.classList.remove(className);
              },
              hasClass: function hasClass(className) {
                return _this5.root_.classList.contains(className);
              },
              addClassToLeadingIcon: function addClassToLeadingIcon(className) {
                if (_this5.leadingIcon_) {
                  _this5.leadingIcon_.classList.add(className);
                }
              },
              removeClassFromLeadingIcon: function removeClassFromLeadingIcon(className) {
                if (_this5.leadingIcon_) {
                  _this5.leadingIcon_.classList.remove(className);
                }
              },
              eventTargetHasClass: function eventTargetHasClass(target, className) {
                return target.classList.contains(className);
              },
              notifyInteraction: function notifyInteraction() {
                return _this5.emit(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].INTERACTION_EVENT, {
                  chipId: _this5.id
                }, true
                /* shouldBubble */
                );
              },
              notifySelection: function notifySelection(selected) {
                return _this5.emit(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].SELECTION_EVENT, {
                  chipId: _this5.id,
                  selected: selected
                }, true
                /* shouldBubble */
                );
              },
              notifyTrailingIconInteraction: function notifyTrailingIconInteraction() {
                return _this5.emit(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].TRAILING_ICON_INTERACTION_EVENT, {
                  chipId: _this5.id
                }, true
                /* shouldBubble */
                );
              },
              notifyRemoval: function notifyRemoval() {
                return _this5.emit(__WEBPACK_IMPORTED_MODULE_4__constants__["b"
                /* strings */
                ].REMOVAL_EVENT, {
                  chipId: _this5.id,
                  root: _this5.root_
                }, true
                /* shouldBubble */
                );
              },
              getComputedStyleValue: function getComputedStyleValue(propertyName) {
                return window.getComputedStyle(_this5.root_).getPropertyValue(propertyName);
              },
              setStyleProperty: function setStyleProperty(propertyName, value) {
                return _this5.root_.style.setProperty(propertyName, value);
              }
            }));
          }
          /** @return {!MDCRipple} */

        }, {
          key: 'selected',
          get: function get() {
            return this.foundation_.isSelected();
          }
          /**
           * Sets selected state on the chip.
           * @param {boolean} selected
           */
          ,
          set: function set(selected) {
            this.foundation_.setSelected(selected);
          }
          /**
           * Returns whether a trailing icon click should trigger exit/removal of the chip.
           * @return {boolean}
           */

        }, {
          key: 'shouldRemoveOnTrailingIconClick',
          get: function get() {
            return this.foundation_.getShouldRemoveOnTrailingIconClick();
          }
          /**
           * Sets whether a trailing icon click should trigger exit/removal of the chip.
           * @param {boolean} shouldRemove
           */
          ,
          set: function set(shouldRemove) {
            this.foundation_.setShouldRemoveOnTrailingIconClick(shouldRemove);
          }
        }, {
          key: 'ripple',
          get: function get() {
            return this.ripple_;
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCChip(root);
          }
        }]);

        return MDCChip;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 30 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Chip.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the Chip into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCChipAdapter = function () {
        function MDCChipAdapter() {
          _classCallCheck(this, MDCChipAdapter);
        }

        _createClass(MDCChipAdapter, [{
          key: "addClass",

          /**
           * Adds a class to the root element.
           * @param {string} className
           */
          value: function addClass(className) {}
          /**
           * Removes a class from the root element.
           * @param {string} className
           */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * Returns true if the root element contains the given class.
           * @param {string} className
           * @return {boolean}
           */

        }, {
          key: "hasClass",
          value: function hasClass(className) {}
          /**
           * Adds a class to the leading icon element.
           * @param {string} className
           */

        }, {
          key: "addClassToLeadingIcon",
          value: function addClassToLeadingIcon(className) {}
          /**
           * Removes a class from the leading icon element.
           * @param {string} className
           */

        }, {
          key: "removeClassFromLeadingIcon",
          value: function removeClassFromLeadingIcon(className) {}
          /**
           * Returns true if target has className, false otherwise.
           * @param {!EventTarget} target
           * @param {string} className
           * @return {boolean}
           */

        }, {
          key: "eventTargetHasClass",
          value: function eventTargetHasClass(target, className) {}
          /**
           * Emits a custom "MDCChip:interaction" event denoting the chip has been
           * interacted with (typically on click or keydown).
           */

        }, {
          key: "notifyInteraction",
          value: function notifyInteraction() {}
          /**
           * Emits a custom "MDCChip:selection" event denoting the chip has been selected or deselected.
           * @param {boolean} selected
           */

        }, {
          key: "notifySelection",
          value: function notifySelection(selected) {}
          /**
           * Emits a custom "MDCChip:trailingIconInteraction" event denoting the trailing icon has been
           * interacted with (typically on click or keydown).
           */

        }, {
          key: "notifyTrailingIconInteraction",
          value: function notifyTrailingIconInteraction() {}
          /**
           * Emits a custom event "MDCChip:removal" denoting the chip will be removed.
           */

        }, {
          key: "notifyRemoval",
          value: function notifyRemoval() {}
          /**
           * Returns the computed property value of the given style property on the root element.
           * @param {string} propertyName
           * @return {string}
           */

        }, {
          key: "getComputedStyleValue",
          value: function getComputedStyleValue(propertyName) {}
          /**
           * Sets the property value of the given style property on the root element.
           * @param {string} propertyName
           * @param {string} value
           */

        }, {
          key: "setStyleProperty",
          value: function setStyleProperty(propertyName, value) {}
        }]);

        return MDCChipAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCChipAdapter;
      /***/
    },
    /* 31 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return MDCChipFoundation;
      });
      /* unused harmony export MDCChipInteractionEventType */

      /* unused harmony export MDCChipSelectionEventType */

      /* unused harmony export MDCChipRemovalEventType */

      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(30);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(32);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCFoundation<!MDCChipAdapter>}
       * @final
       */


      var MDCChipFoundation = function (_MDCFoundation) {
        _inherits(MDCChipFoundation, _MDCFoundation);

        _createClass(MDCChipFoundation, null, [{
          key: 'strings',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /**
           * {@see MDCChipAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCChipAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCChipAdapter} */
              {
                addClass: function addClass() {},
                removeClass: function removeClass() {},
                hasClass: function hasClass() {},
                addClassToLeadingIcon: function addClassToLeadingIcon() {},
                removeClassFromLeadingIcon: function removeClassFromLeadingIcon() {},
                eventTargetHasClass: function eventTargetHasClass() {},
                notifyInteraction: function notifyInteraction() {},
                notifySelection: function notifySelection() {},
                notifyTrailingIconInteraction: function notifyTrailingIconInteraction() {},
                notifyRemoval: function notifyRemoval() {},
                getComputedStyleValue: function getComputedStyleValue() {},
                setStyleProperty: function setStyleProperty() {}
              }
            );
          }
          /**
           * @param {!MDCChipAdapter} adapter
           */

        }]);

        function MDCChipFoundation(adapter) {
          _classCallCheck(this, MDCChipFoundation);
          /**
           * Whether a trailing icon click should immediately trigger exit/removal of the chip.
           * @private {boolean}
           * */


          var _this = _possibleConstructorReturn(this, (MDCChipFoundation.__proto__ || Object.getPrototypeOf(MDCChipFoundation)).call(this, _extends(MDCChipFoundation.defaultAdapter, adapter)));

          _this.shouldRemoveOnTrailingIconClick_ = true;
          return _this;
        }
        /**
         * @return {boolean}
         */


        _createClass(MDCChipFoundation, [{
          key: 'isSelected',
          value: function isSelected() {
            return this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].SELECTED);
          }
          /**
           * @param {boolean} selected
           */

        }, {
          key: 'setSelected',
          value: function setSelected(selected) {
            if (selected) {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].SELECTED);
            } else {
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].SELECTED);
            }

            this.adapter_.notifySelection(selected);
          }
          /**
           * @return {boolean}
           */

        }, {
          key: 'getShouldRemoveOnTrailingIconClick',
          value: function getShouldRemoveOnTrailingIconClick() {
            return this.shouldRemoveOnTrailingIconClick_;
          }
          /**
           * @param {boolean} shouldRemove
           */

        }, {
          key: 'setShouldRemoveOnTrailingIconClick',
          value: function setShouldRemoveOnTrailingIconClick(shouldRemove) {
            this.shouldRemoveOnTrailingIconClick_ = shouldRemove;
          }
          /**
           * Begins the exit animation which leads to removal of the chip.
           */

        }, {
          key: 'beginExit',
          value: function beginExit() {
            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].CHIP_EXIT);
          }
          /**
           * Handles an interaction event on the root element.
           * @param {!Event} evt
           */

        }, {
          key: 'handleInteraction',
          value: function handleInteraction(evt) {
            if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {
              this.adapter_.notifyInteraction();
            }
          }
          /**
           * Handles a transition end event on the root element.
           * @param {!Event} evt
           */

        }, {
          key: 'handleTransitionEnd',
          value: function handleTransitionEnd(evt) {
            var _this2 = this; // Handle transition end event on the chip when it is about to be removed.


            if (this.adapter_.eventTargetHasClass(
            /** @type {!EventTarget} */
            evt.target, __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].CHIP_EXIT)) {
              if (evt.propertyName === 'width') {
                this.adapter_.notifyRemoval();
              } else if (evt.propertyName === 'opacity') {
                // See: https://css-tricks.com/using-css-transitions-auto-dimensions/#article-header-id-5
                var chipWidth = this.adapter_.getComputedStyleValue('width'); // On the next frame (once we get the computed width), explicitly set the chip's width
                // to its current pixel width, so we aren't transitioning out of 'auto'.

                requestAnimationFrame(function () {
                  _this2.adapter_.setStyleProperty('width', chipWidth); // To mitigate jitter, start transitioning padding and margin before width.


                  _this2.adapter_.setStyleProperty('padding', '0');

                  _this2.adapter_.setStyleProperty('margin', '0'); // On the next frame (once width is explicitly set), transition width to 0.


                  requestAnimationFrame(function () {
                    _this2.adapter_.setStyleProperty('width', '0');
                  });
                });
              }

              return;
            } // Handle a transition end event on the leading icon or checkmark, since the transition end event bubbles.


            if (evt.propertyName !== 'opacity') {
              return;
            }

            if (this.adapter_.eventTargetHasClass(
            /** @type {!EventTarget} */
            evt.target, __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].LEADING_ICON) && this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].SELECTED)) {
              this.adapter_.addClassToLeadingIcon(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].HIDDEN_LEADING_ICON);
            } else if (this.adapter_.eventTargetHasClass(
            /** @type {!EventTarget} */
            evt.target, __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].CHECKMARK) && !this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].SELECTED)) {
              this.adapter_.removeClassFromLeadingIcon(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].HIDDEN_LEADING_ICON);
            }
          }
          /**
           * Handles an interaction event on the trailing icon element. This is used to
           * prevent the ripple from activating on interaction with the trailing icon.
           * @param {!Event} evt
           */

        }, {
          key: 'handleTrailingIconInteraction',
          value: function handleTrailingIconInteraction(evt) {
            evt.stopPropagation();

            if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {
              this.adapter_.notifyTrailingIconInteraction();

              if (this.shouldRemoveOnTrailingIconClick_) {
                this.beginExit();
              }
            }
          }
        }]);

        return MDCChipFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /**
       * @typedef {{
       *   detail: {
       *     chipId: string,
       *   },
       *   bubbles: boolean,
       * }}
       */


      var MDCChipInteractionEventType = void 0;
      /**
       * @typedef {{
       *   detail: {
       *     chipId: string,
       *     selected: boolean,
       *   },
       *   bubbles: boolean,
       * }}
       */

      var MDCChipSelectionEventType = void 0;
      /**
       * @typedef {{
       *   detail: {
       *     chipId: string,
       *     root: Element,
       *   },
       *   bubbles: boolean,
       * }}
       */

      var MDCChipRemovalEventType = void 0;
      /***/
    },
    /* 32 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var strings = {
        ENTRY_ANIMATION_NAME: 'mdc-chip-entry',
        INTERACTION_EVENT: 'MDCChip:interaction',
        SELECTION_EVENT: 'MDCChip:selection',
        TRAILING_ICON_INTERACTION_EVENT: 'MDCChip:trailingIconInteraction',
        REMOVAL_EVENT: 'MDCChip:removal',
        CHECKMARK_SELECTOR: '.mdc-chip__checkmark',
        LEADING_ICON_SELECTOR: '.mdc-chip__icon--leading',
        TRAILING_ICON_SELECTOR: '.mdc-chip__icon--trailing'
      };
      /** @enum {string} */

      var cssClasses = {
        CHECKMARK: 'mdc-chip__checkmark',
        CHIP_EXIT: 'mdc-chip--exit',
        HIDDEN_LEADING_ICON: 'mdc-chip__icon--leading-hidden',
        LEADING_ICON: 'mdc-chip__icon--leading',
        TRAILING_ICON: 'mdc-chip__icon--trailing',
        SELECTED: 'mdc-chip--selected'
      };
      /***/
    },
    /* 33 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Chip Set.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the Chip Set into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCChipSetAdapter = function () {
        function MDCChipSetAdapter() {
          _classCallCheck(this, MDCChipSetAdapter);
        }

        _createClass(MDCChipSetAdapter, [{
          key: "hasClass",

          /**
           * Returns true if the root element contains the given class name.
           * @param {string} className
           * @return {boolean}
           */
          value: function hasClass(className) {}
          /**
           * Removes the chip with the given id from the chip set.
           * @param {string} chipId
           */

        }, {
          key: "removeChip",
          value: function removeChip(chipId) {}
          /**
           * Sets the selected state of the chip with the given id.
           * @param {string} chipId
           * @param {boolean} selected
           */

        }, {
          key: "setSelected",
          value: function setSelected(chipId, selected) {}
        }]);

        return MDCChipSetAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCChipSetAdapter;
      /***/
    },
    /* 34 */

    /***/
    function (module, exports, __webpack_require__) {
      var tabbable = __webpack_require__(81);

      var xtend = __webpack_require__(82);

      var activeFocusTraps = function () {
        var trapQueue = [];
        return {
          activateTrap: function activateTrap(trap) {
            if (trapQueue.length > 0) {
              var activeTrap = trapQueue[trapQueue.length - 1];

              if (activeTrap !== trap) {
                activeTrap.pause();
              }
            }

            var trapIndex = trapQueue.indexOf(trap);

            if (trapIndex === -1) {
              trapQueue.push(trap);
            } else {
              // move this existing trap to the front of the queue
              trapQueue.splice(trapIndex, 1);
              trapQueue.push(trap);
            }
          },
          deactivateTrap: function deactivateTrap(trap) {
            var trapIndex = trapQueue.indexOf(trap);

            if (trapIndex !== -1) {
              trapQueue.splice(trapIndex, 1);
            }

            if (trapQueue.length > 0) {
              trapQueue[trapQueue.length - 1].unpause();
            }
          }
        };
      }();

      function focusTrap(element, userOptions) {
        var doc = document;
        var container = typeof element === 'string' ? doc.querySelector(element) : element;
        var config = xtend({
          returnFocusOnDeactivate: true,
          escapeDeactivates: true
        }, userOptions);
        var state = {
          firstTabbableNode: null,
          lastTabbableNode: null,
          nodeFocusedBeforeActivation: null,
          mostRecentlyFocusedNode: null,
          active: false,
          paused: false
        };
        var trap = {
          activate: activate,
          deactivate: deactivate,
          pause: pause,
          unpause: unpause
        };
        return trap;

        function activate(activateOptions) {
          if (state.active) return;
          updateTabbableNodes();
          state.active = true;
          state.paused = false;
          state.nodeFocusedBeforeActivation = doc.activeElement;
          var onActivate = activateOptions && activateOptions.onActivate ? activateOptions.onActivate : config.onActivate;

          if (onActivate) {
            onActivate();
          }

          addListeners();
          return trap;
        }

        function deactivate(deactivateOptions) {
          if (!state.active) return;
          removeListeners();
          state.active = false;
          state.paused = false;
          activeFocusTraps.deactivateTrap(trap);
          var onDeactivate = deactivateOptions && deactivateOptions.onDeactivate !== undefined ? deactivateOptions.onDeactivate : config.onDeactivate;

          if (onDeactivate) {
            onDeactivate();
          }

          var returnFocus = deactivateOptions && deactivateOptions.returnFocus !== undefined ? deactivateOptions.returnFocus : config.returnFocusOnDeactivate;

          if (returnFocus) {
            delay(function () {
              tryFocus(state.nodeFocusedBeforeActivation);
            });
          }

          return trap;
        }

        function pause() {
          if (state.paused || !state.active) return;
          state.paused = true;
          removeListeners();
        }

        function unpause() {
          if (!state.paused || !state.active) return;
          state.paused = false;
          addListeners();
        }

        function addListeners() {
          if (!state.active) return; // There can be only one listening focus trap at a time

          activeFocusTraps.activateTrap(trap);
          updateTabbableNodes(); // Delay ensures that the focused element doesn't capture the event
          // that caused the focus trap activation.

          delay(function () {
            tryFocus(getInitialFocusNode());
          });
          doc.addEventListener('focusin', checkFocusIn, true);
          doc.addEventListener('mousedown', checkPointerDown, true);
          doc.addEventListener('touchstart', checkPointerDown, true);
          doc.addEventListener('click', checkClick, true);
          doc.addEventListener('keydown', checkKey, true);
          return trap;
        }

        function removeListeners() {
          if (!state.active) return;
          doc.removeEventListener('focusin', checkFocusIn, true);
          doc.removeEventListener('mousedown', checkPointerDown, true);
          doc.removeEventListener('touchstart', checkPointerDown, true);
          doc.removeEventListener('click', checkClick, true);
          doc.removeEventListener('keydown', checkKey, true);
          return trap;
        }

        function getNodeForOption(optionName) {
          var optionValue = config[optionName];
          var node = optionValue;

          if (!optionValue) {
            return null;
          }

          if (typeof optionValue === 'string') {
            node = doc.querySelector(optionValue);

            if (!node) {
              throw new Error('`' + optionName + '` refers to no known node');
            }
          }

          if (typeof optionValue === 'function') {
            node = optionValue();

            if (!node) {
              throw new Error('`' + optionName + '` did not return a node');
            }
          }

          return node;
        }

        function getInitialFocusNode() {
          var node;

          if (getNodeForOption('initialFocus') !== null) {
            node = getNodeForOption('initialFocus');
          } else if (container.contains(doc.activeElement)) {
            node = doc.activeElement;
          } else {
            node = state.firstTabbableNode || getNodeForOption('fallbackFocus');
          }

          if (!node) {
            throw new Error("You can't have a focus-trap without at least one focusable element");
          }

          return node;
        } // This needs to be done on mousedown and touchstart instead of click
        // so that it precedes the focus event.


        function checkPointerDown(e) {
          if (container.contains(e.target)) return;

          if (config.clickOutsideDeactivates) {
            deactivate({
              returnFocus: !tabbable.isFocusable(e.target)
            });
          } else {
            e.preventDefault();
          }
        } // In case focus escapes the trap for some strange reason, pull it back in.


        function checkFocusIn(e) {
          // In Firefox when you Tab out of an iframe the Document is briefly focused.
          if (container.contains(e.target) || e.target instanceof Document) {
            return;
          }

          e.stopImmediatePropagation();
          tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());
        }

        function checkKey(e) {
          if (config.escapeDeactivates !== false && isEscapeEvent(e)) {
            e.preventDefault();
            deactivate();
            return;
          }

          if (isTabEvent(e)) {
            checkTab(e);
            return;
          }
        } // Hijack Tab events on the first and last focusable nodes of the trap,
        // in order to prevent focus from escaping. If it escapes for even a
        // moment it can end up scrolling the page and causing confusion so we
        // kind of need to capture the action at the keydown phase.


        function checkTab(e) {
          updateTabbableNodes();

          if (e.shiftKey && e.target === state.firstTabbableNode) {
            e.preventDefault();
            tryFocus(state.lastTabbableNode);
            return;
          }

          if (!e.shiftKey && e.target === state.lastTabbableNode) {
            e.preventDefault();
            tryFocus(state.firstTabbableNode);
            return;
          }
        }

        function checkClick(e) {
          if (config.clickOutsideDeactivates) return;
          if (container.contains(e.target)) return;
          e.preventDefault();
          e.stopImmediatePropagation();
        }

        function updateTabbableNodes() {
          var tabbableNodes = tabbable(container);
          state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();
          state.lastTabbableNode = tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();
        }

        function tryFocus(node) {
          if (node === doc.activeElement) return;

          if (!node || !node.focus) {
            tryFocus(getInitialFocusNode());
            return;
          }

          node.focus();
          state.mostRecentlyFocusedNode = node;

          if (isSelectableInput(node)) {
            node.select();
          }
        }
      }

      function isSelectableInput(node) {
        return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';
      }

      function isEscapeEvent(e) {
        return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;
      }

      function isTabEvent(e) {
        return e.key === 'Tab' || e.keyCode === 9;
      }

      function delay(fn) {
        return setTimeout(fn, 0);
      }

      module.exports = focusTrap;
      /***/
    },
    /* 35 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__adapter__ = __webpack_require__(14);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(36);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCFoundation<!MDCDrawerAdapter>}
       */


      var MDCDismissibleDrawerFoundation = function (_MDCFoundation) {
        _inherits(MDCDismissibleDrawerFoundation, _MDCFoundation);

        _createClass(MDCDismissibleDrawerFoundation, null, [{
          key: 'strings',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCDrawerAdapter} */
              {
                addClass: function addClass()
                /* className: string */
                {},
                removeClass: function removeClass()
                /* className: string */
                {},
                hasClass: function hasClass()
                /* className: string */
                {},
                elementHasClass: function elementHasClass()
                /* element: !Element, className: string */
                {},
                notifyClose: function notifyClose() {},
                notifyOpen: function notifyOpen() {},
                saveFocus: function saveFocus() {},
                restoreFocus: function restoreFocus() {},
                focusActiveNavigationItem: function focusActiveNavigationItem() {},
                trapFocus: function trapFocus() {},
                releaseFocus: function releaseFocus() {}
              }
            );
          }
        }]);

        function MDCDismissibleDrawerFoundation(adapter) {
          _classCallCheck(this, MDCDismissibleDrawerFoundation);
          /** @private {number} */


          var _this = _possibleConstructorReturn(this, (MDCDismissibleDrawerFoundation.__proto__ || Object.getPrototypeOf(MDCDismissibleDrawerFoundation)).call(this, _extends(MDCDismissibleDrawerFoundation.defaultAdapter, adapter)));

          _this.animationFrame_ = 0;
          /** @private {number} */

          _this.animationTimer_ = 0;
          return _this;
        }

        _createClass(MDCDismissibleDrawerFoundation, [{
          key: 'destroy',
          value: function destroy() {
            if (this.animationFrame_) {
              cancelAnimationFrame(this.animationFrame_);
            }

            if (this.animationTimer_) {
              clearTimeout(this.animationTimer_);
            }
          }
          /**
           * Function to open the drawer.
           */

        }, {
          key: 'open',
          value: function open() {
            var _this2 = this;

            if (this.isOpen() || this.isOpening() || this.isClosing()) {
              return;
            }

            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].OPEN);
            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].ANIMATE); // Wait a frame once display is no longer "none", to establish basis for animation

            this.runNextAnimationFrame_(function () {
              _this2.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].OPENING);
            });
            this.adapter_.saveFocus();
          }
          /**
           * Function to close the drawer.
           */

        }, {
          key: 'close',
          value: function close() {
            if (!this.isOpen() || this.isOpening() || this.isClosing()) {
              return;
            }

            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].CLOSING);
          }
          /**
           * Extension point for when drawer finishes open animation.
           * @protected
           */

        }, {
          key: 'opened',
          value: function opened() {}
          /**
           * Extension point for when drawer finishes close animation.
           * @protected
           */

        }, {
          key: 'closed',
          value: function closed() {}
          /**
           * Returns true if drawer is in open state.
           * @return {boolean}
           */

        }, {
          key: 'isOpen',
          value: function isOpen() {
            return this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].OPEN);
          }
          /**
           * Returns true if drawer is animating open.
           * @return {boolean}
           */

        }, {
          key: 'isOpening',
          value: function isOpening() {
            return this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].OPENING) || this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].ANIMATE);
          }
          /**
           * Returns true if drawer is animating closed.
           * @return {boolean}
           */

        }, {
          key: 'isClosing',
          value: function isClosing() {
            return this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].CLOSING);
          }
          /**
           * Keydown handler to close drawer when key is escape.
           * @param evt
           */

        }, {
          key: 'handleKeydown',
          value: function handleKeydown(evt) {
            var keyCode = evt.keyCode,
                key = evt.key;
            var isEscape = key === 'Escape' || keyCode === 27;

            if (isEscape) {
              this.close();
            }
          }
          /**
           * Handles a transition end event on the root element.
           * @param {!Event} evt
           */

        }, {
          key: 'handleTransitionEnd',
          value: function handleTransitionEnd(evt) {
            var OPENING = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].OPENING,
                CLOSING = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].CLOSING,
                OPEN = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].OPEN,
                ANIMATE = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].ANIMATE,
                ROOT = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].ROOT; // In Edge, transitionend on ripple pseudo-elements yields a target without classList, so check for Element first.

            var isElement = evt.target instanceof Element;

            if (!isElement || !this.adapter_.elementHasClass(
            /** @type {!Element} */
            evt.target, ROOT)) {
              return;
            }

            if (this.isClosing()) {
              this.adapter_.removeClass(OPEN);
              this.adapter_.restoreFocus();
              this.closed();
              this.adapter_.notifyClose();
            } else {
              this.adapter_.focusActiveNavigationItem();
              this.opened();
              this.adapter_.notifyOpen();
            }

            this.adapter_.removeClass(ANIMATE);
            this.adapter_.removeClass(OPENING);
            this.adapter_.removeClass(CLOSING);
          }
          /**
           * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.
           * @param {Function} callback
           * @private
           */

        }, {
          key: 'runNextAnimationFrame_',
          value: function runNextAnimationFrame_(callback) {
            var _this3 = this;

            cancelAnimationFrame(this.animationFrame_);
            this.animationFrame_ = requestAnimationFrame(function () {
              _this3.animationFrame_ = 0;
              clearTimeout(_this3.animationTimer_);
              _this3.animationTimer_ = setTimeout(callback, 0);
            });
          }
        }]);

        return MDCDismissibleDrawerFoundation;
      }(__WEBPACK_IMPORTED_MODULE_1__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCDismissibleDrawerFoundation;
      /***/
    },
    /* 36 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        ROOT: 'mdc-drawer',
        DISMISSIBLE: 'mdc-drawer--dismissible',
        MODAL: 'mdc-drawer--modal',
        OPEN: 'mdc-drawer--open',
        ANIMATE: 'mdc-drawer--animate',
        OPENING: 'mdc-drawer--opening',
        CLOSING: 'mdc-drawer--closing'
      };
      /** @enum {string} */

      var strings = {
        APP_CONTENT_SELECTOR: '.mdc-drawer-app-content',
        SCRIM_SELECTOR: '.mdc-drawer-scrim',
        CLOSE_EVENT: 'MDCDrawer:closed',
        OPEN_EVENT: 'MDCDrawer:opened'
      };
      /***/
    },
    /* 37 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC List. Provides an interface for managing focus.
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCListAdapter = function () {
        function MDCListAdapter() {
          _classCallCheck(this, MDCListAdapter);
        }

        _createClass(MDCListAdapter, [{
          key: "getListItemCount",

          /** @return {number} */
          value: function getListItemCount() {}
          /**
           * @return {number} */

        }, {
          key: "getFocusedElementIndex",
          value: function getFocusedElementIndex() {}
          /**
           * @param {number} index
           * @param {string} attribute
           * @param {string} value
           */

        }, {
          key: "setAttributeForElementIndex",
          value: function setAttributeForElementIndex(index, attribute, value) {}
          /**
           * @param {number} index
           * @param {string} attribute
           */

        }, {
          key: "removeAttributeForElementIndex",
          value: function removeAttributeForElementIndex(index, attribute) {}
          /**
           * @param {number} index
           * @param {string} className
           */

        }, {
          key: "addClassForElementIndex",
          value: function addClassForElementIndex(index, className) {}
          /**
           * @param {number} index
           * @param {string} className
           */

        }, {
          key: "removeClassForElementIndex",
          value: function removeClassForElementIndex(index, className) {}
          /**
           * Focuses list item at the index specified.
           * @param {number} index
           */

        }, {
          key: "focusItemAtIndex",
          value: function focusItemAtIndex(index) {}
          /**
           * Sets the tabindex to the value specified for all button/a element children of
           * the list item at the index specified.
           * @param {number} listItemIndex
           * @param {number} tabIndexValue
           */

        }, {
          key: "setTabIndexForListItemChildren",
          value: function setTabIndexForListItemChildren(listItemIndex, tabIndexValue) {}
          /**
           * If the given element has an href, follows the link.
           * @param {!Element} ele
           */

        }, {
          key: "followHref",
          value: function followHref(ele) {}
          /**
           * @param {number} index
           * @return {boolean} Returns true if radio button is present at given list item index.
           */

        }, {
          key: "hasRadioAtIndex",
          value: function hasRadioAtIndex(index) {}
          /**
           * @param {number} index
           * @return {boolean} Returns true if checkbox is present at given list item index.
           */

        }, {
          key: "hasCheckboxAtIndex",
          value: function hasCheckboxAtIndex(index) {}
          /**
           * @param {number} index
           * @return {boolean} Returns true if checkbox inside a list item is checked.
           */

        }, {
          key: "isCheckboxCheckedAtIndex",
          value: function isCheckboxCheckedAtIndex(index) {}
          /**
           * Sets the checked status of checkbox or radio at given list item index.
           * @param {number} index
           * @param {boolean} isChecked
           */

        }, {
          key: "setCheckedCheckboxOrRadioAtIndex",
          value: function setCheckedCheckboxOrRadioAtIndex(index, isChecked) {}
          /**
           * @return {boolean} Returns true when the current focused element is inside list root.
           */

        }, {
          key: "isFocusInsideList",
          value: function isFocusInsideList() {}
        }]);

        return MDCListAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCListAdapter;
      /***/
    },
    /* 38 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* unused harmony export Index */

      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        ROOT: 'mdc-list',
        LIST_ITEM_CLASS: 'mdc-list-item',
        LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',
        LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated'
      };
      /** @enum {string} */

      var strings = {
        ARIA_ORIENTATION: 'aria-orientation',
        ARIA_ORIENTATION_HORIZONTAL: 'horizontal',
        ARIA_SELECTED: 'aria-selected',
        ARIA_CHECKED: 'aria-checked',
        ARIA_CHECKED_RADIO_SELECTOR: '[role="radio"][aria-checked="true"]',
        ARIA_ROLE_CHECKBOX_SELECTOR: '[role="checkbox"]',
        ARIA_CHECKED_CHECKBOX_SELECTOR: '[role="checkbox"][aria-checked="true"]',
        RADIO_SELECTOR: 'input[type="radio"]:not(:disabled)',
        CHECKBOX_SELECTOR: 'input[type="checkbox"]:not(:disabled)',
        CHECKBOX_RADIO_SELECTOR: 'input[type="checkbox"]:not(:disabled), input[type="radio"]:not(:disabled)',
        CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: '.' + cssClasses.LIST_ITEM_CLASS + ' button:not(:disabled),\n  .' + cssClasses.LIST_ITEM_CLASS + ' a',
        FOCUSABLE_CHILD_ELEMENTS: '.' + cssClasses.LIST_ITEM_CLASS + ' button:not(:disabled), .' + cssClasses.LIST_ITEM_CLASS + ' a,\n  .' + cssClasses.LIST_ITEM_CLASS + ' input[type="radio"]:not(:disabled),\n  .' + cssClasses.LIST_ITEM_CLASS + ' input[type="checkbox"]:not(:disabled)',
        ENABLED_ITEMS_SELECTOR: '.mdc-list-item:not(.mdc-list-item--disabled)'
      };
      /** @typedef {number|!Array<number>} */

      var Index = void 0;
      /***/
    },
    /* 39 */

    /***/
    function (module, exports, __webpack_require__) {
      var tabbable = __webpack_require__(87);

      var xtend = __webpack_require__(88);

      var activeFocusTraps = function () {
        var trapQueue = [];
        return {
          activateTrap: function activateTrap(trap) {
            if (trapQueue.length > 0) {
              var activeTrap = trapQueue[trapQueue.length - 1];

              if (activeTrap !== trap) {
                activeTrap.pause();
              }
            }

            var trapIndex = trapQueue.indexOf(trap);

            if (trapIndex === -1) {
              trapQueue.push(trap);
            } else {
              // move this existing trap to the front of the queue
              trapQueue.splice(trapIndex, 1);
              trapQueue.push(trap);
            }
          },
          deactivateTrap: function deactivateTrap(trap) {
            var trapIndex = trapQueue.indexOf(trap);

            if (trapIndex !== -1) {
              trapQueue.splice(trapIndex, 1);
            }

            if (trapQueue.length > 0) {
              trapQueue[trapQueue.length - 1].unpause();
            }
          }
        };
      }();

      function focusTrap(element, userOptions) {
        var doc = document;
        var container = typeof element === 'string' ? doc.querySelector(element) : element;
        var config = xtend({
          returnFocusOnDeactivate: true,
          escapeDeactivates: true
        }, userOptions);
        var state = {
          firstTabbableNode: null,
          lastTabbableNode: null,
          nodeFocusedBeforeActivation: null,
          mostRecentlyFocusedNode: null,
          active: false,
          paused: false
        };
        var trap = {
          activate: activate,
          deactivate: deactivate,
          pause: pause,
          unpause: unpause
        };
        return trap;

        function activate(activateOptions) {
          if (state.active) return;
          updateTabbableNodes();
          state.active = true;
          state.paused = false;
          state.nodeFocusedBeforeActivation = doc.activeElement;
          var onActivate = activateOptions && activateOptions.onActivate ? activateOptions.onActivate : config.onActivate;

          if (onActivate) {
            onActivate();
          }

          addListeners();
          return trap;
        }

        function deactivate(deactivateOptions) {
          if (!state.active) return;
          removeListeners();
          state.active = false;
          state.paused = false;
          activeFocusTraps.deactivateTrap(trap);
          var onDeactivate = deactivateOptions && deactivateOptions.onDeactivate !== undefined ? deactivateOptions.onDeactivate : config.onDeactivate;

          if (onDeactivate) {
            onDeactivate();
          }

          var returnFocus = deactivateOptions && deactivateOptions.returnFocus !== undefined ? deactivateOptions.returnFocus : config.returnFocusOnDeactivate;

          if (returnFocus) {
            delay(function () {
              tryFocus(state.nodeFocusedBeforeActivation);
            });
          }

          return trap;
        }

        function pause() {
          if (state.paused || !state.active) return;
          state.paused = true;
          removeListeners();
        }

        function unpause() {
          if (!state.paused || !state.active) return;
          state.paused = false;
          addListeners();
        }

        function addListeners() {
          if (!state.active) return; // There can be only one listening focus trap at a time

          activeFocusTraps.activateTrap(trap);
          updateTabbableNodes(); // Delay ensures that the focused element doesn't capture the event
          // that caused the focus trap activation.

          delay(function () {
            tryFocus(getInitialFocusNode());
          });
          doc.addEventListener('focusin', checkFocusIn, true);
          doc.addEventListener('mousedown', checkPointerDown, true);
          doc.addEventListener('touchstart', checkPointerDown, true);
          doc.addEventListener('click', checkClick, true);
          doc.addEventListener('keydown', checkKey, true);
          return trap;
        }

        function removeListeners() {
          if (!state.active) return;
          doc.removeEventListener('focusin', checkFocusIn, true);
          doc.removeEventListener('mousedown', checkPointerDown, true);
          doc.removeEventListener('touchstart', checkPointerDown, true);
          doc.removeEventListener('click', checkClick, true);
          doc.removeEventListener('keydown', checkKey, true);
          return trap;
        }

        function getNodeForOption(optionName) {
          var optionValue = config[optionName];
          var node = optionValue;

          if (!optionValue) {
            return null;
          }

          if (typeof optionValue === 'string') {
            node = doc.querySelector(optionValue);

            if (!node) {
              throw new Error('`' + optionName + '` refers to no known node');
            }
          }

          if (typeof optionValue === 'function') {
            node = optionValue();

            if (!node) {
              throw new Error('`' + optionName + '` did not return a node');
            }
          }

          return node;
        }

        function getInitialFocusNode() {
          var node;

          if (getNodeForOption('initialFocus') !== null) {
            node = getNodeForOption('initialFocus');
          } else if (container.contains(doc.activeElement)) {
            node = doc.activeElement;
          } else {
            node = state.firstTabbableNode || getNodeForOption('fallbackFocus');
          }

          if (!node) {
            throw new Error("You can't have a focus-trap without at least one focusable element");
          }

          return node;
        } // This needs to be done on mousedown and touchstart instead of click
        // so that it precedes the focus event.


        function checkPointerDown(e) {
          if (container.contains(e.target)) return;

          if (config.clickOutsideDeactivates) {
            deactivate({
              returnFocus: !tabbable.isFocusable(e.target)
            });
          } else {
            e.preventDefault();
          }
        } // In case focus escapes the trap for some strange reason, pull it back in.


        function checkFocusIn(e) {
          // In Firefox when you Tab out of an iframe the Document is briefly focused.
          if (container.contains(e.target) || e.target instanceof Document) {
            return;
          }

          e.stopImmediatePropagation();
          tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());
        }

        function checkKey(e) {
          if (config.escapeDeactivates !== false && isEscapeEvent(e)) {
            e.preventDefault();
            deactivate();
            return;
          }

          if (isTabEvent(e)) {
            checkTab(e);
            return;
          }
        } // Hijack Tab events on the first and last focusable nodes of the trap,
        // in order to prevent focus from escaping. If it escapes for even a
        // moment it can end up scrolling the page and causing confusion so we
        // kind of need to capture the action at the keydown phase.


        function checkTab(e) {
          updateTabbableNodes();

          if (e.shiftKey && e.target === state.firstTabbableNode) {
            e.preventDefault();
            tryFocus(state.lastTabbableNode);
            return;
          }

          if (!e.shiftKey && e.target === state.lastTabbableNode) {
            e.preventDefault();
            tryFocus(state.firstTabbableNode);
            return;
          }
        }

        function checkClick(e) {
          if (config.clickOutsideDeactivates) return;
          if (container.contains(e.target)) return;
          e.preventDefault();
          e.stopImmediatePropagation();
        }

        function updateTabbableNodes() {
          var tabbableNodes = tabbable(container);
          state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();
          state.lastTabbableNode = tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();
        }

        function tryFocus(node) {
          if (node === doc.activeElement) return;

          if (!node || !node.focus) {
            tryFocus(getInitialFocusNode());
            return;
          }

          node.focus();
          state.mostRecentlyFocusedNode = node;

          if (isSelectableInput(node)) {
            node.select();
          }
        }
      }

      function isSelectableInput(node) {
        return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';
      }

      function isEscapeEvent(e) {
        return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;
      }

      function isTabEvent(e) {
        return e.key === 'Tab' || e.keyCode === 9;
      }

      function delay(fn) {
        return setTimeout(fn, 0);
      }

      module.exports = focusTrap;
      /***/
    },
    /* 40 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Floating Label.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the floating label into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCFloatingLabelAdapter = function () {
        function MDCFloatingLabelAdapter() {
          _classCallCheck(this, MDCFloatingLabelAdapter);
        }

        _createClass(MDCFloatingLabelAdapter, [{
          key: "addClass",

          /**
           * Adds a class to the label element.
           * @param {string} className
           */
          value: function addClass(className) {}
          /**
           * Removes a class from the label element.
           * @param {string} className
           */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * Returns the width of the label element.
           * @return {number}
           */

        }, {
          key: "getWidth",
          value: function getWidth() {}
          /**
           * Registers an event listener on the root element for a given event.
           * @param {string} evtType
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "registerInteractionHandler",
          value: function registerInteractionHandler(evtType, handler) {}
          /**
           * Deregisters an event listener on the root element for a given event.
           * @param {string} evtType
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "deregisterInteractionHandler",
          value: function deregisterInteractionHandler(evtType, handler) {}
        }]);

        return MDCFloatingLabelAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCFloatingLabelAdapter;
      /***/
    },
    /* 41 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC TextField Line Ripple.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the line ripple into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCLineRippleAdapter = function () {
        function MDCLineRippleAdapter() {
          _classCallCheck(this, MDCLineRippleAdapter);
        }

        _createClass(MDCLineRippleAdapter, [{
          key: "addClass",

          /**
           * Adds a class to the line ripple element.
           * @param {string} className
           */
          value: function addClass(className) {}
          /**
           * Removes a class from the line ripple element.
           * @param {string} className
           */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * @param {string} className
           * @return {boolean}
           */

        }, {
          key: "hasClass",
          value: function hasClass(className) {}
          /**
           * Sets the style property with propertyName to value on the root element.
           * @param {string} propertyName
           * @param {string} value
           */

        }, {
          key: "setStyle",
          value: function setStyle(propertyName, value) {}
          /**
           * Registers an event listener on the line ripple element for a given event.
           * @param {string} evtType
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "registerEventHandler",
          value: function registerEventHandler(evtType, handler) {}
          /**
           * Deregisters an event listener on the line ripple element for a given event.
           * @param {string} evtType
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "deregisterEventHandler",
          value: function deregisterEventHandler(evtType, handler) {}
        }]);

        return MDCLineRippleAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCLineRippleAdapter;
      /***/
    },
    /* 42 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCMenu", function () {
        return MDCMenu;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(111);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(18);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__material_menu_surface_index__ = __webpack_require__(44);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__material_menu_surface_foundation__ = __webpack_require__(19);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__material_list_index__ = __webpack_require__(15);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCMenuFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_1__foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "AnchorMargin", function () {
        return __WEBPACK_IMPORTED_MODULE_4__material_menu_surface_foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "Corner", function () {
        return __WEBPACK_IMPORTED_MODULE_3__material_menu_surface_index__["Corner"];
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends MDCComponent<!MDCMenuFoundation>
       */


      var MDCMenu = function (_MDCComponent) {
        _inherits(MDCMenu, _MDCComponent);
        /** @param {...?} args */


        function MDCMenu() {
          var _ref;

          _classCallCheck(this, MDCMenu);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {!MDCMenuSurface} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCMenu.__proto__ || Object.getPrototypeOf(MDCMenu)).call.apply(_ref, [this].concat(args)));

          _this.menuSurface_;
          /** @private {!MDCList} */

          _this.list_;
          /** @private {!Function} */

          _this.handleKeydown_;
          /** @private {!Function} */

          _this.handleClick_;
          /** @private {!Function} */

          _this.afterOpenedCallback_;
          return _this;
        }
        /**
         * @param {!HTMLElement} root
         * @return {!MDCMenu}
         */


        _createClass(MDCMenu, [{
          key: 'initialize',
          value: function initialize() {
            var menuSurfaceFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_3__material_menu_surface_index__["MDCMenuSurface"](el);
            };
            var listFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_5__material_list_index__["MDCList"](el);
            };
            this.menuSurface_ = menuSurfaceFactory(this.root_);
            var list = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].LIST_SELECTOR);

            if (list) {
              this.list_ = listFactory(list);
              this.list_.wrapFocus = true;
            }
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var _this2 = this;

            this.afterOpenedCallback_ = function () {
              return _this2.handleAfterOpened_();
            };

            this.handleKeydown_ = function (evt) {
              return _this2.foundation_.handleKeydown(evt);
            };

            this.handleClick_ = function (evt) {
              return _this2.foundation_.handleClick(evt);
            };

            this.menuSurface_.listen(__WEBPACK_IMPORTED_MODULE_4__material_menu_surface_foundation__["b"
            /* MDCMenuSurfaceFoundation */
            ].strings.OPENED_EVENT, this.afterOpenedCallback_);
            this.listen('keydown', this.handleKeydown_);
            this.listen('click', this.handleClick_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            if (this.list_) {
              this.list_.destroy();
            }

            this.menuSurface_.destroy();
            this.menuSurface_.unlisten(__WEBPACK_IMPORTED_MODULE_4__material_menu_surface_foundation__["b"
            /* MDCMenuSurfaceFoundation */
            ].strings.OPENED_EVENT, this.afterOpenedCallback_);
            this.unlisten('keydown', this.handleKeydown_);
            this.unlisten('click', this.handleClick_);

            _get(MDCMenu.prototype.__proto__ || Object.getPrototypeOf(MDCMenu.prototype), 'destroy', this).call(this);
          }
          /** @return {boolean} */

        }, {
          key: 'setAnchorCorner',

          /**
           * @param {!Corner} corner Default anchor corner alignment of top-left
           *     menu corner.
           */
          value: function setAnchorCorner(corner) {
            this.menuSurface_.setAnchorCorner(corner);
          }
          /**
           * @param {!AnchorMargin} margin
           */

        }, {
          key: 'setAnchorMargin',
          value: function setAnchorMargin(margin) {
            this.menuSurface_.setAnchorMargin(margin);
          }
          /**
           * Return the items within the menu. Note that this only contains the set of elements within
           * the items container that are proper list items, and not supplemental / presentational DOM
           * elements.
           * @return {!Array<!HTMLElement>}
           */

        }, {
          key: 'getOptionByIndex',

          /**
           * Return the item within the menu at the index specified.
           * @param {number} index
           * @return {?HTMLElement}
           */
          value: function getOptionByIndex(index) {
            var items = this.items;

            if (index < items.length) {
              return this.items[index];
            } else {
              return null;
            }
          }
          /** @param {boolean} quickOpen */

        }, {
          key: 'setFixedPosition',

          /** @param {boolean} isFixed */
          value: function setFixedPosition(isFixed) {
            this.menuSurface_.setFixedPosition(isFixed);
          }
        }, {
          key: 'hoistMenuToBody',
          value: function hoistMenuToBody() {
            this.menuSurface_.hoistMenuToBody();
          }
          /** @param {boolean} isHoisted */

        }, {
          key: 'setIsHoisted',
          value: function setIsHoisted(isHoisted) {
            this.menuSurface_.setIsHoisted(isHoisted);
          }
          /**
           * @param {number} x
           * @param {number} y
           */

        }, {
          key: 'setAbsolutePosition',
          value: function setAbsolutePosition(x, y) {
            this.menuSurface_.setAbsolutePosition(x, y);
          }
          /**
           * Sets the element that the menu-surface is anchored to.
           * @param {!HTMLElement} element
           */

        }, {
          key: 'setAnchorElement',
          value: function setAnchorElement(element) {
            this.menuSurface_.anchorElement = element;
          }
        }, {
          key: 'handleAfterOpened_',
          value: function handleAfterOpened_() {
            var list = this.items;

            if (list.length > 0) {
              list[0].focus();
            }
          }
          /** @return {!MDCMenuFoundation} */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this3 = this;

            return new __WEBPACK_IMPORTED_MODULE_1__foundation__["a"
            /* MDCMenuFoundation */
            ]({
              addClassToElementAtIndex: function addClassToElementAtIndex(index, className) {
                var list = _this3.items;
                list[index].classList.add(className);
              },
              removeClassFromElementAtIndex: function removeClassFromElementAtIndex(index, className) {
                var list = _this3.items;
                list[index].classList.remove(className);
              },
              addAttributeToElementAtIndex: function addAttributeToElementAtIndex(index, attr, value) {
                var list = _this3.items;
                list[index].setAttribute(attr, value);
              },
              removeAttributeFromElementAtIndex: function removeAttributeFromElementAtIndex(index, attr) {
                var list = _this3.items;
                list[index].removeAttribute(attr);
              },
              elementContainsClass: function elementContainsClass(element, className) {
                return element.classList.contains(className);
              },
              closeSurface: function closeSurface() {
                return _this3.open = false;
              },
              getElementIndex: function getElementIndex(element) {
                return _this3.items.indexOf(element);
              },
              getParentElement: function getParentElement(element) {
                return element.parentElement;
              },
              getSelectedElementIndex: function getSelectedElementIndex(selectionGroup) {
                return _this3.items.indexOf(selectionGroup.querySelector('.' + __WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].MENU_SELECTED_LIST_ITEM));
              },
              notifySelected: function notifySelected(evtData) {
                return _this3.emit(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
                /* strings */
                ].SELECTED_EVENT, {
                  index: evtData.index,
                  item: _this3.items[evtData.index]
                });
              }
            });
          }
        }, {
          key: 'open',
          get: function get() {
            return this.menuSurface_.open;
          }
          /** @param {boolean} value */
          ,
          set: function set(value) {
            this.menuSurface_.open = value;
          }
          /** @return {boolean} */

        }, {
          key: 'wrapFocus',
          get: function get() {
            return this.list_.wrapFocus;
          }
          /** @param {boolean} value */
          ,
          set: function set(value) {
            this.list_.wrapFocus = value;
          }
        }, {
          key: 'items',
          get: function get() {
            return this.list_.listElements;
          }
        }, {
          key: 'quickOpen',
          set: function set(quickOpen) {
            this.menuSurface_.quickOpen = quickOpen;
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCMenu(root);
          }
        }]);

        return MDCMenu;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 43 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* unused harmony export MDCMenuSurfaceAdapter */

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDCMenuSurface. Provides an interface for managing
       * - classes
       * - dom
       * - focus
       * - position
       * - dimensions
       * - event handlers
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCMenuSurfaceAdapter = function () {
        function MDCMenuSurfaceAdapter() {
          _classCallCheck(this, MDCMenuSurfaceAdapter);
        }

        _createClass(MDCMenuSurfaceAdapter, [{
          key: "addClass",

          /** @param {string} className */
          value: function addClass(className) {}
          /** @param {string} className */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * @param {string} className
           * @return {boolean}
           */

        }, {
          key: "hasClass",
          value: function hasClass(className) {}
          /** @return {boolean} */

        }, {
          key: "hasAnchor",
          value: function hasAnchor() {}
          /** Emits an event when the menu surface is closed. */

        }, {
          key: "notifyClose",
          value: function notifyClose() {}
          /** Emits an event when the menu surface is opened. */

        }, {
          key: "notifyOpen",
          value: function notifyOpen() {}
          /**
           * @return {boolean}
           * @param {EventTarget} el
           */

        }, {
          key: "isElementInContainer",
          value: function isElementInContainer(el) {}
          /** @return {boolean} */

        }, {
          key: "isRtl",
          value: function isRtl() {}
          /** @param {string} origin */

        }, {
          key: "setTransformOrigin",
          value: function setTransformOrigin(origin) {}
          /** @return {boolean} */

        }, {
          key: "isFocused",
          value: function isFocused() {}
          /** Saves the element that was focused before the menu surface was opened. */

        }, {
          key: "saveFocus",
          value: function saveFocus() {}
          /** Restores focus to the element that was focused before the menu surface was opened. */

        }, {
          key: "restoreFocus",
          value: function restoreFocus() {}
          /** @return {boolean} */

        }, {
          key: "isFirstElementFocused",
          value: function isFirstElementFocused() {}
          /** @return {boolean} */

        }, {
          key: "isLastElementFocused",
          value: function isLastElementFocused() {}
          /** Focuses the first focusable element in the menu-surface. */

        }, {
          key: "focusFirstElement",
          value: function focusFirstElement() {}
          /** Focuses the first focusable element in the menu-surface. */

        }, {
          key: "focusLastElement",
          value: function focusLastElement() {}
          /** @return {!{width: number, height: number}} */

        }, {
          key: "getInnerDimensions",
          value: function getInnerDimensions() {}
          /** @return {!{width: number, height: number, top: number, right: number, bottom: number, left: number}} */

        }, {
          key: "getAnchorDimensions",
          value: function getAnchorDimensions() {}
          /** @return {!{ width: number, height: number }} */

        }, {
          key: "getWindowDimensions",
          value: function getWindowDimensions() {}
          /** @return {!{ width: number, height: number }} */

        }, {
          key: "getBodyDimensions",
          value: function getBodyDimensions() {}
          /** @return {!{ width: number, height: number }} */

        }, {
          key: "getWindowScroll",
          value: function getWindowScroll() {}
          /** @param {!{
          *   top: (string|undefined),
          *   right: (string|undefined),
          *   bottom: (string|undefined),
          *   left: (string|undefined)
          * }} position */

        }, {
          key: "setPosition",
          value: function setPosition(position) {}
          /** @param {string} height */

        }, {
          key: "setMaxHeight",
          value: function setMaxHeight(height) {}
        }]);

        return MDCMenuSurfaceAdapter;
      }();
      /***/

    },
    /* 44 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCMenuSurface", function () {
        return MDCMenuSurface;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__util__ = __webpack_require__(113);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(19);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__adapter__ = __webpack_require__(43);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(20);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCMenuSurfaceFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["b"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "AnchorMargin", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "Corner", function () {
        return __WEBPACK_IMPORTED_MODULE_4__constants__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "CornerBit", function () {
        return __WEBPACK_IMPORTED_MODULE_4__constants__["b"];
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "util", function () {
        return __WEBPACK_IMPORTED_MODULE_1__util__;
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends MDCComponent<!MDCMenuSurfaceFoundation>
       */


      var MDCMenuSurface = function (_MDCComponent) {
        _inherits(MDCMenuSurface, _MDCComponent);
        /** @param {...?} args */


        function MDCMenuSurface() {
          var _ref;

          _classCallCheck(this, MDCMenuSurface);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {!Element} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCMenuSurface.__proto__ || Object.getPrototypeOf(MDCMenuSurface)).call.apply(_ref, [this].concat(args)));

          _this.previousFocus_;
          /** @private {!Element} */

          _this.anchorElement;
          /** @private {Element} */

          _this.firstFocusableElement_;
          /** @private {Element} */

          _this.lastFocusableElement_;
          /** @private {!Function} */

          _this.handleKeydown_;
          /** @private {!Function} */

          _this.handleBodyClick_;
          /** @private {!Function} */

          _this.registerBodyClickListener_;
          /** @private {!Function} */

          _this.deregisterBodyClickListener_;
          return _this;
        }
        /**
         * @param {!Element} root
         * @return {!MDCMenuSurface}
         */


        _createClass(MDCMenuSurface, [{
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var _this2 = this;

            if (this.root_.parentElement && this.root_.parentElement.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["c"
            /* cssClasses */
            ].ANCHOR)) {
              this.anchorElement = this.root_.parentElement;
            }

            if (this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__["c"
            /* cssClasses */
            ].FIXED)) {
              this.setFixedPosition(true);
            }

            this.handleKeydown_ = function (evt) {
              return _this2.foundation_.handleKeydown(evt);
            };

            this.handleBodyClick_ = function (evt) {
              return _this2.foundation_.handleBodyClick(evt);
            };

            this.registerBodyClickListener_ = function () {
              return document.body.addEventListener('click', _this2.handleBodyClick_);
            };

            this.deregisterBodyClickListener_ = function () {
              return document.body.removeEventListener('click', _this2.handleBodyClick_);
            };

            this.root_.addEventListener('keydown', this.handleKeydown_);
            this.root_.addEventListener(__WEBPACK_IMPORTED_MODULE_4__constants__["e"
            /* strings */
            ].OPENED_EVENT, this.registerBodyClickListener_);
            this.root_.addEventListener(__WEBPACK_IMPORTED_MODULE_4__constants__["e"
            /* strings */
            ].CLOSED_EVENT, this.deregisterBodyClickListener_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.root_.removeEventListener('keydown', this.handleKeydown_);
            this.root_.removeEventListener(__WEBPACK_IMPORTED_MODULE_4__constants__["e"
            /* strings */
            ].OPENED_EVENT, this.registerBodyClickListener_);
            this.root_.removeEventListener(__WEBPACK_IMPORTED_MODULE_4__constants__["e"
            /* strings */
            ].CLOSED_EVENT, this.deregisterBodyClickListener_);

            _get(MDCMenuSurface.prototype.__proto__ || Object.getPrototypeOf(MDCMenuSurface.prototype), 'destroy', this).call(this);
          }
          /** @return {boolean} */

        }, {
          key: 'hoistMenuToBody',

          /**
           * Removes the menu-surface from it's current location and appends it to the
           * body to overcome any overflow:hidden issues.
           */
          value: function hoistMenuToBody() {
            document.body.appendChild(this.root_.parentElement.removeChild(this.root_));
            this.setIsHoisted(true);
          }
          /**
           * Sets the foundation to use page offsets for an positioning when the menu
           * is hoisted to the body.
           * @param {boolean} isHoisted
           */

        }, {
          key: 'setIsHoisted',
          value: function setIsHoisted(isHoisted) {
            this.foundation_.setIsHoisted(isHoisted);
          }
          /**
           * Sets the element that the menu-surface is anchored to.
           * @param {!Element} element
           */

        }, {
          key: 'setMenuSurfaceAnchorElement',
          value: function setMenuSurfaceAnchorElement(element) {
            this.anchorElement = element;
          }
          /**
           * Sets the menu-surface to position: fixed.
           * @param {boolean} isFixed
           */

        }, {
          key: 'setFixedPosition',
          value: function setFixedPosition(isFixed) {
            if (isFixed) {
              this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_4__constants__["c"
              /* cssClasses */
              ].FIXED);
            } else {
              this.root_.classList.remove(__WEBPACK_IMPORTED_MODULE_4__constants__["c"
              /* cssClasses */
              ].FIXED);
            }

            this.foundation_.setFixedPosition(isFixed);
          }
          /**
           * Sets the absolute x/y position to position based on. Requires the menu to be hoisted.
           * @param {number} x
           * @param {number} y
           */

        }, {
          key: 'setAbsolutePosition',
          value: function setAbsolutePosition(x, y) {
            this.foundation_.setAbsolutePosition(x, y);
            this.setIsHoisted(true);
          }
          /**
           * @param {!Corner} corner Default anchor corner alignment of top-left
           *     surface corner.
           */

        }, {
          key: 'setAnchorCorner',
          value: function setAnchorCorner(corner) {
            this.foundation_.setAnchorCorner(corner);
          }
          /**
           * @param {!AnchorMargin} margin
           */

        }, {
          key: 'setAnchorMargin',
          value: function setAnchorMargin(margin) {
            this.foundation_.setAnchorMargin(margin);
          }
          /** @param {boolean} quickOpen */

        }, {
          key: 'getDefaultFoundation',

          /** @return {!MDCMenuSurfaceFoundation} */
          value: function getDefaultFoundation() {
            var _this3 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["b"
            /* MDCMenuSurfaceFoundation */
            ](
            /** @type {!MDCMenuSurfaceAdapter} */
            _extends({
              addClass: function addClass(className) {
                return _this3.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this3.root_.classList.remove(className);
              },
              hasClass: function hasClass(className) {
                return _this3.root_.classList.contains(className);
              },
              hasAnchor: function hasAnchor() {
                return !!_this3.anchorElement;
              },
              notifyClose: function notifyClose() {
                return _this3.emit(__WEBPACK_IMPORTED_MODULE_2__foundation__["b"
                /* MDCMenuSurfaceFoundation */
                ].strings.CLOSED_EVENT, {});
              },
              notifyOpen: function notifyOpen() {
                return _this3.emit(__WEBPACK_IMPORTED_MODULE_2__foundation__["b"
                /* MDCMenuSurfaceFoundation */
                ].strings.OPENED_EVENT, {});
              },
              isElementInContainer: function isElementInContainer(el) {
                return _this3.root_ === el || _this3.root_.contains(el);
              },
              isRtl: function isRtl() {
                return getComputedStyle(_this3.root_).getPropertyValue('direction') === 'rtl';
              },
              setTransformOrigin: function setTransformOrigin(origin) {
                _this3.root_.style[__WEBPACK_IMPORTED_MODULE_1__util__["getTransformPropertyName"](window) + '-origin'] = origin;
              }
            }, this.getFocusAdapterMethods_(), this.getDimensionAdapterMethods_()));
          }
          /**
           * @return {!{
           * isFocused: function(): boolean,
           * saveFocus: function(),
           * restoreFocus: function(),
           * isFirstElementFocused: function(): boolean,
           * isLastElementFocused: function(): boolean,
           * focusFirstElement: function(),
           * focusLastElement: function(),
           * }}
           * @private
           */

        }, {
          key: 'getFocusAdapterMethods_',
          value: function getFocusAdapterMethods_() {
            var _this4 = this;

            return {
              isFocused: function isFocused() {
                return document.activeElement === _this4.root_;
              },
              saveFocus: function saveFocus() {
                _this4.previousFocus_ = document.activeElement;
              },
              restoreFocus: function restoreFocus() {
                if (_this4.root_.contains(document.activeElement)) {
                  if (_this4.previousFocus_ && _this4.previousFocus_.focus) {
                    _this4.previousFocus_.focus();
                  }
                }
              },
              isFirstElementFocused: function isFirstElementFocused() {
                return _this4.firstFocusableElement_ && _this4.firstFocusableElement_ === document.activeElement;
              },
              isLastElementFocused: function isLastElementFocused() {
                return _this4.lastFocusableElement_ && _this4.lastFocusableElement_ === document.activeElement;
              },
              focusFirstElement: function focusFirstElement() {
                return _this4.firstFocusableElement_ && _this4.firstFocusableElement_.focus && _this4.firstFocusableElement_.focus();
              },
              focusLastElement: function focusLastElement() {
                return _this4.lastFocusableElement_ && _this4.lastFocusableElement_.focus && _this4.lastFocusableElement_.focus();
              }
            };
          }
          /**
           * @return {!{
           * getInnerDimensions: function(),
           * getAnchorDimensions: function(): (HTMLElement | null | * | ClientRect),
           * getWindowDimensions: function(),
           * setPosition: function(*),
           * setMaxHeight: function(string)}}
           * @private
           */

        }, {
          key: 'getDimensionAdapterMethods_',
          value: function getDimensionAdapterMethods_() {
            var _this5 = this;

            return {
              getInnerDimensions: function getInnerDimensions() {
                return {
                  width: _this5.root_.offsetWidth,
                  height: _this5.root_.offsetHeight
                };
              },
              getAnchorDimensions: function getAnchorDimensions() {
                return _this5.anchorElement && _this5.anchorElement.getBoundingClientRect();
              },
              getWindowDimensions: function getWindowDimensions() {
                return {
                  width: window.innerWidth,
                  height: window.innerHeight
                };
              },
              getBodyDimensions: function getBodyDimensions() {
                return {
                  width: document.body.clientWidth,
                  height: document.body.clientHeight
                };
              },
              getWindowScroll: function getWindowScroll() {
                return {
                  x: window.pageXOffset,
                  y: window.pageYOffset
                };
              },
              setPosition: function setPosition(position) {
                _this5.root_.style.left = 'left' in position ? position.left : null;
                _this5.root_.style.right = 'right' in position ? position.right : null;
                _this5.root_.style.top = 'top' in position ? position.top : null;
                _this5.root_.style.bottom = 'bottom' in position ? position.bottom : null;
              },
              setMaxHeight: function setMaxHeight(height) {
                _this5.root_.style.maxHeight = height;
              }
            };
          }
        }, {
          key: 'open',
          get: function get() {
            return this.foundation_.isOpen();
          }
          /** @param {boolean} value */
          ,
          set: function set(value) {
            if (value) {
              var focusableElements = this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__["e"
              /* strings */
              ].FOCUSABLE_ELEMENTS);
              this.firstFocusableElement_ = focusableElements.length > 0 ? focusableElements[0] : null;
              this.lastFocusableElement_ = focusableElements.length > 0 ? focusableElements[focusableElements.length - 1] : null;
              this.foundation_.open();
            } else {
              this.foundation_.close();
            }
          }
        }, {
          key: 'quickOpen',
          set: function set(quickOpen) {
            this.foundation_.setQuickOpen(quickOpen);
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCMenuSurface(root);
          }
        }]);

        return MDCMenuSurface;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 45 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Notched Outline.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the Notched Outline into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCNotchedOutlineAdapter = function () {
        function MDCNotchedOutlineAdapter() {
          _classCallCheck(this, MDCNotchedOutlineAdapter);
        }

        _createClass(MDCNotchedOutlineAdapter, [{
          key: "addClass",

          /**
           * Adds a class to the root element.
           * @param {string} className
           */
          value: function addClass(className) {}
          /**
           * Removes a class from the root element.
           * @param {string} className
           */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * Sets the width style property of the notch element.
           * @param {number} width
           */

        }, {
          key: "setNotchWidthProperty",
          value: function setNotchWidthProperty(width) {}
          /**
           * Removes the width style property from the notch element.
           */

        }, {
          key: "removeNotchWidthProperty",
          value: function removeNotchWidthProperty() {}
        }]);

        return MDCNotchedOutlineAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCNotchedOutlineAdapter;
      /***/
    },
    /* 46 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return numbers;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "c", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var strings = {
        NOTCH_ELEMENT_SELECTOR: '.mdc-notched-outline__notch'
      };
      /** @enum {number} */

      var numbers = {
        // This should stay in sync with $mdc-notched-outline-padding * 2.
        NOTCH_ELEMENT_PADDING: 8
      };
      /** @enum {string} */

      var cssClasses = {
        OUTLINE_NOTCHED: 'mdc-notched-outline--notched',
        OUTLINE_UPGRADED: 'mdc-notched-outline--upgraded',
        NO_LABEL: 'mdc-notched-outline--no-label'
      };
      /***/
    },
    /* 47 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* unused harmony export MDCSelectAdapter */

      /* unused harmony export FoundationMapType */

      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__icon_index__ = __webpack_require__(22);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__helper_text_index__ = __webpack_require__(23);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @typedef {{
       *   leadingIcon: (!MDCSelectIconFoundation|undefined),
       *   helperText: (!MDCSelectHelperTextFoundation|undefined),
       * }}
       */


      var FoundationMapType = void 0;
      /**
       * Adapter for MDC Select. Provides an interface for managing
       * - classes
       * - dom
       * - event handlers
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */

      var MDCSelectAdapter = function () {
        function MDCSelectAdapter() {
          _classCallCheck(this, MDCSelectAdapter);
        }

        _createClass(MDCSelectAdapter, [{
          key: 'addClass',

          /**
           * Adds class to root element.
           * @param {string} className
           */
          value: function addClass(className) {}
          /**
           * Removes a class from the root element.
           * @param {string} className
           */

        }, {
          key: 'removeClass',
          value: function removeClass(className) {}
          /**
           * Returns true if the root element contains the given class name.
           * @param {string} className
           * @return {boolean}
           */

        }, {
          key: 'hasClass',
          value: function hasClass(className) {}
          /**
           * Activates the bottom line, showing a focused state.
           */

        }, {
          key: 'activateBottomLine',
          value: function activateBottomLine() {}
          /**
           * Deactivates the bottom line.
           */

        }, {
          key: 'deactivateBottomLine',
          value: function deactivateBottomLine() {}
          /**
           * Sets the value of the select.
           * @param {string} value
           */

        }, {
          key: 'setValue',
          value: function setValue(value) {}
          /**
           * Returns the selected value of the select element.
           * @return {string}
           */

        }, {
          key: 'getValue',
          value: function getValue() {}
          /**
           * Floats label determined based off of the shouldFloat argument.
           * @param {boolean} shouldFloat
           */

        }, {
          key: 'floatLabel',
          value: function floatLabel(shouldFloat) {}
          /**
           * Returns width of label in pixels, if the label exists.
           * @return {number}
           */

        }, {
          key: 'getLabelWidth',
          value: function getLabelWidth() {}
          /**
           * Returns true if outline element exists, false if it doesn't.
           * @return {boolean}
           */

        }, {
          key: 'hasOutline',
          value: function hasOutline() {}
          /**
           * Only implement if outline element exists.
           * @param {number} labelWidth
           */

        }, {
          key: 'notchOutline',
          value: function notchOutline(labelWidth) {}
          /**
           * Closes notch in outline element, if the outline exists.
           */

        }, {
          key: 'closeOutline',
          value: function closeOutline() {}
          /**
           * Opens the menu.
           */

        }, {
          key: 'openMenu',
          value: function openMenu() {}
          /**
           * Closes the menu.
           */

        }, {
          key: 'closeMenu',
          value: function closeMenu() {}
          /**
           * Returns true if the menu is currently open.
           * @return {boolean}
           */

        }, {
          key: 'isMenuOpen',
          value: function isMenuOpen() {}
          /**
           * Sets the selected index of the select to the index provided.
           * @param {number} index
           */

        }, {
          key: 'setSelectedIndex',
          value: function setSelectedIndex(index) {}
          /**
           * Sets the select to disabled.
           * @param {boolean} isDisabled
           */

        }, {
          key: 'setDisabled',
          value: function setDisabled(isDisabled) {}
          /**
           * Sets the line ripple transform origin center.
           * @param {number} normalizedX
           */

        }, {
          key: 'setRippleCenter',
          value: function setRippleCenter(normalizedX) {}
          /**
           * Emits a change event when an element is selected.
           * @param {string} value
           */

        }, {
          key: 'notifyChange',
          value: function notifyChange(value) {}
          /**
           * Checks if the select is currently valid.
           * @return {boolean} isValid
           */

        }, {
          key: 'checkValidity',
          value: function checkValidity() {}
          /**
           * Adds/Removes the invalid class.
           * @param {boolean} isValid
           */

        }, {
          key: 'setValid',
          value: function setValid(isValid) {}
        }]);

        return MDCSelectAdapter;
      }();
      /***/

    },
    /* 48 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Select Icon.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the select icon into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCSelectIconAdapter = function () {
        function MDCSelectIconAdapter() {
          _classCallCheck(this, MDCSelectIconAdapter);
        }

        _createClass(MDCSelectIconAdapter, [{
          key: "getAttr",

          /**
           * Gets the value of an attribute on the icon element.
           * @param {string} attr
           * @return {string}
           */
          value: function getAttr(attr) {}
          /**
           * Sets an attribute on the icon element.
           * @param {string} attr
           * @param {string} value
           */

        }, {
          key: "setAttr",
          value: function setAttr(attr, value) {}
          /**
           * Removes an attribute from the icon element.
           * @param {string} attr
           */

        }, {
          key: "removeAttr",
          value: function removeAttr(attr) {}
          /**
           * Sets the text content of the icon element.
           * @param {string} content
           */

        }, {
          key: "setContent",
          value: function setContent(content) {}
          /**
           * Registers an event listener on the icon element for a given event.
           * @param {string} evtType
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "registerInteractionHandler",
          value: function registerInteractionHandler(evtType, handler) {}
          /**
           * Deregisters an event listener on the icon element for a given event.
           * @param {string} evtType
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "deregisterInteractionHandler",
          value: function deregisterInteractionHandler(evtType, handler) {}
          /**
           * Emits a custom event "MDCSelect:icon" denoting a user has clicked the icon.
           */

        }, {
          key: "notifyIconAction",
          value: function notifyIconAction() {}
        }]);

        return MDCSelectIconAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCSelectIconAdapter;
      /***/
    },
    /* 49 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Select Helper Text.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the Select helper text into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCSelectHelperTextAdapter = function () {
        function MDCSelectHelperTextAdapter() {
          _classCallCheck(this, MDCSelectHelperTextAdapter);
        }

        _createClass(MDCSelectHelperTextAdapter, [{
          key: "addClass",

          /**
           * Adds a class to the helper text element.
           * @param {string} className
           */
          value: function addClass(className) {}
          /**
           * Removes a class from the helper text element.
           * @param {string} className
           */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * Returns whether or not the helper text element contains the given class.
           * @param {string} className
           * @return {boolean}
           */

        }, {
          key: "hasClass",
          value: function hasClass(className) {}
          /**
           * Sets an attribute with a given value on the helper text element.
           * @param {string} attr
           * @param {string} value
           */

        }, {
          key: "setAttr",
          value: function setAttr(attr, value) {}
          /**
           * Removes an attribute from the helper text element.
           * @param {string} attr
           */

        }, {
          key: "removeAttr",
          value: function removeAttr(attr) {}
          /**
           * Sets the text content for the helper text element.
           * @param {string} content
           */

        }, {
          key: "setContent",
          value: function setContent(content) {}
        }]);

        return MDCSelectHelperTextAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCSelectHelperTextAdapter;
      /***/
    },
    /* 50 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "c", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return numbers;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        DISABLED: 'mdc-select--disabled',
        ROOT: 'mdc-select',
        OUTLINED: 'mdc-select--outlined',
        FOCUSED: 'mdc-select--focused',
        SELECTED_ITEM_CLASS: 'mdc-list-item--selected',
        WITH_LEADING_ICON: 'mdc-select--with-leading-icon',
        INVALID: 'mdc-select--invalid',
        REQUIRED: 'mdc-select--required'
      };
      /** @enum {string} */

      var strings = {
        ARIA_CONTROLS: 'aria-controls',
        CHANGE_EVENT: 'MDCSelect:change',
        SELECTED_ITEM_SELECTOR: '.' + cssClasses.SELECTED_ITEM_CLASS,
        LEADING_ICON_SELECTOR: '.mdc-select__icon',
        SELECTED_TEXT_SELECTOR: '.mdc-select__selected-text',
        HIDDEN_INPUT_SELECTOR: 'input[type="hidden"]',
        MENU_SELECTOR: '.mdc-select__menu',
        LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',
        LABEL_SELECTOR: '.mdc-floating-label',
        NATIVE_CONTROL_SELECTOR: '.mdc-select__native-control',
        OUTLINE_SELECTOR: '.mdc-notched-outline',
        ENHANCED_VALUE_ATTR: 'data-value',
        ARIA_SELECTED_ATTR: 'aria-selected'
      };
      /** @enum {number} */

      var numbers = {
        LABEL_SCALE: 0.75
      };
      /***/
    },
    /* 51 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "c", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return numbers;
      });
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        ACTIVE: 'mdc-slider--active',
        DISABLED: 'mdc-slider--disabled',
        DISCRETE: 'mdc-slider--discrete',
        FOCUS: 'mdc-slider--focus',
        IN_TRANSIT: 'mdc-slider--in-transit',
        IS_DISCRETE: 'mdc-slider--discrete',
        HAS_TRACK_MARKER: 'mdc-slider--display-markers'
      };
      /** @enum {string} */

      var strings = {
        TRACK_SELECTOR: '.mdc-slider__track',
        TRACK_MARKER_CONTAINER_SELECTOR: '.mdc-slider__track-marker-container',
        LAST_TRACK_MARKER_SELECTOR: '.mdc-slider__track-marker:last-child',
        THUMB_CONTAINER_SELECTOR: '.mdc-slider__thumb-container',
        PIN_VALUE_MARKER_SELECTOR: '.mdc-slider__pin-value-marker',
        ARIA_VALUEMIN: 'aria-valuemin',
        ARIA_VALUEMAX: 'aria-valuemax',
        ARIA_VALUENOW: 'aria-valuenow',
        ARIA_DISABLED: 'aria-disabled',
        STEP_DATA_ATTR: 'data-step',
        CHANGE_EVENT: 'MDCSlider:change',
        INPUT_EVENT: 'MDCSlider:input'
      };
      /** @enum {number} */

      var numbers = {
        PAGE_FACTOR: 4
      };
      /***/
    },
    /* 52 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /**
       * Adapter for MDC Slider.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the Slider into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCSliderAdapter = function () {
        function MDCSliderAdapter() {
          _classCallCheck(this, MDCSliderAdapter);
        }

        _createClass(MDCSliderAdapter, [{
          key: "hasClass",

          /**
           * Returns true if className exists for the slider Element
           * @param {string} className
           * @return {boolean}
           */
          value: function hasClass(className) {}
          /**
           * Adds a class to the slider Element
           * @param {string} className
           */

        }, {
          key: "addClass",
          value: function addClass(className) {}
          /**
           * Removes a class from the slider Element
           * @param {string} className
           */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * Returns a string if attribute name exists on the slider Element,
           * otherwise returns null
           * @param {string} name
           * @return {?string}
           */

        }, {
          key: "getAttribute",
          value: function getAttribute(name) {}
          /**
           * Sets attribute name on slider Element to value
           * @param {string} name
           * @param {string} value
           */

        }, {
          key: "setAttribute",
          value: function setAttribute(name, value) {}
          /**
           * Removes attribute name from slider Element
           * @param {string} name
           */

        }, {
          key: "removeAttribute",
          value: function removeAttribute(name) {}
          /**
           * Returns the bounding client rect for the slider Element
           * @return {?ClientRect}
           */

        }, {
          key: "computeBoundingRect",
          value: function computeBoundingRect() {}
          /**
           * Returns the tab index of the slider Element
           * @return {number}
           */

        }, {
          key: "getTabIndex",
          value: function getTabIndex() {}
          /**
           * Registers an event handler on the root element for a given event.
           * @param {string} type
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "registerInteractionHandler",
          value: function registerInteractionHandler(type, handler) {}
          /**
           * Deregisters an event handler on the root element for a given event.
           * @param {string} type
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "deregisterInteractionHandler",
          value: function deregisterInteractionHandler(type, handler) {}
          /**
           * Registers an event handler on the thumb container element for a given event.
           * @param {string} type
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "registerThumbContainerInteractionHandler",
          value: function registerThumbContainerInteractionHandler(type, handler) {}
          /**
           * Deregisters an event handler on the thumb container element for a given event.
           * @param {string} type
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "deregisterThumbContainerInteractionHandler",
          value: function deregisterThumbContainerInteractionHandler(type, handler) {}
          /**
           * Registers an event handler on the body for a given event.
           * @param {string} type
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "registerBodyInteractionHandler",
          value: function registerBodyInteractionHandler(type, handler) {}
          /**
           * Deregisters an event handler on the body for a given event.
           * @param {string} type
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "deregisterBodyInteractionHandler",
          value: function deregisterBodyInteractionHandler(type, handler) {}
          /**
           * Registers an event handler for the window resize event
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "registerResizeHandler",
          value: function registerResizeHandler(handler) {}
          /**
           * Deregisters an event handler for the window resize event
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "deregisterResizeHandler",
          value: function deregisterResizeHandler(handler) {}
          /**
           * Emits a custom event MDCSlider:input from the root
           */

        }, {
          key: "notifyInput",
          value: function notifyInput() {}
          /**
           * Emits a custom event MDCSlider:change from the root
           */

        }, {
          key: "notifyChange",
          value: function notifyChange() {}
          /**
           * Sets a style property of the thumb container element to the passed value
           * @param {string} propertyName
           * @param {string} value
           */

        }, {
          key: "setThumbContainerStyleProperty",
          value: function setThumbContainerStyleProperty(propertyName, value) {}
          /**
           * Sets a style property of the track element to the passed value
           * @param {string} propertyName
           * @param {string} value
           */

        }, {
          key: "setTrackStyleProperty",
          value: function setTrackStyleProperty(propertyName, value) {}
          /**
           * Sets the inner text of the pin marker to the passed value
           * @param {number} value
           */

        }, {
          key: "setMarkerValue",
          value: function setMarkerValue(value) {}
          /**
           * Appends the passed number of track markers to the track mark container element
           * @param {number} numMarkers
           */

        }, {
          key: "appendTrackMarkers",
          value: function appendTrackMarkers(numMarkers) {}
          /**
           * Removes all track markers fromt he track mark container element
           */

        }, {
          key: "removeTrackMarkers",
          value: function removeTrackMarkers() {}
          /**
           * Sets a style property of the last track marker to the passed value
           * @param {string} propertyName
           * @param {string} value
           */

        }, {
          key: "setLastTrackMarkersStyleProperty",
          value: function setLastTrackMarkersStyleProperty(propertyName, value) {}
          /**
           * Returns true if the root element is RTL, otherwise false
           * @return {boolean}
           */

        }, {
          key: "isRTL",
          value: function isRTL() {}
        }]);

        return MDCSliderAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCSliderAdapter;
      /***/
    },
    /* 53 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCTab", function () {
        return MDCTab;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__ = __webpack_require__(2);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__material_tab_indicator_index__ = __webpack_require__(54);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__adapter__ = __webpack_require__(10);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__foundation__ = __webpack_require__(138);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCTabFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_4__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @extends {MDCComponent<!MDCTabFoundation>}
       * @final
       */


      var MDCTab = function (_MDCComponent) {
        _inherits(MDCTab, _MDCComponent);
        /**
         * @param {...?} args
         */


        function MDCTab() {
          var _ref;

          _classCallCheck(this, MDCTab);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @type {string} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCTab.__proto__ || Object.getPrototypeOf(MDCTab)).call.apply(_ref, [this].concat(args)));

          _this.id;
          /** @private {?MDCRipple} */

          _this.ripple_;
          /** @private {?MDCTabIndicator} */

          _this.tabIndicator_;
          /** @private {?Element} */

          _this.content_;
          /** @private {?Function} */

          _this.handleClick_;
          return _this;
        }
        /**
         * @param {!Element} root
         * @return {!MDCTab}
         */


        _createClass(MDCTab, [{
          key: 'initialize',
          value: function initialize() {
            var rippleFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (el, foundation) {
              return new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__["MDCRipple"](el, foundation);
            };
            var tabIndicatorFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_2__material_tab_indicator_index__["MDCTabIndicator"](el);
            };
            this.id = this.root_.id;
            var rippleSurface = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__foundation__["a"
            /* default */
            ].strings.RIPPLE_SELECTOR);

            var rippleAdapter = _extends(__WEBPACK_IMPORTED_MODULE_1__material_ripple_index__["MDCRipple"].createAdapter(
            /** @type {!RippleCapableSurface} */
            this), {
              addClass: function addClass(className) {
                return rippleSurface.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return rippleSurface.classList.remove(className);
              },
              updateCssVariable: function updateCssVariable(varName, value) {
                return rippleSurface.style.setProperty(varName, value);
              }
            });

            var rippleFoundation = new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__["MDCRippleFoundation"](rippleAdapter);
            this.ripple_ = rippleFactory(this.root_, rippleFoundation);
            var tabIndicatorElement = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__foundation__["a"
            /* default */
            ].strings.TAB_INDICATOR_SELECTOR);
            this.tabIndicator_ = tabIndicatorFactory(tabIndicatorElement);
            this.content_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__foundation__["a"
            /* default */
            ].strings.CONTENT_SELECTOR);
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            this.handleClick_ = this.foundation_.handleClick.bind(this.foundation_);
            this.listen('click', this.handleClick_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.unlisten('click',
            /** @type {!Function} */
            this.handleClick_);
            this.ripple_.destroy();

            _get(MDCTab.prototype.__proto__ || Object.getPrototypeOf(MDCTab.prototype), 'destroy', this).call(this);
          }
          /**
           * @return {!MDCTabFoundation}
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_4__foundation__["a"
            /* default */
            ](
            /** @type {!MDCTabAdapter} */
            {
              setAttr: function setAttr(attr, value) {
                return _this2.root_.setAttribute(attr, value);
              },
              addClass: function addClass(className) {
                return _this2.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this2.root_.classList.remove(className);
              },
              hasClass: function hasClass(className) {
                return _this2.root_.classList.contains(className);
              },
              activateIndicator: function activateIndicator(previousIndicatorClientRect) {
                return _this2.tabIndicator_.activate(previousIndicatorClientRect);
              },
              deactivateIndicator: function deactivateIndicator() {
                return _this2.tabIndicator_.deactivate();
              },
              notifyInteracted: function notifyInteracted() {
                return _this2.emit(__WEBPACK_IMPORTED_MODULE_4__foundation__["a"
                /* default */
                ].strings.INTERACTED_EVENT, {
                  tabId: _this2.id
                }, true
                /* bubble */
                );
              },
              getOffsetLeft: function getOffsetLeft() {
                return _this2.root_.offsetLeft;
              },
              getOffsetWidth: function getOffsetWidth() {
                return _this2.root_.offsetWidth;
              },
              getContentOffsetLeft: function getContentOffsetLeft() {
                return _this2.content_.offsetLeft;
              },
              getContentOffsetWidth: function getContentOffsetWidth() {
                return _this2.content_.offsetWidth;
              },
              focus: function focus() {
                return _this2.root_.focus();
              }
            });
          }
          /**
           * Getter for the active state of the tab
           * @return {boolean}
           */

        }, {
          key: 'activate',

          /**
           * Activates the tab
           * @param {!ClientRect=} computeIndicatorClientRect
           */
          value: function activate(computeIndicatorClientRect) {
            this.foundation_.activate(computeIndicatorClientRect);
          }
          /**
           * Deactivates the tab
           */

        }, {
          key: 'deactivate',
          value: function deactivate() {
            this.foundation_.deactivate();
          }
          /**
           * Returns the indicator's client rect
           * @return {!ClientRect}
           */

        }, {
          key: 'computeIndicatorClientRect',
          value: function computeIndicatorClientRect() {
            return this.tabIndicator_.computeContentClientRect();
          }
          /**
           * @return {!MDCTabDimensions}
           */

        }, {
          key: 'computeDimensions',
          value: function computeDimensions() {
            return this.foundation_.computeDimensions();
          }
          /**
           * Focuses the tab
           */

        }, {
          key: 'focus',
          value: function focus() {
            this.root_.focus();
          }
        }, {
          key: 'active',
          get: function get() {
            return this.foundation_.isActive();
          }
        }, {
          key: 'focusOnActivate',
          set: function set(focusOnActivate) {
            this.foundation_.setFocusOnActivate(focusOnActivate);
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCTab(root);
          }
        }]);

        return MDCTab;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 54 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCTabIndicator", function () {
        return MDCTabIndicator;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(55);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(25);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__sliding_foundation__ = __webpack_require__(136);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__fading_foundation__ = __webpack_require__(137);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCTabIndicatorFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCSlidingTabIndicatorFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_3__sliding_foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCFadingTabIndicatorFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_4__fading_foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCComponent<!MDCTabIndicatorFoundation>}
       * @final
       */


      var MDCTabIndicator = function (_MDCComponent) {
        _inherits(MDCTabIndicator, _MDCComponent);

        _createClass(MDCTabIndicator, null, [{
          key: 'attachTo',

          /**
           * @param {!Element} root
           * @return {!MDCTabIndicator}
           */
          value: function attachTo(root) {
            return new MDCTabIndicator(root);
          }
          /**
           * @param {...?} args
           */

        }]);

        function MDCTabIndicator() {
          var _ref;

          _classCallCheck(this, MDCTabIndicator);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @type {?Element} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCTabIndicator.__proto__ || Object.getPrototypeOf(MDCTabIndicator)).call.apply(_ref, [this].concat(args)));

          _this.content_;
          return _this;
        }

        _createClass(MDCTabIndicator, [{
          key: 'initialize',
          value: function initialize() {
            this.content_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ].strings.CONTENT_SELECTOR);
          }
          /**
           * @return {!ClientRect}
           */

        }, {
          key: 'computeContentClientRect',
          value: function computeContentClientRect() {
            return this.foundation_.computeContentClientRect();
          }
          /**
           * @return {!MDCTabIndicatorFoundation}
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this2 = this;

            var adapter =
            /** @type {!MDCTabIndicatorAdapter} */
            _extends({
              addClass: function addClass(className) {
                return _this2.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this2.root_.classList.remove(className);
              },
              computeContentClientRect: function computeContentClientRect() {
                return _this2.content_.getBoundingClientRect();
              },
              setContentStyleProperty: function setContentStyleProperty(prop, value) {
                return _this2.content_.style.setProperty(prop, value);
              }
            });

            if (this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ].cssClasses.FADE)) {
              return new __WEBPACK_IMPORTED_MODULE_4__fading_foundation__["a"
              /* default */
              ](adapter);
            } // Default to the sliding indicator


            return new __WEBPACK_IMPORTED_MODULE_3__sliding_foundation__["a"
            /* default */
            ](adapter);
          }
          /**
           * @param {!ClientRect=} previousIndicatorClientRect
           */

        }, {
          key: 'activate',
          value: function activate(previousIndicatorClientRect) {
            this.foundation_.activate(previousIndicatorClientRect);
          }
        }, {
          key: 'deactivate',
          value: function deactivate() {
            this.foundation_.deactivate();
          }
        }]);

        return MDCTabIndicator;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 55 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Tab Indicator.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the Tab Indicator into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCTabIndicatorAdapter = function () {
        function MDCTabIndicatorAdapter() {
          _classCallCheck(this, MDCTabIndicatorAdapter);
        }

        _createClass(MDCTabIndicatorAdapter, [{
          key: "addClass",

          /**
           * Adds the given className to the root element.
           * @param {string} className The className to add
           */
          value: function addClass(className) {}
          /**
           * Removes the given className from the root element.
           * @param {string} className The className to remove
           */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * Returns the client rect of the content element.
           * @return {!ClientRect}
           */

        }, {
          key: "computeContentClientRect",
          value: function computeContentClientRect() {}
          /**
           * Sets a style property of the content element to the passed value
           * @param {string} propName The style property name to set
           * @param {string} value The style property value
           */

        }, {
          key: "setContentStyleProperty",
          value: function setContentStyleProperty(propName, value) {}
        }]);

        return MDCTabIndicatorAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCTabIndicatorAdapter;
      /***/
    },
    /* 56 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCTabScroller", function () {
        return MDCTabScroller;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(141);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(145);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCTabScrollerFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "util", function () {
        return __WEBPACK_IMPORTED_MODULE_3__util__;
      });

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCComponent<!MDCTabScrollerFoundation>}
       * @final
       */


      var MDCTabScroller = function (_MDCComponent) {
        _inherits(MDCTabScroller, _MDCComponent);

        _createClass(MDCTabScroller, null, [{
          key: 'attachTo',

          /**
           * @param {!Element} root
           * @return {!MDCTabScroller}
           */
          value: function attachTo(root) {
            return new MDCTabScroller(root);
          }
        }]);

        function MDCTabScroller() {
          var _ref;

          _classCallCheck(this, MDCTabScroller);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {?Element} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCTabScroller.__proto__ || Object.getPrototypeOf(MDCTabScroller)).call.apply(_ref, [this].concat(args)));

          _this.content_;
          /** @private {?Element} */

          _this.area_;
          /** @private {?function(?Event): undefined} */

          _this.handleInteraction_;
          /** @private {?function(!Event): undefined} */

          _this.handleTransitionEnd_;
          return _this;
        }

        _createClass(MDCTabScroller, [{
          key: 'initialize',
          value: function initialize() {
            this.area_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ].strings.AREA_SELECTOR);
            this.content_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ].strings.CONTENT_SELECTOR);
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var _this2 = this;

            this.handleInteraction_ = function () {
              return _this2.foundation_.handleInteraction();
            };

            this.handleTransitionEnd_ = function (evt) {
              return _this2.foundation_.handleTransitionEnd(evt);
            };

            this.area_.addEventListener('wheel', this.handleInteraction_);
            this.area_.addEventListener('touchstart', this.handleInteraction_);
            this.area_.addEventListener('pointerdown', this.handleInteraction_);
            this.area_.addEventListener('mousedown', this.handleInteraction_);
            this.area_.addEventListener('keydown', this.handleInteraction_);
            this.content_.addEventListener('transitionend', this.handleTransitionEnd_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            _get(MDCTabScroller.prototype.__proto__ || Object.getPrototypeOf(MDCTabScroller.prototype), 'destroy', this).call(this);

            this.area_.removeEventListener('wheel', this.handleInteraction_);
            this.area_.removeEventListener('touchstart', this.handleInteraction_);
            this.area_.removeEventListener('pointerdown', this.handleInteraction_);
            this.area_.removeEventListener('mousedown', this.handleInteraction_);
            this.area_.removeEventListener('keydown', this.handleInteraction_);
            this.content_.removeEventListener('transitionend', this.handleTransitionEnd_);
          }
          /**
           * @return {!MDCTabScrollerFoundation}
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this3 = this;

            var adapter =
            /** @type {!MDCTabScrollerAdapter} */
            {
              eventTargetMatchesSelector: function eventTargetMatchesSelector(evtTarget, selector) {
                var MATCHES = __WEBPACK_IMPORTED_MODULE_3__util__["getMatchesProperty"](HTMLElement.prototype);

                return evtTarget[MATCHES](selector);
              },
              addClass: function addClass(className) {
                return _this3.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this3.root_.classList.remove(className);
              },
              addScrollAreaClass: function addScrollAreaClass(className) {
                return _this3.area_.classList.add(className);
              },
              setScrollAreaStyleProperty: function setScrollAreaStyleProperty(prop, value) {
                return _this3.area_.style.setProperty(prop, value);
              },
              setScrollContentStyleProperty: function setScrollContentStyleProperty(prop, value) {
                return _this3.content_.style.setProperty(prop, value);
              },
              getScrollContentStyleValue: function getScrollContentStyleValue(propName) {
                return window.getComputedStyle(_this3.content_).getPropertyValue(propName);
              },
              setScrollAreaScrollLeft: function setScrollAreaScrollLeft(scrollX) {
                return _this3.area_.scrollLeft = scrollX;
              },
              getScrollAreaScrollLeft: function getScrollAreaScrollLeft() {
                return _this3.area_.scrollLeft;
              },
              getScrollContentOffsetWidth: function getScrollContentOffsetWidth() {
                return _this3.content_.offsetWidth;
              },
              getScrollAreaOffsetWidth: function getScrollAreaOffsetWidth() {
                return _this3.area_.offsetWidth;
              },
              computeScrollAreaClientRect: function computeScrollAreaClientRect() {
                return _this3.area_.getBoundingClientRect();
              },
              computeScrollContentClientRect: function computeScrollContentClientRect() {
                return _this3.content_.getBoundingClientRect();
              },
              computeHorizontalScrollbarHeight: function computeHorizontalScrollbarHeight() {
                return __WEBPACK_IMPORTED_MODULE_3__util__["computeHorizontalScrollbarHeight"](document);
              }
            };
            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ](adapter);
          }
          /**
           * Returns the current visual scroll position
           * @return {number}
           */

        }, {
          key: 'getScrollPosition',
          value: function getScrollPosition() {
            return this.foundation_.getScrollPosition();
          }
          /**
           * Returns the width of the scroll content
           * @return {number}
           */

        }, {
          key: 'getScrollContentWidth',
          value: function getScrollContentWidth() {
            return this.content_.offsetWidth;
          }
          /**
           * Increments the scroll value by the given amount
           * @param {number} scrollXIncrement The pixel value by which to increment the scroll value
           */

        }, {
          key: 'incrementScroll',
          value: function incrementScroll(scrollXIncrement) {
            this.foundation_.incrementScroll(scrollXIncrement);
          }
          /**
           * Scrolls to the given pixel position
           * @param {number} scrollX The pixel value to scroll to
           */

        }, {
          key: 'scrollTo',
          value: function scrollTo(scrollX) {
            this.foundation_.scrollTo(scrollX);
          }
        }]);

        return MDCTabScroller;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 57 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        ANIMATING: 'mdc-tab-scroller--animating',
        SCROLL_TEST: 'mdc-tab-scroller__test',
        SCROLL_AREA_SCROLL: 'mdc-tab-scroller__scroll-area--scroll'
      };
      /** @enum {string} */

      var strings = {
        AREA_SELECTOR: '.mdc-tab-scroller__scroll-area',
        CONTENT_SELECTOR: '.mdc-tab-scroller__scroll-content'
      };
      /***/
    },
    /* 58 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_tab_adapter__ = __webpack_require__(10);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * Adapter for MDC Tab Bar.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the Tab Bar into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCTabBarAdapter = function () {
        function MDCTabBarAdapter() {
          _classCallCheck(this, MDCTabBarAdapter);
        }

        _createClass(MDCTabBarAdapter, [{
          key: 'scrollTo',

          /**
           * Scrolls to the given position
           * @param {number} scrollX The position to scroll to
           */
          value: function scrollTo(scrollX) {}
          /**
           * Increments the current scroll position by the given amount
           * @param {number} scrollXIncrement The amount to increment scroll
           */

        }, {
          key: 'incrementScroll',
          value: function incrementScroll(scrollXIncrement) {}
          /**
           * Returns the current scroll position
           * @return {number}
           */

        }, {
          key: 'getScrollPosition',
          value: function getScrollPosition() {}
          /**
           * Returns the width of the scroll content
           * @return {number}
           */

        }, {
          key: 'getScrollContentWidth',
          value: function getScrollContentWidth() {}
          /**
           * Returns the root element's offsetWidth
           * @return {number}
           */

        }, {
          key: 'getOffsetWidth',
          value: function getOffsetWidth() {}
          /**
           * Returns if the Tab Bar language direction is RTL
           * @return {boolean}
           */

        }, {
          key: 'isRTL',
          value: function isRTL() {}
          /**
           * Sets the tab at the given index to be activated
           * @param {number} index The index of the tab to activate
           */

        }, {
          key: 'setActiveTab',
          value: function setActiveTab(index) {}
          /**
           * Activates the tab at the given index with the given client rect
           * @param {number} index The index of the tab to activate
           * @param {!ClientRect} clientRect The client rect of the previously active Tab Indicator
           */

        }, {
          key: 'activateTabAtIndex',
          value: function activateTabAtIndex(index, clientRect) {}
          /**
           * Deactivates the tab at the given index
           * @param {number} index The index of the tab to deactivate
           */

        }, {
          key: 'deactivateTabAtIndex',
          value: function deactivateTabAtIndex(index) {}
          /**
           * Focuses the tab at the given index
           * @param {number} index The index of the tab to focus
           */

        }, {
          key: 'focusTabAtIndex',
          value: function focusTabAtIndex(index) {}
          /**
           * Returns the client rect of the tab's indicator
           * @param {number} index The index of the tab
           * @return {!ClientRect}
           */

        }, {
          key: 'getTabIndicatorClientRectAtIndex',
          value: function getTabIndicatorClientRectAtIndex(index) {}
          /**
           * Returns the tab dimensions of the tab at the given index
           * @param {number} index The index of the tab
           * @return {!MDCTabDimensions}
           */

        }, {
          key: 'getTabDimensionsAtIndex',
          value: function getTabDimensionsAtIndex(index) {}
          /**
           * Returns the length of the tab list
           * @return {number}
           */

        }, {
          key: 'getTabListLength',
          value: function getTabListLength() {}
          /**
           * Returns the index of the previously active tab
           * @return {number}
           */

        }, {
          key: 'getPreviousActiveTabIndex',
          value: function getPreviousActiveTabIndex() {}
          /**
           * Returns the index of the focused tab
           * @return {number}
           */

        }, {
          key: 'getFocusedTabIndex',
          value: function getFocusedTabIndex() {}
          /**
           * Returns the index of the given tab
           * @param {string} id The ID of the tab whose index to determine
           * @return {number}
           */

        }, {
          key: 'getIndexOfTabById',
          value: function getIndexOfTabById(id) {}
          /**
           * Emits the MDCTabBar:activated event
           * @param {number} index The index of the activated tab
           */

        }, {
          key: 'notifyTabActivated',
          value: function notifyTabActivated(index) {}
        }]);

        return MDCTabBarAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCTabBarAdapter;
      /***/
    },
    /* 59 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "c", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "e", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "d", function () {
        return numbers;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return VALIDATION_ATTR_WHITELIST;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return ALWAYS_FLOAT_TYPES;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var strings = {
        ARIA_CONTROLS: 'aria-controls',
        INPUT_SELECTOR: '.mdc-text-field__input',
        LABEL_SELECTOR: '.mdc-floating-label',
        ICON_SELECTOR: '.mdc-text-field__icon',
        OUTLINE_SELECTOR: '.mdc-notched-outline',
        LINE_RIPPLE_SELECTOR: '.mdc-line-ripple'
      };
      /** @enum {string} */

      var cssClasses = {
        ROOT: 'mdc-text-field',
        DISABLED: 'mdc-text-field--disabled',
        DENSE: 'mdc-text-field--dense',
        FOCUSED: 'mdc-text-field--focused',
        INVALID: 'mdc-text-field--invalid',
        TEXTAREA: 'mdc-text-field--textarea',
        OUTLINED: 'mdc-text-field--outlined',
        WITH_LEADING_ICON: 'mdc-text-field--with-leading-icon'
      };
      /** @enum {number} */

      var numbers = {
        LABEL_SCALE: 0.75,
        DENSE_LABEL_SCALE: 0.923
      }; // whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation
      // under section: `Validation-related attributes`

      var VALIDATION_ATTR_WHITELIST = ['pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength']; // Label should always float for these types as they show some UI even if value is empty.

      var ALWAYS_FLOAT_TYPES = ['color', 'date', 'datetime-local', 'month', 'range', 'time', 'week'];
      /***/
    },
    /* 60 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* unused harmony export MDCTextFieldAdapter */

      /* unused harmony export NativeInputType */

      /* unused harmony export FoundationMapType */

      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__helper_text_foundation__ = __webpack_require__(26);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__icon_foundation__ = __webpack_require__(27);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * @typedef {{
       *   value: string,
       *   disabled: boolean,
       *   badInput: boolean,
       *   validity: {
       *     badInput: boolean,
       *     valid: boolean,
       *   },
       * }}
       */


      var NativeInputType = void 0;
      /**
       * @typedef {{
       *   helperText: (!MDCTextFieldHelperTextFoundation|undefined),
       *   leadingIcon: (!MDCTextFieldIconFoundation|undefined),
       *   trailingIcon: (!MDCTextFieldIconFoundation|undefined),
       * }}
       */

      var FoundationMapType = void 0;
      /**
       * Adapter for MDC Text Field.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the Text Field into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */

      var MDCTextFieldAdapter = function () {
        function MDCTextFieldAdapter() {
          _classCallCheck(this, MDCTextFieldAdapter);
        }

        _createClass(MDCTextFieldAdapter, [{
          key: 'addClass',

          /**
           * Adds a class to the root Element.
           * @param {string} className
           */
          value: function addClass(className) {}
          /**
           * Removes a class from the root Element.
           * @param {string} className
           */

        }, {
          key: 'removeClass',
          value: function removeClass(className) {}
          /**
           * Returns true if the root element contains the given class name.
           * @param {string} className
           * @return {boolean}
           */

        }, {
          key: 'hasClass',
          value: function hasClass(className) {}
          /**
           * Registers an event handler on the root element for a given event.
           * @param {string} type
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: 'registerTextFieldInteractionHandler',
          value: function registerTextFieldInteractionHandler(type, handler) {}
          /**
           * Deregisters an event handler on the root element for a given event.
           * @param {string} type
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: 'deregisterTextFieldInteractionHandler',
          value: function deregisterTextFieldInteractionHandler(type, handler) {}
          /**
           * Registers an event listener on the native input element for a given event.
           * @param {string} evtType
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: 'registerInputInteractionHandler',
          value: function registerInputInteractionHandler(evtType, handler) {}
          /**
           * Deregisters an event listener on the native input element for a given event.
           * @param {string} evtType
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: 'deregisterInputInteractionHandler',
          value: function deregisterInputInteractionHandler(evtType, handler) {}
          /**
           * Registers a validation attribute change listener on the input element.
           * Handler accepts list of attribute names.
           * @param {function(!Array<string>): undefined} handler
           * @return {!MutationObserver}
           */

        }, {
          key: 'registerValidationAttributeChangeHandler',
          value: function registerValidationAttributeChangeHandler(handler) {}
          /**
           * Disconnects a validation attribute observer on the input element.
           * @param {!MutationObserver} observer
           */

        }, {
          key: 'deregisterValidationAttributeChangeHandler',
          value: function deregisterValidationAttributeChangeHandler(observer) {}
          /**
           * Returns an object representing the native text input element, with a
           * similar API shape. The object returned should include the value, disabled
           * and badInput properties, as well as the checkValidity() function. We never
           * alter the value within our code, however we do update the disabled
           * property, so if you choose to duck-type the return value for this method
           * in your implementation it's important to keep this in mind. Also note that
           * this method can return null, which the foundation will handle gracefully.
           * @return {?Element|?NativeInputType}
           */

        }, {
          key: 'getNativeInput',
          value: function getNativeInput() {}
          /**
           * Returns true if the textfield is focused.
           * We achieve this via `document.activeElement === this.root_`.
           * @return {boolean}
           */

        }, {
          key: 'isFocused',
          value: function isFocused() {}
          /**
           * Activates the line ripple.
           */

        }, {
          key: 'activateLineRipple',
          value: function activateLineRipple() {}
          /**
           * Deactivates the line ripple.
           */

        }, {
          key: 'deactivateLineRipple',
          value: function deactivateLineRipple() {}
          /**
           * Sets the transform origin of the line ripple.
           * @param {number} normalizedX
           */

        }, {
          key: 'setLineRippleTransformOrigin',
          value: function setLineRippleTransformOrigin(normalizedX) {}
          /**
           * Only implement if label exists.
           * Shakes label if shouldShake is true.
           * @param {boolean} shouldShake
           */

        }, {
          key: 'shakeLabel',
          value: function shakeLabel(shouldShake) {}
          /**
           * Only implement if label exists.
           * Floats the label above the input element if shouldFloat is true.
           * @param {boolean} shouldFloat
           */

        }, {
          key: 'floatLabel',
          value: function floatLabel(shouldFloat) {}
          /**
           * Returns true if label element exists, false if it doesn't.
           * @return {boolean}
           */

        }, {
          key: 'hasLabel',
          value: function hasLabel() {}
          /**
           * Only implement if label exists.
           * Returns width of label in pixels.
           * @return {number}
           */

        }, {
          key: 'getLabelWidth',
          value: function getLabelWidth() {}
          /**
           * Returns true if outline element exists, false if it doesn't.
           * @return {boolean}
           */

        }, {
          key: 'hasOutline',
          value: function hasOutline() {}
          /**
           * Only implement if outline element exists.
           * @param {number} labelWidth
           */

        }, {
          key: 'notchOutline',
          value: function notchOutline(labelWidth) {}
          /**
           * Only implement if outline element exists.
           * Closes notch in outline element.
           */

        }, {
          key: 'closeOutline',
          value: function closeOutline() {}
        }]);

        return MDCTextFieldAdapter;
      }();
      /***/

    },
    /* 61 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Text Field Helper Text.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the TextField helper text into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCTextFieldHelperTextAdapter = function () {
        function MDCTextFieldHelperTextAdapter() {
          _classCallCheck(this, MDCTextFieldHelperTextAdapter);
        }

        _createClass(MDCTextFieldHelperTextAdapter, [{
          key: "addClass",

          /**
           * Adds a class to the helper text element.
           * @param {string} className
           */
          value: function addClass(className) {}
          /**
           * Removes a class from the helper text element.
           * @param {string} className
           */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * Returns whether or not the helper text element contains the given class.
           * @param {string} className
           * @return {boolean}
           */

        }, {
          key: "hasClass",
          value: function hasClass(className) {}
          /**
           * Sets an attribute with a given value on the helper text element.
           * @param {string} attr
           * @param {string} value
           */

        }, {
          key: "setAttr",
          value: function setAttr(attr, value) {}
          /**
           * Removes an attribute from the helper text element.
           * @param {string} attr
           */

        }, {
          key: "removeAttr",
          value: function removeAttr(attr) {}
          /**
           * Sets the text content for the helper text element.
           * @param {string} content
           */

        }, {
          key: "setContent",
          value: function setContent(content) {}
        }]);

        return MDCTextFieldHelperTextAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCTextFieldHelperTextAdapter;
      /***/
    },
    /* 62 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Text Field Icon.
       *
       * Defines the shape of the adapter expected by the foundation. Implement this
       * adapter to integrate the text field icon into your framework. See
       * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
       * for more information.
       *
       * @record
       */


      var MDCTextFieldIconAdapter = function () {
        function MDCTextFieldIconAdapter() {
          _classCallCheck(this, MDCTextFieldIconAdapter);
        }

        _createClass(MDCTextFieldIconAdapter, [{
          key: "getAttr",

          /**
           * Gets the value of an attribute on the icon element.
           * @param {string} attr
           * @return {string}
           */
          value: function getAttr(attr) {}
          /**
           * Sets an attribute on the icon element.
           * @param {string} attr
           * @param {string} value
           */

        }, {
          key: "setAttr",
          value: function setAttr(attr, value) {}
          /**
           * Removes an attribute from the icon element.
           * @param {string} attr
           */

        }, {
          key: "removeAttr",
          value: function removeAttr(attr) {}
          /**
           * Sets the text content of the icon element.
           * @param {string} content
           */

        }, {
          key: "setContent",
          value: function setContent(content) {}
          /**
           * Registers an event listener on the icon element for a given event.
           * @param {string} evtType
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "registerInteractionHandler",
          value: function registerInteractionHandler(evtType, handler) {}
          /**
           * Deregisters an event listener on the icon element for a given event.
           * @param {string} evtType
           * @param {function(!Event): undefined} handler
           */

        }, {
          key: "deregisterInteractionHandler",
          value: function deregisterInteractionHandler(evtType, handler) {}
          /**
           * Emits a custom event "MDCTextField:icon" denoting a user has clicked the icon.
           */

        }, {
          key: "notifyIconAction",
          value: function notifyIconAction() {}
        }]);

        return MDCTextFieldIconAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCTextFieldIconAdapter;
      /***/
    },
    /* 63 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__ = __webpack_require__(64);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__material_base_index__ = __webpack_require__(65);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__material_checkbox_index__ = __webpack_require__(66);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__material_chips_index__ = __webpack_require__(72);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__material_dialog_index__ = __webpack_require__(76);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__material_dom_index__ = __webpack_require__(83);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__material_drawer_index__ = __webpack_require__(84);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_7__material_floating_label_index__ = __webpack_require__(9);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_8__material_form_field_index__ = __webpack_require__(91);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_9__material_grid_list_index__ = __webpack_require__(95);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_10__material_icon_button_index__ = __webpack_require__(98);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_11__material_icon_toggle_index__ = __webpack_require__(102);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_12__material_linear_progress_index__ = __webpack_require__(106);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_13__material_line_ripple_index__ = __webpack_require__(17);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_14__material_list_index__ = __webpack_require__(15);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_15__material_menu_index__ = __webpack_require__(42);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_16__material_menu_surface_index__ = __webpack_require__(44);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_17__material_notched_outline_index__ = __webpack_require__(21);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_18__material_radio_index__ = __webpack_require__(115);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_19__material_ripple_index__ = __webpack_require__(2);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_20__material_select_index__ = __webpack_require__(119);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_21__material_selection_control_index__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_22__material_slider_index__ = __webpack_require__(125);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_23__material_snackbar_index__ = __webpack_require__(127);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_24__material_switch_index__ = __webpack_require__(131);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_25__material_tab_index__ = __webpack_require__(53);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_26__material_tab_bar_index__ = __webpack_require__(140);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_27__material_tab_indicator_index__ = __webpack_require__(54);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_28__material_tab_scroller_index__ = __webpack_require__(56);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_29__material_textfield_index__ = __webpack_require__(148);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_30__material_toolbar_index__ = __webpack_require__(154);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_31__material_top_app_bar_index__ = __webpack_require__(157);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "autoInit", function () {
        return __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"];
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "base", function () {
        return __WEBPACK_IMPORTED_MODULE_1__material_base_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "checkbox", function () {
        return __WEBPACK_IMPORTED_MODULE_2__material_checkbox_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "chips", function () {
        return __WEBPACK_IMPORTED_MODULE_3__material_chips_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "dialog", function () {
        return __WEBPACK_IMPORTED_MODULE_4__material_dialog_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "dom", function () {
        return __WEBPACK_IMPORTED_MODULE_5__material_dom_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "drawer", function () {
        return __WEBPACK_IMPORTED_MODULE_6__material_drawer_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "floatingLabel", function () {
        return __WEBPACK_IMPORTED_MODULE_7__material_floating_label_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "formField", function () {
        return __WEBPACK_IMPORTED_MODULE_8__material_form_field_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "gridList", function () {
        return __WEBPACK_IMPORTED_MODULE_9__material_grid_list_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "iconButton", function () {
        return __WEBPACK_IMPORTED_MODULE_10__material_icon_button_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "iconToggle", function () {
        return __WEBPACK_IMPORTED_MODULE_11__material_icon_toggle_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "lineRipple", function () {
        return __WEBPACK_IMPORTED_MODULE_13__material_line_ripple_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "linearProgress", function () {
        return __WEBPACK_IMPORTED_MODULE_12__material_linear_progress_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "list", function () {
        return __WEBPACK_IMPORTED_MODULE_14__material_list_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "menu", function () {
        return __WEBPACK_IMPORTED_MODULE_15__material_menu_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "menuSurface", function () {
        return __WEBPACK_IMPORTED_MODULE_16__material_menu_surface_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "notchedOutline", function () {
        return __WEBPACK_IMPORTED_MODULE_17__material_notched_outline_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "radio", function () {
        return __WEBPACK_IMPORTED_MODULE_18__material_radio_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "ripple", function () {
        return __WEBPACK_IMPORTED_MODULE_19__material_ripple_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "select", function () {
        return __WEBPACK_IMPORTED_MODULE_20__material_select_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "selectionControl", function () {
        return __WEBPACK_IMPORTED_MODULE_21__material_selection_control_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "slider", function () {
        return __WEBPACK_IMPORTED_MODULE_22__material_slider_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "switchControl", function () {
        return __WEBPACK_IMPORTED_MODULE_24__material_switch_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "snackbar", function () {
        return __WEBPACK_IMPORTED_MODULE_23__material_snackbar_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "tab", function () {
        return __WEBPACK_IMPORTED_MODULE_25__material_tab_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "tabBar", function () {
        return __WEBPACK_IMPORTED_MODULE_26__material_tab_bar_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "tabIndicator", function () {
        return __WEBPACK_IMPORTED_MODULE_27__material_tab_indicator_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "tabScroller", function () {
        return __WEBPACK_IMPORTED_MODULE_28__material_tab_scroller_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "textField", function () {
        return __WEBPACK_IMPORTED_MODULE_29__material_textfield_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "toolbar", function () {
        return __WEBPACK_IMPORTED_MODULE_30__material_toolbar_index__;
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "topAppBar", function () {
        return __WEBPACK_IMPORTED_MODULE_31__material_top_app_bar_index__;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */
      // Register all components


      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCCheckbox', __WEBPACK_IMPORTED_MODULE_2__material_checkbox_index__["MDCCheckbox"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCChip', __WEBPACK_IMPORTED_MODULE_3__material_chips_index__["MDCChip"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCChipSet', __WEBPACK_IMPORTED_MODULE_3__material_chips_index__["MDCChipSet"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCDialog', __WEBPACK_IMPORTED_MODULE_4__material_dialog_index__["MDCDialog"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCDrawer', __WEBPACK_IMPORTED_MODULE_6__material_drawer_index__["MDCDrawer"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCFloatingLabel', __WEBPACK_IMPORTED_MODULE_7__material_floating_label_index__["MDCFloatingLabel"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCFormField', __WEBPACK_IMPORTED_MODULE_8__material_form_field_index__["MDCFormField"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCRipple', __WEBPACK_IMPORTED_MODULE_19__material_ripple_index__["MDCRipple"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCGridList', __WEBPACK_IMPORTED_MODULE_9__material_grid_list_index__["MDCGridList"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCIconButtonToggle', __WEBPACK_IMPORTED_MODULE_10__material_icon_button_index__["MDCIconButtonToggle"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCIconToggle', __WEBPACK_IMPORTED_MODULE_11__material_icon_toggle_index__["MDCIconToggle"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCLineRipple', __WEBPACK_IMPORTED_MODULE_13__material_line_ripple_index__["MDCLineRipple"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCLinearProgress', __WEBPACK_IMPORTED_MODULE_12__material_linear_progress_index__["MDCLinearProgress"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCList', __WEBPACK_IMPORTED_MODULE_14__material_list_index__["MDCList"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCNotchedOutline', __WEBPACK_IMPORTED_MODULE_17__material_notched_outline_index__["MDCNotchedOutline"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCRadio', __WEBPACK_IMPORTED_MODULE_18__material_radio_index__["MDCRadio"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCSnackbar', __WEBPACK_IMPORTED_MODULE_23__material_snackbar_index__["MDCSnackbar"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCTabBar', __WEBPACK_IMPORTED_MODULE_26__material_tab_bar_index__["MDCTabBar"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCTextField', __WEBPACK_IMPORTED_MODULE_29__material_textfield_index__["MDCTextField"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCMenu', __WEBPACK_IMPORTED_MODULE_15__material_menu_index__["MDCMenu"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCMenuSurface', __WEBPACK_IMPORTED_MODULE_16__material_menu_surface_index__["MDCMenuSurface"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCSelect', __WEBPACK_IMPORTED_MODULE_20__material_select_index__["MDCSelect"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCSlider', __WEBPACK_IMPORTED_MODULE_22__material_slider_index__["MDCSlider"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCSwitch', __WEBPACK_IMPORTED_MODULE_24__material_switch_index__["MDCSwitch"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCToolbar', __WEBPACK_IMPORTED_MODULE_30__material_toolbar_index__["MDCToolbar"]);

      __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__["a"
      /* default */
      ].register('MDCTopAppBar', __WEBPACK_IMPORTED_MODULE_31__material_top_app_bar_index__["MDCTopAppBar"]); // Export all components.

      /***/

    },
    /* 64 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (immutable) */

      __webpack_exports__["a"] = mdcAutoInit;
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      var registry = Object.create(null);
      var CONSOLE_WARN = console.warn.bind(console);

      function _emit(evtType, evtData) {
        var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var evt = void 0;

        if (typeof CustomEvent === 'function') {
          evt = new CustomEvent(evtType, {
            detail: evtData,
            bubbles: shouldBubble
          });
        } else {
          evt = document.createEvent('CustomEvent');
          evt.initCustomEvent(evtType, shouldBubble, false, evtData);
        }

        document.dispatchEvent(evt);
      }
      /**
       * Auto-initializes all mdc components on a page.
       */


      function mdcAutoInit() {
        var root = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;
        var warn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CONSOLE_WARN;
        var components = [];
        var nodes = root.querySelectorAll('[data-mdc-auto-init]');

        for (var i = 0, node; node = nodes[i]; i++) {
          var ctorName = node.dataset.mdcAutoInit;

          if (!ctorName) {
            throw new Error('(mdc-auto-init) Constructor name must be given.');
          }

          var Ctor = registry[ctorName];

          if (typeof Ctor !== 'function') {
            throw new Error('(mdc-auto-init) Could not find constructor in registry for ' + ctorName);
          }

          if (node[ctorName]) {
            warn('(mdc-auto-init) Component already initialized for ' + node + '. Skipping...');
            continue;
          } // TODO: Should we make an eslint rule for an attachTo() static method?


          var component = Ctor.attachTo(node);
          Object.defineProperty(node, ctorName, {
            value: component,
            writable: false,
            enumerable: false,
            configurable: true
          });
          components.push(component);
        }

        _emit('MDCAutoInit:End', {});

        return components;
      }

      mdcAutoInit.register = function (componentName, Ctor) {
        var warn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : CONSOLE_WARN;

        if (typeof Ctor !== 'function') {
          throw new Error('(mdc-auto-init) Invalid Ctor value ' + Ctor + '. Expected function');
        }

        if (registry[componentName]) {
          warn('(mdc-auto-init) Overriding registration for ' + componentName + ' with ' + Ctor + '. ' + ('Was: ' + registry[componentName]));
        }

        registry[componentName] = Ctor;
      };

      mdcAutoInit.deregister = function (componentName) {
        delete registry[componentName];
      };

      mdcAutoInit.deregisterAll = function () {
        Object.keys(registry).forEach(this.deregister, this);
      };
      /***/

    },
    /* 65 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__component__ = __webpack_require__(1);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_0__foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCComponent", function () {
        return __WEBPACK_IMPORTED_MODULE_1__component__["a"];
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /***/

    },
    /* 66 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCCheckbox", function () {
        return MDCCheckbox;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_animation_index__ = __webpack_require__(13);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__material_selection_control_index__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__foundation__ = __webpack_require__(69);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__ = __webpack_require__(2);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__material_ripple_util__ = __webpack_require__(5);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCCheckboxFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_3__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /** @const {!Array<string>} */


      var CB_PROTO_PROPS = ['checked', 'indeterminate'];
      /**
       * @extends MDCComponent<!MDCCheckboxFoundation>
       * @implements {MDCSelectionControl}
       */

      var MDCCheckbox = function (_MDCComponent) {
        _inherits(MDCCheckbox, _MDCComponent);

        _createClass(MDCCheckbox, [{
          key: 'nativeCb_',

          /**
           * Returns the state of the native control element, or null if the native control element is not present.
           * @return {!MDCSelectionControlState}
           * @private
           */
          get: function get() {
            var NATIVE_CONTROL_SELECTOR = __WEBPACK_IMPORTED_MODULE_3__foundation__["a"
            /* default */
            ].strings.NATIVE_CONTROL_SELECTOR;
            var cbEl =
            /** @type {!MDCSelectionControlState} */
            this.root_.querySelector(NATIVE_CONTROL_SELECTOR);
            return cbEl;
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCCheckbox(root);
          }
        }]);

        function MDCCheckbox() {
          var _ref;

          _classCallCheck(this, MDCCheckbox);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {!MDCRipple} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCCheckbox.__proto__ || Object.getPrototypeOf(MDCCheckbox)).call.apply(_ref, [this].concat(args)));

          _this.ripple_ = _this.initRipple_();
          /** @private {!Function} */

          _this.handleChange_;
          /** @private {!Function} */

          _this.handleAnimationEnd_;
          return _this;
        }

        _createClass(MDCCheckbox, [{
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var _this2 = this;

            this.handleChange_ = function () {
              return _this2.foundation_.handleChange();
            };

            this.handleAnimationEnd_ = function () {
              return _this2.foundation_.handleAnimationEnd();
            };

            this.nativeCb_.addEventListener('change', this.handleChange_);
            this.listen(Object(__WEBPACK_IMPORTED_MODULE_0__material_animation_index__["a"
            /* getCorrectEventName */
            ])(window, 'animationend'), this.handleAnimationEnd_);
            this.installPropertyChangeHooks_();
          }
          /**
           * @return {!MDCRipple}
           * @private
           */

        }, {
          key: 'initRipple_',
          value: function initRipple_() {
            var _this3 = this;

            var MATCHES = Object(__WEBPACK_IMPORTED_MODULE_5__material_ripple_util__["getMatchesProperty"])(HTMLElement.prototype);

            var adapter = _extends(__WEBPACK_IMPORTED_MODULE_4__material_ripple_index__["MDCRipple"].createAdapter(this), {
              isUnbounded: function isUnbounded() {
                return true;
              },
              isSurfaceActive: function isSurfaceActive() {
                return _this3.nativeCb_[MATCHES](':active');
              },
              registerInteractionHandler: function registerInteractionHandler(type, handler) {
                return _this3.nativeCb_.addEventListener(type, handler);
              },
              deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
                return _this3.nativeCb_.removeEventListener(type, handler);
              }
            });

            var foundation = new __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__["MDCRippleFoundation"](adapter);
            return new __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__["MDCRipple"](this.root_, foundation);
          }
          /** @private */

        }, {
          key: 'installPropertyChangeHooks_',
          value: function installPropertyChangeHooks_() {
            var _this4 = this;

            var nativeCb = this.nativeCb_;
            var cbProto = Object.getPrototypeOf(nativeCb);
            CB_PROTO_PROPS.forEach(function (controlState) {
              var desc = Object.getOwnPropertyDescriptor(cbProto, controlState); // We have to check for this descriptor, since some browsers (Safari) don't support its return.
              // See: https://bugs.webkit.org/show_bug.cgi?id=49739

              if (validDescriptor(desc)) {
                var nativeCbDesc =
                /** @type {!ObjectPropertyDescriptor} */
                {
                  get: desc.get,
                  set: function set(state) {
                    desc.set.call(nativeCb, state);

                    _this4.foundation_.handleChange();
                  },
                  configurable: desc.configurable,
                  enumerable: desc.enumerable
                };
                Object.defineProperty(nativeCb, controlState, nativeCbDesc);
              }
            });
          }
          /** @private */

        }, {
          key: 'uninstallPropertyChangeHooks_',
          value: function uninstallPropertyChangeHooks_() {
            var nativeCb = this.nativeCb_;
            var cbProto = Object.getPrototypeOf(nativeCb);
            CB_PROTO_PROPS.forEach(function (controlState) {
              var desc =
              /** @type {!ObjectPropertyDescriptor} */
              Object.getOwnPropertyDescriptor(cbProto, controlState);

              if (validDescriptor(desc)) {
                Object.defineProperty(nativeCb, controlState, desc);
              }
            });
          }
          /** @return {!MDCCheckboxFoundation} */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this5 = this;

            return new __WEBPACK_IMPORTED_MODULE_3__foundation__["a"
            /* default */
            ]({
              addClass: function addClass(className) {
                return _this5.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this5.root_.classList.remove(className);
              },
              setNativeControlAttr: function setNativeControlAttr(attr, value) {
                return _this5.nativeCb_.setAttribute(attr, value);
              },
              removeNativeControlAttr: function removeNativeControlAttr(attr) {
                return _this5.nativeCb_.removeAttribute(attr);
              },
              isIndeterminate: function isIndeterminate() {
                return _this5.indeterminate;
              },
              isChecked: function isChecked() {
                return _this5.checked;
              },
              hasNativeControl: function hasNativeControl() {
                return !!_this5.nativeCb_;
              },
              setNativeControlDisabled: function setNativeControlDisabled(disabled) {
                return _this5.nativeCb_.disabled = disabled;
              },
              forceLayout: function forceLayout() {
                return _this5.root_.offsetWidth;
              },
              isAttachedToDOM: function isAttachedToDOM() {
                return Boolean(_this5.root_.parentNode);
              }
            });
          }
          /** @return {!MDCRipple} */

        }, {
          key: 'destroy',
          value: function destroy() {
            this.ripple_.destroy();
            this.nativeCb_.removeEventListener('change', this.handleChange_);
            this.unlisten(Object(__WEBPACK_IMPORTED_MODULE_0__material_animation_index__["a"
            /* getCorrectEventName */
            ])(window, 'animationend'), this.handleAnimationEnd_);
            this.uninstallPropertyChangeHooks_();

            _get(MDCCheckbox.prototype.__proto__ || Object.getPrototypeOf(MDCCheckbox.prototype), 'destroy', this).call(this);
          }
        }, {
          key: 'ripple',
          get: function get() {
            return this.ripple_;
          }
          /** @return {boolean} */

        }, {
          key: 'checked',
          get: function get() {
            return this.nativeCb_.checked;
          }
          /** @param {boolean} checked */
          ,
          set: function set(checked) {
            this.nativeCb_.checked = checked;
          }
          /** @return {boolean} */

        }, {
          key: 'indeterminate',
          get: function get() {
            return this.nativeCb_.indeterminate;
          }
          /** @param {boolean} indeterminate */
          ,
          set: function set(indeterminate) {
            this.nativeCb_.indeterminate = indeterminate;
          }
          /** @return {boolean} */

        }, {
          key: 'disabled',
          get: function get() {
            return this.nativeCb_.disabled;
          }
          /** @param {boolean} disabled */
          ,
          set: function set(disabled) {
            this.foundation_.setDisabled(disabled);
          }
          /** @return {?string} */

        }, {
          key: 'value',
          get: function get() {
            return this.nativeCb_.value;
          }
          /** @param {?string} value */
          ,
          set: function set(value) {
            this.nativeCb_.value = value;
          }
        }]);

        return MDCCheckbox;
      }(__WEBPACK_IMPORTED_MODULE_1__material_base_component__["a"
      /* default */
      ]);
      /**
       * @param {ObjectPropertyDescriptor|undefined} inputPropDesc
       * @return {boolean}
       */


      function validDescriptor(inputPropDesc) {
        return !!inputPropDesc && typeof inputPropDesc.set === 'function';
      }
      /***/

    },
    /* 67 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(28);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(68);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(5);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @typedef {{
       *   isActivated: (boolean|undefined),
       *   hasDeactivationUXRun: (boolean|undefined),
       *   wasActivatedByPointer: (boolean|undefined),
       *   wasElementMadeActive: (boolean|undefined),
       *   activationEvent: (!Event|undefined),
       *   isProgrammatic: (boolean|undefined)
       * }}
       */


      var ActivationStateType = void 0;
      /**
       * @typedef {{
       *   activate: (string|undefined),
       *   deactivate: (string|undefined),
       *   focus: (string|undefined),
       *   blur: (string|undefined)
       * }}
       */

      var ListenerInfoType = void 0;
      /**
       * @typedef {{
       *   activate: function(!Event),
       *   deactivate: function(!Event=),
       *   focus: function(),
       *   blur: function()
       * }}
       */

      var ListenersType = void 0;
      /**
       * @typedef {{
       *   x: number,
       *   y: number
       * }}
       */

      var PointType = void 0; // Activation events registered on the root element of each instance for activation

      var ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown']; // Deactivation events registered on documentElement when a pointer-related down event occurs

      var POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu']; // Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations

      /** @type {!Array<!EventTarget>} */

      var activatedTargets = [];
      /**
       * @extends {MDCFoundation<!MDCRippleAdapter>}
       */

      var MDCRippleFoundation = function (_MDCFoundation) {
        _inherits(MDCRippleFoundation, _MDCFoundation);

        _createClass(MDCRippleFoundation, null, [{
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["c"
            /* strings */
            ];
          }
        }, {
          key: 'numbers',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* numbers */
            ];
          }
        }, {
          key: 'defaultAdapter',
          get: function get() {
            return {
              browserSupportsCssVars: function browserSupportsCssVars()
              /* boolean - cached */
              {},
              isUnbounded: function isUnbounded()
              /* boolean */
              {},
              isSurfaceActive: function isSurfaceActive()
              /* boolean */
              {},
              isSurfaceDisabled: function isSurfaceDisabled()
              /* boolean */
              {},
              addClass: function addClass()
              /* className: string */
              {},
              removeClass: function removeClass()
              /* className: string */
              {},
              containsEventTarget: function containsEventTarget()
              /* target: !EventTarget */
              {},
              registerInteractionHandler: function registerInteractionHandler()
              /* evtType: string, handler: EventListener */
              {},
              deregisterInteractionHandler: function deregisterInteractionHandler()
              /* evtType: string, handler: EventListener */
              {},
              registerDocumentInteractionHandler: function registerDocumentInteractionHandler()
              /* evtType: string, handler: EventListener */
              {},
              deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler()
              /* evtType: string, handler: EventListener */
              {},
              registerResizeHandler: function registerResizeHandler()
              /* handler: EventListener */
              {},
              deregisterResizeHandler: function deregisterResizeHandler()
              /* handler: EventListener */
              {},
              updateCssVariable: function updateCssVariable()
              /* varName: string, value: string */
              {},
              computeBoundingRect: function computeBoundingRect()
              /* ClientRect */
              {},
              getWindowPageOffset: function getWindowPageOffset()
              /* {x: number, y: number} */
              {}
            };
          }
        }]);

        function MDCRippleFoundation(adapter) {
          _classCallCheck(this, MDCRippleFoundation);
          /** @private {number} */


          var _this = _possibleConstructorReturn(this, (MDCRippleFoundation.__proto__ || Object.getPrototypeOf(MDCRippleFoundation)).call(this, _extends(MDCRippleFoundation.defaultAdapter, adapter)));

          _this.layoutFrame_ = 0;
          /** @private {!ClientRect} */

          _this.frame_ =
          /** @type {!ClientRect} */
          {
            width: 0,
            height: 0
          };
          /** @private {!ActivationStateType} */

          _this.activationState_ = _this.defaultActivationState_();
          /** @private {number} */

          _this.initialSize_ = 0;
          /** @private {number} */

          _this.maxRadius_ = 0;
          /** @private {function(!Event)} */

          _this.activateHandler_ = function (e) {
            return _this.activate_(e);
          };
          /** @private {function(!Event=)} */


          _this.deactivateHandler_ = function () {
            return _this.deactivate_();
          };
          /** @private {function(!Event=)} */


          _this.focusHandler_ = function () {
            return _this.handleFocus();
          };
          /** @private {function(!Event=)} */


          _this.blurHandler_ = function () {
            return _this.handleBlur();
          };
          /** @private {!Function} */


          _this.resizeHandler_ = function () {
            return _this.layout();
          };
          /** @private {{left: number, top:number}} */


          _this.unboundedCoords_ = {
            left: 0,
            top: 0
          };
          /** @private {number} */

          _this.fgScale_ = 0;
          /** @private {number} */

          _this.activationTimer_ = 0;
          /** @private {number} */

          _this.fgDeactivationRemovalTimer_ = 0;
          /** @private {boolean} */

          _this.activationAnimationHasEnded_ = false;
          /** @private {!Function} */

          _this.activationTimerCallback_ = function () {
            _this.activationAnimationHasEnded_ = true;

            _this.runDeactivationUXLogicIfReady_();
          };
          /** @private {!Event|undefined} */


          _this.previousActivationEvent_;
          return _this;
        }
        /**
         * We compute this property so that we are not querying information about the client
         * until the point in time where the foundation requests it. This prevents scenarios where
         * client-side feature-detection may happen too early, such as when components are rendered on the server
         * and then initialized at mount time on the client.
         * @return {boolean}
         * @private
         */


        _createClass(MDCRippleFoundation, [{
          key: 'supportsPressRipple_',
          value: function supportsPressRipple_() {
            return this.adapter_.browserSupportsCssVars();
          }
          /**
           * @return {!ActivationStateType}
           */

        }, {
          key: 'defaultActivationState_',
          value: function defaultActivationState_() {
            return {
              isActivated: false,
              hasDeactivationUXRun: false,
              wasActivatedByPointer: false,
              wasElementMadeActive: false,
              activationEvent: undefined,
              isProgrammatic: false
            };
          }
          /** @override */

        }, {
          key: 'init',
          value: function init() {
            var _this2 = this;

            var supportsPressRipple = this.supportsPressRipple_();
            this.registerRootHandlers_(supportsPressRipple);

            if (supportsPressRipple) {
              var _MDCRippleFoundation$ = MDCRippleFoundation.cssClasses,
                  ROOT = _MDCRippleFoundation$.ROOT,
                  UNBOUNDED = _MDCRippleFoundation$.UNBOUNDED;
              requestAnimationFrame(function () {
                _this2.adapter_.addClass(ROOT);

                if (_this2.adapter_.isUnbounded()) {
                  _this2.adapter_.addClass(UNBOUNDED); // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple


                  _this2.layoutInternal_();
                }
              });
            }
          }
          /** @override */

        }, {
          key: 'destroy',
          value: function destroy() {
            var _this3 = this;

            if (this.supportsPressRipple_()) {
              if (this.activationTimer_) {
                clearTimeout(this.activationTimer_);
                this.activationTimer_ = 0;
                this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);
              }

              if (this.fgDeactivationRemovalTimer_) {
                clearTimeout(this.fgDeactivationRemovalTimer_);
                this.fgDeactivationRemovalTimer_ = 0;
                this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);
              }

              var _MDCRippleFoundation$2 = MDCRippleFoundation.cssClasses,
                  ROOT = _MDCRippleFoundation$2.ROOT,
                  UNBOUNDED = _MDCRippleFoundation$2.UNBOUNDED;
              requestAnimationFrame(function () {
                _this3.adapter_.removeClass(ROOT);

                _this3.adapter_.removeClass(UNBOUNDED);

                _this3.removeCssVars_();
              });
            }

            this.deregisterRootHandlers_();
            this.deregisterDeactivationHandlers_();
          }
          /**
           * @param {boolean} supportsPressRipple Passed from init to save a redundant function call
           * @private
           */

        }, {
          key: 'registerRootHandlers_',
          value: function registerRootHandlers_(supportsPressRipple) {
            var _this4 = this;

            if (supportsPressRipple) {
              ACTIVATION_EVENT_TYPES.forEach(function (type) {
                _this4.adapter_.registerInteractionHandler(type, _this4.activateHandler_);
              });

              if (this.adapter_.isUnbounded()) {
                this.adapter_.registerResizeHandler(this.resizeHandler_);
              }
            }

            this.adapter_.registerInteractionHandler('focus', this.focusHandler_);
            this.adapter_.registerInteractionHandler('blur', this.blurHandler_);
          }
          /**
           * @param {!Event} e
           * @private
           */

        }, {
          key: 'registerDeactivationHandlers_',
          value: function registerDeactivationHandlers_(e) {
            var _this5 = this;

            if (e.type === 'keydown') {
              this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);
            } else {
              POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
                _this5.adapter_.registerDocumentInteractionHandler(type, _this5.deactivateHandler_);
              });
            }
          }
          /** @private */

        }, {
          key: 'deregisterRootHandlers_',
          value: function deregisterRootHandlers_() {
            var _this6 = this;

            ACTIVATION_EVENT_TYPES.forEach(function (type) {
              _this6.adapter_.deregisterInteractionHandler(type, _this6.activateHandler_);
            });
            this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);
            this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);

            if (this.adapter_.isUnbounded()) {
              this.adapter_.deregisterResizeHandler(this.resizeHandler_);
            }
          }
          /** @private */

        }, {
          key: 'deregisterDeactivationHandlers_',
          value: function deregisterDeactivationHandlers_() {
            var _this7 = this;

            this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);
            POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
              _this7.adapter_.deregisterDocumentInteractionHandler(type, _this7.deactivateHandler_);
            });
          }
          /** @private */

        }, {
          key: 'removeCssVars_',
          value: function removeCssVars_() {
            var _this8 = this;

            var strings = MDCRippleFoundation.strings;
            Object.keys(strings).forEach(function (k) {
              if (k.indexOf('VAR_') === 0) {
                _this8.adapter_.updateCssVariable(strings[k], null);
              }
            });
          }
          /**
           * @param {!Event=} e
           * @private
           */

        }, {
          key: 'activate_',
          value: function activate_(e) {
            var _this9 = this;

            if (this.adapter_.isSurfaceDisabled()) {
              return;
            }

            var activationState = this.activationState_;

            if (activationState.isActivated) {
              return;
            } // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction


            var previousActivationEvent = this.previousActivationEvent_;
            var isSameInteraction = previousActivationEvent && e !== undefined && previousActivationEvent.type !== e.type;

            if (isSameInteraction) {
              return;
            }

            activationState.isActivated = true;
            activationState.isProgrammatic = e === undefined;
            activationState.activationEvent = e;
            activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e !== undefined && (e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown');
            var hasActivatedChild = e !== undefined && activatedTargets.length > 0 && activatedTargets.some(function (target) {
              return _this9.adapter_.containsEventTarget(target);
            });

            if (hasActivatedChild) {
              // Immediately reset activation state, while preserving logic that prevents touch follow-on events
              this.resetActivationState_();
              return;
            }

            if (e !== undefined) {
              activatedTargets.push(
              /** @type {!EventTarget} */
              e.target);
              this.registerDeactivationHandlers_(e);
            }

            activationState.wasElementMadeActive = this.checkElementMadeActive_(e);

            if (activationState.wasElementMadeActive) {
              this.animateActivation_();
            }

            requestAnimationFrame(function () {
              // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples
              activatedTargets = [];

              if (!activationState.wasElementMadeActive && e !== undefined && (e.key === ' ' || e.keyCode === 32)) {
                // If space was pressed, try again within an rAF call to detect :active, because different UAs report
                // active states inconsistently when they're called within event handling code:
                // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971
                // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741
                // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS
                // variable is set within a rAF callback for a submit button interaction (#2241).
                activationState.wasElementMadeActive = _this9.checkElementMadeActive_(e);

                if (activationState.wasElementMadeActive) {
                  _this9.animateActivation_();
                }
              }

              if (!activationState.wasElementMadeActive) {
                // Reset activation state immediately if element was not made active.
                _this9.activationState_ = _this9.defaultActivationState_();
              }
            });
          }
          /**
           * @param {!Event=} e
           * @private
           */

        }, {
          key: 'checkElementMadeActive_',
          value: function checkElementMadeActive_(e) {
            return e !== undefined && e.type === 'keydown' ? this.adapter_.isSurfaceActive() : true;
          }
          /**
           * @param {!Event=} event Optional event containing position information.
           */

        }, {
          key: 'activate',
          value: function activate(event) {
            this.activate_(event);
          }
          /** @private */

        }, {
          key: 'animateActivation_',
          value: function animateActivation_() {
            var _this10 = this;

            var _MDCRippleFoundation$3 = MDCRippleFoundation.strings,
                VAR_FG_TRANSLATE_START = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_START,
                VAR_FG_TRANSLATE_END = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_END;
            var _MDCRippleFoundation$4 = MDCRippleFoundation.cssClasses,
                FG_DEACTIVATION = _MDCRippleFoundation$4.FG_DEACTIVATION,
                FG_ACTIVATION = _MDCRippleFoundation$4.FG_ACTIVATION;
            var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;
            this.layoutInternal_();
            var translateStart = '';
            var translateEnd = '';

            if (!this.adapter_.isUnbounded()) {
              var _getFgTranslationCoor = this.getFgTranslationCoordinates_(),
                  startPoint = _getFgTranslationCoor.startPoint,
                  endPoint = _getFgTranslationCoor.endPoint;

              translateStart = startPoint.x + 'px, ' + startPoint.y + 'px';
              translateEnd = endPoint.x + 'px, ' + endPoint.y + 'px';
            }

            this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);
            this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd); // Cancel any ongoing activation/deactivation animations

            clearTimeout(this.activationTimer_);
            clearTimeout(this.fgDeactivationRemovalTimer_);
            this.rmBoundedActivationClasses_();
            this.adapter_.removeClass(FG_DEACTIVATION); // Force layout in order to re-trigger the animation.

            this.adapter_.computeBoundingRect();
            this.adapter_.addClass(FG_ACTIVATION);
            this.activationTimer_ = setTimeout(function () {
              return _this10.activationTimerCallback_();
            }, DEACTIVATION_TIMEOUT_MS);
          }
          /**
           * @private
           * @return {{startPoint: PointType, endPoint: PointType}}
           */

        }, {
          key: 'getFgTranslationCoordinates_',
          value: function getFgTranslationCoordinates_() {
            var _activationState_ = this.activationState_,
                activationEvent = _activationState_.activationEvent,
                wasActivatedByPointer = _activationState_.wasActivatedByPointer;
            var startPoint = void 0;

            if (wasActivatedByPointer) {
              startPoint = Object(__WEBPACK_IMPORTED_MODULE_3__util__["getNormalizedEventCoords"])(
              /** @type {!Event} */
              activationEvent, this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect());
            } else {
              startPoint = {
                x: this.frame_.width / 2,
                y: this.frame_.height / 2
              };
            } // Center the element around the start point.


            startPoint = {
              x: startPoint.x - this.initialSize_ / 2,
              y: startPoint.y - this.initialSize_ / 2
            };
            var endPoint = {
              x: this.frame_.width / 2 - this.initialSize_ / 2,
              y: this.frame_.height / 2 - this.initialSize_ / 2
            };
            return {
              startPoint: startPoint,
              endPoint: endPoint
            };
          }
          /** @private */

        }, {
          key: 'runDeactivationUXLogicIfReady_',
          value: function runDeactivationUXLogicIfReady_() {
            var _this11 = this; // This method is called both when a pointing device is released, and when the activation animation ends.
            // The deactivation animation should only run after both of those occur.


            var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;
            var _activationState_2 = this.activationState_,
                hasDeactivationUXRun = _activationState_2.hasDeactivationUXRun,
                isActivated = _activationState_2.isActivated;
            var activationHasEnded = hasDeactivationUXRun || !isActivated;

            if (activationHasEnded && this.activationAnimationHasEnded_) {
              this.rmBoundedActivationClasses_();
              this.adapter_.addClass(FG_DEACTIVATION);
              this.fgDeactivationRemovalTimer_ = setTimeout(function () {
                _this11.adapter_.removeClass(FG_DEACTIVATION);
              }, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ].FG_DEACTIVATION_MS);
            }
          }
          /** @private */

        }, {
          key: 'rmBoundedActivationClasses_',
          value: function rmBoundedActivationClasses_() {
            var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;
            this.adapter_.removeClass(FG_ACTIVATION);
            this.activationAnimationHasEnded_ = false;
            this.adapter_.computeBoundingRect();
          }
        }, {
          key: 'resetActivationState_',
          value: function resetActivationState_() {
            var _this12 = this;

            this.previousActivationEvent_ = this.activationState_.activationEvent;
            this.activationState_ = this.defaultActivationState_(); // Touch devices may fire additional events for the same interaction within a short time.
            // Store the previous event until it's safe to assume that subsequent events are for new interactions.

            setTimeout(function () {
              return _this12.previousActivationEvent_ = undefined;
            }, MDCRippleFoundation.numbers.TAP_DELAY_MS);
          }
          /**
           * @private
           */

        }, {
          key: 'deactivate_',
          value: function deactivate_() {
            var _this13 = this;

            var activationState = this.activationState_; // This can happen in scenarios such as when you have a keyup event that blurs the element.

            if (!activationState.isActivated) {
              return;
            }

            var state =
            /** @type {!ActivationStateType} */
            _extends({}, activationState);

            if (activationState.isProgrammatic) {
              requestAnimationFrame(function () {
                return _this13.animateDeactivation_(state);
              });
              this.resetActivationState_();
            } else {
              this.deregisterDeactivationHandlers_();
              requestAnimationFrame(function () {
                _this13.activationState_.hasDeactivationUXRun = true;

                _this13.animateDeactivation_(state);

                _this13.resetActivationState_();
              });
            }
          }
        }, {
          key: 'deactivate',
          value: function deactivate() {
            this.deactivate_();
          }
          /**
           * @param {!ActivationStateType} options
           * @private
           */

        }, {
          key: 'animateDeactivation_',
          value: function animateDeactivation_(_ref) {
            var wasActivatedByPointer = _ref.wasActivatedByPointer,
                wasElementMadeActive = _ref.wasElementMadeActive;

            if (wasActivatedByPointer || wasElementMadeActive) {
              this.runDeactivationUXLogicIfReady_();
            }
          }
        }, {
          key: 'layout',
          value: function layout() {
            var _this14 = this;

            if (this.layoutFrame_) {
              cancelAnimationFrame(this.layoutFrame_);
            }

            this.layoutFrame_ = requestAnimationFrame(function () {
              _this14.layoutInternal_();

              _this14.layoutFrame_ = 0;
            });
          }
          /** @private */

        }, {
          key: 'layoutInternal_',
          value: function layoutInternal_() {
            var _this15 = this;

            this.frame_ = this.adapter_.computeBoundingRect();
            var maxDim = Math.max(this.frame_.height, this.frame_.width); // Surface diameter is treated differently for unbounded vs. bounded ripples.
            // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately
            // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically
            // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter
            // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via
            // `overflow: hidden`.

            var getBoundedRadius = function getBoundedRadius() {
              var hypotenuse = Math.sqrt(Math.pow(_this15.frame_.width, 2) + Math.pow(_this15.frame_.height, 2));
              return hypotenuse + MDCRippleFoundation.numbers.PADDING;
            };

            this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius(); // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform

            this.initialSize_ = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);
            this.fgScale_ = this.maxRadius_ / this.initialSize_;
            this.updateLayoutCssVars_();
          }
          /** @private */

        }, {
          key: 'updateLayoutCssVars_',
          value: function updateLayoutCssVars_() {
            var _MDCRippleFoundation$5 = MDCRippleFoundation.strings,
                VAR_FG_SIZE = _MDCRippleFoundation$5.VAR_FG_SIZE,
                VAR_LEFT = _MDCRippleFoundation$5.VAR_LEFT,
                VAR_TOP = _MDCRippleFoundation$5.VAR_TOP,
                VAR_FG_SCALE = _MDCRippleFoundation$5.VAR_FG_SCALE;
            this.adapter_.updateCssVariable(VAR_FG_SIZE, this.initialSize_ + 'px');
            this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);

            if (this.adapter_.isUnbounded()) {
              this.unboundedCoords_ = {
                left: Math.round(this.frame_.width / 2 - this.initialSize_ / 2),
                top: Math.round(this.frame_.height / 2 - this.initialSize_ / 2)
              };
              this.adapter_.updateCssVariable(VAR_LEFT, this.unboundedCoords_.left + 'px');
              this.adapter_.updateCssVariable(VAR_TOP, this.unboundedCoords_.top + 'px');
            }
          }
          /** @param {boolean} unbounded */

        }, {
          key: 'setUnbounded',
          value: function setUnbounded(unbounded) {
            var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;

            if (unbounded) {
              this.adapter_.addClass(UNBOUNDED);
            } else {
              this.adapter_.removeClass(UNBOUNDED);
            }
          }
        }, {
          key: 'handleFocus',
          value: function handleFocus() {
            var _this16 = this;

            requestAnimationFrame(function () {
              return _this16.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
            });
          }
        }, {
          key: 'handleBlur',
          value: function handleBlur() {
            var _this17 = this;

            requestAnimationFrame(function () {
              return _this17.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
            });
          }
        }]);

        return MDCRippleFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCRippleFoundation;
      /***/
    },
    /* 68 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "c", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return numbers;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var cssClasses = {
        // Ripple is a special case where the "root" component is really a "mixin" of sorts,
        // given that it's an 'upgrade' to an existing component. That being said it is the root
        // CSS class that all other CSS classes derive from.
        ROOT: 'mdc-ripple-upgraded',
        UNBOUNDED: 'mdc-ripple-upgraded--unbounded',
        BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',
        FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',
        FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation'
      };
      var strings = {
        VAR_LEFT: '--mdc-ripple-left',
        VAR_TOP: '--mdc-ripple-top',
        VAR_FG_SIZE: '--mdc-ripple-fg-size',
        VAR_FG_SCALE: '--mdc-ripple-fg-scale',
        VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',
        VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end'
      };
      var numbers = {
        PADDING: 10,
        INITIAL_ORIGIN_SCALE: 0.6,
        DEACTIVATION_TIMEOUT_MS: 225,
        // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)
        FG_DEACTIVATION_MS: 150,
        // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)
        TAP_DELAY_MS: 300
      };
      /***/
    },
    /* 69 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__material_selection_control_index__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__adapter__ = __webpack_require__(70);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__constants__ = __webpack_require__(71);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @extends {MDCFoundation<!MDCCheckboxAdapter>}
       */


      var MDCCheckboxFoundation = function (_MDCFoundation) {
        _inherits(MDCCheckboxFoundation, _MDCFoundation);

        _createClass(MDCCheckboxFoundation, null, [{
          key: 'cssClasses',

          /** @return enum {cssClasses} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_3__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return enum {strings} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_3__constants__["c"
            /* strings */
            ];
          }
          /** @return enum {numbers} */

        }, {
          key: 'numbers',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_3__constants__["b"
            /* numbers */
            ];
          }
          /** @return {!MDCCheckboxAdapter} */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCCheckboxAdapter} */
              {
                addClass: function addClass()
                /* className: string */
                {},
                removeClass: function removeClass()
                /* className: string */
                {},
                setNativeControlAttr: function setNativeControlAttr()
                /* attr: string, value: string */
                {},
                removeNativeControlAttr: function removeNativeControlAttr()
                /* attr: string */
                {},
                forceLayout: function forceLayout() {},
                isAttachedToDOM: function isAttachedToDOM()
                /* boolean */
                {},
                isIndeterminate: function isIndeterminate()
                /* boolean */
                {},
                isChecked: function isChecked()
                /* boolean */
                {},
                hasNativeControl: function hasNativeControl()
                /* boolean */
                {},
                setNativeControlDisabled: function setNativeControlDisabled()
                /* disabled: boolean */
                {}
              }
            );
          }
        }]);

        function MDCCheckboxFoundation(adapter) {
          _classCallCheck(this, MDCCheckboxFoundation);
          /** @private {string} */


          var _this = _possibleConstructorReturn(this, (MDCCheckboxFoundation.__proto__ || Object.getPrototypeOf(MDCCheckboxFoundation)).call(this, _extends(MDCCheckboxFoundation.defaultAdapter, adapter)));

          _this.currentCheckState_ = __WEBPACK_IMPORTED_MODULE_3__constants__["c"
          /* strings */
          ].TRANSITION_STATE_INIT;
          /** @private {string} */

          _this.currentAnimationClass_ = '';
          /** @private {number} */

          _this.animEndLatchTimer_ = 0;
          /** @private {boolean} */

          _this.enableAnimationEndHandler_ = false;
          return _this;
        }
        /** @override */


        _createClass(MDCCheckboxFoundation, [{
          key: 'init',
          value: function init() {
            this.currentCheckState_ = this.determineCheckState_();
            this.updateAriaChecked_();
            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_3__constants__["a"
            /* cssClasses */
            ].UPGRADED);
          }
          /** @override */

        }, {
          key: 'destroy',
          value: function destroy() {
            clearTimeout(this.animEndLatchTimer_);
          }
          /** @param {boolean} disabled */

        }, {
          key: 'setDisabled',
          value: function setDisabled(disabled) {
            this.adapter_.setNativeControlDisabled(disabled);

            if (disabled) {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_3__constants__["a"
              /* cssClasses */
              ].DISABLED);
            } else {
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_3__constants__["a"
              /* cssClasses */
              ].DISABLED);
            }
          }
          /**
           * Handles the animationend event for the checkbox
           */

        }, {
          key: 'handleAnimationEnd',
          value: function handleAnimationEnd() {
            var _this2 = this;

            if (!this.enableAnimationEndHandler_) return;
            clearTimeout(this.animEndLatchTimer_);
            this.animEndLatchTimer_ = setTimeout(function () {
              _this2.adapter_.removeClass(_this2.currentAnimationClass_);

              _this2.enableAnimationEndHandler_ = false;
            }, __WEBPACK_IMPORTED_MODULE_3__constants__["b"
            /* numbers */
            ].ANIM_END_LATCH_MS);
          }
          /**
           * Handles the change event for the checkbox
           */

        }, {
          key: 'handleChange',
          value: function handleChange() {
            this.transitionCheckState_();
          }
          /** @private */

        }, {
          key: 'transitionCheckState_',
          value: function transitionCheckState_() {
            if (!this.adapter_.hasNativeControl()) {
              return;
            }

            var oldState = this.currentCheckState_;
            var newState = this.determineCheckState_();

            if (oldState === newState) {
              return;
            }

            this.updateAriaChecked_(); // Check to ensure that there isn't a previously existing animation class, in case for example
            // the user interacted with the checkbox before the animation was finished.

            if (this.currentAnimationClass_.length > 0) {
              clearTimeout(this.animEndLatchTimer_);
              this.adapter_.forceLayout();
              this.adapter_.removeClass(this.currentAnimationClass_);
            }

            this.currentAnimationClass_ = this.getTransitionAnimationClass_(oldState, newState);
            this.currentCheckState_ = newState; // Check for parentNode so that animations are only run when the element is attached
            // to the DOM.

            if (this.adapter_.isAttachedToDOM() && this.currentAnimationClass_.length > 0) {
              this.adapter_.addClass(this.currentAnimationClass_);
              this.enableAnimationEndHandler_ = true;
            }
          }
          /**
           * @return {string}
           * @private
           */

        }, {
          key: 'determineCheckState_',
          value: function determineCheckState_() {
            var TRANSITION_STATE_INDETERMINATE = __WEBPACK_IMPORTED_MODULE_3__constants__["c"
            /* strings */
            ].TRANSITION_STATE_INDETERMINATE,
                TRANSITION_STATE_CHECKED = __WEBPACK_IMPORTED_MODULE_3__constants__["c"
            /* strings */
            ].TRANSITION_STATE_CHECKED,
                TRANSITION_STATE_UNCHECKED = __WEBPACK_IMPORTED_MODULE_3__constants__["c"
            /* strings */
            ].TRANSITION_STATE_UNCHECKED;

            if (this.adapter_.isIndeterminate()) {
              return TRANSITION_STATE_INDETERMINATE;
            }

            return this.adapter_.isChecked() ? TRANSITION_STATE_CHECKED : TRANSITION_STATE_UNCHECKED;
          }
          /**
           * @param {string} oldState
           * @param {string} newState
           * @return {string}
           */

        }, {
          key: 'getTransitionAnimationClass_',
          value: function getTransitionAnimationClass_(oldState, newState) {
            var TRANSITION_STATE_INIT = __WEBPACK_IMPORTED_MODULE_3__constants__["c"
            /* strings */
            ].TRANSITION_STATE_INIT,
                TRANSITION_STATE_CHECKED = __WEBPACK_IMPORTED_MODULE_3__constants__["c"
            /* strings */
            ].TRANSITION_STATE_CHECKED,
                TRANSITION_STATE_UNCHECKED = __WEBPACK_IMPORTED_MODULE_3__constants__["c"
            /* strings */
            ].TRANSITION_STATE_UNCHECKED;
            var _MDCCheckboxFoundatio = MDCCheckboxFoundation.cssClasses,
                ANIM_UNCHECKED_CHECKED = _MDCCheckboxFoundatio.ANIM_UNCHECKED_CHECKED,
                ANIM_UNCHECKED_INDETERMINATE = _MDCCheckboxFoundatio.ANIM_UNCHECKED_INDETERMINATE,
                ANIM_CHECKED_UNCHECKED = _MDCCheckboxFoundatio.ANIM_CHECKED_UNCHECKED,
                ANIM_CHECKED_INDETERMINATE = _MDCCheckboxFoundatio.ANIM_CHECKED_INDETERMINATE,
                ANIM_INDETERMINATE_CHECKED = _MDCCheckboxFoundatio.ANIM_INDETERMINATE_CHECKED,
                ANIM_INDETERMINATE_UNCHECKED = _MDCCheckboxFoundatio.ANIM_INDETERMINATE_UNCHECKED;

            switch (oldState) {
              case TRANSITION_STATE_INIT:
                if (newState === TRANSITION_STATE_UNCHECKED) {
                  return '';
                }

              // fallthrough

              case TRANSITION_STATE_UNCHECKED:
                return newState === TRANSITION_STATE_CHECKED ? ANIM_UNCHECKED_CHECKED : ANIM_UNCHECKED_INDETERMINATE;

              case TRANSITION_STATE_CHECKED:
                return newState === TRANSITION_STATE_UNCHECKED ? ANIM_CHECKED_UNCHECKED : ANIM_CHECKED_INDETERMINATE;
              // TRANSITION_STATE_INDETERMINATE

              default:
                return newState === TRANSITION_STATE_CHECKED ? ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;
            }
          }
        }, {
          key: 'updateAriaChecked_',
          value: function updateAriaChecked_() {
            // Ensure aria-checked is set to mixed if checkbox is in indeterminate state.
            if (this.adapter_.isIndeterminate()) {
              this.adapter_.setNativeControlAttr(__WEBPACK_IMPORTED_MODULE_3__constants__["c"
              /* strings */
              ].ARIA_CHECKED_ATTR, __WEBPACK_IMPORTED_MODULE_3__constants__["c"
              /* strings */
              ].ARIA_CHECKED_INDETERMINATE_VALUE);
            } else {
              // The on/off state does not need to keep track of aria-checked, since
              // the screenreader uses the checked property on the checkbox element.
              this.adapter_.removeNativeControlAttr(__WEBPACK_IMPORTED_MODULE_3__constants__["c"
              /* strings */
              ].ARIA_CHECKED_ATTR);
            }
          }
        }]);

        return MDCCheckboxFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCCheckboxFoundation;
      /***/
    },
    /* 70 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_selection_control_index__ = __webpack_require__(3);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Checkbox. Provides an interface for managing
       * - classes
       * - dom
       * - event handlers
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCCheckboxAdapter = function () {
        function MDCCheckboxAdapter() {
          _classCallCheck(this, MDCCheckboxAdapter);
        }

        _createClass(MDCCheckboxAdapter, [{
          key: 'addClass',

          /** @param {string} className */
          value: function addClass(className) {}
          /** @param {string} className */

        }, {
          key: 'removeClass',
          value: function removeClass(className) {}
          /**
           * Sets an attribute with a given value on the input element.
           * @param {string} attr
           * @param {string} value
           */

        }, {
          key: 'setNativeControlAttr',
          value: function setNativeControlAttr(attr, value) {}
          /**
           * Removes an attribute from the input element.
           * @param {string} attr
           */

        }, {
          key: 'removeNativeControlAttr',
          value: function removeNativeControlAttr(attr) {}
        }, {
          key: 'forceLayout',
          value: function forceLayout() {}
          /** @return {boolean} */

        }, {
          key: 'isAttachedToDOM',
          value: function isAttachedToDOM() {}
          /** @return {boolean} */

        }, {
          key: 'isIndeterminate',
          value: function isIndeterminate() {}
          /** @return {boolean} */

        }, {
          key: 'isChecked',
          value: function isChecked() {}
          /** @return {boolean} */

        }, {
          key: 'hasNativeControl',
          value: function hasNativeControl() {}
          /** @param {boolean} disabled */

        }, {
          key: 'setNativeControlDisabled',
          value: function setNativeControlDisabled(disabled) {}
        }]);

        return MDCCheckboxAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCCheckboxAdapter;
      /***/
    },
    /* 71 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "c", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return numbers;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @const {string} */


      var ROOT = 'mdc-checkbox';
      /** @enum {string} */

      var cssClasses = {
        UPGRADED: 'mdc-checkbox--upgraded',
        CHECKED: 'mdc-checkbox--checked',
        INDETERMINATE: 'mdc-checkbox--indeterminate',
        DISABLED: 'mdc-checkbox--disabled',
        ANIM_UNCHECKED_CHECKED: 'mdc-checkbox--anim-unchecked-checked',
        ANIM_UNCHECKED_INDETERMINATE: 'mdc-checkbox--anim-unchecked-indeterminate',
        ANIM_CHECKED_UNCHECKED: 'mdc-checkbox--anim-checked-unchecked',
        ANIM_CHECKED_INDETERMINATE: 'mdc-checkbox--anim-checked-indeterminate',
        ANIM_INDETERMINATE_CHECKED: 'mdc-checkbox--anim-indeterminate-checked',
        ANIM_INDETERMINATE_UNCHECKED: 'mdc-checkbox--anim-indeterminate-unchecked'
      };
      /** @enum {string} */

      var strings = {
        NATIVE_CONTROL_SELECTOR: '.' + ROOT + '__native-control',
        TRANSITION_STATE_INIT: 'init',
        TRANSITION_STATE_CHECKED: 'checked',
        TRANSITION_STATE_UNCHECKED: 'unchecked',
        TRANSITION_STATE_INDETERMINATE: 'indeterminate',
        ARIA_CHECKED_ATTR: 'aria-checked',
        ARIA_CHECKED_INDETERMINATE_VALUE: 'mixed'
      };
      /** @enum {number} */

      var numbers = {
        ANIM_END_LATCH_MS: 250
      };
      /***/
    },
    /* 72 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__chip_index__ = __webpack_require__(29);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__chip_set_index__ = __webpack_require__(73);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCChipFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_0__chip_index__["b"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCChip", function () {
        return __WEBPACK_IMPORTED_MODULE_0__chip_index__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCChipSetFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_1__chip_set_index__["b"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCChipSet", function () {
        return __WEBPACK_IMPORTED_MODULE_1__chip_set_index__["a"];
      });
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /***/

    },
    /* 73 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return MDCChipSet;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(33);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(74);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__chip_index__ = __webpack_require__(29);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var idCounter = 0;
      /**
       * @extends {MDCComponent<!MDCChipSetFoundation>}
       * @final
       */

      var MDCChipSet = function (_MDCComponent) {
        _inherits(MDCChipSet, _MDCComponent);
        /**
         * @param {...?} args
         */


        function MDCChipSet() {
          var _ref;

          _classCallCheck(this, MDCChipSet);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @type {!Array<!MDCChip>} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCChipSet.__proto__ || Object.getPrototypeOf(MDCChipSet)).call.apply(_ref, [this].concat(args)));

          _this.chips;
          /** @private {(function(!Element): !MDCChip)} */

          _this.chipFactory_;
          /** @private {?function(?Event): undefined} */

          _this.handleChipInteraction_;
          /** @private {?function(?Event): undefined} */

          _this.handleChipSelection_;
          /** @private {?function(?Event): undefined} */

          _this.handleChipRemoval_;
          return _this;
        }
        /**
         * @param {!Element} root
         * @return {!MDCChipSet}
         */


        _createClass(MDCChipSet, [{
          key: 'initialize',

          /**
           * @param {(function(!Element): !MDCChip)=} chipFactory A function which
           * creates a new MDCChip.
           */
          value: function initialize() {
            var chipFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_3__chip_index__["a"
              /* MDCChip */
              ](el);
            };
            this.chipFactory_ = chipFactory;
            this.chips = this.instantiateChips_(this.chipFactory_);
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var _this2 = this;

            this.chips.forEach(function (chip) {
              if (chip.selected) {
                _this2.foundation_.select(chip.id);
              }
            });

            this.handleChipInteraction_ = function (evt) {
              return _this2.foundation_.handleChipInteraction(evt.detail.chipId);
            };

            this.handleChipSelection_ = function (evt) {
              return _this2.foundation_.handleChipSelection(evt.detail.chipId, evt.detail.selected);
            };

            this.handleChipRemoval_ = function (evt) {
              return _this2.foundation_.handleChipRemoval(evt.detail.chipId);
            };

            this.root_.addEventListener(__WEBPACK_IMPORTED_MODULE_3__chip_index__["b"
            /* MDCChipFoundation */
            ].strings.INTERACTION_EVENT, this.handleChipInteraction_);
            this.root_.addEventListener(__WEBPACK_IMPORTED_MODULE_3__chip_index__["b"
            /* MDCChipFoundation */
            ].strings.SELECTION_EVENT, this.handleChipSelection_);
            this.root_.addEventListener(__WEBPACK_IMPORTED_MODULE_3__chip_index__["b"
            /* MDCChipFoundation */
            ].strings.REMOVAL_EVENT, this.handleChipRemoval_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.chips.forEach(function (chip) {
              chip.destroy();
            });
            this.root_.removeEventListener(__WEBPACK_IMPORTED_MODULE_3__chip_index__["b"
            /* MDCChipFoundation */
            ].strings.INTERACTION_EVENT, this.handleChipInteraction_);
            this.root_.removeEventListener(__WEBPACK_IMPORTED_MODULE_3__chip_index__["b"
            /* MDCChipFoundation */
            ].strings.SELECTION_EVENT, this.handleChipSelection_);
            this.root_.removeEventListener(__WEBPACK_IMPORTED_MODULE_3__chip_index__["b"
            /* MDCChipFoundation */
            ].strings.REMOVAL_EVENT, this.handleChipRemoval_);

            _get(MDCChipSet.prototype.__proto__ || Object.getPrototypeOf(MDCChipSet.prototype), 'destroy', this).call(this);
          }
          /**
           * Adds a new chip object to the chip set from the given chip element.
           * @param {!Element} chipEl
           */

        }, {
          key: 'addChip',
          value: function addChip(chipEl) {
            chipEl.id = chipEl.id || 'mdc-chip-' + ++idCounter;
            this.chips.push(this.chipFactory_(chipEl));
          }
          /**
           * Returns an array of the IDs of all selected chips.
           * @return {!Array<string>}
           */

        }, {
          key: 'getDefaultFoundation',

          /**
           * @return {!MDCChipSetFoundation}
           */
          value: function getDefaultFoundation() {
            var _this3 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ](
            /** @type {!MDCChipSetAdapter} */
            _extends({
              hasClass: function hasClass(className) {
                return _this3.root_.classList.contains(className);
              },
              removeChip: function removeChip(chipId) {
                var index = _this3.findChipIndex_(chipId);

                if (index >= 0) {
                  _this3.chips[index].destroy();

                  _this3.chips.splice(index, 1);
                }
              },
              setSelected: function setSelected(chipId, selected) {
                var index = _this3.findChipIndex_(chipId);

                if (index >= 0) {
                  _this3.chips[index].selected = selected;
                }
              }
            }));
          }
          /**
           * Instantiates chip components on all of the chip set's child chip elements.
           * @param {(function(!Element): !MDCChip)} chipFactory
           * @return {!Array<!MDCChip>}
           */

        }, {
          key: 'instantiateChips_',
          value: function instantiateChips_(chipFactory) {
            var chipElements = [].slice.call(this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ].strings.CHIP_SELECTOR));
            return chipElements.map(function (el) {
              el.id = el.id || 'mdc-chip-' + ++idCounter;
              return chipFactory(el);
            });
          }
          /**
           * Returns the index of the chip with the given id, or -1 if the chip does not exist.
           * @param {string} chipId
           * @return {number}
           */

        }, {
          key: 'findChipIndex_',
          value: function findChipIndex_(chipId) {
            for (var i = 0; i < this.chips.length; i++) {
              if (this.chips[i].id === chipId) {
                return i;
              }
            }

            return -1;
          }
        }, {
          key: 'selectedChipIds',
          get: function get() {
            return this.foundation_.getSelectedChipIds();
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCChipSet(root);
          }
        }]);

        return MDCChipSet;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 74 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(33);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__chip_foundation__ = __webpack_require__(31);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__constants__ = __webpack_require__(75);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */
      // eslint-disable-next-line no-unused-vars

      /**
       * @extends {MDCFoundation<!MDCChipSetAdapter>}
       * @final
       */


      var MDCChipSetFoundation = function (_MDCFoundation) {
        _inherits(MDCChipSetFoundation, _MDCFoundation);

        _createClass(MDCChipSetFoundation, null, [{
          key: 'strings',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_3__constants__["b"
            /* strings */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_3__constants__["a"
            /* cssClasses */
            ];
          }
          /**
           * {@see MDCChipSetAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCChipSetAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCChipSetAdapter} */
              {
                hasClass: function hasClass() {},
                removeChip: function removeChip() {},
                setSelected: function setSelected() {}
              }
            );
          }
          /**
           * @param {!MDCChipSetAdapter} adapter
           */

        }]);

        function MDCChipSetFoundation(adapter) {
          _classCallCheck(this, MDCChipSetFoundation);
          /**
           * The ids of the selected chips in the set. Only used for choice chip set or filter chip set.
           * @private {!Array<string>}
           */


          var _this = _possibleConstructorReturn(this, (MDCChipSetFoundation.__proto__ || Object.getPrototypeOf(MDCChipSetFoundation)).call(this, _extends(MDCChipSetFoundation.defaultAdapter, adapter)));

          _this.selectedChipIds_ = [];
          return _this;
        }
        /**
         * Returns an array of the IDs of all selected chips.
         * @return {!Array<string>}
         */


        _createClass(MDCChipSetFoundation, [{
          key: 'getSelectedChipIds',
          value: function getSelectedChipIds() {
            return this.selectedChipIds_;
          }
          /**
           * Toggles selection of the chip with the given id.
           * @private
           * @param {string} chipId
           */

        }, {
          key: 'toggleSelect_',
          value: function toggleSelect_(chipId) {
            if (this.selectedChipIds_.indexOf(chipId) >= 0) {
              this.deselect_(chipId);
            } else {
              this.select(chipId);
            }
          }
          /**
           * Selects the chip with the given id. Deselects all other chips if the chip set is of the choice variant.
           * @param {string} chipId
           */

        }, {
          key: 'select',
          value: function select(chipId) {
            if (this.selectedChipIds_.indexOf(chipId) >= 0) {
              return;
            }

            if (this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_3__constants__["a"
            /* cssClasses */
            ].CHOICE) && this.selectedChipIds_.length > 0) {
              var previouslySelectedChip = this.selectedChipIds_[0];
              this.selectedChipIds_.length = 0;
              this.adapter_.setSelected(previouslySelectedChip, false);
            }

            this.selectedChipIds_.push(chipId);
            this.adapter_.setSelected(chipId, true);
          }
          /**
           * Deselects the chip with the given id.
           * @private
           * @param {string} chipId
           */

        }, {
          key: 'deselect_',
          value: function deselect_(chipId) {
            var index = this.selectedChipIds_.indexOf(chipId);

            if (index >= 0) {
              this.selectedChipIds_.splice(index, 1);
              this.adapter_.setSelected(chipId, false);
            }
          }
          /**
           * Handles a chip interaction event
           * @param {string} chipId
           */

        }, {
          key: 'handleChipInteraction',
          value: function handleChipInteraction(chipId) {
            if (this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_3__constants__["a"
            /* cssClasses */
            ].CHOICE) || this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_3__constants__["a"
            /* cssClasses */
            ].FILTER)) {
              this.toggleSelect_(chipId);
            }
          }
          /**
           * Handles a chip selection event, used to handle discrepancy when selection state is set directly on the Chip.
           * @param {string} chipId
           * @param {boolean} selected
           */

        }, {
          key: 'handleChipSelection',
          value: function handleChipSelection(chipId, selected) {
            var chipIsSelected = this.selectedChipIds_.indexOf(chipId) >= 0;

            if (selected && !chipIsSelected) {
              this.select(chipId);
            } else if (!selected && chipIsSelected) {
              this.deselect_(chipId);
            }
          }
          /**
           * Handles the event when a chip is removed.
           * @param {string} chipId
           */

        }, {
          key: 'handleChipRemoval',
          value: function handleChipRemoval(chipId) {
            this.deselect_(chipId);
            this.adapter_.removeChip(chipId);
          }
        }]);

        return MDCChipSetFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCChipSetFoundation;
      /***/
    },
    /* 75 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var strings = {
        CHIP_SELECTOR: '.mdc-chip'
      };
      /** @enum {string} */

      var cssClasses = {
        CHOICE: 'mdc-chip-set--choice',
        FILTER: 'mdc-chip-set--filter'
      };
      /***/
    },
    /* 76 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCDialog", function () {
        return MDCDialog;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__ = __webpack_require__(2);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(77);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(80);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__material_dom_ponyfill__ = __webpack_require__(8);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5_focus_trap__ = __webpack_require__(34);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5_focus_trap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_focus_trap__);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCDialogFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "util", function () {
        return __WEBPACK_IMPORTED_MODULE_3__util__;
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var strings = __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
      /* default */
      ].strings;

      var MDCDialog = function (_MDCComponent) {
        _inherits(MDCDialog, _MDCComponent);

        function MDCDialog() {
          var _ref;

          _classCallCheck(this, MDCDialog);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /**
           * @type {!Array<!MDCRipple>}
           * @private
           */


          var _this = _possibleConstructorReturn(this, (_ref = MDCDialog.__proto__ || Object.getPrototypeOf(MDCDialog)).call.apply(_ref, [this].concat(args)));

          _this.buttonRipples_;
          /** @private {!Array<!Element>} */

          _this.buttons_;
          /** @private {?Element} */

          _this.defaultButton_;
          /** @private {!Element} */

          _this.container_;
          /** @private {?Element} */

          _this.content_;
          /** @private {?Element} */

          _this.initialFocusEl_;
          /** @private {!Function} */

          _this.focusTrapFactory_;
          /** @private {!FocusTrapInstance} */

          _this.focusTrap_;
          /** @private {!Function} */

          _this.handleInteraction_;
          /** @private {!Function} */

          _this.handleDocumentKeydown_;
          /** @private {!Function} */

          _this.handleOpening_;
          /** @private {!Function} */

          _this.handleClosing_;
          /** @private {Function} */

          _this.layout_;
          return _this;
        }

        _createClass(MDCDialog, [{
          key: 'initialize',
          value: function initialize() {
            var focusTrapFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : __WEBPACK_IMPORTED_MODULE_5_focus_trap___default.a;
            var initialFocusEl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
            this.container_ =
            /** @type {!Element} */
            this.root_.querySelector(strings.CONTAINER_SELECTOR);
            this.content_ = this.root_.querySelector(strings.CONTENT_SELECTOR);
            this.buttons_ = [].slice.call(this.root_.querySelectorAll(strings.BUTTON_SELECTOR));
            this.defaultButton_ = this.root_.querySelector(strings.DEFAULT_BUTTON_SELECTOR);
            this.buttonRipples_ = [];
            this.focusTrapFactory_ = focusTrapFactory;
            this.initialFocusEl_ = initialFocusEl;

            for (var i = 0, buttonEl; buttonEl = this.buttons_[i]; i++) {
              this.buttonRipples_.push(new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__["MDCRipple"](buttonEl));
            }
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var _this2 = this;

            this.focusTrap_ = __WEBPACK_IMPORTED_MODULE_3__util__["createFocusTrapInstance"](this.container_, this.focusTrapFactory_, this.initialFocusEl_);
            this.handleInteraction_ = this.foundation_.handleInteraction.bind(this.foundation_);
            this.handleDocumentKeydown_ = this.foundation_.handleDocumentKeydown.bind(this.foundation_);
            this.layout_ = this.layout.bind(this);
            var LAYOUT_EVENTS = ['resize', 'orientationchange'];

            this.handleOpening_ = function () {
              LAYOUT_EVENTS.forEach(function (type) {
                return window.addEventListener(type, _this2.layout_);
              });
              document.addEventListener('keydown', _this2.handleDocumentKeydown_);
            };

            this.handleClosing_ = function () {
              LAYOUT_EVENTS.forEach(function (type) {
                return window.removeEventListener(type, _this2.layout_);
              });
              document.removeEventListener('keydown', _this2.handleDocumentKeydown_);
            };

            this.listen('click', this.handleInteraction_);
            this.listen('keydown', this.handleInteraction_);
            this.listen(strings.OPENING_EVENT, this.handleOpening_);
            this.listen(strings.CLOSING_EVENT, this.handleClosing_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.unlisten('click', this.handleInteraction_);
            this.unlisten('keydown', this.handleInteraction_);
            this.unlisten(strings.OPENING_EVENT, this.handleOpening_);
            this.unlisten(strings.CLOSING_EVENT, this.handleClosing_);
            this.handleClosing_();
            this.buttonRipples_.forEach(function (ripple) {
              return ripple.destroy();
            });

            _get(MDCDialog.prototype.__proto__ || Object.getPrototypeOf(MDCDialog.prototype), 'destroy', this).call(this);
          }
        }, {
          key: 'layout',
          value: function layout() {
            this.foundation_.layout();
          }
        }, {
          key: 'open',
          value: function open() {
            this.foundation_.open();
          }
          /**
           * @param {string=} action
           */

        }, {
          key: 'close',
          value: function close() {
            var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
            this.foundation_.close(action);
          }
        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this3 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ]({
              addClass: function addClass(className) {
                return _this3.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this3.root_.classList.remove(className);
              },
              hasClass: function hasClass(className) {
                return _this3.root_.classList.contains(className);
              },
              addBodyClass: function addBodyClass(className) {
                return document.body.classList.add(className);
              },
              removeBodyClass: function removeBodyClass(className) {
                return document.body.classList.remove(className);
              },
              eventTargetMatches: function eventTargetMatches(target, selector) {
                return Object(__WEBPACK_IMPORTED_MODULE_4__material_dom_ponyfill__["matches"])(target, selector);
              },
              trapFocus: function trapFocus() {
                return _this3.focusTrap_.activate();
              },
              releaseFocus: function releaseFocus() {
                return _this3.focusTrap_.deactivate();
              },
              isContentScrollable: function isContentScrollable() {
                return !!_this3.content_ && __WEBPACK_IMPORTED_MODULE_3__util__["isScrollable"](
                /** @type {!Element} */
                _this3.content_);
              },
              areButtonsStacked: function areButtonsStacked() {
                return __WEBPACK_IMPORTED_MODULE_3__util__["areTopsMisaligned"](_this3.buttons_);
              },
              getActionFromEvent: function getActionFromEvent(event) {
                var element = Object(__WEBPACK_IMPORTED_MODULE_4__material_dom_ponyfill__["closest"])(event.target, '[' + strings.ACTION_ATTRIBUTE + ']');
                return element && element.getAttribute(strings.ACTION_ATTRIBUTE);
              },
              clickDefaultButton: function clickDefaultButton() {
                if (_this3.defaultButton_) {
                  _this3.defaultButton_.click();
                }
              },
              reverseButtons: function reverseButtons() {
                _this3.buttons_.reverse();

                _this3.buttons_.forEach(function (button) {
                  return button.parentElement.appendChild(button);
                });
              },
              notifyOpening: function notifyOpening() {
                return _this3.emit(strings.OPENING_EVENT, {});
              },
              notifyOpened: function notifyOpened() {
                return _this3.emit(strings.OPENED_EVENT, {});
              },
              notifyClosing: function notifyClosing(action) {
                return _this3.emit(strings.CLOSING_EVENT, action ? {
                  action: action
                } : {});
              },
              notifyClosed: function notifyClosed(action) {
                return _this3.emit(strings.CLOSED_EVENT, action ? {
                  action: action
                } : {});
              }
            });
          }
        }, {
          key: 'isOpen',
          get: function get() {
            return this.foundation_.isOpen();
          }
        }, {
          key: 'escapeKeyAction',
          get: function get() {
            return this.foundation_.getEscapeKeyAction();
          },
          set: function set(action) {
            this.foundation_.setEscapeKeyAction(action);
          }
        }, {
          key: 'scrimClickAction',
          get: function get() {
            return this.foundation_.getScrimClickAction();
          },
          set: function set(action) {
            this.foundation_.setScrimClickAction(action);
          }
        }, {
          key: 'autoStackButtons',
          get: function get() {
            return this.foundation_.getAutoStackButtons();
          },
          set: function set(autoStack) {
            this.foundation_.setAutoStackButtons(autoStack);
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCDialog(root);
          }
        }]);

        return MDCDialog;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 77 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(78);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(79);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var MDCDialogFoundation = function (_MDCFoundation) {
        _inherits(MDCDialogFoundation, _MDCFoundation);

        _createClass(MDCDialogFoundation, null, [{
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["c"
            /* strings */
            ];
          }
        }, {
          key: 'numbers',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* numbers */
            ];
          }
        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCDialogAdapter} */
              {
                addClass: function addClass()
                /* className: string */
                {},
                removeClass: function removeClass()
                /* className: string */
                {},
                hasClass: function hasClass()
                /* className: string */
                {},
                addBodyClass: function addBodyClass()
                /* className: string */
                {},
                removeBodyClass: function removeBodyClass()
                /* className: string */
                {},
                eventTargetMatches: function eventTargetMatches()
                /* target: !EventTarget, selector: string */
                {},
                trapFocus: function trapFocus() {},
                releaseFocus: function releaseFocus() {},
                isContentScrollable: function isContentScrollable() {},
                areButtonsStacked: function areButtonsStacked() {},
                getActionFromEvent: function getActionFromEvent()
                /* event: !Event */
                {},
                clickDefaultButton: function clickDefaultButton() {},
                reverseButtons: function reverseButtons() {},
                notifyOpening: function notifyOpening() {},
                notifyOpened: function notifyOpened() {},
                notifyClosing: function notifyClosing()
                /* action: ?string */
                {},
                notifyClosed: function notifyClosed()
                /* action: ?string */
                {}
              }
            );
          }
          /**
           * @param {!MDCDialogAdapter=} adapter
           */

        }]);

        function MDCDialogFoundation(adapter) {
          _classCallCheck(this, MDCDialogFoundation);
          /** @private {boolean} */


          var _this = _possibleConstructorReturn(this, (MDCDialogFoundation.__proto__ || Object.getPrototypeOf(MDCDialogFoundation)).call(this, _extends(MDCDialogFoundation.defaultAdapter, adapter)));

          _this.isOpen_ = false;
          /** @private {number} */

          _this.animationFrame_ = 0;
          /** @private {number} */

          _this.animationTimer_ = 0;
          /** @private {number} */

          _this.layoutFrame_ = 0;
          /** @private {string} */

          _this.escapeKeyAction_ = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
          /* strings */
          ].CLOSE_ACTION;
          /** @private {string} */

          _this.scrimClickAction_ = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
          /* strings */
          ].CLOSE_ACTION;
          /** @private {boolean} */

          _this.autoStackButtons_ = true;
          /** @private {boolean} */

          _this.areButtonsStacked_ = false;
          return _this;
        }

        _createClass(MDCDialogFoundation, [{
          key: 'init',
          value: function init() {
            if (this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].STACKED)) {
              this.setAutoStackButtons(false);
            }
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            if (this.isOpen_) {
              this.close(__WEBPACK_IMPORTED_MODULE_2__constants__["c"
              /* strings */
              ].DESTROY_ACTION);
            }

            if (this.animationTimer_) {
              clearTimeout(this.animationTimer_);
              this.handleAnimationTimerEnd_();
            }

            if (this.layoutFrame_) {
              cancelAnimationFrame(this.layoutFrame_);
              this.layoutFrame_ = 0;
            }
          }
        }, {
          key: 'open',
          value: function open() {
            var _this2 = this;

            this.isOpen_ = true;
            this.adapter_.notifyOpening();
            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].OPENING); // Wait a frame once display is no longer "none", to establish basis for animation

            this.runNextAnimationFrame_(function () {
              _this2.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].OPEN);

              _this2.adapter_.addBodyClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].SCROLL_LOCK);

              _this2.layout();

              _this2.animationTimer_ = setTimeout(function () {
                _this2.handleAnimationTimerEnd_();

                _this2.adapter_.trapFocus();

                _this2.adapter_.notifyOpened();
              }, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ].DIALOG_ANIMATION_OPEN_TIME_MS);
            });
          }
          /**
           * @param {string=} action
           */

        }, {
          key: 'close',
          value: function close() {
            var _this3 = this;

            var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

            if (!this.isOpen_) {
              // Avoid redundant close calls (and events), e.g. from keydown on elements that inherently emit click
              return;
            }

            this.isOpen_ = false;
            this.adapter_.notifyClosing(action);
            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].CLOSING);
            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].OPEN);
            this.adapter_.removeBodyClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].SCROLL_LOCK);
            cancelAnimationFrame(this.animationFrame_);
            this.animationFrame_ = 0;
            clearTimeout(this.animationTimer_);
            this.animationTimer_ = setTimeout(function () {
              _this3.adapter_.releaseFocus();

              _this3.handleAnimationTimerEnd_();

              _this3.adapter_.notifyClosed(action);
            }, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* numbers */
            ].DIALOG_ANIMATION_CLOSE_TIME_MS);
          }
        }, {
          key: 'isOpen',
          value: function isOpen() {
            return this.isOpen_;
          }
          /** @return {string} */

        }, {
          key: 'getEscapeKeyAction',
          value: function getEscapeKeyAction() {
            return this.escapeKeyAction_;
          }
          /** @param {string} action */

        }, {
          key: 'setEscapeKeyAction',
          value: function setEscapeKeyAction(action) {
            this.escapeKeyAction_ = action;
          }
          /** @return {string} */

        }, {
          key: 'getScrimClickAction',
          value: function getScrimClickAction() {
            return this.scrimClickAction_;
          }
          /** @param {string} action */

        }, {
          key: 'setScrimClickAction',
          value: function setScrimClickAction(action) {
            this.scrimClickAction_ = action;
          }
          /** @return {boolean} */

        }, {
          key: 'getAutoStackButtons',
          value: function getAutoStackButtons() {
            return this.autoStackButtons_;
          }
          /** @param {boolean} autoStack */

        }, {
          key: 'setAutoStackButtons',
          value: function setAutoStackButtons(autoStack) {
            this.autoStackButtons_ = autoStack;
          }
        }, {
          key: 'layout',
          value: function layout() {
            var _this4 = this;

            if (this.layoutFrame_) {
              cancelAnimationFrame(this.layoutFrame_);
            }

            this.layoutFrame_ = requestAnimationFrame(function () {
              _this4.layoutInternal_();

              _this4.layoutFrame_ = 0;
            });
          }
        }, {
          key: 'layoutInternal_',
          value: function layoutInternal_() {
            if (this.autoStackButtons_) {
              this.detectStackedButtons_();
            }

            this.detectScrollableContent_();
          }
          /** @private */

        }, {
          key: 'detectStackedButtons_',
          value: function detectStackedButtons_() {
            // Remove the class first to let us measure the buttons' natural positions.
            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].STACKED);
            var areButtonsStacked = this.adapter_.areButtonsStacked();

            if (areButtonsStacked) {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].STACKED);
            }

            if (areButtonsStacked !== this.areButtonsStacked_) {
              this.adapter_.reverseButtons();
              this.areButtonsStacked_ = areButtonsStacked;
            }
          }
          /** @private */

        }, {
          key: 'detectScrollableContent_',
          value: function detectScrollableContent_() {
            // Remove the class first to let us measure the natural height of the content.
            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].SCROLLABLE);

            if (this.adapter_.isContentScrollable()) {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].SCROLLABLE);
            }
          }
          /**
           * @param {!Event} evt
           * @private
           */

        }, {
          key: 'handleInteraction',
          value: function handleInteraction(evt) {
            var isClick = evt.type === 'click';
            var isEnter = evt.key === 'Enter' || evt.keyCode === 13; // Check for scrim click first since it doesn't require querying ancestors

            if (isClick && this.adapter_.eventTargetMatches(evt.target, __WEBPACK_IMPORTED_MODULE_2__constants__["c"
            /* strings */
            ].SCRIM_SELECTOR) && this.scrimClickAction_ !== '') {
              this.close(this.scrimClickAction_);
            } else if (isClick || evt.key === 'Space' || evt.keyCode === 32 || isEnter) {
              var action = this.adapter_.getActionFromEvent(evt);

              if (action) {
                this.close(action);
              } else if (isEnter && !this.adapter_.eventTargetMatches(evt.target, __WEBPACK_IMPORTED_MODULE_2__constants__["c"
              /* strings */
              ].SUPPRESS_DEFAULT_PRESS_SELECTOR)) {
                this.adapter_.clickDefaultButton();
              }
            }
          }
          /**
           * @param {!KeyboardEvent} evt
           * @private
           */

        }, {
          key: 'handleDocumentKeydown',
          value: function handleDocumentKeydown(evt) {
            if ((evt.key === 'Escape' || evt.keyCode === 27) && this.escapeKeyAction_ !== '') {
              this.close(this.escapeKeyAction_);
            }
          }
          /** @private */

        }, {
          key: 'handleAnimationTimerEnd_',
          value: function handleAnimationTimerEnd_() {
            this.animationTimer_ = 0;
            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].OPENING);
            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].CLOSING);
          }
          /**
           * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.
           * @param {Function} callback
           * @private
           */

        }, {
          key: 'runNextAnimationFrame_',
          value: function runNextAnimationFrame_(callback) {
            var _this5 = this;

            cancelAnimationFrame(this.animationFrame_);
            this.animationFrame_ = requestAnimationFrame(function () {
              _this5.animationFrame_ = 0;
              clearTimeout(_this5.animationTimer_);
              _this5.animationTimer_ = setTimeout(callback, 0);
            });
          }
        }]);

        return MDCDialogFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCDialogFoundation;
      /***/
    },
    /* 78 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Dialog. Provides an interface for managing:
       * - CSS classes
       * - DOM
       * - Event handlers
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCDialogAdapter = function () {
        function MDCDialogAdapter() {
          _classCallCheck(this, MDCDialogAdapter);
        }

        _createClass(MDCDialogAdapter, [{
          key: "addClass",

          /** @param {string} className */
          value: function addClass(className) {}
          /** @param {string} className */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * @param {string} className
           * @return {boolean}
           */

        }, {
          key: "hasClass",
          value: function hasClass(className) {}
          /** @param {string} className */

        }, {
          key: "addBodyClass",
          value: function addBodyClass(className) {}
          /** @param {string} className */

        }, {
          key: "removeBodyClass",
          value: function removeBodyClass(className) {}
          /**
           * @param {!EventTarget} target
           * @param {string} selector
           * @return {boolean}
           */

        }, {
          key: "eventTargetMatches",
          value: function eventTargetMatches(target, selector) {}
        }, {
          key: "trapFocus",
          value: function trapFocus() {}
        }, {
          key: "releaseFocus",
          value: function releaseFocus() {}
          /** @return {boolean} */

        }, {
          key: "isContentScrollable",
          value: function isContentScrollable() {}
          /** @return {boolean} */

        }, {
          key: "areButtonsStacked",
          value: function areButtonsStacked() {}
          /**
           * @param {!Event} event
           * @return {?string}
           */

        }, {
          key: "getActionFromEvent",
          value: function getActionFromEvent(event) {}
        }, {
          key: "clickDefaultButton",
          value: function clickDefaultButton() {}
        }, {
          key: "reverseButtons",
          value: function reverseButtons() {}
        }, {
          key: "notifyOpening",
          value: function notifyOpening() {}
        }, {
          key: "notifyOpened",
          value: function notifyOpened() {}
          /**
           * @param {string} action
           */

        }, {
          key: "notifyClosing",
          value: function notifyClosing(action) {}
          /**
           * @param {string} action
           */

        }, {
          key: "notifyClosed",
          value: function notifyClosed(action) {}
        }]);

        return MDCDialogAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCDialogAdapter;
      /***/
    },
    /* 79 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "c", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return numbers;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var cssClasses = {
        OPEN: 'mdc-dialog--open',
        OPENING: 'mdc-dialog--opening',
        CLOSING: 'mdc-dialog--closing',
        SCROLLABLE: 'mdc-dialog--scrollable',
        STACKED: 'mdc-dialog--stacked',
        SCROLL_LOCK: 'mdc-dialog-scroll-lock'
      };
      var strings = {
        SCRIM_SELECTOR: '.mdc-dialog__scrim',
        CONTAINER_SELECTOR: '.mdc-dialog__container',
        SURFACE_SELECTOR: '.mdc-dialog__surface',
        CONTENT_SELECTOR: '.mdc-dialog__content',
        BUTTON_SELECTOR: '.mdc-dialog__button',
        DEFAULT_BUTTON_SELECTOR: '.mdc-dialog__button--default',
        SUPPRESS_DEFAULT_PRESS_SELECTOR: ['textarea', '.mdc-menu .mdc-list-item'].join(', '),
        OPENING_EVENT: 'MDCDialog:opening',
        OPENED_EVENT: 'MDCDialog:opened',
        CLOSING_EVENT: 'MDCDialog:closing',
        CLOSED_EVENT: 'MDCDialog:closed',
        ACTION_ATTRIBUTE: 'data-mdc-dialog-action',
        CLOSE_ACTION: 'close',
        DESTROY_ACTION: 'destroy'
      };
      var numbers = {
        DIALOG_ANIMATION_OPEN_TIME_MS: 150,
        DIALOG_ANIMATION_CLOSE_TIME_MS: 75
      };
      /***/
    },
    /* 80 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "createFocusTrapInstance", function () {
        return createFocusTrapInstance;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "isScrollable", function () {
        return isScrollable;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "areTopsMisaligned", function () {
        return areTopsMisaligned;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_focus_trap__ = __webpack_require__(34);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_focus_trap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_focus_trap__);
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @param {!Element} surfaceEl
       * @param {?Element=} initialFocusEl
       * @param {function(!Element, !FocusTrapCreateOptions): !FocusTrapInstance} focusTrapFactory
       * @return {!FocusTrapInstance}
       */


      function createFocusTrapInstance(surfaceEl) {
        var focusTrapFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : __WEBPACK_IMPORTED_MODULE_0_focus_trap___default.a;
        var initialFocusEl = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
        return focusTrapFactory(surfaceEl, {
          initialFocus: initialFocusEl,
          escapeDeactivates: false,
          // Dialog foundation handles escape key
          clickOutsideDeactivates: true
        });
      }
      /**
       * @param {!Element} el
       * @return {boolean}
       */


      function isScrollable(el) {
        return el.scrollHeight > el.offsetHeight;
      }
      /**
       * @param {!Array<!Element>|!NodeList} els
       * @return {boolean}
       */


      function areTopsMisaligned(els) {
        var tops = new Set();
        [].forEach.call(els, function (el) {
          return tops.add(el.offsetTop);
        });
        return tops.size > 1;
      }
      /***/

    },
    /* 81 */

    /***/
    function (module, exports) {
      var candidateSelectors = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable="false"])'];
      var candidateSelector = candidateSelectors.join(',');
      var matches = typeof Element === 'undefined' ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;

      function tabbable(el, options) {
        options = options || {};
        var elementDocument = el.ownerDocument || el;
        var regularTabbables = [];
        var orderedTabbables = [];
        var untouchabilityChecker = new UntouchabilityChecker(elementDocument);
        var candidates = el.querySelectorAll(candidateSelector);

        if (options.includeContainer) {
          if (matches.call(el, candidateSelector)) {
            candidates = Array.prototype.slice.apply(candidates);
            candidates.unshift(el);
          }
        }

        var i, candidate, candidateTabindex;

        for (i = 0; i < candidates.length; i++) {
          candidate = candidates[i];
          if (!isNodeMatchingSelectorTabbable(candidate, untouchabilityChecker)) continue;
          candidateTabindex = getTabindex(candidate);

          if (candidateTabindex === 0) {
            regularTabbables.push(candidate);
          } else {
            orderedTabbables.push({
              documentOrder: i,
              tabIndex: candidateTabindex,
              node: candidate
            });
          }
        }

        var tabbableNodes = orderedTabbables.sort(sortOrderedTabbables).map(function (a) {
          return a.node;
        }).concat(regularTabbables);
        return tabbableNodes;
      }

      tabbable.isTabbable = isTabbable;
      tabbable.isFocusable = isFocusable;

      function isNodeMatchingSelectorTabbable(node, untouchabilityChecker) {
        if (!isNodeMatchingSelectorFocusable(node, untouchabilityChecker) || isNonTabbableRadio(node) || getTabindex(node) < 0) {
          return false;
        }

        return true;
      }

      function isTabbable(node, untouchabilityChecker) {
        if (!node) throw new Error('No node provided');
        if (matches.call(node, candidateSelector) === false) return false;
        return isNodeMatchingSelectorTabbable(node, untouchabilityChecker);
      }

      function isNodeMatchingSelectorFocusable(node, untouchabilityChecker) {
        untouchabilityChecker = untouchabilityChecker || new UntouchabilityChecker(node.ownerDocument || node);

        if (node.disabled || isHiddenInput(node) || untouchabilityChecker.isUntouchable(node)) {
          return false;
        }

        return true;
      }

      var focusableCandidateSelector = candidateSelectors.concat('iframe').join(',');

      function isFocusable(node, untouchabilityChecker) {
        if (!node) throw new Error('No node provided');
        if (matches.call(node, focusableCandidateSelector) === false) return false;
        return isNodeMatchingSelectorFocusable(node, untouchabilityChecker);
      }

      function getTabindex(node) {
        var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);
        if (!isNaN(tabindexAttr)) return tabindexAttr; // Browsers do not return `tabIndex` correctly for contentEditable nodes;
        // so if they don't have a tabindex attribute specifically set, assume it's 0.

        if (isContentEditable(node)) return 0;
        return node.tabIndex;
      }

      function sortOrderedTabbables(a, b) {
        return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;
      } // Array.prototype.find not available in IE.


      function find(list, predicate) {
        for (var i = 0, length = list.length; i < length; i++) {
          if (predicate(list[i])) return list[i];
        }
      }

      function isContentEditable(node) {
        return node.contentEditable === 'true';
      }

      function isInput(node) {
        return node.tagName === 'INPUT';
      }

      function isHiddenInput(node) {
        return isInput(node) && node.type === 'hidden';
      }

      function isRadio(node) {
        return isInput(node) && node.type === 'radio';
      }

      function isNonTabbableRadio(node) {
        return isRadio(node) && !isTabbableRadio(node);
      }

      function getCheckedRadio(nodes) {
        for (var i = 0; i < nodes.length; i++) {
          if (nodes[i].checked) {
            return nodes[i];
          }
        }
      }

      function isTabbableRadio(node) {
        if (!node.name) return true; // This won't account for the edge case where you have radio groups with the same
        // in separate forms on the same page.

        var radioSet = node.ownerDocument.querySelectorAll('input[type="radio"][name="' + node.name + '"]');
        var checked = getCheckedRadio(radioSet);
        return !checked || checked === node;
      } // An element is "untouchable" if *it or one of its ancestors* has
      // `visibility: hidden` or `display: none`.


      function UntouchabilityChecker(elementDocument) {
        this.doc = elementDocument; // Node cache must be refreshed on every check, in case
        // the content of the element has changed. The cache contains tuples
        // mapping nodes to their boolean result.

        this.cache = [];
      } // getComputedStyle accurately reflects `visibility: hidden` of ancestors
      // but not `display: none`, so we need to recursively check parents.


      UntouchabilityChecker.prototype.hasDisplayNone = function hasDisplayNone(node, nodeComputedStyle) {
        if (node.nodeType !== Node.ELEMENT_NODE) return false; // Search for a cached result.

        var cached = find(this.cache, function (item) {
          return item === node;
        });
        if (cached) return cached[1];
        nodeComputedStyle = nodeComputedStyle || this.doc.defaultView.getComputedStyle(node);
        var result = false;

        if (nodeComputedStyle.display === 'none') {
          result = true;
        } else if (node.parentNode) {
          result = this.hasDisplayNone(node.parentNode);
        }

        this.cache.push([node, result]);
        return result;
      };

      UntouchabilityChecker.prototype.isUntouchable = function isUntouchable(node) {
        if (node === this.doc.documentElement) return false;
        var computedStyle = this.doc.defaultView.getComputedStyle(node);
        if (this.hasDisplayNone(node, computedStyle)) return true;
        return computedStyle.visibility === 'hidden';
      };

      module.exports = tabbable;
      /***/
    },
    /* 82 */

    /***/
    function (module, exports) {
      module.exports = extend;
      var hasOwnProperty = Object.prototype.hasOwnProperty;

      function extend() {
        var target = {};

        for (var i = 0; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }
      /***/

    },
    /* 83 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__ponyfill__ = __webpack_require__(8);
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "ponyfill", function () {
        return __WEBPACK_IMPORTED_MODULE_0__ponyfill__;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /***/

    },
    /* 84 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCDrawer", function () {
        return MDCDrawer;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__dismissible_foundation__ = __webpack_require__(35);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__modal_foundation__ = __webpack_require__(85);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__adapter__ = __webpack_require__(14);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__material_list_index__ = __webpack_require__(15);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__material_list_foundation__ = __webpack_require__(16);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__constants__ = __webpack_require__(36);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_7__util__ = __webpack_require__(86);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_8_focus_trap__ = __webpack_require__(39);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_8_focus_trap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_focus_trap__);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCDismissibleDrawerFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_1__dismissible_foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCModalDrawerFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__modal_foundation__["a"];
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "util", function () {
        return __WEBPACK_IMPORTED_MODULE_7__util__;
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCComponent<!MDCDismissibleDrawerFoundation>}
       * @final
       */


      var MDCDrawer = function (_MDCComponent) {
        _inherits(MDCDrawer, _MDCComponent);
        /**
         * @param {...?} args
         */


        function MDCDrawer() {
          var _ref;

          _classCallCheck(this, MDCDrawer);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {!Element} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCDrawer.__proto__ || Object.getPrototypeOf(MDCDrawer)).call.apply(_ref, [this].concat(args)));

          _this.previousFocus_;
          /** @private {!Function} */

          _this.handleKeydown_;
          /** @private {!Function} */

          _this.handleTransitionEnd_;
          /** @private {!Function} */

          _this.focusTrapFactory_;
          /** @private {!FocusTrapInstance} */

          _this.focusTrap_;
          /** @private {?Element} */

          _this.scrim_;
          /** @private {?Function} */

          _this.handleScrimClick_;
          /** @private {?MDCList} */

          _this.list_;
          return _this;
        }
        /**
         * @param {!Element} root
         * @return {!MDCDrawer}
         */


        _createClass(MDCDrawer, [{
          key: 'initialize',
          value: function initialize() {
            var focusTrapFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : __WEBPACK_IMPORTED_MODULE_8_focus_trap___default.a;
            var listFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_4__material_list_index__["MDCList"](el);
            };
            var listEl =
            /** @type {!Element} */
            this.root_.querySelector('.' + __WEBPACK_IMPORTED_MODULE_5__material_list_foundation__["a"
            /* default */
            ].cssClasses.ROOT);

            if (listEl) {
              this.list_ = listFactory(listEl);
              this.list_.wrapFocus = true;
            }

            this.focusTrapFactory_ = focusTrapFactory;
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var _this2 = this;

            var MODAL = __WEBPACK_IMPORTED_MODULE_1__dismissible_foundation__["a"
            /* default */
            ].cssClasses.MODAL;

            if (this.root_.classList.contains(MODAL)) {
              var SCRIM_SELECTOR = __WEBPACK_IMPORTED_MODULE_1__dismissible_foundation__["a"
              /* default */
              ].strings.SCRIM_SELECTOR;
              this.scrim_ =
              /** @type {!Element} */
              this.root_.parentElement.querySelector(SCRIM_SELECTOR);

              this.handleScrimClick_ = function () {
                return (
                  /** @type {!MDCModalDrawerFoundation} */
                  _this2.foundation_.handleScrimClick()
                );
              };

              this.scrim_.addEventListener('click', this.handleScrimClick_);
              this.focusTrap_ = __WEBPACK_IMPORTED_MODULE_7__util__["createFocusTrapInstance"](this.root_, this.focusTrapFactory_);
            }

            this.handleKeydown_ = function (evt) {
              return _this2.foundation_.handleKeydown(evt);
            };

            this.handleTransitionEnd_ = function (evt) {
              return _this2.foundation_.handleTransitionEnd(evt);
            };

            this.root_.addEventListener('keydown', this.handleKeydown_);
            this.root_.addEventListener('transitionend', this.handleTransitionEnd_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.root_.removeEventListener('keydown', this.handleKeydown_);
            this.root_.removeEventListener('transitionend', this.handleTransitionEnd_);

            if (this.list_) {
              this.list_.destroy();
            }

            var MODAL = __WEBPACK_IMPORTED_MODULE_1__dismissible_foundation__["a"
            /* default */
            ].cssClasses.MODAL;

            if (this.root_.classList.contains(MODAL)) {
              this.scrim_.removeEventListener('click',
              /** @type {!Function} */
              this.handleScrimClick_); // Ensure drawer is closed to hide scrim and release focus

              this.open = false;
            }
          }
        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this3 = this;
            /** @type {!MDCDrawerAdapter} */


            var adapter =
            /** @type {!MDCDrawerAdapter} */
            _extends({
              addClass: function addClass(className) {
                return _this3.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this3.root_.classList.remove(className);
              },
              hasClass: function hasClass(className) {
                return _this3.root_.classList.contains(className);
              },
              elementHasClass: function elementHasClass(element, className) {
                return element.classList.contains(className);
              },
              saveFocus: function saveFocus() {
                _this3.previousFocus_ = document.activeElement;
              },
              restoreFocus: function restoreFocus() {
                var previousFocus = _this3.previousFocus_ && _this3.previousFocus_.focus;

                if (_this3.root_.contains(document.activeElement) && previousFocus) {
                  _this3.previousFocus_.focus();
                }
              },
              focusActiveNavigationItem: function focusActiveNavigationItem() {
                var activeNavItemEl = _this3.root_.querySelector('.' + __WEBPACK_IMPORTED_MODULE_5__material_list_foundation__["a"
                /* default */
                ].cssClasses.LIST_ITEM_ACTIVATED_CLASS);

                if (activeNavItemEl) {
                  activeNavItemEl.focus();
                }
              },
              notifyClose: function notifyClose() {
                return _this3.emit(__WEBPACK_IMPORTED_MODULE_6__constants__["b"
                /* strings */
                ].CLOSE_EVENT, {}, true
                /* shouldBubble */
                );
              },
              notifyOpen: function notifyOpen() {
                return _this3.emit(__WEBPACK_IMPORTED_MODULE_6__constants__["b"
                /* strings */
                ].OPEN_EVENT, {}, true
                /* shouldBubble */
                );
              },
              trapFocus: function trapFocus() {
                return _this3.focusTrap_.activate();
              },
              releaseFocus: function releaseFocus() {
                return _this3.focusTrap_.deactivate();
              }
            });

            var _MDCDismissibleDrawer = __WEBPACK_IMPORTED_MODULE_1__dismissible_foundation__["a"
            /* default */
            ].cssClasses,
                DISMISSIBLE = _MDCDismissibleDrawer.DISMISSIBLE,
                MODAL = _MDCDismissibleDrawer.MODAL;

            if (this.root_.classList.contains(DISMISSIBLE)) {
              return new __WEBPACK_IMPORTED_MODULE_1__dismissible_foundation__["a"
              /* default */
              ](adapter);
            } else if (this.root_.classList.contains(MODAL)) {
              return new __WEBPACK_IMPORTED_MODULE_2__modal_foundation__["a"
              /* default */
              ](adapter);
            } else {
              throw new Error('MDCDrawer: Failed to instantiate component. Supported variants are ' + DISMISSIBLE + ' and ' + MODAL + '.');
            }
          }
        }, {
          key: 'open',

          /**
           * Returns true if drawer is in the open position.
           * @return {boolean}
           */
          get: function get() {
            return this.foundation_.isOpen();
          }
          /**
           * Toggles the drawer open and closed.
           * @param {boolean} isOpen
           */
          ,
          set: function set(isOpen) {
            if (isOpen) {
              this.foundation_.open();
            } else {
              this.foundation_.close();
            }
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCDrawer(root);
          }
        }]);

        return MDCDrawer;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 85 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__adapter__ = __webpack_require__(14);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__dismissible_foundation__ = __webpack_require__(35);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCDismissibleDrawerFoundation}
       */


      var MDCModalDrawerFoundation = function (_MDCDismissibleDrawer) {
        _inherits(MDCModalDrawerFoundation, _MDCDismissibleDrawer);

        function MDCModalDrawerFoundation() {
          _classCallCheck(this, MDCModalDrawerFoundation);

          return _possibleConstructorReturn(this, (MDCModalDrawerFoundation.__proto__ || Object.getPrototypeOf(MDCModalDrawerFoundation)).apply(this, arguments));
        }

        _createClass(MDCModalDrawerFoundation, [{
          key: 'opened',

          /**
           * Called when drawer finishes open animation.
           * @override
           */
          value: function opened() {
            this.adapter_.trapFocus();
          }
          /**
           * Called when drawer finishes close animation.
           * @override
           */

        }, {
          key: 'closed',
          value: function closed() {
            this.adapter_.releaseFocus();
          }
          /**
           * Handles click event on scrim.
           */

        }, {
          key: 'handleScrimClick',
          value: function handleScrimClick() {
            this.close();
          }
        }]);

        return MDCModalDrawerFoundation;
      }(__WEBPACK_IMPORTED_MODULE_1__dismissible_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCModalDrawerFoundation;
      /***/
    },
    /* 86 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "createFocusTrapInstance", function () {
        return createFocusTrapInstance;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_focus_trap__ = __webpack_require__(39);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0_focus_trap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_focus_trap__);
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @param {!Element} surfaceEl
       * @param {!Function} focusTrapFactory
       * @return {!FocusTrapInstance}
       */


      function createFocusTrapInstance(surfaceEl) {
        var focusTrapFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : __WEBPACK_IMPORTED_MODULE_0_focus_trap___default.a;
        return focusTrapFactory(surfaceEl, {
          clickOutsideDeactivates: true,
          initialFocus: false,
          // Navigation drawer handles focusing on active nav item.
          escapeDeactivates: false,
          // Navigation drawer handles ESC.
          returnFocusOnDeactivate: false
        });
      }
      /***/

    },
    /* 87 */

    /***/
    function (module, exports) {
      var candidateSelectors = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable="false"])'];
      var candidateSelector = candidateSelectors.join(',');
      var matches = typeof Element === 'undefined' ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;

      function tabbable(el, options) {
        options = options || {};
        var elementDocument = el.ownerDocument || el;
        var regularTabbables = [];
        var orderedTabbables = [];
        var untouchabilityChecker = new UntouchabilityChecker(elementDocument);
        var candidates = el.querySelectorAll(candidateSelector);

        if (options.includeContainer) {
          if (matches.call(el, candidateSelector)) {
            candidates = Array.prototype.slice.apply(candidates);
            candidates.unshift(el);
          }
        }

        var i, candidate, candidateTabindex;

        for (i = 0; i < candidates.length; i++) {
          candidate = candidates[i];
          if (!isNodeMatchingSelectorTabbable(candidate, untouchabilityChecker)) continue;
          candidateTabindex = getTabindex(candidate);

          if (candidateTabindex === 0) {
            regularTabbables.push(candidate);
          } else {
            orderedTabbables.push({
              documentOrder: i,
              tabIndex: candidateTabindex,
              node: candidate
            });
          }
        }

        var tabbableNodes = orderedTabbables.sort(sortOrderedTabbables).map(function (a) {
          return a.node;
        }).concat(regularTabbables);
        return tabbableNodes;
      }

      tabbable.isTabbable = isTabbable;
      tabbable.isFocusable = isFocusable;

      function isNodeMatchingSelectorTabbable(node, untouchabilityChecker) {
        if (!isNodeMatchingSelectorFocusable(node, untouchabilityChecker) || isNonTabbableRadio(node) || getTabindex(node) < 0) {
          return false;
        }

        return true;
      }

      function isTabbable(node, untouchabilityChecker) {
        if (!node) throw new Error('No node provided');
        if (matches.call(node, candidateSelector) === false) return false;
        return isNodeMatchingSelectorTabbable(node, untouchabilityChecker);
      }

      function isNodeMatchingSelectorFocusable(node, untouchabilityChecker) {
        untouchabilityChecker = untouchabilityChecker || new UntouchabilityChecker(node.ownerDocument || node);

        if (node.disabled || isHiddenInput(node) || untouchabilityChecker.isUntouchable(node)) {
          return false;
        }

        return true;
      }

      var focusableCandidateSelector = candidateSelectors.concat('iframe').join(',');

      function isFocusable(node, untouchabilityChecker) {
        if (!node) throw new Error('No node provided');
        if (matches.call(node, focusableCandidateSelector) === false) return false;
        return isNodeMatchingSelectorFocusable(node, untouchabilityChecker);
      }

      function getTabindex(node) {
        var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);
        if (!isNaN(tabindexAttr)) return tabindexAttr; // Browsers do not return `tabIndex` correctly for contentEditable nodes;
        // so if they don't have a tabindex attribute specifically set, assume it's 0.

        if (isContentEditable(node)) return 0;
        return node.tabIndex;
      }

      function sortOrderedTabbables(a, b) {
        return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;
      } // Array.prototype.find not available in IE.


      function find(list, predicate) {
        for (var i = 0, length = list.length; i < length; i++) {
          if (predicate(list[i])) return list[i];
        }
      }

      function isContentEditable(node) {
        return node.contentEditable === 'true';
      }

      function isInput(node) {
        return node.tagName === 'INPUT';
      }

      function isHiddenInput(node) {
        return isInput(node) && node.type === 'hidden';
      }

      function isRadio(node) {
        return isInput(node) && node.type === 'radio';
      }

      function isNonTabbableRadio(node) {
        return isRadio(node) && !isTabbableRadio(node);
      }

      function getCheckedRadio(nodes) {
        for (var i = 0; i < nodes.length; i++) {
          if (nodes[i].checked) {
            return nodes[i];
          }
        }
      }

      function isTabbableRadio(node) {
        if (!node.name) return true; // This won't account for the edge case where you have radio groups with the same
        // in separate forms on the same page.

        var radioSet = node.ownerDocument.querySelectorAll('input[type="radio"][name="' + node.name + '"]');
        var checked = getCheckedRadio(radioSet);
        return !checked || checked === node;
      } // An element is "untouchable" if *it or one of its ancestors* has
      // `visibility: hidden` or `display: none`.


      function UntouchabilityChecker(elementDocument) {
        this.doc = elementDocument; // Node cache must be refreshed on every check, in case
        // the content of the element has changed. The cache contains tuples
        // mapping nodes to their boolean result.

        this.cache = [];
      } // getComputedStyle accurately reflects `visibility: hidden` of ancestors
      // but not `display: none`, so we need to recursively check parents.


      UntouchabilityChecker.prototype.hasDisplayNone = function hasDisplayNone(node, nodeComputedStyle) {
        if (node.nodeType !== Node.ELEMENT_NODE) return false; // Search for a cached result.

        var cached = find(this.cache, function (item) {
          return item === node;
        });
        if (cached) return cached[1];
        nodeComputedStyle = nodeComputedStyle || this.doc.defaultView.getComputedStyle(node);
        var result = false;

        if (nodeComputedStyle.display === 'none') {
          result = true;
        } else if (node.parentNode) {
          result = this.hasDisplayNone(node.parentNode);
        }

        this.cache.push([node, result]);
        return result;
      };

      UntouchabilityChecker.prototype.isUntouchable = function isUntouchable(node) {
        if (node === this.doc.documentElement) return false;
        var computedStyle = this.doc.defaultView.getComputedStyle(node);
        if (this.hasDisplayNone(node, computedStyle)) return true;
        return computedStyle.visibility === 'hidden';
      };

      module.exports = tabbable;
      /***/
    },
    /* 88 */

    /***/
    function (module, exports) {
      module.exports = extend;
      var hasOwnProperty = Object.prototype.hasOwnProperty;

      function extend() {
        var target = {};

        for (var i = 0; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }
      /***/

    },
    /* 89 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(40);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(90);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}
       * @final
       */


      var MDCFloatingLabelFoundation = function (_MDCFoundation) {
        _inherits(MDCFloatingLabelFoundation, _MDCFoundation);

        _createClass(MDCFloatingLabelFoundation, null, [{
          key: 'cssClasses',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /**
           * {@see MDCFloatingLabelAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCFloatingLabelAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCFloatingLabelAdapter} */
              {
                addClass: function addClass() {},
                removeClass: function removeClass() {},
                getWidth: function getWidth() {},
                registerInteractionHandler: function registerInteractionHandler() {},
                deregisterInteractionHandler: function deregisterInteractionHandler() {}
              }
            );
          }
          /**
           * @param {!MDCFloatingLabelAdapter} adapter
           */

        }]);

        function MDCFloatingLabelFoundation(adapter) {
          _classCallCheck(this, MDCFloatingLabelFoundation);
          /** @private {function(!Event): undefined} */


          var _this = _possibleConstructorReturn(this, (MDCFloatingLabelFoundation.__proto__ || Object.getPrototypeOf(MDCFloatingLabelFoundation)).call(this, _extends(MDCFloatingLabelFoundation.defaultAdapter, adapter)));

          _this.shakeAnimationEndHandler_ = function () {
            return _this.handleShakeAnimationEnd_();
          };

          return _this;
        }

        _createClass(MDCFloatingLabelFoundation, [{
          key: 'init',
          value: function init() {
            this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);
          }
          /**
           * Returns the width of the label element.
           * @return {number}
           */

        }, {
          key: 'getWidth',
          value: function getWidth() {
            return this.adapter_.getWidth();
          }
          /**
           * Styles the label to produce the label shake for errors.
           * @param {boolean} shouldShake adds shake class if true,
           * otherwise removes shake class.
           */

        }, {
          key: 'shake',
          value: function shake(shouldShake) {
            var LABEL_SHAKE = MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;

            if (shouldShake) {
              this.adapter_.addClass(LABEL_SHAKE);
            } else {
              this.adapter_.removeClass(LABEL_SHAKE);
            }
          }
          /**
           * Styles the label to float or dock.
           * @param {boolean} shouldFloat adds float class if true, otherwise remove
           * float and shake class to dock label.
           */

        }, {
          key: 'float',
          value: function float(shouldFloat) {
            var _MDCFloatingLabelFoun = MDCFloatingLabelFoundation.cssClasses,
                LABEL_FLOAT_ABOVE = _MDCFloatingLabelFoun.LABEL_FLOAT_ABOVE,
                LABEL_SHAKE = _MDCFloatingLabelFoun.LABEL_SHAKE;

            if (shouldFloat) {
              this.adapter_.addClass(LABEL_FLOAT_ABOVE);
            } else {
              this.adapter_.removeClass(LABEL_FLOAT_ABOVE);
              this.adapter_.removeClass(LABEL_SHAKE);
            }
          }
          /**
           * Handles an interaction event on the root element.
           */

        }, {
          key: 'handleShakeAnimationEnd_',
          value: function handleShakeAnimationEnd_() {
            var LABEL_SHAKE = MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;
            this.adapter_.removeClass(LABEL_SHAKE);
          }
        }]);

        return MDCFloatingLabelFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCFloatingLabelFoundation;
      /***/
    },
    /* 90 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',
        LABEL_SHAKE: 'mdc-floating-label--shake',
        ROOT: 'mdc-floating-label'
      };
      /***/
    },
    /* 91 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCFormField", function () {
        return MDCFormField;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(92);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__material_selection_control_index__ = __webpack_require__(3);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCFormFieldFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_1__foundation__["a"];
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @extends MDCComponent<!MDCFormFieldFoundation>
       */


      var MDCFormField = function (_MDCComponent) {
        _inherits(MDCFormField, _MDCComponent);

        _createClass(MDCFormField, [{
          key: 'input',

          /** @param {?MDCSelectionControl} input */
          set: function set(input) {
            this.input_ = input;
          }
          /** @return {?MDCSelectionControl} */
          ,
          get: function get() {
            return this.input_;
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCFormField(root);
          }
        }]);

        function MDCFormField() {
          var _ref;

          _classCallCheck(this, MDCFormField);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {?MDCSelectionControl} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCFormField.__proto__ || Object.getPrototypeOf(MDCFormField)).call.apply(_ref, [this].concat(args)));

          _this.input_;
          return _this;
        }
        /**
         * @return {!Element}
         * @private
         */


        _createClass(MDCFormField, [{
          key: 'getDefaultFoundation',

          /** @return {!MDCFormFieldFoundation} */
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_1__foundation__["a"
            /* default */
            ]({
              registerInteractionHandler: function registerInteractionHandler(type, handler) {
                return _this2.label_.addEventListener(type, handler);
              },
              deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
                return _this2.label_.removeEventListener(type, handler);
              },
              activateInputRipple: function activateInputRipple() {
                if (_this2.input_ && _this2.input_.ripple) {
                  _this2.input_.ripple.activate();
                }
              },
              deactivateInputRipple: function deactivateInputRipple() {
                if (_this2.input_ && _this2.input_.ripple) {
                  _this2.input_.ripple.deactivate();
                }
              }
            });
          }
        }, {
          key: 'label_',
          get: function get() {
            var LABEL_SELECTOR = __WEBPACK_IMPORTED_MODULE_1__foundation__["a"
            /* default */
            ].strings.LABEL_SELECTOR;
            return (
              /** @type {!Element} */
              this.root_.querySelector(LABEL_SELECTOR)
            );
          }
        }]);

        return MDCFormField;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 92 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(93);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(94);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCFoundation<!MDCFormFieldAdapter>}
       */


      var MDCFormFieldFoundation = function (_MDCFoundation) {
        _inherits(MDCFormFieldFoundation, _MDCFoundation);

        _createClass(MDCFormFieldFoundation, null, [{
          key: 'cssClasses',

          /** @return enum {cssClasses} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return enum {strings} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ];
          }
          /** @return {!MDCFormFieldAdapter} */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return {
              registerInteractionHandler: function registerInteractionHandler()
              /* type: string, handler: EventListener */
              {},
              deregisterInteractionHandler: function deregisterInteractionHandler()
              /* type: string, handler: EventListener */
              {},
              activateInputRipple: function activateInputRipple() {},
              deactivateInputRipple: function deactivateInputRipple() {}
            };
          }
        }]);

        function MDCFormFieldFoundation(adapter) {
          _classCallCheck(this, MDCFormFieldFoundation);
          /** @private {!EventListener} */


          var _this = _possibleConstructorReturn(this, (MDCFormFieldFoundation.__proto__ || Object.getPrototypeOf(MDCFormFieldFoundation)).call(this, _extends(MDCFormFieldFoundation.defaultAdapter, adapter)));

          _this.clickHandler_ =
          /** @type {!EventListener} */
          function () {
            return _this.handleClick_();
          };

          return _this;
        }

        _createClass(MDCFormFieldFoundation, [{
          key: 'init',
          value: function init() {
            this.adapter_.registerInteractionHandler('click', this.clickHandler_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);
          }
          /** @private */

        }, {
          key: 'handleClick_',
          value: function handleClick_() {
            var _this2 = this;

            this.adapter_.activateInputRipple();
            requestAnimationFrame(function () {
              return _this2.adapter_.deactivateInputRipple();
            });
          }
        }]);

        return MDCFormFieldFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCFormFieldFoundation;
      /***/
    },
    /* 93 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Form Field. Provides an interface for managing
       * - event handlers
       * - ripple activation
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCFormFieldAdapter = function () {
        function MDCFormFieldAdapter() {
          _classCallCheck(this, MDCFormFieldAdapter);
        }

        _createClass(MDCFormFieldAdapter, [{
          key: "registerInteractionHandler",

          /**
           * @param {string} type
           * @param {!EventListener} handler
           */
          value: function registerInteractionHandler(type, handler) {}
          /**
           * @param {string} type
           * @param {!EventListener} handler
           */

        }, {
          key: "deregisterInteractionHandler",
          value: function deregisterInteractionHandler(type, handler) {}
        }, {
          key: "activateInputRipple",
          value: function activateInputRipple() {}
        }, {
          key: "deactivateInputRipple",
          value: function deactivateInputRipple() {}
        }]);

        return MDCFormFieldAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCFormFieldAdapter;
      /***/
    },
    /* 94 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        ROOT: 'mdc-form-field'
      };
      /** @enum {string} */

      var strings = {
        LABEL_SELECTOR: '.mdc-form-field > label'
      };
      /***/
    },
    /* 95 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCGridList", function () {
        return MDCGridList;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(96);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCGridListFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_1__foundation__["a"];
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var MDCGridList = function (_MDCComponent) {
        _inherits(MDCGridList, _MDCComponent);

        function MDCGridList() {
          _classCallCheck(this, MDCGridList);

          return _possibleConstructorReturn(this, (MDCGridList.__proto__ || Object.getPrototypeOf(MDCGridList)).apply(this, arguments));
        }

        _createClass(MDCGridList, [{
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_1__foundation__["a"
            /* default */
            ]({
              getOffsetWidth: function getOffsetWidth() {
                return _this2.root_.offsetWidth;
              },
              getNumberOfTiles: function getNumberOfTiles() {
                return _this2.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_1__foundation__["a"
                /* default */
                ].strings.TILE_SELECTOR).length;
              },
              getOffsetWidthForTileAtIndex: function getOffsetWidthForTileAtIndex(index) {
                return _this2.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_1__foundation__["a"
                /* default */
                ].strings.TILE_SELECTOR)[index].offsetWidth;
              },
              setStyleForTilesElement: function setStyleForTilesElement(property, value) {
                _this2.root_.querySelector(__WEBPACK_IMPORTED_MODULE_1__foundation__["a"
                /* default */
                ].strings.TILES_SELECTOR).style[property] = value;
              },
              registerResizeHandler: function registerResizeHandler(handler) {
                return window.addEventListener('resize', handler);
              },
              deregisterResizeHandler: function deregisterResizeHandler(handler) {
                return window.removeEventListener('resize', handler);
              }
            });
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCGridList(root);
          }
        }]);

        return MDCGridList;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 96 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(97);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var MDCGridListFoundation = function (_MDCFoundation) {
        _inherits(MDCGridListFoundation, _MDCFoundation);

        _createClass(MDCGridListFoundation, null, [{
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_1__constants__["a"
            /* strings */
            ];
          }
        }, {
          key: 'defaultAdapter',
          get: function get() {
            return {
              getOffsetWidth: function getOffsetWidth() {
                return (
                  /* number */
                  0
                );
              },
              getNumberOfTiles: function getNumberOfTiles() {
                return (
                  /* number */
                  0
                );
              },
              getOffsetWidthForTileAtIndex: function getOffsetWidthForTileAtIndex() {
                return (
                  /* index: number */

                  /* number */
                  0
                );
              },
              setStyleForTilesElement: function setStyleForTilesElement()
              /* property: string, value: string */
              {},
              registerResizeHandler: function registerResizeHandler()
              /* handler: EventListener */
              {},
              deregisterResizeHandler: function deregisterResizeHandler()
              /* handler: EventListener */
              {}
            };
          }
        }]);

        function MDCGridListFoundation(adapter) {
          _classCallCheck(this, MDCGridListFoundation);

          var _this = _possibleConstructorReturn(this, (MDCGridListFoundation.__proto__ || Object.getPrototypeOf(MDCGridListFoundation)).call(this, _extends(MDCGridListFoundation.defaultAdapter, adapter)));

          _this.resizeHandler_ = function () {
            return _this.alignCenter();
          };

          _this.resizeFrame_ = 0;
          return _this;
        }

        _createClass(MDCGridListFoundation, [{
          key: 'init',
          value: function init() {
            this.alignCenter();
            this.adapter_.registerResizeHandler(this.resizeHandler_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.adapter_.deregisterResizeHandler(this.resizeHandler_);
          }
        }, {
          key: 'alignCenter',
          value: function alignCenter() {
            var _this2 = this;

            if (this.resizeFrame_ !== 0) {
              cancelAnimationFrame(this.resizeFrame_);
            }

            this.resizeFrame_ = requestAnimationFrame(function () {
              _this2.alignCenter_();

              _this2.resizeFrame_ = 0;
            });
          }
        }, {
          key: 'alignCenter_',
          value: function alignCenter_() {
            if (this.adapter_.getNumberOfTiles() == 0) {
              return;
            }

            var gridWidth = this.adapter_.getOffsetWidth();
            var itemWidth = this.adapter_.getOffsetWidthForTileAtIndex(0);
            var tilesWidth = itemWidth * Math.floor(gridWidth / itemWidth);
            this.adapter_.setStyleForTilesElement('width', tilesWidth + 'px');
          }
        }]);

        return MDCGridListFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCGridListFoundation;
      /***/
    },
    /* 97 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var strings = {
        TILES_SELECTOR: '.mdc-grid-list__tiles',
        TILE_SELECTOR: '.mdc-grid-tile'
      };
      /***/
    },
    /* 98 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCIconButtonToggle", function () {
        return MDCIconButtonToggle;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(99);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__material_ripple_index__ = __webpack_require__(2);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCIconButtonToggleFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_1__foundation__["a"];
      });

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCComponent<!MDCIconButtonToggleFoundation>}
       */


      var MDCIconButtonToggle = function (_MDCComponent) {
        _inherits(MDCIconButtonToggle, _MDCComponent);

        _createClass(MDCIconButtonToggle, null, [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCIconButtonToggle(root);
          }
        }]);

        function MDCIconButtonToggle() {
          var _ref;

          _classCallCheck(this, MDCIconButtonToggle);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {!MDCRipple} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCIconButtonToggle.__proto__ || Object.getPrototypeOf(MDCIconButtonToggle)).call.apply(_ref, [this].concat(args)));

          _this.ripple_ = _this.initRipple_();
          /** @private {!Function} */

          _this.handleClick_;
          return _this;
        }
        /**
         * @return {!MDCRipple}
         * @private
         */


        _createClass(MDCIconButtonToggle, [{
          key: 'initRipple_',
          value: function initRipple_() {
            var ripple = new __WEBPACK_IMPORTED_MODULE_2__material_ripple_index__["MDCRipple"](this.root_);
            ripple.unbounded = true;
            return ripple;
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.root_.removeEventListener('click', this.handleClick_);
            this.ripple_.destroy();

            _get(MDCIconButtonToggle.prototype.__proto__ || Object.getPrototypeOf(MDCIconButtonToggle.prototype), 'destroy', this).call(this);
          }
          /** @return {!MDCIconButtonToggleFoundation} */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_1__foundation__["a"
            /* default */
            ]({
              addClass: function addClass(className) {
                return _this2.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this2.root_.classList.remove(className);
              },
              hasClass: function hasClass(className) {
                return _this2.root_.classList.contains(className);
              },
              setAttr: function setAttr(attrName, attrValue) {
                return _this2.root_.setAttribute(attrName, attrValue);
              },
              notifyChange: function notifyChange(evtData) {
                return _this2.emit(__WEBPACK_IMPORTED_MODULE_1__foundation__["a"
                /* default */
                ].strings.CHANGE_EVENT, evtData);
              }
            });
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            this.handleClick_ = this.foundation_.handleClick.bind(this.foundation_);
            this.root_.addEventListener('click', this.handleClick_);
          }
          /** @return {!MDCRipple} */

        }, {
          key: 'ripple',
          get: function get() {
            return this.ripple_;
          }
          /** @return {boolean} */

        }, {
          key: 'on',
          get: function get() {
            return this.foundation_.isOn();
          }
          /** @param {boolean} isOn */
          ,
          set: function set(isOn) {
            this.foundation_.toggle(isOn);
          }
        }]);

        return MDCIconButtonToggle;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 99 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(100);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(101);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /**
       * @extends {MDCFoundation<!MDCIconButtonToggleAdapter>}
       */


      var MDCIconButtonToggleFoundation = function (_MDCFoundation) {
        _inherits(MDCIconButtonToggleFoundation, _MDCFoundation);

        _createClass(MDCIconButtonToggleFoundation, null, [{
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ];
          }
        }, {
          key: 'defaultAdapter',
          get: function get() {
            return {
              addClass: function addClass() {},
              removeClass: function removeClass() {},
              hasClass: function hasClass() {},
              setAttr: function setAttr() {},
              notifyChange: function notifyChange() {}
            };
          }
        }]);

        function MDCIconButtonToggleFoundation(adapter) {
          _classCallCheck(this, MDCIconButtonToggleFoundation);
          /** @private {boolean} */


          var _this = _possibleConstructorReturn(this, (MDCIconButtonToggleFoundation.__proto__ || Object.getPrototypeOf(MDCIconButtonToggleFoundation)).call(this, _extends(MDCIconButtonToggleFoundation.defaultAdapter, adapter)));

          _this.disabled_ = false;
          return _this;
        }

        _createClass(MDCIconButtonToggleFoundation, [{
          key: 'init',
          value: function init() {
            this.adapter_.setAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_PRESSED, '' + this.isOn());
          }
        }, {
          key: 'handleClick',
          value: function handleClick() {
            this.toggle();
            this.adapter_.notifyChange(
            /** @type {!IconButtonToggleEvent} */
            {
              isOn: this.isOn()
            });
          }
          /** @return {boolean} */

        }, {
          key: 'isOn',
          value: function isOn() {
            return this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].ICON_BUTTON_ON);
          }
          /** @param {boolean=} isOn */

        }, {
          key: 'toggle',
          value: function toggle() {
            var isOn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !this.isOn();

            if (isOn) {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].ICON_BUTTON_ON);
            } else {
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].ICON_BUTTON_ON);
            }

            this.adapter_.setAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_PRESSED, '' + isOn);
          }
        }]);

        return MDCIconButtonToggleFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /** @record */


      var IconButtonToggleState = function IconButtonToggleState() {
        _classCallCheck(this, IconButtonToggleState);
      };
      /* harmony default export */


      __webpack_exports__["a"] = MDCIconButtonToggleFoundation;
      /***/
    },
    /* 100 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* unused harmony export MDCIconButtonToggleAdapter */

      /* unused harmony export IconButtonToggleEvent */

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Icon Button Toggle. Provides an interface for managing
       * - classes
       * - dom
       * - inner text
       * - event handlers
       * - event dispatch
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCIconButtonToggleAdapter = function () {
        function MDCIconButtonToggleAdapter() {
          _classCallCheck(this, MDCIconButtonToggleAdapter);
        }

        _createClass(MDCIconButtonToggleAdapter, [{
          key: "addClass",

          /** @param {string} className */
          value: function addClass(className) {}
          /** @param {string} className */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * @param {string} className
           * @return {boolean}
           * */

        }, {
          key: "hasClass",
          value: function hasClass(className) {}
          /**
           * @param {string} attrName
           * @param {string} attrValue
           */

        }, {
          key: "setAttr",
          value: function setAttr(attrName, attrValue) {}
          /** @param {!IconButtonToggleEvent} evtData */

        }, {
          key: "notifyChange",
          value: function notifyChange(evtData) {}
        }]);

        return MDCIconButtonToggleAdapter;
      }();
      /**
       * @typedef {{
       *   isOn: boolean,
       * }}
       */


      var IconButtonToggleEvent = void 0;
      /***/
    },
    /* 101 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        ROOT: 'mdc-icon-button',
        ICON_BUTTON_ON: 'mdc-icon-button--on'
      };
      /** @enum {string} */

      var strings = {
        ARIA_PRESSED: 'aria-pressed',
        CHANGE_EVENT: 'MDCIconButtonToggle:change'
      };
      /***/
    },
    /* 102 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCIconToggle", function () {
        return MDCIconToggle;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(103);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__material_ripple_index__ = __webpack_require__(2);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCIconToggleFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_1__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCComponent<!MDCIconToggleFoundation>}
       */


      var MDCIconToggle = function (_MDCComponent) {
        _inherits(MDCIconToggle, _MDCComponent);

        _createClass(MDCIconToggle, null, [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCIconToggle(root);
          }
        }]);

        function MDCIconToggle() {
          var _ref;

          _classCallCheck(this, MDCIconToggle);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {!MDCRipple} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCIconToggle.__proto__ || Object.getPrototypeOf(MDCIconToggle)).call.apply(_ref, [this].concat(args)));

          _this.ripple_ = _this.initRipple_();
          return _this;
        }
        /** @return {!Element} */


        _createClass(MDCIconToggle, [{
          key: 'initRipple_',

          /**
           * @return {!MDCRipple}
           * @private
           */
          value: function initRipple_() {
            var _this2 = this;

            var adapter = _extends(__WEBPACK_IMPORTED_MODULE_2__material_ripple_index__["MDCRipple"].createAdapter(this), {
              isUnbounded: function isUnbounded() {
                return true;
              },
              isSurfaceActive: function isSurfaceActive() {
                return _this2.foundation_.isKeyboardActivated();
              }
            });

            var foundation = new __WEBPACK_IMPORTED_MODULE_2__material_ripple_index__["MDCRippleFoundation"](adapter);
            return new __WEBPACK_IMPORTED_MODULE_2__material_ripple_index__["MDCRipple"](this.root_, foundation);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.ripple_.destroy();

            _get(MDCIconToggle.prototype.__proto__ || Object.getPrototypeOf(MDCIconToggle.prototype), 'destroy', this).call(this);
          }
          /** @return {!MDCIconToggleFoundation} */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this3 = this;

            return new __WEBPACK_IMPORTED_MODULE_1__foundation__["a"
            /* default */
            ]({
              addClass: function addClass(className) {
                return _this3.iconEl_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this3.iconEl_.classList.remove(className);
              },
              registerInteractionHandler: function registerInteractionHandler(type, handler) {
                return _this3.root_.addEventListener(type, handler);
              },
              deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
                return _this3.root_.removeEventListener(type, handler);
              },
              setText: function setText(text) {
                return _this3.iconEl_.textContent = text;
              },
              getTabIndex: function getTabIndex() {
                return (
                  /* number */
                  _this3.root_.tabIndex
                );
              },
              setTabIndex: function setTabIndex(tabIndex) {
                return _this3.root_.tabIndex = tabIndex;
              },
              getAttr: function getAttr(name, value) {
                return _this3.root_.getAttribute(name, value);
              },
              setAttr: function setAttr(name, value) {
                return _this3.root_.setAttribute(name, value);
              },
              rmAttr: function rmAttr(name) {
                return _this3.root_.removeAttribute(name);
              },
              notifyChange: function notifyChange(evtData) {
                return _this3.emit(__WEBPACK_IMPORTED_MODULE_1__foundation__["a"
                /* default */
                ].strings.CHANGE_EVENT, evtData);
              }
            });
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            this.on = this.root_.getAttribute(__WEBPACK_IMPORTED_MODULE_1__foundation__["a"
            /* default */
            ].strings.ARIA_PRESSED) === 'true';
            this.disabled = this.root_.getAttribute(__WEBPACK_IMPORTED_MODULE_1__foundation__["a"
            /* default */
            ].strings.ARIA_DISABLED) === 'true';
          }
          /** @return {!MDCRipple} */

        }, {
          key: 'refreshToggleData',
          value: function refreshToggleData() {
            this.foundation_.refreshToggleData();
          }
        }, {
          key: 'iconEl_',
          get: function get() {
            var sel = this.root_.dataset['iconInnerSelector'];
            return sel ?
            /** @type {!Element} */
            this.root_.querySelector(sel) : this.root_;
          }
        }, {
          key: 'ripple',
          get: function get() {
            return this.ripple_;
          }
          /** @return {boolean} */

        }, {
          key: 'on',
          get: function get() {
            return this.foundation_.isOn();
          }
          /** @param {boolean} isOn */
          ,
          set: function set(isOn) {
            this.foundation_.toggle(isOn);
          }
          /** @return {boolean} */

        }, {
          key: 'disabled',
          get: function get() {
            return this.foundation_.isDisabled();
          }
          /** @param {boolean} isDisabled */
          ,
          set: function set(isDisabled) {
            this.foundation_.setDisabled(isDisabled);
          }
        }]);

        return MDCIconToggle;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 103 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(104);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(105);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /**
       * @extends {MDCFoundation<!MDCIconToggleAdapter>}
       */


      var MDCIconToggleFoundation = function (_MDCFoundation) {
        _inherits(MDCIconToggleFoundation, _MDCFoundation);

        _createClass(MDCIconToggleFoundation, null, [{
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ];
          }
        }, {
          key: 'defaultAdapter',
          get: function get() {
            return {
              addClass: function addClass()
              /* className: string */
              {},
              removeClass: function removeClass()
              /* className: string */
              {},
              registerInteractionHandler: function registerInteractionHandler()
              /* type: string, handler: EventListener */
              {},
              deregisterInteractionHandler: function deregisterInteractionHandler()
              /* type: string, handler: EventListener */
              {},
              setText: function setText()
              /* text: string */
              {},
              getTabIndex: function getTabIndex() {
                return (
                  /* number */
                  0
                );
              },
              setTabIndex: function setTabIndex()
              /* tabIndex: number */
              {},
              getAttr: function getAttr() {
                return (
                  /* name: string */

                  /* string */
                  ''
                );
              },
              setAttr: function setAttr()
              /* name: string, value: string */
              {},
              rmAttr: function rmAttr()
              /* name: string */
              {},
              notifyChange: function notifyChange()
              /* evtData: IconToggleEvent */
              {}
            };
          }
        }]);

        function MDCIconToggleFoundation(adapter) {
          _classCallCheck(this, MDCIconToggleFoundation);
          /** @private {boolean} */


          var _this = _possibleConstructorReturn(this, (MDCIconToggleFoundation.__proto__ || Object.getPrototypeOf(MDCIconToggleFoundation)).call(this, _extends(MDCIconToggleFoundation.defaultAdapter, adapter)));

          _this.on_ = false;
          /** @private {boolean} */

          _this.disabled_ = false;
          /** @private {number} */

          _this.savedTabIndex_ = -1;
          /** @private {?IconToggleState} */

          _this.toggleOnData_ = null;
          /** @private {?IconToggleState} */

          _this.toggleOffData_ = null;

          _this.clickHandler_ =
          /** @private {!EventListener} */
          function () {
            return _this.toggleFromEvt_();
          };
          /** @private {boolean} */


          _this.isHandlingKeydown_ = false;

          _this.keydownHandler_ =
          /** @private {!EventListener} */
          function (
          /** @type {!KeyboardKey} */
          evt) {
            if (isSpace(evt)) {
              _this.isHandlingKeydown_ = true;
              return evt.preventDefault();
            }
          };

          _this.keyupHandler_ =
          /** @private {!EventListener} */
          function (
          /** @type {!KeyboardKey} */
          evt) {
            if (isSpace(evt)) {
              _this.isHandlingKeydown_ = false;

              _this.toggleFromEvt_();
            }
          };

          return _this;
        }

        _createClass(MDCIconToggleFoundation, [{
          key: 'init',
          value: function init() {
            this.refreshToggleData();
            this.savedTabIndex_ = this.adapter_.getTabIndex();
            this.adapter_.registerInteractionHandler('click', this.clickHandler_);
            this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);
            this.adapter_.registerInteractionHandler('keyup', this.keyupHandler_);
          }
        }, {
          key: 'refreshToggleData',
          value: function refreshToggleData() {
            var _MDCIconToggleFoundat = MDCIconToggleFoundation.strings,
                DATA_TOGGLE_ON = _MDCIconToggleFoundat.DATA_TOGGLE_ON,
                DATA_TOGGLE_OFF = _MDCIconToggleFoundat.DATA_TOGGLE_OFF;
            this.toggleOnData_ = this.parseJsonDataAttr_(DATA_TOGGLE_ON);
            this.toggleOffData_ = this.parseJsonDataAttr_(DATA_TOGGLE_OFF);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);
            this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);
            this.adapter_.deregisterInteractionHandler('keyup', this.keyupHandler_);
          }
          /** @private */

        }, {
          key: 'toggleFromEvt_',
          value: function toggleFromEvt_() {
            this.toggle();
            var isOn = this.on_;
            this.adapter_.notifyChange(
            /** @type {!IconToggleEvent} */
            {
              isOn: isOn
            });
          }
          /** @return {boolean} */

        }, {
          key: 'isOn',
          value: function isOn() {
            return this.on_;
          }
          /** @param {boolean=} isOn */

        }, {
          key: 'toggle',
          value: function toggle() {
            var isOn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !this.on_;
            this.on_ = isOn;
            var _MDCIconToggleFoundat2 = MDCIconToggleFoundation.strings,
                ARIA_LABEL = _MDCIconToggleFoundat2.ARIA_LABEL,
                ARIA_PRESSED = _MDCIconToggleFoundat2.ARIA_PRESSED;

            if (this.on_) {
              this.adapter_.setAttr(ARIA_PRESSED, 'true');
            } else {
              this.adapter_.setAttr(ARIA_PRESSED, 'false');
            }

            var _ref = this.on_ ? this.toggleOffData_ : this.toggleOnData_,
                classToRemove = _ref.cssClass;

            if (classToRemove) {
              this.adapter_.removeClass(classToRemove);
            }

            var _ref2 = this.on_ ? this.toggleOnData_ : this.toggleOffData_,
                content = _ref2.content,
                label = _ref2.label,
                cssClass = _ref2.cssClass;

            if (cssClass) {
              this.adapter_.addClass(cssClass);
            }

            if (content) {
              this.adapter_.setText(content);
            }

            if (label) {
              this.adapter_.setAttr(ARIA_LABEL, label);
            }
          }
          /**
           * @param {string} dataAttr
           * @return {!IconToggleState}
           */

        }, {
          key: 'parseJsonDataAttr_',
          value: function parseJsonDataAttr_(dataAttr) {
            var val = this.adapter_.getAttr(dataAttr);

            if (!val) {
              return {};
            }

            return (
              /** @type {!IconToggleState} */
              JSON.parse(val)
            );
          }
          /** @return {boolean} */

        }, {
          key: 'isDisabled',
          value: function isDisabled() {
            return this.disabled_;
          }
          /** @param {boolean} isDisabled */

        }, {
          key: 'setDisabled',
          value: function setDisabled(isDisabled) {
            this.disabled_ = isDisabled;
            var DISABLED = MDCIconToggleFoundation.cssClasses.DISABLED;
            var ARIA_DISABLED = MDCIconToggleFoundation.strings.ARIA_DISABLED;

            if (this.disabled_) {
              this.savedTabIndex_ = this.adapter_.getTabIndex();
              this.adapter_.setTabIndex(-1);
              this.adapter_.setAttr(ARIA_DISABLED, 'true');
              this.adapter_.addClass(DISABLED);
            } else {
              this.adapter_.setTabIndex(this.savedTabIndex_);
              this.adapter_.rmAttr(ARIA_DISABLED);
              this.adapter_.removeClass(DISABLED);
            }
          }
          /** @return {boolean} */

        }, {
          key: 'isKeyboardActivated',
          value: function isKeyboardActivated() {
            return this.isHandlingKeydown_;
          }
        }]);

        return MDCIconToggleFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /**
       * @typedef {{
       *   key: string,
       *   keyCode: number
       * }}
       */


      var KeyboardKey = void 0;
      /**
       * @param {!KeyboardKey} keyboardKey
       * @return {boolean}
       */

      function isSpace(keyboardKey) {
        return keyboardKey.key === 'Space' || keyboardKey.keyCode === 32;
      }
      /** @record */


      var IconToggleState = function IconToggleState() {
        _classCallCheck(this, IconToggleState);
      };
      /**
       * The aria-label value of the icon toggle, or undefined if there is no aria-label.
       * @export {string|undefined}
       */


      IconToggleState.prototype.label;
      /**
       * The text for the icon toggle, or undefined if there is no text.
       * @export {string|undefined}
       */

      IconToggleState.prototype.content;
      /**
       * The CSS class to add to the icon toggle, or undefined if there is no CSS class.
       * @export {string|undefined}
       */

      IconToggleState.prototype.cssClass;
      /* harmony default export */

      __webpack_exports__["a"] = MDCIconToggleFoundation;
      /***/
    },
    /* 104 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* unused harmony export MDCIconToggleAdapter */

      /* unused harmony export IconToggleEvent */

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Icon Toggle. Provides an interface for managing
       * - classes
       * - dom
       * - inner text
       * - event handlers
       * - event dispatch
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCIconToggleAdapter = function () {
        function MDCIconToggleAdapter() {
          _classCallCheck(this, MDCIconToggleAdapter);
        }

        _createClass(MDCIconToggleAdapter, [{
          key: "addClass",

          /** @param {string} className */
          value: function addClass(className) {}
          /** @param {string} className */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /**
           * @param {string} type
           * @param {!EventListener} handler
           */

        }, {
          key: "registerInteractionHandler",
          value: function registerInteractionHandler(type, handler) {}
          /**
           * @param {string} type
           * @param {!EventListener} handler
           */

        }, {
          key: "deregisterInteractionHandler",
          value: function deregisterInteractionHandler(type, handler) {}
          /** @param {string} text */

        }, {
          key: "setText",
          value: function setText(text) {}
          /** @return {number} */

        }, {
          key: "getTabIndex",
          value: function getTabIndex() {}
          /** @param {number} tabIndex */

        }, {
          key: "setTabIndex",
          value: function setTabIndex(tabIndex) {}
          /**
           * @param {string} name
           * @return {string}
           */

        }, {
          key: "getAttr",
          value: function getAttr(name) {}
          /**
           * @param {string} name
           * @param {string} value
           */

        }, {
          key: "setAttr",
          value: function setAttr(name, value) {}
          /** @param {string} name */

        }, {
          key: "rmAttr",
          value: function rmAttr(name) {}
          /** @param {!IconToggleEvent} evtData */

        }, {
          key: "notifyChange",
          value: function notifyChange(evtData) {}
        }]);

        return MDCIconToggleAdapter;
      }();
      /**
       * @typedef {{
       *   isOn: boolean,
       * }}
       */


      var IconToggleEvent = void 0;
      /***/
    },
    /* 105 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        ROOT: 'mdc-icon-toggle',
        DISABLED: 'mdc-icon-toggle--disabled'
      };
      /** @enum {string} */

      var strings = {
        DATA_TOGGLE_ON: 'data-toggle-on',
        DATA_TOGGLE_OFF: 'data-toggle-off',
        ARIA_PRESSED: 'aria-pressed',
        ARIA_DISABLED: 'aria-disabled',
        ARIA_LABEL: 'aria-label',
        CHANGE_EVENT: 'MDCIconToggle:change'
      };
      /***/
    },
    /* 106 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCLinearProgress", function () {
        return MDCLinearProgress;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(107);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCLinearProgressFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_1__foundation__["a"];
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var MDCLinearProgress = function (_MDCComponent) {
        _inherits(MDCLinearProgress, _MDCComponent);

        function MDCLinearProgress() {
          _classCallCheck(this, MDCLinearProgress);

          return _possibleConstructorReturn(this, (MDCLinearProgress.__proto__ || Object.getPrototypeOf(MDCLinearProgress)).apply(this, arguments));
        }

        _createClass(MDCLinearProgress, [{
          key: 'open',
          value: function open() {
            this.foundation_.open();
          }
        }, {
          key: 'close',
          value: function close() {
            this.foundation_.close();
          }
        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_1__foundation__["a"
            /* default */
            ]({
              addClass: function addClass(className) {
                return _this2.root_.classList.add(className);
              },
              getPrimaryBar: function getPrimaryBar() {
                return _this2.root_.querySelector(__WEBPACK_IMPORTED_MODULE_1__foundation__["a"
                /* default */
                ].strings.PRIMARY_BAR_SELECTOR);
              },
              getBuffer: function getBuffer() {
                return _this2.root_.querySelector(__WEBPACK_IMPORTED_MODULE_1__foundation__["a"
                /* default */
                ].strings.BUFFER_SELECTOR);
              },
              hasClass: function hasClass(className) {
                return _this2.root_.classList.contains(className);
              },
              removeClass: function removeClass(className) {
                return _this2.root_.classList.remove(className);
              },
              setStyle: function setStyle(el, styleProperty, value) {
                return el.style[styleProperty] = value;
              }
            });
          }
        }, {
          key: 'determinate',
          set: function set(value) {
            this.foundation_.setDeterminate(value);
          }
        }, {
          key: 'progress',
          set: function set(value) {
            this.foundation_.setProgress(value);
          }
        }, {
          key: 'buffer',
          set: function set(value) {
            this.foundation_.setBuffer(value);
          }
        }, {
          key: 'reverse',
          set: function set(value) {
            this.foundation_.setReverse(value);
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCLinearProgress(root);
          }
        }]);

        return MDCLinearProgress;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 107 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__material_animation_index__ = __webpack_require__(13);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(108);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var MDCLinearProgressFoundation = function (_MDCFoundation) {
        _inherits(MDCLinearProgressFoundation, _MDCFoundation);

        _createClass(MDCLinearProgressFoundation, null, [{
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ];
          }
        }, {
          key: 'defaultAdapter',
          get: function get() {
            return {
              addClass: function addClass()
              /* className: string */
              {},
              getPrimaryBar: function getPrimaryBar()
              /* el: Element */
              {},
              getBuffer: function getBuffer()
              /* el: Element */
              {},
              hasClass: function hasClass() {
                return (
                  /* className: string */
                  false
                );
              },
              removeClass: function removeClass()
              /* className: string */
              {},
              setStyle: function setStyle()
              /* el: Element, styleProperty: string, value: string */
              {}
            };
          }
        }]);

        function MDCLinearProgressFoundation(adapter) {
          _classCallCheck(this, MDCLinearProgressFoundation);

          return _possibleConstructorReturn(this, (MDCLinearProgressFoundation.__proto__ || Object.getPrototypeOf(MDCLinearProgressFoundation)).call(this, _extends(MDCLinearProgressFoundation.defaultAdapter, adapter)));
        }

        _createClass(MDCLinearProgressFoundation, [{
          key: 'init',
          value: function init() {
            this.determinate_ = !this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].INDETERMINATE_CLASS);
            this.reverse_ = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].REVERSED_CLASS);
            this.progress_ = 0;
          }
        }, {
          key: 'setDeterminate',
          value: function setDeterminate(isDeterminate) {
            this.determinate_ = isDeterminate;

            if (this.determinate_) {
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].INDETERMINATE_CLASS);
              this.setScale_(this.adapter_.getPrimaryBar(), this.progress_);
            } else {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].INDETERMINATE_CLASS);
              this.setScale_(this.adapter_.getPrimaryBar(), 1);
              this.setScale_(this.adapter_.getBuffer(), 1);
            }
          }
        }, {
          key: 'setProgress',
          value: function setProgress(value) {
            this.progress_ = value;

            if (this.determinate_) {
              this.setScale_(this.adapter_.getPrimaryBar(), value);
            }
          }
        }, {
          key: 'setBuffer',
          value: function setBuffer(value) {
            if (this.determinate_) {
              this.setScale_(this.adapter_.getBuffer(), value);
            }
          }
        }, {
          key: 'setReverse',
          value: function setReverse(isReversed) {
            this.reverse_ = isReversed;

            if (this.reverse_) {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].REVERSED_CLASS);
            } else {
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].REVERSED_CLASS);
            }
          }
        }, {
          key: 'open',
          value: function open() {
            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].CLOSED_CLASS);
          }
        }, {
          key: 'close',
          value: function close() {
            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].CLOSED_CLASS);
          }
        }, {
          key: 'setScale_',
          value: function setScale_(el, scaleValue) {
            var _this2 = this;

            var value = 'scaleX(' + scaleValue + ')';

            __WEBPACK_IMPORTED_MODULE_1__material_animation_index__["c"
            /* transformStyleProperties */
            ].forEach(function (transformStyleProperty) {
              _this2.adapter_.setStyle(el, transformStyleProperty, value);
            });
          }
        }]);

        return MDCLinearProgressFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCLinearProgressFoundation;
      /***/
    },
    /* 108 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var cssClasses = {
        CLOSED_CLASS: 'mdc-linear-progress--closed',
        INDETERMINATE_CLASS: 'mdc-linear-progress--indeterminate',
        REVERSED_CLASS: 'mdc-linear-progress--reversed'
      };
      var strings = {
        PRIMARY_BAR_SELECTOR: '.mdc-linear-progress__primary-bar',
        BUFFER_SELECTOR: '.mdc-linear-progress__buffer'
      };
      /***/
    },
    /* 109 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(41);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(110);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCFoundation<!MDCLineRippleAdapter>}
       * @final
       */


      var MDCLineRippleFoundation = function (_MDCFoundation) {
        _inherits(MDCLineRippleFoundation, _MDCFoundation);

        _createClass(MDCLineRippleFoundation, null, [{
          key: 'cssClasses',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /**
           * {@see MDCLineRippleAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCLineRippleAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCLineRippleAdapter} */
              {
                addClass: function addClass() {},
                removeClass: function removeClass() {},
                hasClass: function hasClass() {},
                setStyle: function setStyle() {},
                registerEventHandler: function registerEventHandler() {},
                deregisterEventHandler: function deregisterEventHandler() {}
              }
            );
          }
          /**
           * @param {!MDCLineRippleAdapter=} adapter
           */

        }]);

        function MDCLineRippleFoundation(adapter) {
          _classCallCheck(this, MDCLineRippleFoundation);
          /** @private {function(!Event): undefined} */


          var _this = _possibleConstructorReturn(this, (MDCLineRippleFoundation.__proto__ || Object.getPrototypeOf(MDCLineRippleFoundation)).call(this, _extends(MDCLineRippleFoundation.defaultAdapter, adapter)));

          _this.transitionEndHandler_ = function (evt) {
            return _this.handleTransitionEnd(evt);
          };

          return _this;
        }

        _createClass(MDCLineRippleFoundation, [{
          key: 'init',
          value: function init() {
            this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);
          }
          /**
           * Activates the line ripple
           */

        }, {
          key: 'activate',
          value: function activate() {
            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].LINE_RIPPLE_DEACTIVATING);
            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].LINE_RIPPLE_ACTIVE);
          }
          /**
           * Sets the center of the ripple animation to the given X coordinate.
           * @param {number} xCoordinate
           */

        }, {
          key: 'setRippleCenter',
          value: function setRippleCenter(xCoordinate) {
            this.adapter_.setStyle('transform-origin', xCoordinate + 'px center');
          }
          /**
           * Deactivates the line ripple
           */

        }, {
          key: 'deactivate',
          value: function deactivate() {
            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].LINE_RIPPLE_DEACTIVATING);
          }
          /**
           * Handles a transition end event
           * @param {!Event} evt
           */

        }, {
          key: 'handleTransitionEnd',
          value: function handleTransitionEnd(evt) {
            // Wait for the line ripple to be either transparent or opaque
            // before emitting the animation end event
            var isDeactivating = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].LINE_RIPPLE_DEACTIVATING);

            if (evt.propertyName === 'opacity') {
              if (isDeactivating) {
                this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].LINE_RIPPLE_ACTIVE);
                this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].LINE_RIPPLE_DEACTIVATING);
              }
            }
          }
        }]);

        return MDCLineRippleFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCLineRippleFoundation;
      /***/
    },
    /* 110 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',
        LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating'
      };
      /***/
    },
    /* 111 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return MDCMenuFoundation;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(112);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(18);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__material_menu_surface_foundation__ = __webpack_require__(19);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__material_list_foundation__ = __webpack_require__(16);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select', 'a'];
      /**
       * @extends {MDCFoundation<!MDCMenuAdapter>}
       */

      var MDCMenuFoundation = function (_MDCFoundation) {
        _inherits(MDCMenuFoundation, _MDCFoundation);

        _createClass(MDCMenuFoundation, null, [{
          key: 'cssClasses',

          /** @return enum{cssClasses} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return enum{strings} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ];
          }
          /**
           * {@see MDCMenuAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCMenuAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCMenuAdapter} */
              {
                addClassToElementAtIndex: function addClassToElementAtIndex() {},
                removeClassFromElementAtIndex: function removeClassFromElementAtIndex() {},
                addAttributeToElementAtIndex: function addAttributeToElementAtIndex() {},
                removeAttributeFromElementAtIndex: function removeAttributeFromElementAtIndex() {},
                elementContainsClass: function elementContainsClass() {},
                closeSurface: function closeSurface() {},
                getElementIndex: function getElementIndex() {},
                getParentElement: function getParentElement() {},
                getSelectedElementIndex: function getSelectedElementIndex() {},
                notifySelected: function notifySelected() {}
              }
            );
          }
          /** @param {!MDCMenuAdapter} adapter */

        }]);

        function MDCMenuFoundation(adapter) {
          _classCallCheck(this, MDCMenuFoundation);
          /** @type {number} */


          var _this = _possibleConstructorReturn(this, (MDCMenuFoundation.__proto__ || Object.getPrototypeOf(MDCMenuFoundation)).call(this, _extends(MDCMenuFoundation.defaultAdapter, adapter)));

          _this.closeAnimationEndTimerId_ = 0;
          return _this;
        }

        _createClass(MDCMenuFoundation, [{
          key: 'destroy',
          value: function destroy() {
            if (this.closeAnimationEndTimerId_) {
              clearTimeout(this.closeAnimationEndTimerId_);
            }

            this.adapter_.closeSurface();
          }
          /**
           * Handler function for the keydown events.
           * @param {!Event} evt
           */

        }, {
          key: 'handleKeydown',
          value: function handleKeydown(evt) {
            var key = evt.key,
                keyCode = evt.keyCode;
            var isSpace = key === 'Space' || keyCode === 32;
            var isEnter = key === 'Enter' || keyCode === 13;
            var isTab = key === 'Tab' || keyCode === 9;

            if (isSpace || isEnter) {
              this.handleAction_(evt);
            } else if (isTab) {
              this.adapter_.closeSurface();
            }
          }
          /**
           * Handler function for the click events.
           * @param {!Event} evt
           */

        }, {
          key: 'handleClick',
          value: function handleClick(evt) {
            this.handleAction_(evt);
          }
          /**
           * Combined action handling for click/keypress events.
           * @param {!Event} evt
           * @private
           */

        }, {
          key: 'handleAction_',
          value: function handleAction_(evt) {
            var listItem = this.getListItem_(
            /** @type {HTMLElement} */
            evt.target);

            if (listItem) {
              this.handleSelection(listItem);
              this.preventDefaultEvent_(evt);
            }
          }
          /**
           * Handler for a selected list item.
           * @param {?HTMLElement} listItem
           */

        }, {
          key: 'handleSelection',
          value: function handleSelection(listItem) {
            var _this2 = this;

            var index = this.adapter_.getElementIndex(listItem);

            if (index < 0) {
              return;
            }

            this.adapter_.notifySelected({
              index: index
            });
            this.adapter_.closeSurface(); // Wait for the menu to close before adding/removing classes that affect styles.

            this.closeAnimationEndTimerId_ = setTimeout(function () {
              var selectionGroup = _this2.getSelectionGroup_(listItem);

              if (selectionGroup !== null) {
                _this2.handleSelectionGroup_(
                /** @type {!HTMLElement} */
                selectionGroup, index);
              }
            }, __WEBPACK_IMPORTED_MODULE_3__material_menu_surface_foundation__["b"
            /* MDCMenuSurfaceFoundation */
            ].numbers.TRANSITION_CLOSE_DURATION);
          }
          /**
           * Handles toggling the selected classes in a selection group when a
           * selection is made.
           * @param {!HTMLElement} selectionGroup
           * @param {number} index The selected index value
           * @private
           */

        }, {
          key: 'handleSelectionGroup_',
          value: function handleSelectionGroup_(selectionGroup, index) {
            // De-select the previous selection in this group.
            var selectedIndex = this.adapter_.getSelectedElementIndex(selectionGroup);

            if (selectedIndex >= 0) {
              this.adapter_.removeAttributeFromElementAtIndex(selectedIndex, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ARIA_SELECTED_ATTR);
              this.adapter_.removeClassFromElementAtIndex(selectedIndex, __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].MENU_SELECTED_LIST_ITEM);
            } // Select the new list item in this group.


            this.adapter_.addClassToElementAtIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].MENU_SELECTED_LIST_ITEM);
            this.adapter_.addAttributeToElementAtIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_SELECTED_ATTR, 'true');
          }
          /**
           * Returns the parent selection group of an element if one exists.
           * @param listItem
           * @return {?HTMLElement} parent selection group element or null.
           * @private
           */

        }, {
          key: 'getSelectionGroup_',
          value: function getSelectionGroup_(listItem) {
            var parent = this.adapter_.getParentElement(listItem);
            var isGroup = this.adapter_.elementContainsClass(parent, __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].MENU_SELECTION_GROUP); // Iterate through ancestors until we find the group or get to the list.

            while (!isGroup && !this.adapter_.elementContainsClass(parent, __WEBPACK_IMPORTED_MODULE_4__material_list_foundation__["a"
            /* default */
            ].cssClasses.ROOT)) {
              parent = this.adapter_.getParentElement(parent);
              isGroup = this.adapter_.elementContainsClass(parent, __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].MENU_SELECTION_GROUP);
            }

            if (isGroup) {
              return parent;
            } else {
              return null;
            }
          }
          /**
           * Find the first ancestor with the mdc-list-item class.
           * @param {?HTMLElement} target
           * @return {?HTMLElement}
           * @private
           */

        }, {
          key: 'getListItem_',
          value: function getListItem_(target) {
            var isListItem = this.adapter_.elementContainsClass(target, __WEBPACK_IMPORTED_MODULE_4__material_list_foundation__["a"
            /* default */
            ].cssClasses.LIST_ITEM_CLASS);

            while (!isListItem) {
              target = this.adapter_.getParentElement(target);

              if (target) {
                isListItem = this.adapter_.elementContainsClass(target, __WEBPACK_IMPORTED_MODULE_4__material_list_foundation__["a"
                /* default */
                ].cssClasses.LIST_ITEM_CLASS);
              } else {
                // target has no parent element.
                return null;
              }
            }

            return target;
          }
          /**
           * Ensures that preventDefault is only called if the containing element doesn't
           * consume the event, and it will cause an unintended scroll.
           * @param {!Event} evt
           * @private
           */

        }, {
          key: 'preventDefaultEvent_',
          value: function preventDefaultEvent_(evt) {
            var target =
            /** @type {!HTMLElement} */
            evt.target;
            var tagName = ('' + target.tagName).toLowerCase();

            if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {
              evt.preventDefault();
            }
          }
        }]);

        return MDCMenuFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /***/

    },
    /* 112 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* unused harmony export MDCMenuAdapter */

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Menu. Provides an interface for managing
       * - selected element classes
       * - get focused elements
       * - toggling a checkbox inside a list item
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCMenuAdapter = function () {
        function MDCMenuAdapter() {
          _classCallCheck(this, MDCMenuAdapter);
        }

        _createClass(MDCMenuAdapter, [{
          key: "addClassToElementAtIndex",

          /**
           * Adds a class to the element at the index provided.
           * @param {number} index
           * @param {string} className
           */
          value: function addClassToElementAtIndex(index, className) {}
          /**
           * Removes a class from the element at the index provided
           * @param {number} index
           * @param {string} className
           */

        }, {
          key: "removeClassFromElementAtIndex",
          value: function removeClassFromElementAtIndex(index, className) {}
          /**
           * Adds an attribute, with value, to the element at the index provided.
           * @param {number} index
           * @param {string} attr
           * @param {string} value
           */

        }, {
          key: "addAttributeToElementAtIndex",
          value: function addAttributeToElementAtIndex(index, attr, value) {}
          /**
           * Removes an attribute from an element at the index provided.
           * @param {number} index
           * @param {string} attr
           */

        }, {
          key: "removeAttributeFromElementAtIndex",
          value: function removeAttributeFromElementAtIndex(index, attr) {}
          /**
           * Returns true if the element contains the className.
           * @param {?HTMLElement} element
           * @param {string} className
           * @return {boolean} true if the element contains the className
           */

        }, {
          key: "elementContainsClass",
          value: function elementContainsClass(element, className) {}
          /**
           * Closes the menu-surface.
           */

        }, {
          key: "closeSurface",
          value: function closeSurface() {}
          /**
           * Returns the index for the element provided.
           * @param {?HTMLElement} element
           * @return {number} index of the element in the list or -1 if it is not in the list.
           */

        }, {
          key: "getElementIndex",
          value: function getElementIndex(element) {}
          /**
           * Returns the parentElement of the provided element.
           * @param {?HTMLElement} element
           * @return {?HTMLElement} parentElement of the element provided.
           */

        }, {
          key: "getParentElement",
          value: function getParentElement(element) {}
          /**
           * Returns the element within the selectionGroup containing the selected element class.
           * @param {!HTMLElement} selectionGroup
           * @return {number} element within the selectionGroup that contains the selected element class.
           */

        }, {
          key: "getSelectedElementIndex",
          value: function getSelectedElementIndex(selectionGroup) {}
          /**
           * Emits an event using the evtData.
           * @param {{
          *    index: number
          *   }} evtData
           */

        }, {
          key: "notifySelected",
          value: function notifySelected(evtData) {}
        }]);

        return MDCMenuAdapter;
      }();
      /***/

    },
    /* 113 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "getTransformPropertyName", function () {
        return getTransformPropertyName;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @type {string|undefined} */


      var storedTransformPropertyName_ = void 0;
      /**
       * Returns the name of the correct transform property to use on the current browser.
       * @param {!Window} globalObj
       * @param {boolean=} forceRefresh
       * @return {string}
       */

      function getTransformPropertyName(globalObj) {
        var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        if (storedTransformPropertyName_ === undefined || forceRefresh) {
          var el = globalObj.document.createElement('div');
          var transformPropertyName = 'transform' in el.style ? 'transform' : 'webkitTransform';
          storedTransformPropertyName_ = transformPropertyName;
        }

        return storedTransformPropertyName_;
      }
      /***/

    },
    /* 114 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(45);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(46);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}
       * @final
       */


      var MDCNotchedOutlineFoundation = function (_MDCFoundation) {
        _inherits(MDCNotchedOutlineFoundation, _MDCFoundation);

        _createClass(MDCNotchedOutlineFoundation, null, [{
          key: 'strings',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["c"
            /* strings */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return enum {number} */

        }, {
          key: 'numbers',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* numbers */
            ];
          }
          /**
           * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCNotchedOutlineAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCNotchedOutlineAdapter} */
              {
                addClass: function addClass() {},
                removeClass: function removeClass() {},
                setNotchWidthProperty: function setNotchWidthProperty() {},
                removeNotchWidthProperty: function removeNotchWidthProperty() {}
              }
            );
          }
          /**
           * @param {!MDCNotchedOutlineAdapter} adapter
           */

        }]);

        function MDCNotchedOutlineFoundation(adapter) {
          _classCallCheck(this, MDCNotchedOutlineFoundation);

          return _possibleConstructorReturn(this, (MDCNotchedOutlineFoundation.__proto__ || Object.getPrototypeOf(MDCNotchedOutlineFoundation)).call(this, _extends(MDCNotchedOutlineFoundation.defaultAdapter, adapter)));
        }
        /**
         * Adds the outline notched selector and updates the notch width
         * calculated based off of notchWidth.
         * @param {number} notchWidth
         */


        _createClass(MDCNotchedOutlineFoundation, [{
          key: 'notch',
          value: function notch(notchWidth) {
            var OUTLINE_NOTCHED = MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;

            if (notchWidth > 0) {
              notchWidth += __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ].NOTCH_ELEMENT_PADDING; // Add padding from left/right.
            }

            this.adapter_.setNotchWidthProperty(notchWidth);
            this.adapter_.addClass(OUTLINE_NOTCHED);
          }
          /**
           * Removes notched outline selector to close the notch in the outline.
           */

        }, {
          key: 'closeNotch',
          value: function closeNotch() {
            var OUTLINE_NOTCHED = MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;
            this.adapter_.removeClass(OUTLINE_NOTCHED);
            this.adapter_.removeNotchWidthProperty();
          }
        }]);

        return MDCNotchedOutlineFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCNotchedOutlineFoundation;
      /***/
    },
    /* 115 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCRadio", function () {
        return MDCRadio;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__material_selection_control_index__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(116);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__material_ripple_index__ = __webpack_require__(2);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCRadioFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @extends MDCComponent<!MDCRadioFoundation>
       * @implements {MDCSelectionControl}
       */


      var MDCRadio = function (_MDCComponent) {
        _inherits(MDCRadio, _MDCComponent);

        _createClass(MDCRadio, [{
          key: 'checked',

          /** @return {boolean} */
          get: function get() {
            return this.nativeControl_.checked;
          }
          /** @param {boolean} checked */
          ,
          set: function set(checked) {
            this.nativeControl_.checked = checked;
          }
          /** @return {boolean} */

        }, {
          key: 'disabled',
          get: function get() {
            return this.nativeControl_.disabled;
          }
          /** @param {boolean} disabled */
          ,
          set: function set(disabled) {
            this.foundation_.setDisabled(disabled);
          }
          /** @return {?string} */

        }, {
          key: 'value',
          get: function get() {
            return this.nativeControl_.value;
          }
          /** @param {?string} value */
          ,
          set: function set(value) {
            this.nativeControl_.value = value;
          }
          /** @return {!MDCRipple} */

        }, {
          key: 'ripple',
          get: function get() {
            return this.ripple_;
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCRadio(root);
          }
        }]);

        function MDCRadio() {
          var _ref;

          _classCallCheck(this, MDCRadio);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {!MDCRipple} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCRadio.__proto__ || Object.getPrototypeOf(MDCRadio)).call.apply(_ref, [this].concat(args)));

          _this.ripple_ = _this.initRipple_();
          return _this;
        }
        /**
         * @return {!MDCRipple}
         * @private
         */


        _createClass(MDCRadio, [{
          key: 'initRipple_',
          value: function initRipple_() {
            var _this2 = this;

            var adapter = _extends(__WEBPACK_IMPORTED_MODULE_3__material_ripple_index__["MDCRipple"].createAdapter(this), {
              isUnbounded: function isUnbounded() {
                return true;
              },
              // Radio buttons technically go "active" whenever there is *any* keyboard interaction. This is not the
              // UI we desire.
              isSurfaceActive: function isSurfaceActive() {
                return false;
              },
              registerInteractionHandler: function registerInteractionHandler(type, handler) {
                return _this2.nativeControl_.addEventListener(type, handler);
              },
              deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
                return _this2.nativeControl_.removeEventListener(type, handler);
              }
            });

            var foundation = new __WEBPACK_IMPORTED_MODULE_3__material_ripple_index__["MDCRippleFoundation"](adapter);
            return new __WEBPACK_IMPORTED_MODULE_3__material_ripple_index__["MDCRipple"](this.root_, foundation);
          }
          /**
           * Returns the state of the native control element, or null if the native control element is not present.
           * @return {?MDCSelectionControlState}
           * @private
           */

        }, {
          key: 'destroy',
          value: function destroy() {
            this.ripple_.destroy();

            _get(MDCRadio.prototype.__proto__ || Object.getPrototypeOf(MDCRadio.prototype), 'destroy', this).call(this);
          }
          /** @return {!MDCRadioFoundation} */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this3 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ]({
              addClass: function addClass(className) {
                return _this3.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this3.root_.classList.remove(className);
              },
              setNativeControlDisabled: function setNativeControlDisabled(disabled) {
                return _this3.nativeControl_.disabled = disabled;
              }
            });
          }
        }, {
          key: 'nativeControl_',
          get: function get() {
            var NATIVE_CONTROL_SELECTOR = __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ].strings.NATIVE_CONTROL_SELECTOR;
            var el =
            /** @type {?MDCSelectionControlState} */
            this.root_.querySelector(NATIVE_CONTROL_SELECTOR);
            return el;
          }
        }]);

        return MDCRadio;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 116 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__material_selection_control_index__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__adapter__ = __webpack_require__(117);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__constants__ = __webpack_require__(118);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @extends {MDCFoundation<!MDCRadioAdapter>}
       */


      var MDCRadioFoundation = function (_MDCFoundation) {
        _inherits(MDCRadioFoundation, _MDCFoundation);

        function MDCRadioFoundation() {
          _classCallCheck(this, MDCRadioFoundation);

          return _possibleConstructorReturn(this, (MDCRadioFoundation.__proto__ || Object.getPrototypeOf(MDCRadioFoundation)).apply(this, arguments));
        }

        _createClass(MDCRadioFoundation, [{
          key: 'setDisabled',

          /** @param {boolean} disabled */
          value: function setDisabled(disabled) {
            var DISABLED = MDCRadioFoundation.cssClasses.DISABLED;
            this.adapter_.setNativeControlDisabled(disabled);

            if (disabled) {
              this.adapter_.addClass(DISABLED);
            } else {
              this.adapter_.removeClass(DISABLED);
            }
          }
        }], [{
          key: 'cssClasses',

          /** @return enum {cssClasses} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_3__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return enum {strings} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_3__constants__["b"
            /* strings */
            ];
          }
          /** @return {!MDCRadioAdapter} */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCRadioAdapter} */
              {
                addClass: function addClass()
                /* className: string */
                {},
                removeClass: function removeClass()
                /* className: string */
                {},
                setNativeControlDisabled: function setNativeControlDisabled()
                /* disabled: boolean */
                {}
              }
            );
          }
        }]);

        return MDCRadioFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCRadioFoundation;
      /***/
    },
    /* 117 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_selection_control_index__ = __webpack_require__(3);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Radio. Provides an interface for managing
       * - classes
       * - dom
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCRadioAdapter = function () {
        function MDCRadioAdapter() {
          _classCallCheck(this, MDCRadioAdapter);
        }

        _createClass(MDCRadioAdapter, [{
          key: 'addClass',

          /** @param {string} className */
          value: function addClass(className) {}
          /** @param {string} className */

        }, {
          key: 'removeClass',
          value: function removeClass(className) {}
          /** @param {boolean} disabled */

        }, {
          key: 'setNativeControlDisabled',
          value: function setNativeControlDisabled(disabled) {}
        }]);

        return MDCRadioAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCRadioAdapter;
      /***/
    },
    /* 118 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var strings = {
        NATIVE_CONTROL_SELECTOR: '.mdc-radio__native-control'
      };
      /** @enum {string} */

      var cssClasses = {
        ROOT: 'mdc-radio',
        DISABLED: 'mdc-radio--disabled'
      };
      /***/
    },
    /* 119 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCSelect", function () {
        return MDCSelect;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__material_floating_label_index__ = __webpack_require__(9);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__material_line_ripple_index__ = __webpack_require__(17);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__material_menu_index__ = __webpack_require__(42);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__ = __webpack_require__(2);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__material_notched_outline_index__ = __webpack_require__(21);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__foundation__ = __webpack_require__(120);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_7__constants__ = __webpack_require__(50);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_8__adapter__ = __webpack_require__(47);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_9__icon_index__ = __webpack_require__(22);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_10__helper_text_index__ = __webpack_require__(23);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_11__material_menu_surface_constants__ = __webpack_require__(20);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_12__material_menu_constants__ = __webpack_require__(18);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCSelectFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_6__foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCSelectHelperText", function () {
        return __WEBPACK_IMPORTED_MODULE_10__helper_text_index__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCSelectHelperTextFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_10__helper_text_index__["b"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCSelectIcon", function () {
        return __WEBPACK_IMPORTED_MODULE_9__icon_index__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCSelectIconFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_9__icon_index__["b"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */
      // Closure has issues with {this as that} syntax.


      var VALIDATION_ATTR_WHITELIST = ['required', 'aria-required'];
      /**
       * @extends MDCComponent<!MDCSelectFoundation>
       */

      var MDCSelect = function (_MDCComponent) {
        _inherits(MDCSelect, _MDCComponent);
        /**
         * @param {...?} args
         */


        function MDCSelect() {
          var _ref;

          _classCallCheck(this, MDCSelect);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {?Element} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCSelect.__proto__ || Object.getPrototypeOf(MDCSelect)).call.apply(_ref, [this].concat(args)));

          _this.nativeControl_;
          /** @private {?Element} */

          _this.selectedText_;
          /** @private {?Element} */

          _this.hiddenInput_;
          /** @private {?MDCSelectIcon} */

          _this.leadingIcon_;
          /** @private {?MDCSelectHelperText} */

          _this.helperText_;
          /** @private {?Element} */

          _this.menuElement_;
          /** @type {?MDCMenu} */

          _this.menu_;
          /** @type {?MDCRipple} */

          _this.ripple;
          /** @private {?MDCLineRipple} */

          _this.lineRipple_;
          /** @private {?MDCFloatingLabel} */

          _this.label_;
          /** @private {?MDCNotchedOutline} */

          _this.outline_;
          /** @private {!Function} */

          _this.handleChange_;
          /** @private {!Function} */

          _this.handleFocus_;
          /** @private {!Function} */

          _this.handleBlur_;
          /** @private {!Function} */

          _this.handleClick_;
          /** @private {!Function} */

          _this.handleKeydown_;
          /** @private {!Function} */

          _this.handleMenuOpened_;
          /** @private {!Function} */

          _this.handleMenuClosed_;
          /** @private {!Function} */

          _this.handleMenuSelected_;
          /** @private {boolean} */

          _this.menuOpened_ = false;
          /** @private {!MutationObserver} */

          _this.validationObserver_;
          return _this;
        }
        /**
         * @param {!Element} root
         * @return {!MDCSelect}
         */


        _createClass(MDCSelect, [{
          key: 'layout',

          /**
           * Recomputes the outline SVG path for the outline element.
           */
          value: function layout() {
            this.foundation_.layout();
          }
          /**
           * @param {(function(!Element): !MDCLineRipple)=} lineRippleFactory A function which creates a new MDCLineRipple.
           * @param {(function(!Element): !MDCFloatingLabel)=} labelFactory A function which creates a new MDCFloatingLabel.
           * @param {(function(!Element): !MDCNotchedOutline)=} outlineFactory A function which creates a new MDCNotchedOutline.
           * @param {(function(!Element): !MDCMenu)=} menuFactory A function which creates a new MDCMenu.
           * @param {(function(!Element): !MDCSelectIcon)=} iconFactory A function which creates a new MDCSelectIcon.
           * @param {(function(!Element): !MDCSelectHelperText)=} helperTextFactory A function which creates a new
           * MDCSelectHelperText.
           */

        }, {
          key: 'initialize',
          value: function initialize() {
            var labelFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_1__material_floating_label_index__["MDCFloatingLabel"](el);
            };
            var lineRippleFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_2__material_line_ripple_index__["MDCLineRipple"](el);
            };
            var outlineFactory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_5__material_notched_outline_index__["MDCNotchedOutline"](el);
            };
            var menuFactory = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_3__material_menu_index__["MDCMenu"](el);
            };
            var iconFactory = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_9__icon_index__["a"
              /* MDCSelectIcon */
              ](el);
            };
            var helperTextFactory = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_10__helper_text_index__["a"
              /* MDCSelectHelperText */
              ](el);
            };
            this.nativeControl_ =
            /** @type {HTMLElement} */
            this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].NATIVE_CONTROL_SELECTOR);
            this.selectedText_ =
            /** @type {HTMLElement} */
            this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].SELECTED_TEXT_SELECTOR);

            if (this.selectedText_) {
              this.enhancedSelectSetup_(menuFactory);
            }

            var labelElement = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].LABEL_SELECTOR);

            if (labelElement) {
              this.label_ = labelFactory(labelElement);
            }

            var lineRippleElement = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].LINE_RIPPLE_SELECTOR);

            if (lineRippleElement) {
              this.lineRipple_ = lineRippleFactory(lineRippleElement);
            }

            var outlineElement = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].OUTLINE_SELECTOR);

            if (outlineElement) {
              this.outline_ = outlineFactory(outlineElement);
            }

            var leadingIcon = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].LEADING_ICON_SELECTOR);

            if (leadingIcon) {
              this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
              /* cssClasses */
              ].WITH_LEADING_ICON);
              this.leadingIcon_ = iconFactory(leadingIcon);

              if (this.menuElement_) {
                this.menuElement_.classList.add(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                /* cssClasses */
                ].WITH_LEADING_ICON);
              }
            }

            var element = this.nativeControl_ ? this.nativeControl_ : this.selectedText_;

            if (element.hasAttribute(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].ARIA_CONTROLS)) {
              var helperTextElement = document.getElementById(element.getAttribute(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
              /* strings */
              ].ARIA_CONTROLS));

              if (helperTextElement) {
                this.helperText_ = helperTextFactory(helperTextElement);
              }
            }

            if (!this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
            /* cssClasses */
            ].OUTLINED)) {
              this.ripple = this.initRipple_();
            } // The required state needs to be sync'd before the mutation observer is added.


            this.initialSyncRequiredState_();
            this.addMutationObserverForRequired_();
          }
          /**
           * Handles setup for the enhanced menu.
           * @private
           */

        }, {
          key: 'enhancedSelectSetup_',
          value: function enhancedSelectSetup_(menuFactory) {
            var isDisabled = this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
            /* cssClasses */
            ].DISABLED);
            this.selectedText_.setAttribute('tabindex', isDisabled ? '-1' : '0');
            this.hiddenInput_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].HIDDEN_INPUT_SELECTOR);
            this.menuElement_ =
            /** @type {HTMLElement} */
            this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].MENU_SELECTOR);
            this.menu_ = menuFactory(this.menuElement_);
            this.menu_.hoistMenuToBody();
            this.menu_.setAnchorElement(
            /** @type {!HTMLElement} */
            this.root_);
            this.menu_.setAnchorCorner(__WEBPACK_IMPORTED_MODULE_11__material_menu_surface_constants__["a"
            /* Corner */
            ].BOTTOM_START);
            this.menu_.wrapFocus = false;
          }
          /**
           * @private
           * @return {!MDCRipple}
           */

        }, {
          key: 'initRipple_',
          value: function initRipple_() {
            var element = this.nativeControl_ ? this.nativeControl_ : this.selectedText_;

            var adapter = _extends(__WEBPACK_IMPORTED_MODULE_4__material_ripple_index__["MDCRipple"].createAdapter(this), {
              registerInteractionHandler: function registerInteractionHandler(type, handler) {
                return element.addEventListener(type, handler);
              },
              deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
                return element.removeEventListener(type, handler);
              }
            });

            var foundation = new __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__["MDCRippleFoundation"](adapter);
            return new __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__["MDCRipple"](this.root_, foundation);
          }
          /**
           * Initializes the select's event listeners and internal state based
           * on the environment's state.
           */

        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var _this2 = this;

            this.handleChange_ = function () {
              return _this2.foundation_.handleChange(
              /* didChange */
              true);
            };

            this.handleFocus_ = function () {
              return _this2.foundation_.handleFocus();
            };

            this.handleBlur_ = function () {
              return _this2.foundation_.handleBlur();
            };

            this.handleClick_ = function (evt) {
              if (_this2.selectedText_) _this2.selectedText_.focus();

              _this2.foundation_.handleClick(_this2.getNormalizedXCoordinate_(evt));
            };

            this.handleKeydown_ = function (evt) {
              return _this2.foundation_.handleKeydown(evt);
            };

            this.handleMenuSelected_ = function (evtData) {
              return _this2.selectedIndex = evtData.detail.index;
            };

            this.handleMenuOpened_ = function () {
              // Menu should open to the last selected element.
              if (_this2.selectedIndex >= 0) {
                _this2.menu_.items[_this2.selectedIndex].focus();
              }
            };

            this.handleMenuClosed_ = function () {
              // menuOpened_ is used to track the state of the menu opening or closing since the menu.open function
              // will return false if the menu is still closing and this method listens to the closed event which
              // occurs after the menu is already closed.
              _this2.menuOpened_ = false;

              _this2.selectedText_.removeAttribute('aria-expanded');

              if (document.activeElement !== _this2.selectedText_) {
                _this2.foundation_.handleBlur();
              }
            };

            var element = this.nativeControl_ ? this.nativeControl_ : this.selectedText_;
            element.addEventListener('change', this.handleChange_);
            element.addEventListener('focus', this.handleFocus_);
            element.addEventListener('blur', this.handleBlur_);
            ['mousedown', 'touchstart'].forEach(function (evtType) {
              element.addEventListener(evtType, _this2.handleClick_);
            });

            if (this.menuElement_) {
              this.selectedText_.addEventListener('keydown', this.handleKeydown_);
              this.menu_.listen(__WEBPACK_IMPORTED_MODULE_11__material_menu_surface_constants__["e"
              /* strings */
              ].CLOSED_EVENT, this.handleMenuClosed_);
              this.menu_.listen(__WEBPACK_IMPORTED_MODULE_11__material_menu_surface_constants__["e"
              /* strings */
              ].OPENED_EVENT, this.handleMenuOpened_);
              this.menu_.listen(__WEBPACK_IMPORTED_MODULE_12__material_menu_constants__["b"
              /* strings */
              ].SELECTED_EVENT, this.handleMenuSelected_);

              if (this.hiddenInput_ && this.hiddenInput_.value) {
                // If the hidden input already has a value, use it to restore the select's value.
                // This can happen e.g. if the user goes back or (in some browsers) refreshes the page.
                var enhancedAdapterMethods = this.getEnhancedSelectAdapterMethods_();
                enhancedAdapterMethods.setValue(this.hiddenInput_.value);
              } else if (this.menuElement_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
              /* strings */
              ].SELECTED_ITEM_SELECTOR)) {
                // If an element is selected, the select should set the initial selected text.
                var _enhancedAdapterMethods = this.getEnhancedSelectAdapterMethods_();

                _enhancedAdapterMethods.setValue(_enhancedAdapterMethods.getValue());
              }
            } // Initially sync floating label


            this.foundation_.handleChange(
            /* didChange */
            false);

            if (this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
            /* cssClasses */
            ].DISABLED) || this.nativeControl_ && this.nativeControl_.disabled) {
              this.disabled = true;
            }
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            var _this3 = this;

            var element = this.nativeControl_ ? this.nativeControl_ : this.selectedText_;
            element.removeEventListener('change', this.handleChange_);
            element.removeEventListener('focus', this.handleFocus_);
            element.removeEventListener('blur', this.handleBlur_);
            element.removeEventListener('keydown', this.handleKeydown_);
            ['mousedown', 'touchstart'].forEach(function (evtType) {
              element.removeEventListener(evtType, _this3.handleClick_);
            });

            if (this.menu_) {
              this.menu_.unlisten(__WEBPACK_IMPORTED_MODULE_11__material_menu_surface_constants__["e"
              /* strings */
              ].CLOSED_EVENT, this.handleMenuClosed_);
              this.menu_.unlisten(__WEBPACK_IMPORTED_MODULE_11__material_menu_surface_constants__["e"
              /* strings */
              ].OPENED_EVENT, this.handleMenuOpened_);
              this.menu_.unlisten(__WEBPACK_IMPORTED_MODULE_12__material_menu_constants__["b"
              /* strings */
              ].SELECTED_EVENT, this.handleMenuSelected_);
              this.menu_.destroy();
            }

            if (this.ripple) {
              this.ripple.destroy();
            }

            if (this.outline_) {
              this.outline_.destroy();
            }

            if (this.leadingIcon_) {
              this.leadingIcon_.destroy();
            }

            if (this.helperText_) {
              this.helperText_.destroy();
            }

            if (this.validationObserver_) {
              this.validationObserver_.disconnect();
            }

            _get(MDCSelect.prototype.__proto__ || Object.getPrototypeOf(MDCSelect.prototype), 'destroy', this).call(this);
          }
          /**
           * @return {!MDCSelectFoundation}
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            return new __WEBPACK_IMPORTED_MODULE_6__foundation__["a"
            /* default */
            ](
            /** @type {!MDCSelectAdapter} */
            _extends(this.nativeControl_ ? this.getNativeSelectAdapterMethods_() : this.getEnhancedSelectAdapterMethods_(), this.getCommonAdapterMethods_(), this.getOutlineAdapterMethods_(), this.getLabelAdapterMethods_()), this.getFoundationMap_());
          }
          /**
           * @return {!{
           *   getValue: function(): string,
           *   setValue: function(string): string,
           *   openMenu: function(): void,
           *   closeMenu: function(): void,
           *   isMenuOpen: function(): boolean,
           *   setSelectedIndex: function(number): void,
           *   setDisabled: function(boolean): void
           * }}
           * @private
           */

        }, {
          key: 'getNativeSelectAdapterMethods_',
          value: function getNativeSelectAdapterMethods_() {
            var _this4 = this;

            return {
              getValue: function getValue() {
                return _this4.nativeControl_.value;
              },
              setValue: function setValue(value) {
                return _this4.nativeControl_.value = value;
              },
              openMenu: function openMenu() {},
              closeMenu: function closeMenu() {},
              isMenuOpen: function isMenuOpen() {
                return false;
              },
              setSelectedIndex: function setSelectedIndex(index) {
                _this4.nativeControl_.selectedIndex = index;
              },
              setDisabled: function setDisabled(isDisabled) {
                return _this4.nativeControl_.disabled = isDisabled;
              },
              setValid: function setValid(isValid) {
                isValid ? _this4.root_.classList.remove(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                /* cssClasses */
                ].INVALID) : _this4.root_.classList.add(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                /* cssClasses */
                ].INVALID);
              },
              checkValidity: function checkValidity() {
                return _this4.nativeControl_.checkValidity();
              }
            };
          }
          /**
           * @return {!{
           *   getValue: function(): string,
           *   setValue: function(string): string,
           *   openMenu: function(): void,
           *   closeMenu: function(): void,
           *   isMenuOpen: function(): boolean,
           *   setSelectedIndex: function(number): void,
           *   setDisabled: function(boolean): void
           * }}
           * @private
           */

        }, {
          key: 'getEnhancedSelectAdapterMethods_',
          value: function getEnhancedSelectAdapterMethods_() {
            var _this5 = this;

            return {
              getValue: function getValue() {
                var listItem = _this5.menuElement_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
                /* strings */
                ].SELECTED_ITEM_SELECTOR);

                if (listItem && listItem.hasAttribute(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
                /* strings */
                ].ENHANCED_VALUE_ATTR)) {
                  return listItem.getAttribute(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
                  /* strings */
                  ].ENHANCED_VALUE_ATTR);
                }

                return '';
              },
              setValue: function setValue(value) {
                var element =
                /** @type {HTMLElement} */
                _this5.menuElement_.querySelector('[' + __WEBPACK_IMPORTED_MODULE_7__constants__["c"
                /* strings */
                ].ENHANCED_VALUE_ATTR + '="' + value + '"]');

                _this5.setEnhancedSelectedIndex_(element ? _this5.menu_.items.indexOf(element) : -1);
              },
              openMenu: function openMenu() {
                if (_this5.menu_ && !_this5.menu_.open) {
                  _this5.menu_.open = true;
                  _this5.menuOpened_ = true;

                  _this5.selectedText_.setAttribute('aria-expanded', 'true');
                }
              },
              closeMenu: function closeMenu() {
                if (_this5.menu_ && _this5.menu_.open) {
                  _this5.menu_.open = false;
                }
              },
              isMenuOpen: function isMenuOpen() {
                return _this5.menu_ && _this5.menuOpened_;
              },
              setSelectedIndex: function setSelectedIndex(index) {
                _this5.setEnhancedSelectedIndex_(index);
              },
              setDisabled: function setDisabled(isDisabled) {
                _this5.selectedText_.setAttribute('tabindex', isDisabled ? '-1' : '0');

                _this5.selectedText_.setAttribute('aria-disabled', isDisabled.toString());

                if (_this5.hiddenInput_) {
                  _this5.hiddenInput_.disabled = isDisabled;
                }
              },
              checkValidity: function checkValidity() {
                var classList = _this5.root_.classList;

                if (classList.contains(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                /* cssClasses */
                ].REQUIRED) && !classList.contains(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                /* cssClasses */
                ].DISABLED)) {
                  // See notes for required attribute under https://www.w3.org/TR/html52/sec-forms.html#the-select-element
                  // TL;DR: Invalid if no index is selected, or if the first index is selected and has an empty value.
                  return _this5.selectedIndex !== -1 && (_this5.selectedIndex !== 0 || _this5.value);
                } else {
                  return true;
                }
              },
              setValid: function setValid(isValid) {
                _this5.selectedText_.setAttribute('aria-invalid', (!isValid).toString());

                isValid ? _this5.root_.classList.remove(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                /* cssClasses */
                ].INVALID) : _this5.root_.classList.add(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                /* cssClasses */
                ].INVALID);
              }
            };
          }
          /**
           * @return {!{
           *   addClass: function(string): void,
           *   removeClass: function(string): void,
           *   hasClass: function(string): void,
           *   setRippleCenter: function(number): void,
           *   activateBottomLine: function(): void,
           *   deactivateBottomLine: function(): void,
           *   notifyChange: function(string): void
           * }}
           * @private
           */

        }, {
          key: 'getCommonAdapterMethods_',
          value: function getCommonAdapterMethods_() {
            var _this6 = this;

            return {
              addClass: function addClass(className) {
                return _this6.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this6.root_.classList.remove(className);
              },
              hasClass: function hasClass(className) {
                return _this6.root_.classList.contains(className);
              },
              setRippleCenter: function setRippleCenter(normalizedX) {
                return _this6.lineRipple_ && _this6.lineRipple_.setRippleCenter(normalizedX);
              },
              activateBottomLine: function activateBottomLine() {
                return _this6.lineRipple_ && _this6.lineRipple_.activate();
              },
              deactivateBottomLine: function deactivateBottomLine() {
                return _this6.lineRipple_ && _this6.lineRipple_.deactivate();
              },
              notifyChange: function notifyChange(value) {
                var index = _this6.selectedIndex;

                _this6.emit(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
                /* strings */
                ].CHANGE_EVENT, {
                  value: value,
                  index: index
                }, true
                /* shouldBubble  */
                );
              }
            };
          }
          /**
           * @return {!{
           *   hasOutline: function(): boolean,
           *   notchOutline: function(number, boolean): undefined,
           *   closeOutline: function(): undefined,
           * }}
           */

        }, {
          key: 'getOutlineAdapterMethods_',
          value: function getOutlineAdapterMethods_() {
            var _this7 = this;

            return {
              hasOutline: function hasOutline() {
                return !!_this7.outline_;
              },
              notchOutline: function notchOutline(labelWidth) {
                if (_this7.outline_) {
                  _this7.outline_.notch(labelWidth);
                }
              },
              closeOutline: function closeOutline() {
                if (_this7.outline_) {
                  _this7.outline_.closeNotch();
                }
              }
            };
          }
          /**
           * @return {!{
           *   floatLabel: function(boolean): undefined,
           *   getLabelWidth: function(): number,
           * }}
           */

        }, {
          key: 'getLabelAdapterMethods_',
          value: function getLabelAdapterMethods_() {
            var _this8 = this;

            return {
              floatLabel: function floatLabel(shouldFloat) {
                if (_this8.label_) {
                  _this8.label_.float(shouldFloat);
                }
              },
              getLabelWidth: function getLabelWidth() {
                return _this8.label_ ? _this8.label_.getWidth() : 0;
              }
            };
          }
          /**
           * Calculates where the line ripple should start based on the x coordinate within the component.
           * @param {!(MouseEvent|TouchEvent)} evt
           * @return {number} normalizedX
           */

        }, {
          key: 'getNormalizedXCoordinate_',
          value: function getNormalizedXCoordinate_(evt) {
            var targetClientRect = evt.target.getBoundingClientRect();
            var xCoordinate = evt.clientX;
            return xCoordinate - targetClientRect.left;
          }
          /**
           * Returns a map of all subcomponents to subfoundations.
           * @return {!FoundationMapType}
           */

        }, {
          key: 'getFoundationMap_',
          value: function getFoundationMap_() {
            return {
              leadingIcon: this.leadingIcon_ ? this.leadingIcon_.foundation : undefined,
              helperText: this.helperText_ ? this.helperText_.foundation : undefined
            };
          }
          /**
           * Sets the selected index of the enhanced menu.
           * @param {number} index
           * @private
           */

        }, {
          key: 'setEnhancedSelectedIndex_',
          value: function setEnhancedSelectedIndex_(index) {
            var selectedItem = this.menu_.items[index];
            this.selectedText_.textContent = selectedItem ? selectedItem.textContent.trim() : '';
            var previouslySelected = this.menuElement_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
            /* strings */
            ].SELECTED_ITEM_SELECTOR);

            if (previouslySelected) {
              previouslySelected.classList.remove(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
              /* cssClasses */
              ].SELECTED_ITEM_CLASS);
              previouslySelected.removeAttribute(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
              /* strings */
              ].ARIA_SELECTED_ATTR);
            }

            if (selectedItem) {
              selectedItem.classList.add(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
              /* cssClasses */
              ].SELECTED_ITEM_CLASS);
              selectedItem.setAttribute(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
              /* strings */
              ].ARIA_SELECTED_ATTR, 'true');
            } // Synchronize hidden input's value with data-value attribute of selected item.
            // This code path is also followed when setting value directly, so this covers all cases.


            if (this.hiddenInput_) {
              this.hiddenInput_.value = selectedItem ? selectedItem.getAttribute(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
              /* strings */
              ].ENHANCED_VALUE_ATTR) || '' : '';
            }

            this.layout();
          }
        }, {
          key: 'initialSyncRequiredState_',
          value: function initialSyncRequiredState_() {
            var element = this.nativeControl_ ? this.nativeControl_ : this.selectedText_;
            var isRequired = element.required || element.getAttribute('aria-required') === 'true' || this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
            /* cssClasses */
            ].REQUIRED);

            if (isRequired) {
              if (this.nativeControl_) {
                this.nativeControl_.required = true;
              } else {
                this.selectedText_.setAttribute('aria-required', 'true');
              }

              this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
              /* cssClasses */
              ].REQUIRED);
            }
          }
        }, {
          key: 'addMutationObserverForRequired_',
          value: function addMutationObserverForRequired_() {
            var _this9 = this;

            var observerHandler = function observerHandler(attributesList) {
              attributesList.some(function (attributeName) {
                if (VALIDATION_ATTR_WHITELIST.indexOf(attributeName) > -1) {
                  if (_this9.selectedText_) {
                    if (_this9.selectedText_.getAttribute('aria-required') === 'true') {
                      _this9.root_.classList.add(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                      /* cssClasses */
                      ].REQUIRED);
                    } else {
                      _this9.root_.classList.remove(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                      /* cssClasses */
                      ].REQUIRED);
                    }
                  } else {
                    if (_this9.nativeControl_.required) {
                      _this9.root_.classList.add(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                      /* cssClasses */
                      ].REQUIRED);
                    } else {
                      _this9.root_.classList.remove(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
                      /* cssClasses */
                      ].REQUIRED);
                    }
                  }

                  return true;
                }
              });
            };

            var getAttributesList = function getAttributesList(mutationsList) {
              return mutationsList.map(function (mutation) {
                return mutation.attributeName;
              });
            };

            var observer = new MutationObserver(function (mutationsList) {
              return observerHandler(getAttributesList(mutationsList));
            });
            var element = this.nativeControl_ ? this.nativeControl_ : this.selectedText_;
            observer.observe(element, {
              attributes: true
            });
            this.validationObserver_ = observer;
          }
        }, {
          key: 'value',

          /**
           * @return {string} The value of the select.
           */
          get: function get() {
            return this.foundation_.getValue();
          }
          /**
           * @param {string} value The value to set on the select.
           */
          ,
          set: function set(value) {
            this.foundation_.setValue(value);
          }
          /**
           * @return {number} The selected index of the select.
           */

        }, {
          key: 'selectedIndex',
          get: function get() {
            var selectedIndex = void 0;

            if (this.menuElement_) {
              var selectedEl =
              /** @type {!HTMLElement} */
              this.menuElement_.querySelector(__WEBPACK_IMPORTED_MODULE_7__constants__["c"
              /* strings */
              ].SELECTED_ITEM_SELECTOR);
              selectedIndex = this.menu_.items.indexOf(selectedEl);
            } else {
              selectedIndex = this.nativeControl_.selectedIndex;
            }

            return selectedIndex;
          }
          /**
           * @param {number} selectedIndex The index of the option to be set on the select.
           */
          ,
          set: function set(selectedIndex) {
            this.foundation_.setSelectedIndex(selectedIndex);
          }
          /**
           * @return {boolean} True if the select is disabled.
           */

        }, {
          key: 'disabled',
          get: function get() {
            return this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_7__constants__["a"
            /* cssClasses */
            ].DISABLED) || (this.nativeControl_ ? this.nativeControl_.disabled : false);
          }
          /**
           * @param {boolean} disabled Sets the select disabled or enabled.
           */
          ,
          set: function set(disabled) {
            this.foundation_.setDisabled(disabled);
          }
          /**
           * Sets the aria label of the leading icon.
           * @param {string} label
           */

        }, {
          key: 'leadingIconAriaLabel',
          set: function set(label) {
            this.foundation_.setLeadingIconAriaLabel(label);
          }
          /**
           * Sets the text content of the leading icon.
           * @param {string} content
           */

        }, {
          key: 'leadingIconContent',
          set: function set(content) {
            this.foundation_.setLeadingIconContent(content);
          }
          /**
           * Sets the text content of the helper text.
           * @param {string} content
           */

        }, {
          key: 'helperTextContent',
          set: function set(content) {
            this.foundation_.setHelperTextContent(content);
          }
          /**
           * Sets the current invalid state of the select.
           * @param {boolean} isValid
           */

        }, {
          key: 'valid',
          set: function set(isValid) {
            this.foundation_.setValid(isValid);
          }
          /**
           * Checks if the select is in a valid state.
           * @return {boolean}
           */
          ,
          get: function get() {
            return this.foundation_.isValid();
          }
          /**
           * Sets the control to the required state.
           * @param {boolean} isRequired
           */

        }, {
          key: 'required',
          set: function set(isRequired) {
            if (this.nativeControl_) {
              this.nativeControl_.required = isRequired;
            } else {
              if (isRequired) {
                this.selectedText_.setAttribute('aria-required', isRequired.toString());
              } else {
                this.selectedText_.removeAttribute('aria-required');
              }
            }
          }
          /**
           * Returns whether the select is required.
           * @return {boolean}
           */
          ,
          get: function get() {
            if (this.nativeControl_) {
              return this.nativeControl_.required;
            } else {
              return this.selectedText_.getAttribute('aria-required') === 'true';
            }
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCSelect(root);
          }
        }]);

        return MDCSelect;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 120 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(47);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__icon_index__ = __webpack_require__(22);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__helper_text_index__ = __webpack_require__(23);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(50);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @extends {MDCFoundation<!MDCSelectAdapter>}
       * @final
       */


      var MDCSelectFoundation = function (_MDCFoundation) {
        _inherits(MDCSelectFoundation, _MDCFoundation);

        _createClass(MDCSelectFoundation, null, [{
          key: 'cssClasses',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return enum {number} */

        }, {
          key: 'numbers',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_4__constants__["b"
            /* numbers */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_4__constants__["c"
            /* strings */
            ];
          }
          /**
           * {@see MDCSelectAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCSelectAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCSelectAdapter} */
              {
                addClass: function addClass()
                /* className: string */
                {},
                removeClass: function removeClass()
                /* className: string */
                {},
                hasClass: function hasClass() {
                  return (
                    /* className: string */
                    false
                  );
                },
                activateBottomLine: function activateBottomLine() {},
                deactivateBottomLine: function deactivateBottomLine() {},
                setValue: function setValue() {},
                getValue: function getValue() {},
                floatLabel: function floatLabel()
                /* value: boolean */
                {},
                getLabelWidth: function getLabelWidth() {},
                hasOutline: function hasOutline() {
                  return false;
                },
                notchOutline: function notchOutline()
                /* labelWidth: number, */
                {},
                closeOutline: function closeOutline() {},
                openMenu: function openMenu() {},
                closeMenu: function closeMenu() {},
                isMenuOpen: function isMenuOpen() {},
                setSelectedIndex: function setSelectedIndex() {},
                setDisabled: function setDisabled() {},
                setRippleCenter: function setRippleCenter() {},
                notifyChange: function notifyChange() {},
                checkValidity: function checkValidity() {},
                setValid: function setValid() {}
              }
            );
          }
          /**
           * @param {!MDCSelectAdapter} adapter
           * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.
           */

        }]);

        function MDCSelectFoundation(adapter) {
          var foundationMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] :
          /** @type {!FoundationMapType} */
          {};

          _classCallCheck(this, MDCSelectFoundation);
          /** @type {!MDCSelectIconFoundation|undefined} */


          var _this = _possibleConstructorReturn(this, (MDCSelectFoundation.__proto__ || Object.getPrototypeOf(MDCSelectFoundation)).call(this, _extends(MDCSelectFoundation.defaultAdapter, adapter)));

          _this.leadingIcon_ = foundationMap.leadingIcon;
          /** @type {!MDCSelectHelperTextFoundation|undefined} */

          _this.helperText_ = foundationMap.helperText;
          return _this;
        }

        _createClass(MDCSelectFoundation, [{
          key: 'setSelectedIndex',
          value: function setSelectedIndex(index) {
            this.adapter_.setSelectedIndex(index);
            this.adapter_.closeMenu();
            var didChange = true;
            this.handleChange(didChange);
          }
        }, {
          key: 'setValue',
          value: function setValue(value) {
            this.adapter_.setValue(value);
            var didChange = true;
            this.handleChange(didChange);
          }
        }, {
          key: 'getValue',
          value: function getValue() {
            return this.adapter_.getValue();
          }
        }, {
          key: 'setDisabled',
          value: function setDisabled(isDisabled) {
            isDisabled ? this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].DISABLED) : this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].DISABLED);
            this.adapter_.setDisabled(isDisabled);
            this.adapter_.closeMenu();

            if (this.leadingIcon_) {
              this.leadingIcon_.setDisabled(isDisabled);
            }
          }
          /**
           * @param {string} content Sets the content of the helper text.
           */

        }, {
          key: 'setHelperTextContent',
          value: function setHelperTextContent(content) {
            if (this.helperText_) {
              this.helperText_.setContent(content);
            }
          }
        }, {
          key: 'layout',
          value: function layout() {
            var openNotch = this.getValue().length > 0;
            this.notchOutline(openNotch);
          }
          /**
           * Handles value changes, via change event or programmatic updates.
           */

        }, {
          key: 'handleChange',
          value: function handleChange() {
            var didChange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
            var value = this.getValue();
            var optionHasValue = value.length > 0;
            var isRequired = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].REQUIRED);
            this.notchOutline(optionHasValue);

            if (!this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].FOCUSED)) {
              this.adapter_.floatLabel(optionHasValue);
            }

            if (didChange) {
              this.adapter_.notifyChange(value);

              if (isRequired) {
                this.setValid(this.isValid());

                if (this.helperText_) {
                  this.helperText_.setValidity(this.isValid());
                }
              }
            }
          }
          /**
           * Handles focus events from select element.
           */

        }, {
          key: 'handleFocus',
          value: function handleFocus() {
            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].FOCUSED);
            this.adapter_.floatLabel(true);
            this.notchOutline(true);
            this.adapter_.activateBottomLine();

            if (this.helperText_) {
              this.helperText_.showToScreenReader();
            }
          }
          /**
           * Handles blur events from select element.
           */

        }, {
          key: 'handleBlur',
          value: function handleBlur() {
            if (this.adapter_.isMenuOpen()) return;
            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].FOCUSED);
            this.handleChange(false);
            this.adapter_.deactivateBottomLine();
            var isRequired = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].REQUIRED);

            if (isRequired) {
              this.setValid(this.isValid());

              if (this.helperText_) {
                this.helperText_.setValidity(this.isValid());
              }
            }
          }
        }, {
          key: 'handleClick',
          value: function handleClick(normalizedX) {
            if (this.adapter_.isMenuOpen()) return;
            this.adapter_.setRippleCenter(normalizedX);
            this.adapter_.openMenu();
          }
        }, {
          key: 'handleKeydown',
          value: function handleKeydown(event) {
            if (this.adapter_.isMenuOpen()) return;
            var isEnter = event.key === 'Enter' || event.keyCode === 13;
            var isSpace = event.key === 'Space' || event.keyCode === 32;
            var arrowUp = event.key === 'ArrowUp' || event.keyCode === 38;
            var arrowDown = event.key === 'ArrowDown' || event.keyCode === 40;

            if (this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].FOCUSED) && (isEnter || isSpace || arrowUp || arrowDown)) {
              this.adapter_.openMenu();
              event.preventDefault();
            }
          }
          /**
           * Opens/closes the notched outline.
           * @param {boolean} openNotch
           */

        }, {
          key: 'notchOutline',
          value: function notchOutline(openNotch) {
            if (!this.adapter_.hasOutline()) {
              return;
            }

            var isFocused = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* cssClasses */
            ].FOCUSED);

            if (openNotch) {
              var labelScale = __WEBPACK_IMPORTED_MODULE_4__constants__["b"
              /* numbers */
              ].LABEL_SCALE;
              var labelWidth = this.adapter_.getLabelWidth() * labelScale;
              this.adapter_.notchOutline(labelWidth);
            } else if (!isFocused) {
              this.adapter_.closeOutline();
            }
          }
          /**
           * Sets the aria label of the leading icon.
           * @param {string} label
           */

        }, {
          key: 'setLeadingIconAriaLabel',
          value: function setLeadingIconAriaLabel(label) {
            if (this.leadingIcon_) {
              this.leadingIcon_.setAriaLabel(label);
            }
          }
          /**
           * Sets the text content of the leading icon.
           * @param {string} content
           */

        }, {
          key: 'setLeadingIconContent',
          value: function setLeadingIconContent(content) {
            if (this.leadingIcon_) {
              this.leadingIcon_.setContent(content);
            }
          }
        }, {
          key: 'setValid',
          value: function setValid(isValid) {
            this.adapter_.setValid(isValid);
          }
        }, {
          key: 'isValid',
          value: function isValid() {
            return this.adapter_.checkValidity();
          }
        }]);

        return MDCSelectFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCSelectFoundation;
      /***/
    },
    /* 121 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(48);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(122);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCFoundation<!MDCSelectIconAdapter>}
       * @final
       */


      var MDCSelectIconFoundation = function (_MDCFoundation) {
        _inherits(MDCSelectIconFoundation, _MDCFoundation);

        _createClass(MDCSelectIconFoundation, null, [{
          key: 'strings',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* strings */
            ];
          }
          /**
           * {@see MDCSelectIconAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCSelectIconAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCSelectIconAdapter} */
              {
                getAttr: function getAttr() {},
                setAttr: function setAttr() {},
                removeAttr: function removeAttr() {},
                setContent: function setContent() {},
                registerInteractionHandler: function registerInteractionHandler() {},
                deregisterInteractionHandler: function deregisterInteractionHandler() {},
                notifyIconAction: function notifyIconAction() {}
              }
            );
          }
          /**
           * @param {!MDCSelectIconAdapter} adapter
           */

        }]);

        function MDCSelectIconFoundation(adapter) {
          _classCallCheck(this, MDCSelectIconFoundation);
          /** @private {string?} */


          var _this = _possibleConstructorReturn(this, (MDCSelectIconFoundation.__proto__ || Object.getPrototypeOf(MDCSelectIconFoundation)).call(this, _extends(MDCSelectIconFoundation.defaultAdapter, adapter)));

          _this.savedTabIndex_ = null;
          /** @private {function(!Event): undefined} */

          _this.interactionHandler_ = function (evt) {
            return _this.handleInteraction(evt);
          };

          return _this;
        }

        _createClass(MDCSelectIconFoundation, [{
          key: 'init',
          value: function init() {
            var _this2 = this;

            this.savedTabIndex_ = this.adapter_.getAttr('tabindex');
            ['click', 'keydown'].forEach(function (evtType) {
              _this2.adapter_.registerInteractionHandler(evtType, _this2.interactionHandler_);
            });
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            var _this3 = this;

            ['click', 'keydown'].forEach(function (evtType) {
              _this3.adapter_.deregisterInteractionHandler(evtType, _this3.interactionHandler_);
            });
          }
          /** @param {boolean} disabled */

        }, {
          key: 'setDisabled',
          value: function setDisabled(disabled) {
            if (!this.savedTabIndex_) {
              return;
            }

            if (disabled) {
              this.adapter_.setAttr('tabindex', '-1');
              this.adapter_.removeAttr('role');
            } else {
              this.adapter_.setAttr('tabindex', this.savedTabIndex_);
              this.adapter_.setAttr('role', __WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* strings */
              ].ICON_ROLE);
            }
          }
          /** @param {string} label */

        }, {
          key: 'setAriaLabel',
          value: function setAriaLabel(label) {
            this.adapter_.setAttr('aria-label', label);
          }
          /** @param {string} content */

        }, {
          key: 'setContent',
          value: function setContent(content) {
            this.adapter_.setContent(content);
          }
          /**
           * Handles an interaction event
           * @param {!Event} evt
           */

        }, {
          key: 'handleInteraction',
          value: function handleInteraction(evt) {
            if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {
              this.adapter_.notifyIconAction();
            }
          }
        }]);

        return MDCSelectIconFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCSelectIconFoundation;
      /***/
    },
    /* 122 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var strings = {
        ICON_EVENT: 'MDCSelect:icon',
        ICON_ROLE: 'button'
      };
      /***/
    },
    /* 123 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(49);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(124);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCFoundation<!MDCSelectHelperTextAdapter>}
       * @final
       */


      var MDCSelectHelperTextFoundation = function (_MDCFoundation) {
        _inherits(MDCSelectHelperTextFoundation, _MDCFoundation);

        _createClass(MDCSelectHelperTextFoundation, null, [{
          key: 'cssClasses',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ];
          }
          /**
           * {@see MDCSelectHelperTextAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCSelectHelperTextAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCSelectHelperTextAdapter} */
              {
                addClass: function addClass() {},
                removeClass: function removeClass() {},
                hasClass: function hasClass() {},
                setAttr: function setAttr() {},
                removeAttr: function removeAttr() {},
                setContent: function setContent() {}
              }
            );
          }
          /**
           * @param {!MDCSelectHelperTextAdapter} adapter
           */

        }]);

        function MDCSelectHelperTextFoundation(adapter) {
          _classCallCheck(this, MDCSelectHelperTextFoundation);

          return _possibleConstructorReturn(this, (MDCSelectHelperTextFoundation.__proto__ || Object.getPrototypeOf(MDCSelectHelperTextFoundation)).call(this, _extends(MDCSelectHelperTextFoundation.defaultAdapter, adapter)));
        }
        /**
         * Sets the content of the helper text field.
         * @param {string} content
         */


        _createClass(MDCSelectHelperTextFoundation, [{
          key: 'setContent',
          value: function setContent(content) {
            this.adapter_.setContent(content);
          }
          /** @param {boolean} isPersistent Sets the persistency of the helper text. */

        }, {
          key: 'setPersistent',
          value: function setPersistent(isPersistent) {
            if (isPersistent) {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].HELPER_TEXT_PERSISTENT);
            } else {
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].HELPER_TEXT_PERSISTENT);
            }
          }
          /**
           * @param {boolean} isValidation True to make the helper text act as an
           *   error validation message.
           */

        }, {
          key: 'setValidation',
          value: function setValidation(isValidation) {
            if (isValidation) {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].HELPER_TEXT_VALIDATION_MSG);
            } else {
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].HELPER_TEXT_VALIDATION_MSG);
            }
          }
          /** Makes the helper text visible to the screen reader. */

        }, {
          key: 'showToScreenReader',
          value: function showToScreenReader() {
            this.adapter_.removeAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_HIDDEN);
          }
          /**
           * Sets the validity of the helper text based on the select validity.
           * @param {boolean} selectIsValid
           */

        }, {
          key: 'setValidity',
          value: function setValidity(selectIsValid) {
            var helperTextIsPersistent = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].HELPER_TEXT_PERSISTENT);
            var helperTextIsValidationMsg = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].HELPER_TEXT_VALIDATION_MSG);
            var validationMsgNeedsDisplay = helperTextIsValidationMsg && !selectIsValid;

            if (validationMsgNeedsDisplay) {
              this.adapter_.setAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ROLE, 'alert');
            } else {
              this.adapter_.removeAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* strings */
              ].ROLE);
            }

            if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {
              this.hide_();
            }
          }
          /**
           * Hides the help text from screen readers.
           * @private
           */

        }, {
          key: 'hide_',
          value: function hide_() {
            this.adapter_.setAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_HIDDEN, 'true');
          }
        }]);

        return MDCSelectHelperTextFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCSelectHelperTextFoundation;
      /***/
    },
    /* 124 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var strings = {
        ARIA_HIDDEN: 'aria-hidden',
        ROLE: 'role'
      };
      /** @enum {string} */

      var cssClasses = {
        HELPER_TEXT_PERSISTENT: 'mdc-select-helper-text--persistent',
        HELPER_TEXT_VALIDATION_MSG: 'mdc-select-helper-text--validation-msg'
      };
      /***/
    },
    /* 125 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCSlider", function () {
        return MDCSlider;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(51);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__adapter__ = __webpack_require__(52);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__foundation__ = __webpack_require__(126);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCSliderFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_3__foundation__["a"];
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends MDCComponent<!MDCSliderFoundation>
       */


      var MDCSlider = function (_MDCComponent) {
        _inherits(MDCSlider, _MDCComponent);

        _createClass(MDCSlider, null, [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCSlider(root);
          }
        }]);

        function MDCSlider() {
          var _ref;

          _classCallCheck(this, MDCSlider);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @type {?Element} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCSlider.__proto__ || Object.getPrototypeOf(MDCSlider)).call.apply(_ref, [this].concat(args)));

          _this.thumbContainer_;
          /** @type {?Element} */

          _this.track_;
          /** @type {?Element} */

          _this.pinValueMarker_;
          /** @type {?Element} */

          _this.trackMarkerContainer_;
          return _this;
        }
        /** @return {number} */


        _createClass(MDCSlider, [{
          key: 'initialize',
          value: function initialize() {
            this.thumbContainer_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_1__constants__["c"
            /* strings */
            ].THUMB_CONTAINER_SELECTOR);
            this.track_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_1__constants__["c"
            /* strings */
            ].TRACK_SELECTOR);
            this.pinValueMarker_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_1__constants__["c"
            /* strings */
            ].PIN_VALUE_MARKER_SELECTOR);
            this.trackMarkerContainer_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_1__constants__["c"
            /* strings */
            ].TRACK_MARKER_CONTAINER_SELECTOR);
          }
          /**
           * @return {!MDCSliderFoundation}
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_3__foundation__["a"
            /* default */
            ](
            /** @type {!MDCSliderAdapter} */
            {
              hasClass: function hasClass(className) {
                return _this2.root_.classList.contains(className);
              },
              addClass: function addClass(className) {
                return _this2.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this2.root_.classList.remove(className);
              },
              getAttribute: function getAttribute(name) {
                return _this2.root_.getAttribute(name);
              },
              setAttribute: function setAttribute(name, value) {
                return _this2.root_.setAttribute(name, value);
              },
              removeAttribute: function removeAttribute(name) {
                return _this2.root_.removeAttribute(name);
              },
              computeBoundingRect: function computeBoundingRect() {
                return _this2.root_.getBoundingClientRect();
              },
              getTabIndex: function getTabIndex() {
                return _this2.root_.tabIndex;
              },
              registerInteractionHandler: function registerInteractionHandler(type, handler) {
                _this2.root_.addEventListener(type, handler);
              },
              deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
                _this2.root_.removeEventListener(type, handler);
              },
              registerThumbContainerInteractionHandler: function registerThumbContainerInteractionHandler(type, handler) {
                _this2.thumbContainer_.addEventListener(type, handler);
              },
              deregisterThumbContainerInteractionHandler: function deregisterThumbContainerInteractionHandler(type, handler) {
                _this2.thumbContainer_.removeEventListener(type, handler);
              },
              registerBodyInteractionHandler: function registerBodyInteractionHandler(type, handler) {
                document.body.addEventListener(type, handler);
              },
              deregisterBodyInteractionHandler: function deregisterBodyInteractionHandler(type, handler) {
                document.body.removeEventListener(type, handler);
              },
              registerResizeHandler: function registerResizeHandler(handler) {
                window.addEventListener('resize', handler);
              },
              deregisterResizeHandler: function deregisterResizeHandler(handler) {
                window.removeEventListener('resize', handler);
              },
              notifyInput: function notifyInput() {
                _this2.emit(__WEBPACK_IMPORTED_MODULE_1__constants__["c"
                /* strings */
                ].INPUT_EVENT, _this2);
              },
              notifyChange: function notifyChange() {
                _this2.emit(__WEBPACK_IMPORTED_MODULE_1__constants__["c"
                /* strings */
                ].CHANGE_EVENT, _this2);
              },
              setThumbContainerStyleProperty: function setThumbContainerStyleProperty(propertyName, value) {
                _this2.thumbContainer_.style.setProperty(propertyName, value);
              },
              setTrackStyleProperty: function setTrackStyleProperty(propertyName, value) {
                _this2.track_.style.setProperty(propertyName, value);
              },
              setMarkerValue: function setMarkerValue(value) {
                _this2.pinValueMarker_.innerText = value;
              },
              appendTrackMarkers: function appendTrackMarkers(numMarkers) {
                var frag = document.createDocumentFragment();

                for (var i = 0; i < numMarkers; i++) {
                  var marker = document.createElement('div');
                  marker.classList.add('mdc-slider__track-marker');
                  frag.appendChild(marker);
                }

                _this2.trackMarkerContainer_.appendChild(frag);
              },
              removeTrackMarkers: function removeTrackMarkers() {
                while (_this2.trackMarkerContainer_.firstChild) {
                  _this2.trackMarkerContainer_.removeChild(_this2.trackMarkerContainer_.firstChild);
                }
              },
              setLastTrackMarkersStyleProperty: function setLastTrackMarkersStyleProperty(propertyName, value) {
                // We remove and append new nodes, thus, the last track marker must be dynamically found.
                var lastTrackMarker = _this2.root_.querySelector(__WEBPACK_IMPORTED_MODULE_1__constants__["c"
                /* strings */
                ].LAST_TRACK_MARKER_SELECTOR);

                lastTrackMarker.style.setProperty(propertyName, value);
              },
              isRTL: function isRTL() {
                return getComputedStyle(_this2.root_).direction === 'rtl';
              }
            });
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var origValueNow = parseFloat(this.root_.getAttribute(__WEBPACK_IMPORTED_MODULE_1__constants__["c"
            /* strings */
            ].ARIA_VALUENOW));
            var min = parseFloat(this.root_.getAttribute(__WEBPACK_IMPORTED_MODULE_1__constants__["c"
            /* strings */
            ].ARIA_VALUEMIN)) || this.min;
            var max = parseFloat(this.root_.getAttribute(__WEBPACK_IMPORTED_MODULE_1__constants__["c"
            /* strings */
            ].ARIA_VALUEMAX)) || this.max; // min and max need to be set in the right order to avoid throwing an error
            // when the new min is greater than the default max.

            if (min >= this.max) {
              this.max = max;
              this.min = min;
            } else {
              this.min = min;
              this.max = max;
            }

            this.step = parseFloat(this.root_.getAttribute(__WEBPACK_IMPORTED_MODULE_1__constants__["c"
            /* strings */
            ].STEP_DATA_ATTR)) || this.step;
            this.value = origValueNow || this.value;
            this.disabled = this.root_.hasAttribute(__WEBPACK_IMPORTED_MODULE_1__constants__["c"
            /* strings */
            ].ARIA_DISABLED) && this.root_.getAttribute(__WEBPACK_IMPORTED_MODULE_1__constants__["c"
            /* strings */
            ].ARIA_DISABLED) !== 'false';
            this.foundation_.setupTrackMarker();
          }
        }, {
          key: 'layout',
          value: function layout() {
            this.foundation_.layout();
          }
          /** @param {number=} amount */

        }, {
          key: 'stepUp',
          value: function stepUp() {
            var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.step || 1;
            this.value += amount;
          }
          /** @param {number=} amount */

        }, {
          key: 'stepDown',
          value: function stepDown() {
            var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.step || 1;
            this.value -= amount;
          }
        }, {
          key: 'value',
          get: function get() {
            return this.foundation_.getValue();
          }
          /** @param {number} value */
          ,
          set: function set(value) {
            this.foundation_.setValue(value);
          }
          /** @return {number} */

        }, {
          key: 'min',
          get: function get() {
            return this.foundation_.getMin();
          }
          /** @param {number} min */
          ,
          set: function set(min) {
            this.foundation_.setMin(min);
          }
          /** @return {number} */

        }, {
          key: 'max',
          get: function get() {
            return this.foundation_.getMax();
          }
          /** @param {number} max */
          ,
          set: function set(max) {
            this.foundation_.setMax(max);
          }
          /** @return {number} */

        }, {
          key: 'step',
          get: function get() {
            return this.foundation_.getStep();
          }
          /** @param {number} step */
          ,
          set: function set(step) {
            this.foundation_.setStep(step);
          }
          /** @return {boolean} */

        }, {
          key: 'disabled',
          get: function get() {
            return this.foundation_.isDisabled();
          }
          /** @param {boolean} disabled */
          ,
          set: function set(disabled) {
            this.foundation_.setDisabled(disabled);
          }
        }]);

        return MDCSlider;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 126 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(51);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(52);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__material_animation_index__ = __webpack_require__(13);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__material_base_foundation__ = __webpack_require__(0);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var KEY_IDS = {
        ARROW_LEFT: 'ArrowLeft',
        ARROW_RIGHT: 'ArrowRight',
        ARROW_UP: 'ArrowUp',
        ARROW_DOWN: 'ArrowDown',
        HOME: 'Home',
        END: 'End',
        PAGE_UP: 'PageUp',
        PAGE_DOWN: 'PageDown'
      };
      /** @enum {string} */

      var MOVE_EVENT_MAP = {
        'mousedown': 'mousemove',
        'touchstart': 'touchmove',
        'pointerdown': 'pointermove'
      };
      var DOWN_EVENTS = ['mousedown', 'pointerdown', 'touchstart'];
      var UP_EVENTS = ['mouseup', 'pointerup', 'touchend'];
      /**
       * @extends {MDCFoundation<!MDCSliderAdapter>}
       */

      var MDCSliderFoundation = function (_MDCFoundation) {
        _inherits(MDCSliderFoundation, _MDCFoundation);

        _createClass(MDCSliderFoundation, null, [{
          key: 'cssClasses',

          /** @return enum {cssClasses} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_0__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return enum {strings} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_0__constants__["c"
            /* strings */
            ];
          }
          /** @return enum {numbers} */

        }, {
          key: 'numbers',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_0__constants__["b"
            /* numbers */
            ];
          }
          /** @return {!MDCSliderAdapter} */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCSliderAdapter} */
              {
                hasClass: function hasClass() {
                  return (
                    /* className: string */

                    /* boolean */
                    false
                  );
                },
                addClass: function addClass()
                /* className: string */
                {},
                removeClass: function removeClass()
                /* className: string */
                {},
                getAttribute: function getAttribute() {
                  return (
                    /* name: string */

                    /* string|null */
                    null
                  );
                },
                setAttribute: function setAttribute()
                /* name: string, value: string */
                {},
                removeAttribute: function removeAttribute()
                /* name: string */
                {},
                computeBoundingRect: function computeBoundingRect() {
                  return (
                    /* ClientRect */
                    {
                      top: 0,
                      right: 0,
                      bottom: 0,
                      left: 0,
                      width: 0,
                      height: 0
                    }
                  );
                },
                getTabIndex: function getTabIndex() {
                  return (
                    /* number */
                    0
                  );
                },
                registerInteractionHandler: function registerInteractionHandler()
                /* type: string, handler: EventListener */
                {},
                deregisterInteractionHandler: function deregisterInteractionHandler()
                /* type: string, handler: EventListener */
                {},
                registerThumbContainerInteractionHandler: function registerThumbContainerInteractionHandler()
                /* type: string, handler: EventListener */
                {},
                deregisterThumbContainerInteractionHandler: function deregisterThumbContainerInteractionHandler()
                /* type: string, handler: EventListener */
                {},
                registerBodyInteractionHandler: function registerBodyInteractionHandler()
                /* type: string, handler: EventListener */
                {},
                deregisterBodyInteractionHandler: function deregisterBodyInteractionHandler()
                /* type: string, handler: EventListener */
                {},
                registerResizeHandler: function registerResizeHandler()
                /* handler: EventListener */
                {},
                deregisterResizeHandler: function deregisterResizeHandler()
                /* handler: EventListener */
                {},
                notifyInput: function notifyInput() {},
                notifyChange: function notifyChange() {},
                setThumbContainerStyleProperty: function setThumbContainerStyleProperty()
                /* propertyName: string, value: string */
                {},
                setTrackStyleProperty: function setTrackStyleProperty()
                /* propertyName: string, value: string */
                {},
                setMarkerValue: function setMarkerValue()
                /* value: number */
                {},
                appendTrackMarkers: function appendTrackMarkers()
                /* numMarkers: number */
                {},
                removeTrackMarkers: function removeTrackMarkers() {},
                setLastTrackMarkersStyleProperty: function setLastTrackMarkersStyleProperty()
                /* propertyName: string, value: string */
                {},
                isRTL: function isRTL() {
                  return (
                    /* boolean */
                    false
                  );
                }
              }
            );
          }
          /**
           * Creates a new instance of MDCSliderFoundation
           * @param {?MDCSliderAdapter} adapter
           */

        }]);

        function MDCSliderFoundation(adapter) {
          _classCallCheck(this, MDCSliderFoundation);
          /** @private {?ClientRect} */


          var _this = _possibleConstructorReturn(this, (MDCSliderFoundation.__proto__ || Object.getPrototypeOf(MDCSliderFoundation)).call(this, _extends(MDCSliderFoundation.defaultAdapter, adapter)));

          _this.rect_ = null; // We set this to NaN since we want it to be a number, but we can't use '0' or '-1'
          // because those could be valid tabindices set by the client code.

          _this.savedTabIndex_ = NaN;
          _this.active_ = false;
          _this.inTransit_ = false;
          _this.isDiscrete_ = false;
          _this.hasTrackMarker_ = false;
          _this.handlingThumbTargetEvt_ = false;
          _this.min_ = 0;
          _this.max_ = 100;
          _this.step_ = 0;
          _this.value_ = 0;
          _this.disabled_ = false;
          _this.preventFocusState_ = false;
          _this.updateUIFrame_ = 0;

          _this.thumbContainerPointerHandler_ = function () {
            _this.handlingThumbTargetEvt_ = true;
          };

          _this.interactionStartHandler_ = function (evt) {
            return _this.handleDown_(evt);
          };

          _this.keydownHandler_ = function (evt) {
            return _this.handleKeydown_(evt);
          };

          _this.focusHandler_ = function () {
            return _this.handleFocus_();
          };

          _this.blurHandler_ = function () {
            return _this.handleBlur_();
          };

          _this.resizeHandler_ = function () {
            return _this.layout();
          };

          return _this;
        }

        _createClass(MDCSliderFoundation, [{
          key: 'init',
          value: function init() {
            var _this2 = this;

            this.isDiscrete_ = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_0__constants__["a"
            /* cssClasses */
            ].IS_DISCRETE);
            this.hasTrackMarker_ = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_0__constants__["a"
            /* cssClasses */
            ].HAS_TRACK_MARKER);
            DOWN_EVENTS.forEach(function (evtName) {
              return _this2.adapter_.registerInteractionHandler(evtName, _this2.interactionStartHandler_);
            });
            this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);
            this.adapter_.registerInteractionHandler('focus', this.focusHandler_);
            this.adapter_.registerInteractionHandler('blur', this.blurHandler_);
            DOWN_EVENTS.forEach(function (evtName) {
              _this2.adapter_.registerThumbContainerInteractionHandler(evtName, _this2.thumbContainerPointerHandler_);
            });
            this.adapter_.registerResizeHandler(this.resizeHandler_);
            this.layout(); // At last step, provide a reasonable default value to discrete slider

            if (this.isDiscrete_ && this.getStep() == 0) {
              this.step_ = 1;
            }
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            var _this3 = this;

            DOWN_EVENTS.forEach(function (evtName) {
              _this3.adapter_.deregisterInteractionHandler(evtName, _this3.interactionStartHandler_);
            });
            this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);
            this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);
            this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);
            DOWN_EVENTS.forEach(function (evtName) {
              _this3.adapter_.deregisterThumbContainerInteractionHandler(evtName, _this3.thumbContainerPointerHandler_);
            });
            this.adapter_.deregisterResizeHandler(this.resizeHandler_);
          }
        }, {
          key: 'setupTrackMarker',
          value: function setupTrackMarker() {
            if (this.isDiscrete_ && this.hasTrackMarker_ && this.getStep() != 0) {
              var min = this.getMin();
              var max = this.getMax();
              var step = this.getStep();
              var numMarkers = (max - min) / step; // In case distance between max & min is indivisible to step,
              // we place the secondary to last marker proportionally at where thumb
              // could reach and place the last marker at max value

              var indivisible = Math.ceil(numMarkers) !== numMarkers;

              if (indivisible) {
                numMarkers = Math.ceil(numMarkers);
              }

              this.adapter_.removeTrackMarkers();
              this.adapter_.appendTrackMarkers(numMarkers);

              if (indivisible) {
                var lastStepRatio = (max - numMarkers * step) / step + 1;
                var flex = Object(__WEBPACK_IMPORTED_MODULE_2__material_animation_index__["b"
                /* getCorrectPropertyName */
                ])(window, 'flex');
                this.adapter_.setLastTrackMarkersStyleProperty(flex, String(lastStepRatio));
              }
            }
          }
        }, {
          key: 'layout',
          value: function layout() {
            this.rect_ = this.adapter_.computeBoundingRect();
            this.updateUIForCurrentValue_();
          }
          /** @return {number} */

        }, {
          key: 'getValue',
          value: function getValue() {
            return this.value_;
          }
          /** @param {number} value */

        }, {
          key: 'setValue',
          value: function setValue(value) {
            this.setValue_(value, false);
          }
          /** @return {number} */

        }, {
          key: 'getMax',
          value: function getMax() {
            return this.max_;
          }
          /** @param {number} max */

        }, {
          key: 'setMax',
          value: function setMax(max) {
            if (max < this.min_) {
              throw new Error('Cannot set max to be less than the slider\'s minimum value');
            }

            this.max_ = max;
            this.setValue_(this.value_, false, true);
            this.adapter_.setAttribute(__WEBPACK_IMPORTED_MODULE_0__constants__["c"
            /* strings */
            ].ARIA_VALUEMAX, String(this.max_));
            this.setupTrackMarker();
          }
          /** @return {number} */

        }, {
          key: 'getMin',
          value: function getMin() {
            return this.min_;
          }
          /** @param {number} min */

        }, {
          key: 'setMin',
          value: function setMin(min) {
            if (min > this.max_) {
              throw new Error('Cannot set min to be greater than the slider\'s maximum value');
            }

            this.min_ = min;
            this.setValue_(this.value_, false, true);
            this.adapter_.setAttribute(__WEBPACK_IMPORTED_MODULE_0__constants__["c"
            /* strings */
            ].ARIA_VALUEMIN, String(this.min_));
            this.setupTrackMarker();
          }
          /** @return {number} */

        }, {
          key: 'getStep',
          value: function getStep() {
            return this.step_;
          }
          /** @param {number} step */

        }, {
          key: 'setStep',
          value: function setStep(step) {
            if (step < 0) {
              throw new Error('Step cannot be set to a negative number');
            }

            if (this.isDiscrete_ && (typeof step !== 'number' || step < 1)) {
              step = 1;
            }

            this.step_ = step;
            this.setValue_(this.value_, false, true);
            this.setupTrackMarker();
          }
          /** @return {boolean} */

        }, {
          key: 'isDisabled',
          value: function isDisabled() {
            return this.disabled_;
          }
          /** @param {boolean} disabled */

        }, {
          key: 'setDisabled',
          value: function setDisabled(disabled) {
            this.disabled_ = disabled;
            this.toggleClass_(__WEBPACK_IMPORTED_MODULE_0__constants__["a"
            /* cssClasses */
            ].DISABLED, this.disabled_);

            if (this.disabled_) {
              this.savedTabIndex_ = this.adapter_.getTabIndex();
              this.adapter_.setAttribute(__WEBPACK_IMPORTED_MODULE_0__constants__["c"
              /* strings */
              ].ARIA_DISABLED, 'true');
              this.adapter_.removeAttribute('tabindex');
            } else {
              this.adapter_.removeAttribute(__WEBPACK_IMPORTED_MODULE_0__constants__["c"
              /* strings */
              ].ARIA_DISABLED);

              if (!isNaN(this.savedTabIndex_)) {
                this.adapter_.setAttribute('tabindex', String(this.savedTabIndex_));
              }
            }
          }
          /**
           * Called when the user starts interacting with the slider
           * @param {!Event} evt
           * @private
           */

        }, {
          key: 'handleDown_',
          value: function handleDown_(evt) {
            var _this4 = this;

            if (this.disabled_) {
              return;
            }

            this.preventFocusState_ = true;
            this.setInTransit_(!this.handlingThumbTargetEvt_);
            this.handlingThumbTargetEvt_ = false;
            this.setActive_(true);

            var moveHandler = function moveHandler(evt) {
              _this4.handleMove_(evt);
            }; // Note: upHandler is [de]registered on ALL potential pointer-related release event types, since some browsers
            // do not always fire these consistently in pairs.
            // (See https://github.com/material-components/material-components-web/issues/1192)


            var upHandler = function upHandler() {
              _this4.handleUp_();

              _this4.adapter_.deregisterBodyInteractionHandler(MOVE_EVENT_MAP[evt.type], moveHandler);

              UP_EVENTS.forEach(function (evtName) {
                return _this4.adapter_.deregisterBodyInteractionHandler(evtName, upHandler);
              });
            };

            this.adapter_.registerBodyInteractionHandler(MOVE_EVENT_MAP[evt.type], moveHandler);
            UP_EVENTS.forEach(function (evtName) {
              return _this4.adapter_.registerBodyInteractionHandler(evtName, upHandler);
            });
            this.setValueFromEvt_(evt);
          }
          /**
           * Called when the user moves the slider
           * @param {!Event} evt
           * @private
           */

        }, {
          key: 'handleMove_',
          value: function handleMove_(evt) {
            evt.preventDefault();
            this.setValueFromEvt_(evt);
          }
          /**
           * Called when the user's interaction with the slider ends
           * @private
           */

        }, {
          key: 'handleUp_',
          value: function handleUp_() {
            this.setActive_(false);
            this.adapter_.notifyChange();
          }
          /**
           * Returns the pageX of the event
           * @param {!Event} evt
           * @return {number}
           * @private
           */

        }, {
          key: 'getPageX_',
          value: function getPageX_(evt) {
            if (evt.targetTouches && evt.targetTouches.length > 0) {
              return evt.targetTouches[0].pageX;
            }

            return evt.pageX;
          }
          /**
           * Sets the slider value from an event
           * @param {!Event} evt
           * @private
           */

        }, {
          key: 'setValueFromEvt_',
          value: function setValueFromEvt_(evt) {
            var pageX = this.getPageX_(evt);
            var value = this.computeValueFromPageX_(pageX);
            this.setValue_(value, true);
          }
          /**
           * Computes the new value from the pageX position
           * @param {number} pageX
           * @return {number}
           */

        }, {
          key: 'computeValueFromPageX_',
          value: function computeValueFromPageX_(pageX) {
            var max = this.max_,
                min = this.min_;
            var xPos = pageX - this.rect_.left;
            var pctComplete = xPos / this.rect_.width;

            if (this.adapter_.isRTL()) {
              pctComplete = 1 - pctComplete;
            } // Fit the percentage complete between the range [min,max]
            // by remapping from [0, 1] to [min, min+(max-min)].


            return min + pctComplete * (max - min);
          }
          /**
           * Handles keydown events
           * @param {!Event} evt
           */

        }, {
          key: 'handleKeydown_',
          value: function handleKeydown_(evt) {
            var keyId = this.getKeyId_(evt);
            var value = this.getValueForKeyId_(keyId);

            if (isNaN(value)) {
              return;
            } // Prevent page from scrolling due to key presses that would normally scroll the page


            evt.preventDefault();
            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_0__constants__["a"
            /* cssClasses */
            ].FOCUS);
            this.setValue_(value, true);
            this.adapter_.notifyChange();
          }
          /**
           * Returns the computed name of the event
           * @param {!Event} kbdEvt
           * @return {string}
           */

        }, {
          key: 'getKeyId_',
          value: function getKeyId_(kbdEvt) {
            if (kbdEvt.key === KEY_IDS.ARROW_LEFT || kbdEvt.keyCode === 37) {
              return KEY_IDS.ARROW_LEFT;
            }

            if (kbdEvt.key === KEY_IDS.ARROW_RIGHT || kbdEvt.keyCode === 39) {
              return KEY_IDS.ARROW_RIGHT;
            }

            if (kbdEvt.key === KEY_IDS.ARROW_UP || kbdEvt.keyCode === 38) {
              return KEY_IDS.ARROW_UP;
            }

            if (kbdEvt.key === KEY_IDS.ARROW_DOWN || kbdEvt.keyCode === 40) {
              return KEY_IDS.ARROW_DOWN;
            }

            if (kbdEvt.key === KEY_IDS.HOME || kbdEvt.keyCode === 36) {
              return KEY_IDS.HOME;
            }

            if (kbdEvt.key === KEY_IDS.END || kbdEvt.keyCode === 35) {
              return KEY_IDS.END;
            }

            if (kbdEvt.key === KEY_IDS.PAGE_UP || kbdEvt.keyCode === 33) {
              return KEY_IDS.PAGE_UP;
            }

            if (kbdEvt.key === KEY_IDS.PAGE_DOWN || kbdEvt.keyCode === 34) {
              return KEY_IDS.PAGE_DOWN;
            }

            return '';
          }
          /**
           * Computes the value given a keyboard key ID
           * @param {string} keyId
           * @return {number}
           */

        }, {
          key: 'getValueForKeyId_',
          value: function getValueForKeyId_(keyId) {
            var max = this.max_,
                min = this.min_,
                step = this.step_;
            var delta = step || (max - min) / 100;
            var valueNeedsToBeFlipped = this.adapter_.isRTL() && (keyId === KEY_IDS.ARROW_LEFT || keyId === KEY_IDS.ARROW_RIGHT);

            if (valueNeedsToBeFlipped) {
              delta = -delta;
            }

            switch (keyId) {
              case KEY_IDS.ARROW_LEFT:
              case KEY_IDS.ARROW_DOWN:
                return this.value_ - delta;

              case KEY_IDS.ARROW_RIGHT:
              case KEY_IDS.ARROW_UP:
                return this.value_ + delta;

              case KEY_IDS.HOME:
                return this.min_;

              case KEY_IDS.END:
                return this.max_;

              case KEY_IDS.PAGE_UP:
                return this.value_ + delta * __WEBPACK_IMPORTED_MODULE_0__constants__["b"
                /* numbers */
                ].PAGE_FACTOR;

              case KEY_IDS.PAGE_DOWN:
                return this.value_ - delta * __WEBPACK_IMPORTED_MODULE_0__constants__["b"
                /* numbers */
                ].PAGE_FACTOR;

              default:
                return NaN;
            }
          }
        }, {
          key: 'handleFocus_',
          value: function handleFocus_() {
            if (this.preventFocusState_) {
              return;
            }

            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_0__constants__["a"
            /* cssClasses */
            ].FOCUS);
          }
        }, {
          key: 'handleBlur_',
          value: function handleBlur_() {
            this.preventFocusState_ = false;
            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_0__constants__["a"
            /* cssClasses */
            ].FOCUS);
          }
          /**
           * Sets the value of the slider
           * @param {number} value
           * @param {boolean} shouldFireInput
           * @param {boolean=} force
           */

        }, {
          key: 'setValue_',
          value: function setValue_(value, shouldFireInput) {
            var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

            if (value === this.value_ && !force) {
              return;
            }

            var min = this.min_,
                max = this.max_;
            var valueSetToBoundary = value === min || value === max;

            if (this.step_ && !valueSetToBoundary) {
              value = this.quantize_(value);
            }

            if (value < min) {
              value = min;
            } else if (value > max) {
              value = max;
            }

            this.value_ = value;
            this.adapter_.setAttribute(__WEBPACK_IMPORTED_MODULE_0__constants__["c"
            /* strings */
            ].ARIA_VALUENOW, String(this.value_));
            this.updateUIForCurrentValue_();

            if (shouldFireInput) {
              this.adapter_.notifyInput();

              if (this.isDiscrete_) {
                this.adapter_.setMarkerValue(value);
              }
            }
          }
          /**
           * Calculates the quantized value
           * @param {number} value
           * @return {number}
           */

        }, {
          key: 'quantize_',
          value: function quantize_(value) {
            var numSteps = Math.round(value / this.step_);
            var quantizedVal = numSteps * this.step_;
            return quantizedVal;
          }
        }, {
          key: 'updateUIForCurrentValue_',
          value: function updateUIForCurrentValue_() {
            var _this5 = this;

            var max = this.max_,
                min = this.min_,
                value = this.value_;
            var pctComplete = (value - min) / (max - min);
            var translatePx = pctComplete * this.rect_.width;

            if (this.adapter_.isRTL()) {
              translatePx = this.rect_.width - translatePx;
            }

            var transformProp = Object(__WEBPACK_IMPORTED_MODULE_2__material_animation_index__["b"
            /* getCorrectPropertyName */
            ])(window, 'transform');
            var transitionendEvtName = Object(__WEBPACK_IMPORTED_MODULE_2__material_animation_index__["a"
            /* getCorrectEventName */
            ])(window, 'transitionend');

            if (this.inTransit_) {
              var onTransitionEnd = function onTransitionEnd() {
                _this5.setInTransit_(false);

                _this5.adapter_.deregisterThumbContainerInteractionHandler(transitionendEvtName, onTransitionEnd);
              };

              this.adapter_.registerThumbContainerInteractionHandler(transitionendEvtName, onTransitionEnd);
            }

            this.updateUIFrame_ = requestAnimationFrame(function () {
              // NOTE(traviskaufman): It would be nice to use calc() here,
              // but IE cannot handle calcs in transforms correctly.
              // See: https://goo.gl/NC2itk
              // Also note that the -50% offset is used to center the slider thumb.
              _this5.adapter_.setThumbContainerStyleProperty(transformProp, 'translateX(' + translatePx + 'px) translateX(-50%)');

              _this5.adapter_.setTrackStyleProperty(transformProp, 'scaleX(' + pctComplete + ')');
            });
          }
          /**
           * Toggles the active state of the slider
           * @param {boolean} active
           */

        }, {
          key: 'setActive_',
          value: function setActive_(active) {
            this.active_ = active;
            this.toggleClass_(__WEBPACK_IMPORTED_MODULE_0__constants__["a"
            /* cssClasses */
            ].ACTIVE, this.active_);
          }
          /**
           * Toggles the inTransit state of the slider
           * @param {boolean} inTransit
           */

        }, {
          key: 'setInTransit_',
          value: function setInTransit_(inTransit) {
            this.inTransit_ = inTransit;
            this.toggleClass_(__WEBPACK_IMPORTED_MODULE_0__constants__["a"
            /* cssClasses */
            ].IN_TRANSIT, this.inTransit_);
          }
          /**
           * Conditionally adds or removes a class based on shouldBePresent
           * @param {string} className
           * @param {boolean} shouldBePresent
           */

        }, {
          key: 'toggleClass_',
          value: function toggleClass_(className, shouldBePresent) {
            if (shouldBePresent) {
              this.adapter_.addClass(className);
            } else {
              this.adapter_.removeClass(className);
            }
          }
        }]);

        return MDCSliderFoundation;
      }(__WEBPACK_IMPORTED_MODULE_3__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCSliderFoundation;
      /***/
    },
    /* 127 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCSnackbar", function () {
        return MDCSnackbar;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(128);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(24);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(130);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__material_dom_ponyfill__ = __webpack_require__(8);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCSnackbarFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_1__foundation__["a"];
      });
      /* harmony reexport (module object) */


      __webpack_require__.d(__webpack_exports__, "util", function () {
        return __WEBPACK_IMPORTED_MODULE_3__util__;
      });

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var SURFACE_SELECTOR = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
      /* strings */
      ].SURFACE_SELECTOR,
          LABEL_SELECTOR = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
      /* strings */
      ].LABEL_SELECTOR,
          ACTION_SELECTOR = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
      /* strings */
      ].ACTION_SELECTOR,
          DISMISS_SELECTOR = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
      /* strings */
      ].DISMISS_SELECTOR,
          OPENING_EVENT = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
      /* strings */
      ].OPENING_EVENT,
          OPENED_EVENT = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
      /* strings */
      ].OPENED_EVENT,
          CLOSING_EVENT = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
      /* strings */
      ].CLOSING_EVENT,
          CLOSED_EVENT = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
      /* strings */
      ].CLOSED_EVENT;

      var MDCSnackbar = function (_MDCComponent) {
        _inherits(MDCSnackbar, _MDCComponent);

        _createClass(MDCSnackbar, null, [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCSnackbar(root);
          }
        }]);

        function MDCSnackbar() {
          var _ref;

          _classCallCheck(this, MDCSnackbar);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @type {!HTMLElement} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCSnackbar.__proto__ || Object.getPrototypeOf(MDCSnackbar)).call.apply(_ref, [this].concat(args)));

          _this.surfaceEl_;
          /** @type {!HTMLElement} */

          _this.labelEl_;
          /** @type {!HTMLElement} */

          _this.actionEl_;
          /** @type {function(!HTMLElement, !HTMLElement=): void} */

          _this.announce_;
          /** @private {!Function} */

          _this.handleKeyDown_;
          /** @private {!Function} */

          _this.handleSurfaceClick_;
          return _this;
        }
        /**
         * @param {function(): function(!HTMLElement, !HTMLElement=):void} announceFactory
         */


        _createClass(MDCSnackbar, [{
          key: 'initialize',
          value: function initialize() {
            var announceFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {
              return __WEBPACK_IMPORTED_MODULE_3__util__["announce"];
            };
            this.announce_ = announceFactory();
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var _this2 = this;

            this.surfaceEl_ =
            /** @type {!HTMLElement} */
            this.root_.querySelector(SURFACE_SELECTOR);
            this.labelEl_ =
            /** @type {!HTMLElement} */
            this.root_.querySelector(LABEL_SELECTOR);
            this.actionEl_ =
            /** @type {!HTMLElement} */
            this.root_.querySelector(ACTION_SELECTOR);

            this.handleKeyDown_ = function (evt) {
              return _this2.foundation_.handleKeyDown(evt);
            };

            this.handleSurfaceClick_ = function (evt) {
              if (_this2.isActionButton_(evt.target)) {
                _this2.foundation_.handleActionButtonClick(evt);
              } else if (_this2.isActionIcon_(evt.target)) {
                _this2.foundation_.handleActionIconClick(evt);
              }
            };

            this.registerKeyDownHandler_(this.handleKeyDown_);
            this.registerSurfaceClickHandler_(this.handleSurfaceClick_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            _get(MDCSnackbar.prototype.__proto__ || Object.getPrototypeOf(MDCSnackbar.prototype), 'destroy', this).call(this);

            this.deregisterKeyDownHandler_(this.handleKeyDown_);
            this.deregisterSurfaceClickHandler_(this.handleSurfaceClick_);
          }
        }, {
          key: 'open',
          value: function open() {
            this.foundation_.open();
          }
          /**
           * @param {string=} reason Why the snackbar was closed. Value will be passed to CLOSING_EVENT and CLOSED_EVENT via the
           *     `event.detail.reason` property. Standard values are REASON_ACTION and REASON_DISMISS, but custom
           *     client-specific values may also be used if desired.
           */

        }, {
          key: 'close',
          value: function close() {
            var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
            this.foundation_.close(reason);
          }
          /**
           * @return {!MDCSnackbarFoundation}
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this3 = this;
            /* eslint brace-style: "off" */


            return new __WEBPACK_IMPORTED_MODULE_1__foundation__["a"
            /* default */
            ]({
              addClass: function addClass(className) {
                return _this3.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this3.root_.classList.remove(className);
              },
              announce: function announce() {
                return _this3.announce_(_this3.labelEl_);
              },
              notifyOpening: function notifyOpening() {
                return _this3.emit(OPENING_EVENT, {});
              },
              notifyOpened: function notifyOpened() {
                return _this3.emit(OPENED_EVENT, {});
              },
              notifyClosing: function notifyClosing(reason) {
                return _this3.emit(CLOSING_EVENT, reason ? {
                  reason: reason
                } : {});
              },
              notifyClosed: function notifyClosed(reason) {
                return _this3.emit(CLOSED_EVENT, reason ? {
                  reason: reason
                } : {});
              }
            });
          }
          /**
           * @return {number}
           */

        }, {
          key: 'registerKeyDownHandler_',

          /**
           * @param {!Function} handler
           * @private
           */
          value: function registerKeyDownHandler_(handler) {
            this.listen('keydown', handler);
          }
          /**
           * @param {!Function} handler
           * @private
           */

        }, {
          key: 'deregisterKeyDownHandler_',
          value: function deregisterKeyDownHandler_(handler) {
            this.unlisten('keydown', handler);
          }
          /**
           * @param {!Function} handler
           * @private
           */

        }, {
          key: 'registerSurfaceClickHandler_',
          value: function registerSurfaceClickHandler_(handler) {
            this.surfaceEl_.addEventListener('click', handler);
          }
          /**
           * @param {!Function} handler
           * @private
           */

        }, {
          key: 'deregisterSurfaceClickHandler_',
          value: function deregisterSurfaceClickHandler_(handler) {
            this.surfaceEl_.removeEventListener('click', handler);
          }
          /**
           * @param {!Element} target
           * @return {boolean}
           * @private
           */

        }, {
          key: 'isActionButton_',
          value: function isActionButton_(target) {
            return Boolean(__WEBPACK_IMPORTED_MODULE_4__material_dom_ponyfill__["closest"](target, ACTION_SELECTOR));
          }
          /**
           * @param {!Element} target
           * @return {boolean}
           * @private
           */

        }, {
          key: 'isActionIcon_',
          value: function isActionIcon_(target) {
            return Boolean(__WEBPACK_IMPORTED_MODULE_4__material_dom_ponyfill__["closest"](target, DISMISS_SELECTOR));
          }
        }, {
          key: 'timeoutMs',
          get: function get() {
            return this.foundation_.getTimeoutMs();
          }
          /**
           * @param {number} timeoutMs
           */
          ,
          set: function set(timeoutMs) {
            this.foundation_.setTimeoutMs(timeoutMs);
          }
          /**
           * @return {boolean}
           */

        }, {
          key: 'closeOnEscape',
          get: function get() {
            return this.foundation_.getCloseOnEscape();
          }
          /**
           * @param {boolean} closeOnEscape
           */
          ,
          set: function set(closeOnEscape) {
            this.foundation_.setCloseOnEscape(closeOnEscape);
          }
          /**
           * @return {boolean}
           */

        }, {
          key: 'isOpen',
          get: function get() {
            return this.foundation_.isOpen();
          }
          /**
           * @return {string}
           */

        }, {
          key: 'labelText',
          get: function get() {
            return this.labelEl_.textContent;
          }
          /**
           * @param {string} labelText
           */
          ,
          set: function set(labelText) {
            this.labelEl_.textContent = labelText;
          }
          /**
           * @return {string}
           */

        }, {
          key: 'actionButtonText',
          get: function get() {
            return this.actionEl_.textContent;
          }
          /**
           * @param {string} actionButtonText
           */
          ,
          set: function set(actionButtonText) {
            this.actionEl_.textContent = actionButtonText;
          }
        }]);

        return MDCSnackbar;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 128 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(129);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(24);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: ["error", {"argsIgnorePattern": "evt", "varsIgnorePattern": "Adapter$"}] */


      var OPENING = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
      /* cssClasses */
      ].OPENING,
          OPEN = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
      /* cssClasses */
      ].OPEN,
          CLOSING = __WEBPACK_IMPORTED_MODULE_2__constants__["a"
      /* cssClasses */
      ].CLOSING;
      var REASON_ACTION = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
      /* strings */
      ].REASON_ACTION,
          REASON_DISMISS = __WEBPACK_IMPORTED_MODULE_2__constants__["c"
      /* strings */
      ].REASON_DISMISS;

      var MDCSnackbarFoundation = function (_MDCFoundation) {
        _inherits(MDCSnackbarFoundation, _MDCFoundation);

        _createClass(MDCSnackbarFoundation, null, [{
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["c"
            /* strings */
            ];
          }
        }, {
          key: 'numbers',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* numbers */
            ];
          }
          /**
           * @return {!MDCSnackbarAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCSnackbarAdapter} */
              {
                addClass: function addClass()
                /* className: string */
                {},
                removeClass: function removeClass()
                /* className: string */
                {},
                announce: function announce() {},
                notifyOpening: function notifyOpening() {},
                notifyOpened: function notifyOpened() {},
                notifyClosing: function notifyClosing()
                /* reason: string */
                {},
                notifyClosed: function notifyClosed()
                /* reason: string */
                {}
              }
            );
          }
          /**
           * @param {!MDCSnackbarAdapter=} adapter
           */

        }]);

        function MDCSnackbarFoundation(adapter) {
          _classCallCheck(this, MDCSnackbarFoundation);
          /** @private {boolean} */


          var _this = _possibleConstructorReturn(this, (MDCSnackbarFoundation.__proto__ || Object.getPrototypeOf(MDCSnackbarFoundation)).call(this, _extends(MDCSnackbarFoundation.defaultAdapter, adapter)));

          _this.isOpen_ = false;
          /** @private {number} */

          _this.animationFrame_ = 0;
          /** @private {number} */

          _this.animationTimer_ = 0;
          /** @private {number} */

          _this.autoDismissTimer_ = 0;
          /** @private {number} */

          _this.autoDismissTimeoutMs_ = __WEBPACK_IMPORTED_MODULE_2__constants__["b"
          /* numbers */
          ].DEFAULT_AUTO_DISMISS_TIMEOUT_MS;
          /** @private {boolean} */

          _this.closeOnEscape_ = true;
          return _this;
        }

        _createClass(MDCSnackbarFoundation, [{
          key: 'destroy',
          value: function destroy() {
            this.clearAutoDismissTimer_();
            cancelAnimationFrame(this.animationFrame_);
            this.animationFrame_ = 0;
            clearTimeout(this.animationTimer_);
            this.animationTimer_ = 0;
            this.adapter_.removeClass(OPENING);
            this.adapter_.removeClass(OPEN);
            this.adapter_.removeClass(CLOSING);
          }
        }, {
          key: 'open',
          value: function open() {
            var _this2 = this;

            this.clearAutoDismissTimer_();
            this.isOpen_ = true;
            this.adapter_.notifyOpening();
            this.adapter_.removeClass(CLOSING);
            this.adapter_.addClass(OPENING);
            this.adapter_.announce(); // Wait a frame once display is no longer "none", to establish basis for animation

            this.runNextAnimationFrame_(function () {
              _this2.adapter_.addClass(OPEN);

              _this2.animationTimer_ = setTimeout(function () {
                _this2.handleAnimationTimerEnd_();

                _this2.adapter_.notifyOpened();

                _this2.autoDismissTimer_ = setTimeout(function () {
                  _this2.close(REASON_DISMISS);
                }, _this2.getTimeoutMs());
              }, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ].SNACKBAR_ANIMATION_OPEN_TIME_MS);
            });
          }
          /**
           * @param {string=} reason Why the snackbar was closed. Value will be passed to CLOSING_EVENT and CLOSED_EVENT via the
           *     `event.detail.reason` property. Standard values are REASON_ACTION and REASON_DISMISS, but custom
           *     client-specific values may also be used if desired.
           */

        }, {
          key: 'close',
          value: function close() {
            var _this3 = this;

            var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

            if (!this.isOpen_) {
              // Avoid redundant close calls (and events), e.g. repeated interactions as the snackbar is animating closed
              return;
            }

            cancelAnimationFrame(this.animationFrame_);
            this.animationFrame_ = 0;
            this.clearAutoDismissTimer_();
            this.isOpen_ = false;
            this.adapter_.notifyClosing(reason);
            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].CLOSING);
            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].OPEN);
            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].OPENING);
            clearTimeout(this.animationTimer_);
            this.animationTimer_ = setTimeout(function () {
              _this3.handleAnimationTimerEnd_();

              _this3.adapter_.notifyClosed(reason);
            }, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* numbers */
            ].SNACKBAR_ANIMATION_CLOSE_TIME_MS);
          }
          /**
           * @return {boolean}
           */

        }, {
          key: 'isOpen',
          value: function isOpen() {
            return this.isOpen_;
          }
          /**
           * @return {number}
           */

        }, {
          key: 'getTimeoutMs',
          value: function getTimeoutMs() {
            return this.autoDismissTimeoutMs_;
          }
          /**
           * @param {number} timeoutMs
           */

        }, {
          key: 'setTimeoutMs',
          value: function setTimeoutMs(timeoutMs) {
            // Use shorter variable names to make the code more readable
            var minValue = __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* numbers */
            ].MIN_AUTO_DISMISS_TIMEOUT_MS;
            var maxValue = __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* numbers */
            ].MAX_AUTO_DISMISS_TIMEOUT_MS;

            if (timeoutMs <= maxValue && timeoutMs >= minValue) {
              this.autoDismissTimeoutMs_ = timeoutMs;
            } else {
              throw new Error('timeoutMs must be an integer in the range ' + minValue + "\u2013" + maxValue + ', but got \'' + timeoutMs + '\'');
            }
          }
          /**
           * @return {boolean}
           */

        }, {
          key: 'getCloseOnEscape',
          value: function getCloseOnEscape() {
            return this.closeOnEscape_;
          }
          /**
           * @param {boolean} closeOnEscape
           */

        }, {
          key: 'setCloseOnEscape',
          value: function setCloseOnEscape(closeOnEscape) {
            this.closeOnEscape_ = closeOnEscape;
          }
          /**
           * @param {!KeyboardEvent} evt
           */

        }, {
          key: 'handleKeyDown',
          value: function handleKeyDown(evt) {
            if (this.getCloseOnEscape() && (evt.key === 'Escape' || evt.keyCode === 27)) {
              this.close(REASON_DISMISS);
            }
          }
          /**
           * @param {!MouseEvent} evt
           */

        }, {
          key: 'handleActionButtonClick',
          value: function handleActionButtonClick(evt) {
            this.close(REASON_ACTION);
          }
          /**
           * @param {!MouseEvent} evt
           */

        }, {
          key: 'handleActionIconClick',
          value: function handleActionIconClick(evt) {
            this.close(REASON_DISMISS);
          }
          /** @private */

        }, {
          key: 'clearAutoDismissTimer_',
          value: function clearAutoDismissTimer_() {
            clearTimeout(this.autoDismissTimer_);
            this.autoDismissTimer_ = 0;
          }
          /** @private */

        }, {
          key: 'handleAnimationTimerEnd_',
          value: function handleAnimationTimerEnd_() {
            this.animationTimer_ = 0;
            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].OPENING);
            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].CLOSING);
          }
          /**
           * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.
           * @param {Function} callback
           * @private
           */

        }, {
          key: 'runNextAnimationFrame_',
          value: function runNextAnimationFrame_(callback) {
            var _this4 = this;

            cancelAnimationFrame(this.animationFrame_);
            this.animationFrame_ = requestAnimationFrame(function () {
              _this4.animationFrame_ = 0;
              clearTimeout(_this4.animationTimer_);
              _this4.animationTimer_ = setTimeout(callback, 0);
            });
          }
        }]);

        return MDCSnackbarFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCSnackbarFoundation;
      /***/
    },
    /* 129 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Snackbar. Provides an interface for managing:
       * - CSS classes
       * - Event handlers
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCSnackbarAdapter = function () {
        function MDCSnackbarAdapter() {
          _classCallCheck(this, MDCSnackbarAdapter);
        }

        _createClass(MDCSnackbarAdapter, [{
          key: "addClass",

          /** @param {string} className */
          value: function addClass(className) {}
          /** @param {string} className */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
        }, {
          key: "announce",
          value: function announce() {}
        }, {
          key: "notifyOpening",
          value: function notifyOpening() {}
        }, {
          key: "notifyOpened",
          value: function notifyOpened() {}
          /**
           * @param {string} reason
           */

        }, {
          key: "notifyClosing",
          value: function notifyClosing(reason) {}
          /**
           * @param {string} reason
           */

        }, {
          key: "notifyClosed",
          value: function notifyClosed(reason) {}
        }]);

        return MDCSnackbarAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCSnackbarAdapter;
      /***/
    },
    /* 130 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "announce", function () {
        return announce;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(24);
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var ARIA_LIVE_DELAY_MS = __WEBPACK_IMPORTED_MODULE_0__constants__["b"
      /* numbers */
      ].ARIA_LIVE_DELAY_MS;
      var ARIA_LIVE_LABEL_TEXT_ATTR = __WEBPACK_IMPORTED_MODULE_0__constants__["c"
      /* strings */
      ].ARIA_LIVE_LABEL_TEXT_ATTR;
      /**
       * @param {!HTMLElement} ariaEl
       * @param {!HTMLElement=} labelEl
       */

      function announce(ariaEl) {
        var labelEl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ariaEl;
        var priority = ariaEl.getAttribute('aria-live');
        var labelText = labelEl.textContent.trim(); // Ignore `&nbsp;` (see below)

        if (!labelText) {
          return;
        } // Temporarily disable `aria-live` to prevent JAWS+Firefox from announcing the message twice.


        ariaEl.setAttribute('aria-live', 'off'); // Temporarily clear `textContent` to force a DOM mutation event that will be detected by screen readers.
        // `aria-live` elements are only announced when the element's `textContent` *changes*, so snackbars
        // sent to the browser in the initial HTML response won't be read unless we clear the element's `textContent` first.
        // Similarly, displaying the same snackbar message twice in a row doesn't trigger a DOM mutation event,
        // so screen readers won't announce the second message unless we first clear `textContent`.
        //
        // We have to clear the label text two different ways to make it work in all browsers and screen readers:
        //
        //   1. `textContent = ''` is required for IE11 + JAWS
        //   2. `innerHTML = '&nbsp;'` is required for Chrome + JAWS and NVDA
        //
        // All other browser/screen reader combinations support both methods.
        //
        // The wrapper `<span>` visually hides the space character so that it doesn't cause jank when added/removed.
        // N.B.: Setting `position: absolute`, `opacity: 0`, or `height: 0` prevents Chrome from detecting the DOM change.
        //
        // This technique has been tested in:
        //
        //   * JAWS 2019:
        //       - Chrome 70
        //       - Firefox 60 (ESR)
        //       - IE 11
        //   * NVDA 2018:
        //       - Chrome 70
        //       - Firefox 60 (ESR)
        //       - IE 11
        //   * ChromeVox 53

        labelEl.textContent = '';
        labelEl.innerHTML = '<span style="display: inline-block; width: 0; height: 1px;">&nbsp;</span>'; // Prevent visual jank by temporarily displaying the label text in the ::before pseudo-element.
        // CSS generated content is normally announced by screen readers
        // (except in IE 11; see https://tink.uk/accessibility-support-for-css-generated-content/);
        // however, `aria-live` is turned off, so this DOM update will be ignored by screen readers.

        labelEl.setAttribute(ARIA_LIVE_LABEL_TEXT_ATTR, labelText);
        setTimeout(function () {
          // Allow screen readers to announce changes to the DOM again.
          ariaEl.setAttribute('aria-live', priority); // Remove the message from the ::before pseudo-element.

          labelEl.removeAttribute(ARIA_LIVE_LABEL_TEXT_ATTR); // Restore the original label text, which will be announced by screen readers.

          labelEl.textContent = labelText;
        }, ARIA_LIVE_DELAY_MS);
      }
      /***/

    },
    /* 131 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCSwitch", function () {
        return MDCSwitch;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__material_selection_control_index__ = __webpack_require__(3);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(132);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__material_ripple_index__ = __webpack_require__(2);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__material_ripple_util__ = __webpack_require__(5);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCSwitchFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @extends MDCComponent<!MDCSwitchFoundation>
       * @implements {MDCSelectionControl}
       */


      var MDCSwitch = function (_MDCComponent) {
        _inherits(MDCSwitch, _MDCComponent);

        _createClass(MDCSwitch, null, [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCSwitch(root);
          }
        }]);

        function MDCSwitch() {
          var _ref;

          _classCallCheck(this, MDCSwitch);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {!MDCRipple} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCSwitch.__proto__ || Object.getPrototypeOf(MDCSwitch)).call.apply(_ref, [this].concat(args)));

          _this.ripple_ = _this.initRipple_();
          /** @private {!Function} */

          _this.changeHandler_;
          return _this;
        }

        _createClass(MDCSwitch, [{
          key: 'destroy',
          value: function destroy() {
            _get(MDCSwitch.prototype.__proto__ || Object.getPrototypeOf(MDCSwitch.prototype), 'destroy', this).call(this);

            this.ripple_.destroy();
            this.nativeControl_.removeEventListener('change', this.changeHandler_);
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            this.changeHandler_ = this.foundation_.handleChange.bind(this.foundation_);
            this.nativeControl_.addEventListener('change', this.changeHandler_); // Sometimes the checked state of the input element is saved in the history.
            // The switch styling should match the checked state of the input element.
            // Do an initial sync between the native control and the foundation.

            this.checked = this.checked;
          }
          /**
           * Returns the state of the native control element, or null if the native control element is not present.
           * @return {?MDCSelectionControlState}
           * @private
           */

        }, {
          key: 'initRipple_',

          /**
           * @return {!MDCRipple}
           * @private
           */
          value: function initRipple_() {
            var _this2 = this;

            var RIPPLE_SURFACE_SELECTOR = __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ].strings.RIPPLE_SURFACE_SELECTOR;
            var rippleSurface =
            /** @type {!Element} */
            this.root_.querySelector(RIPPLE_SURFACE_SELECTOR);
            var MATCHES = Object(__WEBPACK_IMPORTED_MODULE_4__material_ripple_util__["getMatchesProperty"])(HTMLElement.prototype);

            var adapter = _extends(__WEBPACK_IMPORTED_MODULE_3__material_ripple_index__["MDCRipple"].createAdapter(this), {
              isUnbounded: function isUnbounded() {
                return true;
              },
              isSurfaceActive: function isSurfaceActive() {
                return _this2.nativeControl_[MATCHES](':active');
              },
              addClass: function addClass(className) {
                return rippleSurface.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return rippleSurface.classList.remove(className);
              },
              registerInteractionHandler: function registerInteractionHandler(type, handler) {
                return _this2.nativeControl_.addEventListener(type, handler);
              },
              deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
                return _this2.nativeControl_.removeEventListener(type, handler);
              },
              updateCssVariable: function updateCssVariable(varName, value) {
                return rippleSurface.style.setProperty(varName, value);
              },
              computeBoundingRect: function computeBoundingRect() {
                return rippleSurface.getBoundingClientRect();
              }
            });

            var foundation = new __WEBPACK_IMPORTED_MODULE_3__material_ripple_index__["MDCRippleFoundation"](adapter);
            return new __WEBPACK_IMPORTED_MODULE_3__material_ripple_index__["MDCRipple"](this.root_, foundation);
          }
          /** @return {!MDCSwitchFoundation} */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this3 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ]({
              addClass: function addClass(className) {
                return _this3.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this3.root_.classList.remove(className);
              },
              setNativeControlChecked: function setNativeControlChecked(checked) {
                return _this3.nativeControl_.checked = checked;
              },
              setNativeControlDisabled: function setNativeControlDisabled(disabled) {
                return _this3.nativeControl_.disabled = disabled;
              }
            });
          }
          /** @return {!MDCRipple} */

        }, {
          key: 'nativeControl_',
          get: function get() {
            var NATIVE_CONTROL_SELECTOR = __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ].strings.NATIVE_CONTROL_SELECTOR;
            var el =
            /** @type {?MDCSelectionControlState} */
            this.root_.querySelector(NATIVE_CONTROL_SELECTOR);
            return el;
          }
        }, {
          key: 'ripple',
          get: function get() {
            return this.ripple_;
          }
          /** @return {boolean} */

        }, {
          key: 'checked',
          get: function get() {
            return this.nativeControl_.checked;
          }
          /** @param {boolean} checked */
          ,
          set: function set(checked) {
            this.foundation_.setChecked(checked);
          }
          /** @return {boolean} */

        }, {
          key: 'disabled',
          get: function get() {
            return this.nativeControl_.disabled;
          }
          /** @param {boolean} disabled */
          ,
          set: function set(disabled) {
            this.foundation_.setDisabled(disabled);
          }
        }]);

        return MDCSwitch;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 132 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(133);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(134);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-enable no-unused-vars */

      /**
       * @extends {MDCFoundation<!MDCSwitchAdapter>}
       */


      var MDCSwitchFoundation = function (_MDCFoundation) {
        _inherits(MDCSwitchFoundation, _MDCFoundation);

        _createClass(MDCSwitchFoundation, null, [{
          key: 'strings',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return {!MDCSwitchAdapter} */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCSwitchAdapter} */
              {
                addClass: function addClass()
                /* className: string */
                {},
                removeClass: function removeClass()
                /* className: string */
                {},
                setNativeControlChecked: function setNativeControlChecked()
                /* checked: boolean */
                {},
                setNativeControlDisabled: function setNativeControlDisabled()
                /* disabled: boolean */
                {}
              }
            );
          }
        }]);

        function MDCSwitchFoundation(adapter) {
          _classCallCheck(this, MDCSwitchFoundation);

          return _possibleConstructorReturn(this, (MDCSwitchFoundation.__proto__ || Object.getPrototypeOf(MDCSwitchFoundation)).call(this, _extends(MDCSwitchFoundation.defaultAdapter, adapter)));
        }
        /** @param {boolean} checked */


        _createClass(MDCSwitchFoundation, [{
          key: 'setChecked',
          value: function setChecked(checked) {
            this.adapter_.setNativeControlChecked(checked);
            this.updateCheckedStyling_(checked);
          }
          /** @param {boolean} disabled */

        }, {
          key: 'setDisabled',
          value: function setDisabled(disabled) {
            this.adapter_.setNativeControlDisabled(disabled);

            if (disabled) {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].DISABLED);
            } else {
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].DISABLED);
            }
          }
          /**
           * Handles the change event for the switch native control.
           * @param {!Event} evt
           */

        }, {
          key: 'handleChange',
          value: function handleChange(evt) {
            this.updateCheckedStyling_(evt.target.checked);
          }
          /**
           * Updates the styling of the switch based on its checked state.
           * @param {boolean} checked
           * @private
           */

        }, {
          key: 'updateCheckedStyling_',
          value: function updateCheckedStyling_(checked) {
            if (checked) {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].CHECKED);
            } else {
              this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].CHECKED);
            }
          }
        }]);

        return MDCSwitchFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCSwitchFoundation;
      /***/
    },
    /* 133 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint no-unused-vars: [2, {"args": "none"}] */

      /**
       * Adapter for MDC Switch. Provides an interface for managing
       * - classes
       * - dom
       *
       * Additionally, provides type information for the adapter to the Closure
       * compiler.
       *
       * Implement this adapter for your framework of choice to delegate updates to
       * the component in your framework of choice. See architecture documentation
       * for more details.
       * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
       *
       * @record
       */


      var MDCSwitchAdapter = function () {
        function MDCSwitchAdapter() {
          _classCallCheck(this, MDCSwitchAdapter);
        }

        _createClass(MDCSwitchAdapter, [{
          key: "addClass",

          /** @param {string} className */
          value: function addClass(className) {}
          /** @param {string} className */

        }, {
          key: "removeClass",
          value: function removeClass(className) {}
          /** @param {boolean} checked */

        }, {
          key: "setNativeControlChecked",
          value: function setNativeControlChecked(checked) {}
          /** @param {boolean} disabled */

        }, {
          key: "setNativeControlDisabled",
          value: function setNativeControlDisabled(disabled) {}
        }]);

        return MDCSwitchAdapter;
      }();
      /* unused harmony default export */


      var _unused_webpack_default_export = MDCSwitchAdapter;
      /***/
    },
    /* 134 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        CHECKED: 'mdc-switch--checked',
        DISABLED: 'mdc-switch--disabled'
      };
      /** @enum {string} */

      var strings = {
        NATIVE_CONTROL_SELECTOR: '.mdc-switch__native-control',
        RIPPLE_SURFACE_SELECTOR: '.mdc-switch__thumb-underlay'
      };
      /***/
    },
    /* 135 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        ACTIVE: 'mdc-tab-indicator--active',
        FADE: 'mdc-tab-indicator--fade',
        NO_TRANSITION: 'mdc-tab-indicator--no-transition'
      };
      /** @enum {string} */

      var strings = {
        CONTENT_SELECTOR: '.mdc-tab-indicator__content'
      };
      /***/
    },
    /* 136 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(25);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCTabIndicatorFoundation}
       * @final
       */


      var MDCSlidingTabIndicatorFoundation = function (_MDCTabIndicatorFound) {
        _inherits(MDCSlidingTabIndicatorFoundation, _MDCTabIndicatorFound);

        function MDCSlidingTabIndicatorFoundation() {
          _classCallCheck(this, MDCSlidingTabIndicatorFoundation);

          return _possibleConstructorReturn(this, (MDCSlidingTabIndicatorFoundation.__proto__ || Object.getPrototypeOf(MDCSlidingTabIndicatorFoundation)).apply(this, arguments));
        }

        _createClass(MDCSlidingTabIndicatorFoundation, [{
          key: 'activate',

          /** @param {!ClientRect=} previousIndicatorClientRect */
          value: function activate(previousIndicatorClientRect) {
            // Early exit if no indicator is present to handle cases where an indicator
            // may be activated without a prior indicator state
            if (!previousIndicatorClientRect) {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_0__foundation__["a"
              /* default */
              ].cssClasses.ACTIVE);
              return;
            } // This animation uses the FLIP approach. You can read more about it at the link below:
            // https://aerotwist.com/blog/flip-your-animations/
            // Calculate the dimensions based on the dimensions of the previous indicator


            var currentClientRect = this.computeContentClientRect();
            var widthDelta = previousIndicatorClientRect.width / currentClientRect.width;
            var xPosition = previousIndicatorClientRect.left - currentClientRect.left;
            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_0__foundation__["a"
            /* default */
            ].cssClasses.NO_TRANSITION);
            this.adapter_.setContentStyleProperty('transform', 'translateX(' + xPosition + 'px) scaleX(' + widthDelta + ')'); // Force repaint before updating classes and transform to ensure the transform properly takes effect

            this.computeContentClientRect();
            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_0__foundation__["a"
            /* default */
            ].cssClasses.NO_TRANSITION);
            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_0__foundation__["a"
            /* default */
            ].cssClasses.ACTIVE);
            this.adapter_.setContentStyleProperty('transform', '');
          }
        }, {
          key: 'deactivate',
          value: function deactivate() {
            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_0__foundation__["a"
            /* default */
            ].cssClasses.ACTIVE);
          }
        }]);

        return MDCSlidingTabIndicatorFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCSlidingTabIndicatorFoundation;
      /***/
    },
    /* 137 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(25);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCTabIndicatorFoundation}
       * @final
       */


      var MDCFadingTabIndicatorFoundation = function (_MDCTabIndicatorFound) {
        _inherits(MDCFadingTabIndicatorFoundation, _MDCTabIndicatorFound);

        function MDCFadingTabIndicatorFoundation() {
          _classCallCheck(this, MDCFadingTabIndicatorFoundation);

          return _possibleConstructorReturn(this, (MDCFadingTabIndicatorFoundation.__proto__ || Object.getPrototypeOf(MDCFadingTabIndicatorFoundation)).apply(this, arguments));
        }

        _createClass(MDCFadingTabIndicatorFoundation, [{
          key: 'activate',
          value: function activate() {
            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_0__foundation__["a"
            /* default */
            ].cssClasses.ACTIVE);
          }
        }, {
          key: 'deactivate',
          value: function deactivate() {
            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_0__foundation__["a"
            /* default */
            ].cssClasses.ACTIVE);
          }
        }]);

        return MDCFadingTabIndicatorFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCFadingTabIndicatorFoundation;
      /***/
    },
    /* 138 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(10);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(139);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @extends {MDCFoundation<!MDCTabAdapter>}
       * @final
       */


      var MDCTabFoundation = function (_MDCFoundation) {
        _inherits(MDCTabFoundation, _MDCFoundation);

        _createClass(MDCTabFoundation, null, [{
          key: 'cssClasses',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ];
          }
          /**
           * @see MDCTabAdapter for typing information
           * @return {!MDCTabAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCTabAdapter} */
              {
                addClass: function addClass() {},
                removeClass: function removeClass() {},
                hasClass: function hasClass() {},
                setAttr: function setAttr() {},
                activateIndicator: function activateIndicator() {},
                deactivateIndicator: function deactivateIndicator() {},
                notifyInteracted: function notifyInteracted() {},
                getOffsetLeft: function getOffsetLeft() {},
                getOffsetWidth: function getOffsetWidth() {},
                getContentOffsetLeft: function getContentOffsetLeft() {},
                getContentOffsetWidth: function getContentOffsetWidth() {},
                focus: function focus() {}
              }
            );
          }
          /** @param {!MDCTabAdapter} adapter */

        }]);

        function MDCTabFoundation(adapter) {
          _classCallCheck(this, MDCTabFoundation);
          /** @private {boolean} */


          var _this = _possibleConstructorReturn(this, (MDCTabFoundation.__proto__ || Object.getPrototypeOf(MDCTabFoundation)).call(this, _extends(MDCTabFoundation.defaultAdapter, adapter)));

          _this.focusOnActivate_ = true;
          return _this;
        }
        /**
         * Handles the "click" event
         */


        _createClass(MDCTabFoundation, [{
          key: 'handleClick',
          value: function handleClick() {
            // It's up to the parent component to keep track of the active Tab and
            // ensure we don't activate a Tab that's already active.
            this.adapter_.notifyInteracted();
          }
          /**
           * Returns the Tab's active state
           * @return {boolean}
           */

        }, {
          key: 'isActive',
          value: function isActive() {
            return this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].ACTIVE);
          }
          /**
           * Sets whether the tab should focus itself when activated
           * @param {boolean} focusOnActivate
           */

        }, {
          key: 'setFocusOnActivate',
          value: function setFocusOnActivate(focusOnActivate) {
            this.focusOnActivate_ = focusOnActivate;
          }
          /**
           * Activates the Tab
           * @param {!ClientRect=} previousIndicatorClientRect
           */

        }, {
          key: 'activate',
          value: function activate(previousIndicatorClientRect) {
            this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].ACTIVE);
            this.adapter_.setAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_SELECTED, 'true');
            this.adapter_.setAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].TABINDEX, '0');
            this.adapter_.activateIndicator(previousIndicatorClientRect);

            if (this.focusOnActivate_) {
              this.adapter_.focus();
            }
          }
          /**
           * Deactivates the Tab
           */

        }, {
          key: 'deactivate',
          value: function deactivate() {
            // Early exit
            if (!this.isActive()) {
              return;
            }

            this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].ACTIVE);
            this.adapter_.setAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].ARIA_SELECTED, 'false');
            this.adapter_.setAttr(__WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* strings */
            ].TABINDEX, '-1');
            this.adapter_.deactivateIndicator();
          }
          /**
           * Returns the dimensions of the Tab
           * @return {!MDCTabDimensions}
           */

        }, {
          key: 'computeDimensions',
          value: function computeDimensions() {
            var rootWidth = this.adapter_.getOffsetWidth();
            var rootLeft = this.adapter_.getOffsetLeft();
            var contentWidth = this.adapter_.getContentOffsetWidth();
            var contentLeft = this.adapter_.getContentOffsetLeft();
            return {
              rootLeft: rootLeft,
              rootRight: rootLeft + rootWidth,
              contentLeft: rootLeft + contentLeft,
              contentRight: rootLeft + contentLeft + contentWidth
            };
          }
        }]);

        return MDCTabFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCTabFoundation;
      /***/
    },
    /* 139 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var cssClasses = {
        ACTIVE: 'mdc-tab--active'
      };
      /** @enum {string} */

      var strings = {
        ARIA_SELECTED: 'aria-selected',
        RIPPLE_SELECTOR: '.mdc-tab__ripple',
        CONTENT_SELECTOR: '.mdc-tab__content',
        TAB_INDICATOR_SELECTOR: '.mdc-tab-indicator',
        TABINDEX: 'tabIndex',
        INTERACTED_EVENT: 'MDCTab:interacted'
      };
      /***/
    },
    /* 140 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCTabBar", function () {
        return MDCTabBar;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__material_tab_index__ = __webpack_require__(53);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__material_tab_scroller_index__ = __webpack_require__(56);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__adapter__ = __webpack_require__(58);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__foundation__ = __webpack_require__(146);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCTabBarFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_4__foundation__["a"];
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var tabIdCounter = 0;
      /**
       * @extends {MDCComponent<!MDCTabBarFoundation>}
       * @final
       */

      var MDCTabBar = function (_MDCComponent) {
        _inherits(MDCTabBar, _MDCComponent);
        /**
         * @param {...?} args
         */


        function MDCTabBar() {
          var _ref;

          _classCallCheck(this, MDCTabBar);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {!Array<!MDCTab>} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCTabBar.__proto__ || Object.getPrototypeOf(MDCTabBar)).call.apply(_ref, [this].concat(args)));

          _this.tabList_;
          /** @private {?MDCTabScroller} */

          _this.tabScroller_;
          /** @private {?function(?Event): undefined} */

          _this.handleTabInteraction_;
          /** @private {?function(?Event): undefined} */

          _this.handleKeyDown_;
          return _this;
        }
        /**
         * @param {!Element} root
         * @return {!MDCTabBar}
         */


        _createClass(MDCTabBar, [{
          key: 'initialize',

          /**
           * @param {(function(!Element): !MDCTab)=} tabFactory A function which creates a new MDCTab
           * @param {(function(!Element): !MDCTabScroller)=} tabScrollerFactory A function which creates a new MDCTabScroller
           */
          value: function initialize() {
            var tabFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_1__material_tab_index__["MDCTab"](el);
            };
            var tabScrollerFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_2__material_tab_scroller_index__["MDCTabScroller"](el);
            };
            this.tabList_ = this.instantiateTabs_(tabFactory);
            this.tabScroller_ = this.instantiateTabScroller_(tabScrollerFactory);
          }
        }, {
          key: 'initialSyncWithDOM',
          value: function initialSyncWithDOM() {
            var _this2 = this;

            this.handleTabInteraction_ = function (evt) {
              return _this2.foundation_.handleTabInteraction(evt);
            };

            this.handleKeyDown_ = function (evt) {
              return _this2.foundation_.handleKeyDown(evt);
            };

            this.root_.addEventListener(__WEBPACK_IMPORTED_MODULE_1__material_tab_index__["MDCTabFoundation"].strings.INTERACTED_EVENT, this.handleTabInteraction_);
            this.root_.addEventListener('keydown', this.handleKeyDown_);

            for (var i = 0; i < this.tabList_.length; i++) {
              if (this.tabList_[i].active) {
                this.scrollIntoView(i);
                break;
              }
            }
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            _get(MDCTabBar.prototype.__proto__ || Object.getPrototypeOf(MDCTabBar.prototype), 'destroy', this).call(this);

            this.root_.removeEventListener(__WEBPACK_IMPORTED_MODULE_1__material_tab_index__["MDCTabFoundation"].strings.INTERACTED_EVENT, this.handleTabInteraction_);
            this.root_.removeEventListener('keydown', this.handleKeyDown_);
            this.tabList_.forEach(function (tab) {
              return tab.destroy();
            });
            this.tabScroller_.destroy();
          }
          /**
           * @return {!MDCTabBarFoundation}
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this3 = this;

            return new __WEBPACK_IMPORTED_MODULE_4__foundation__["a"
            /* default */
            ](
            /** @type {!MDCTabBarAdapter} */
            {
              scrollTo: function scrollTo(scrollX) {
                return _this3.tabScroller_.scrollTo(scrollX);
              },
              incrementScroll: function incrementScroll(scrollXIncrement) {
                return _this3.tabScroller_.incrementScroll(scrollXIncrement);
              },
              getScrollPosition: function getScrollPosition() {
                return _this3.tabScroller_.getScrollPosition();
              },
              getScrollContentWidth: function getScrollContentWidth() {
                return _this3.tabScroller_.getScrollContentWidth();
              },
              getOffsetWidth: function getOffsetWidth() {
                return _this3.root_.offsetWidth;
              },
              isRTL: function isRTL() {
                return window.getComputedStyle(_this3.root_).getPropertyValue('direction') === 'rtl';
              },
              setActiveTab: function setActiveTab(index) {
                return _this3.foundation_.activateTab(index);
              },
              activateTabAtIndex: function activateTabAtIndex(index, clientRect) {
                return _this3.tabList_[index].activate(clientRect);
              },
              deactivateTabAtIndex: function deactivateTabAtIndex(index) {
                return _this3.tabList_[index].deactivate();
              },
              focusTabAtIndex: function focusTabAtIndex(index) {
                return _this3.tabList_[index].focus();
              },
              getTabIndicatorClientRectAtIndex: function getTabIndicatorClientRectAtIndex(index) {
                return _this3.tabList_[index].computeIndicatorClientRect();
              },
              getTabDimensionsAtIndex: function getTabDimensionsAtIndex(index) {
                return _this3.tabList_[index].computeDimensions();
              },
              getPreviousActiveTabIndex: function getPreviousActiveTabIndex() {
                for (var i = 0; i < _this3.tabList_.length; i++) {
                  if (_this3.tabList_[i].active) {
                    return i;
                  }
                }

                return -1;
              },
              getFocusedTabIndex: function getFocusedTabIndex() {
                var tabElements = _this3.getTabElements_();

                var activeElement = document.activeElement;
                return tabElements.indexOf(activeElement);
              },
              getIndexOfTabById: function getIndexOfTabById(id) {
                for (var i = 0; i < _this3.tabList_.length; i++) {
                  if (_this3.tabList_[i].id === id) {
                    return i;
                  }
                }

                return -1;
              },
              getTabListLength: function getTabListLength() {
                return _this3.tabList_.length;
              },
              notifyTabActivated: function notifyTabActivated(index) {
                return _this3.emit(__WEBPACK_IMPORTED_MODULE_4__foundation__["a"
                /* default */
                ].strings.TAB_ACTIVATED_EVENT, {
                  index: index
                }, true);
              }
            });
          }
          /**
           * Activates the tab at the given index
           * @param {number} index The index of the tab
           */

        }, {
          key: 'activateTab',
          value: function activateTab(index) {
            this.foundation_.activateTab(index);
          }
          /**
           * Scrolls the tab at the given index into view
           * @param {number} index THe index of the tab
           */

        }, {
          key: 'scrollIntoView',
          value: function scrollIntoView(index) {
            this.foundation_.scrollIntoView(index);
          }
          /**
           * Returns all the tab elements in a nice clean array
           * @return {!Array<!Element>}
           * @private
           */

        }, {
          key: 'getTabElements_',
          value: function getTabElements_() {
            return [].slice.call(this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__foundation__["a"
            /* default */
            ].strings.TAB_SELECTOR));
          }
          /**
           * Instantiates tab components on all child tab elements
           * @param {(function(!Element): !MDCTab)} tabFactory
           * @return {!Array<!MDCTab>}
           * @private
           */

        }, {
          key: 'instantiateTabs_',
          value: function instantiateTabs_(tabFactory) {
            return this.getTabElements_().map(function (el) {
              el.id = el.id || 'mdc-tab-' + ++tabIdCounter;
              return tabFactory(el);
            });
          }
          /**
           * Instantiates tab scroller component on the child tab scroller element
           * @param {(function(!Element): !MDCTabScroller)} tabScrollerFactory
           * @return {?MDCTabScroller}
           * @private
           */

        }, {
          key: 'instantiateTabScroller_',
          value: function instantiateTabScroller_(tabScrollerFactory) {
            var tabScrollerElement = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__foundation__["a"
            /* default */
            ].strings.TAB_SCROLLER_SELECTOR);

            if (tabScrollerElement) {
              return tabScrollerFactory(tabScrollerElement);
            }

            return null;
          }
        }, {
          key: 'focusOnActivate',
          set: function set(focusOnActivate) {
            this.tabList_.forEach(function (tab) {
              return tab.focusOnActivate = focusOnActivate;
            });
          }
        }, {
          key: 'useAutomaticActivation',
          set: function set(useAutomaticActivation) {
            this.foundation_.setUseAutomaticActivation(useAutomaticActivation);
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCTabBar(root);
          }
        }]);

        return MDCTabBar;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 141 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(57);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__adapter__ = __webpack_require__(4);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__rtl_scroller__ = __webpack_require__(11);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__rtl_default_scroller__ = __webpack_require__(142);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__rtl_negative_scroller__ = __webpack_require__(143);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__rtl_reverse_scroller__ = __webpack_require__(144);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @extends {MDCFoundation<!MDCTabScrollerAdapter>}
       * @final
       */


      var MDCTabScrollerFoundation = function (_MDCFoundation) {
        _inherits(MDCTabScrollerFoundation, _MDCFoundation);

        _createClass(MDCTabScrollerFoundation, null, [{
          key: 'cssClasses',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_1__constants__["a"
            /* cssClasses */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_1__constants__["b"
            /* strings */
            ];
          }
          /**
           * @see MDCTabScrollerAdapter for typing information
           * @return {!MDCTabScrollerAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCTabScrollerAdapter} */
              {
                eventTargetMatchesSelector: function eventTargetMatchesSelector() {},
                addClass: function addClass() {},
                removeClass: function removeClass() {},
                addScrollAreaClass: function addScrollAreaClass() {},
                setScrollAreaStyleProperty: function setScrollAreaStyleProperty() {},
                setScrollContentStyleProperty: function setScrollContentStyleProperty() {},
                getScrollContentStyleValue: function getScrollContentStyleValue() {},
                setScrollAreaScrollLeft: function setScrollAreaScrollLeft() {},
                getScrollAreaScrollLeft: function getScrollAreaScrollLeft() {},
                getScrollContentOffsetWidth: function getScrollContentOffsetWidth() {},
                getScrollAreaOffsetWidth: function getScrollAreaOffsetWidth() {},
                computeScrollAreaClientRect: function computeScrollAreaClientRect() {},
                computeScrollContentClientRect: function computeScrollContentClientRect() {},
                computeHorizontalScrollbarHeight: function computeHorizontalScrollbarHeight() {}
              }
            );
          }
          /** @param {!MDCTabScrollerAdapter} adapter */

        }]);

        function MDCTabScrollerFoundation(adapter) {
          _classCallCheck(this, MDCTabScrollerFoundation);
          /**
           * This boolean controls whether we should handle the transitionend and interaction events during the animation.
           * @private {boolean}
           */


          var _this = _possibleConstructorReturn(this, (MDCTabScrollerFoundation.__proto__ || Object.getPrototypeOf(MDCTabScrollerFoundation)).call(this, _extends(MDCTabScrollerFoundation.defaultAdapter, adapter)));

          _this.isAnimating_ = false;
          /**
           * The MDCTabScrollerRTL instance varies per browser and allows us to encapsulate the peculiar browser behavior
           * of RTL scrolling in it's own class.
           * @private {?MDCTabScrollerRTL}
           */

          _this.rtlScrollerInstance_;
          return _this;
        }

        _createClass(MDCTabScrollerFoundation, [{
          key: 'init',
          value: function init() {
            // Compute horizontal scrollbar height on scroller with overflow initially hidden, then update overflow to scroll
            // and immediately adjust bottom margin to avoid the scrollbar initially appearing before JS runs.
            var horizontalScrollbarHeight = this.adapter_.computeHorizontalScrollbarHeight();
            this.adapter_.setScrollAreaStyleProperty('margin-bottom', -horizontalScrollbarHeight + 'px');
            this.adapter_.addScrollAreaClass(MDCTabScrollerFoundation.cssClasses.SCROLL_AREA_SCROLL);
          }
          /**
           * Computes the current visual scroll position
           * @return {number}
           */

        }, {
          key: 'getScrollPosition',
          value: function getScrollPosition() {
            if (this.isRTL_()) {
              return this.computeCurrentScrollPositionRTL_();
            }

            var currentTranslateX = this.calculateCurrentTranslateX_();
            var scrollLeft = this.adapter_.getScrollAreaScrollLeft();
            return scrollLeft - currentTranslateX;
          }
          /**
           * Handles interaction events that occur during transition
           */

        }, {
          key: 'handleInteraction',
          value: function handleInteraction() {
            // Early exit if we aren't animating
            if (!this.isAnimating_) {
              return;
            } // Prevent other event listeners from handling this event


            this.stopScrollAnimation_();
          }
          /**
           * Handles the transitionend event
           * @param {!Event} evt
           */

        }, {
          key: 'handleTransitionEnd',
          value: function handleTransitionEnd(evt) {
            // Early exit if we aren't animating or the event was triggered by a different element.
            if (!this.isAnimating_ || !this.adapter_.eventTargetMatchesSelector(evt.target, MDCTabScrollerFoundation.strings.CONTENT_SELECTOR)) {
              return;
            }

            this.isAnimating_ = false;
            this.adapter_.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);
          }
          /**
           * Increment the scroll value by the scrollXIncrement
           * @param {number} scrollXIncrement The value by which to increment the scroll position
           */

        }, {
          key: 'incrementScroll',
          value: function incrementScroll(scrollXIncrement) {
            // Early exit for non-operational increment values
            if (scrollXIncrement === 0) {
              return;
            }

            if (this.isRTL_()) {
              return this.incrementScrollRTL_(scrollXIncrement);
            }

            this.incrementScroll_(scrollXIncrement);
          }
          /**
           * Scrolls to the given scrollX value
           * @param {number} scrollX
           */

        }, {
          key: 'scrollTo',
          value: function scrollTo(scrollX) {
            if (this.isRTL_()) {
              return this.scrollToRTL_(scrollX);
            }

            this.scrollTo_(scrollX);
          }
          /**
           * Returns the appropriate version of the MDCTabScrollerRTL
           * @return {!MDCTabScrollerRTL}
           */

        }, {
          key: 'getRTLScroller',
          value: function getRTLScroller() {
            if (!this.rtlScrollerInstance_) {
              this.rtlScrollerInstance_ = this.rtlScrollerFactory_();
            }

            return this.rtlScrollerInstance_;
          }
          /**
           * Returns the translateX value from a CSS matrix transform function string
           * @return {number}
           * @private
           */

        }, {
          key: 'calculateCurrentTranslateX_',
          value: function calculateCurrentTranslateX_() {
            var transformValue = this.adapter_.getScrollContentStyleValue('transform'); // Early exit if no transform is present

            if (transformValue === 'none') {
              return 0;
            } // The transform value comes back as a matrix transformation in the form
            // of `matrix(a, b, c, d, tx, ty)`. We only care about tx (translateX) so
            // we're going to grab all the parenthesized values, strip out tx, and
            // parse it.


            var results = /\((.+)\)/.exec(transformValue)[1];
            var parts = results.split(',');
            return parseFloat(parts[4]);
          }
          /**
           * Calculates a safe scroll value that is > 0 and < the max scroll value
           * @param {number} scrollX The distance to scroll
           * @return {number}
           * @private
           */

        }, {
          key: 'clampScrollValue_',
          value: function clampScrollValue_(scrollX) {
            var edges = this.calculateScrollEdges_();
            return Math.min(Math.max(edges.left, scrollX), edges.right);
          }
          /**
           * @return {number}
           * @private
           */

        }, {
          key: 'computeCurrentScrollPositionRTL_',
          value: function computeCurrentScrollPositionRTL_() {
            var translateX = this.calculateCurrentTranslateX_();
            return this.getRTLScroller().getScrollPositionRTL(translateX);
          }
          /**
           * @return {!MDCTabScrollerHorizontalEdges}
           * @private
           */

        }, {
          key: 'calculateScrollEdges_',
          value: function calculateScrollEdges_() {
            var contentWidth = this.adapter_.getScrollContentOffsetWidth();
            var rootWidth = this.adapter_.getScrollAreaOffsetWidth();
            return (
              /** @type {!MDCTabScrollerHorizontalEdges} */
              {
                left: 0,
                right: contentWidth - rootWidth
              }
            );
          }
          /**
           * Internal scroll method
           * @param {number} scrollX The new scroll position
           * @private
           */

        }, {
          key: 'scrollTo_',
          value: function scrollTo_(scrollX) {
            var currentScrollX = this.getScrollPosition();
            var safeScrollX = this.clampScrollValue_(scrollX);
            var scrollDelta = safeScrollX - currentScrollX;
            this.animate_(
            /** @type {!MDCTabScrollerAnimation} */
            {
              finalScrollPosition: safeScrollX,
              scrollDelta: scrollDelta
            });
          }
          /**
           * Internal RTL scroll method
           * @param {number} scrollX The new scroll position
           * @private
           */

        }, {
          key: 'scrollToRTL_',
          value: function scrollToRTL_(scrollX) {
            var animation = this.getRTLScroller().scrollToRTL(scrollX);
            this.animate_(animation);
          }
          /**
           * Internal increment scroll method
           * @param {number} scrollX The new scroll position increment
           * @private
           */

        }, {
          key: 'incrementScroll_',
          value: function incrementScroll_(scrollX) {
            var currentScrollX = this.getScrollPosition();
            var targetScrollX = scrollX + currentScrollX;
            var safeScrollX = this.clampScrollValue_(targetScrollX);
            var scrollDelta = safeScrollX - currentScrollX;
            this.animate_(
            /** @type {!MDCTabScrollerAnimation} */
            {
              finalScrollPosition: safeScrollX,
              scrollDelta: scrollDelta
            });
          }
          /**
           * Internal incremenet scroll RTL method
           * @param {number} scrollX The new scroll position RTL increment
           * @private
           */

        }, {
          key: 'incrementScrollRTL_',
          value: function incrementScrollRTL_(scrollX) {
            var animation = this.getRTLScroller().incrementScrollRTL(scrollX);
            this.animate_(animation);
          }
          /**
           * Animates the tab scrolling
           * @param {!MDCTabScrollerAnimation} animation The animation to apply
           * @private
           */

        }, {
          key: 'animate_',
          value: function animate_(animation) {
            var _this2 = this; // Early exit if translateX is 0, which means there's no animation to perform


            if (animation.scrollDelta === 0) {
              return;
            }

            this.stopScrollAnimation_(); // This animation uses the FLIP approach.
            // Read more here: https://aerotwist.com/blog/flip-your-animations/

            this.adapter_.setScrollAreaScrollLeft(animation.finalScrollPosition);
            this.adapter_.setScrollContentStyleProperty('transform', 'translateX(' + animation.scrollDelta + 'px)'); // Force repaint

            this.adapter_.computeScrollAreaClientRect();
            requestAnimationFrame(function () {
              _this2.adapter_.addClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);

              _this2.adapter_.setScrollContentStyleProperty('transform', 'none');
            });
            this.isAnimating_ = true;
          }
          /**
           * Stops scroll animation
           * @private
           */

        }, {
          key: 'stopScrollAnimation_',
          value: function stopScrollAnimation_() {
            this.isAnimating_ = false;
            var currentScrollPosition = this.getAnimatingScrollPosition_();
            this.adapter_.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);
            this.adapter_.setScrollContentStyleProperty('transform', 'translateX(0px)');
            this.adapter_.setScrollAreaScrollLeft(currentScrollPosition);
          }
          /**
           * Gets the current scroll position during animation
           * @return {number}
           * @private
           */

        }, {
          key: 'getAnimatingScrollPosition_',
          value: function getAnimatingScrollPosition_() {
            var currentTranslateX = this.calculateCurrentTranslateX_();
            var scrollLeft = this.adapter_.getScrollAreaScrollLeft();

            if (this.isRTL_()) {
              return this.getRTLScroller().getAnimatingScrollPosition(scrollLeft, currentTranslateX);
            }

            return scrollLeft - currentTranslateX;
          }
          /**
           * Determines the RTL Scroller to use
           * @return {!MDCTabScrollerRTL}
           * @private
           */

        }, {
          key: 'rtlScrollerFactory_',
          value: function rtlScrollerFactory_() {
            // Browsers have three different implementations of scrollLeft in RTL mode,
            // dependent on the browser. The behavior is based off the max LTR
            // scrollleft value and 0.
            //
            // * Default scrolling in RTL *
            //    - Left-most value: 0
            //    - Right-most value: Max LTR scrollLeft value
            //
            // * Negative scrolling in RTL *
            //    - Left-most value: Negated max LTR scrollLeft value
            //    - Right-most value: 0
            //
            // * Reverse scrolling in RTL *
            //    - Left-most value: Max LTR scrollLeft value
            //    - Right-most value: 0
            //
            // We use those principles below to determine which RTL scrollLeft
            // behavior is implemented in the current browser.
            var initialScrollLeft = this.adapter_.getScrollAreaScrollLeft();
            this.adapter_.setScrollAreaScrollLeft(initialScrollLeft - 1);
            var newScrollLeft = this.adapter_.getScrollAreaScrollLeft(); // If the newScrollLeft value is negative,then we know that the browser has
            // implemented negative RTL scrolling, since all other implementations have
            // only positive values.

            if (newScrollLeft < 0) {
              // Undo the scrollLeft test check
              this.adapter_.setScrollAreaScrollLeft(initialScrollLeft);
              return new __WEBPACK_IMPORTED_MODULE_5__rtl_negative_scroller__["a"
              /* default */
              ](this.adapter_);
            }

            var rootClientRect = this.adapter_.computeScrollAreaClientRect();
            var contentClientRect = this.adapter_.computeScrollContentClientRect();
            var rightEdgeDelta = Math.round(contentClientRect.right - rootClientRect.right); // Undo the scrollLeft test check

            this.adapter_.setScrollAreaScrollLeft(initialScrollLeft); // By calculating the clientRect of the root element and the clientRect of
            // the content element, we can determine how much the scroll value changed
            // when we performed the scrollLeft subtraction above.

            if (rightEdgeDelta === newScrollLeft) {
              return new __WEBPACK_IMPORTED_MODULE_6__rtl_reverse_scroller__["a"
              /* default */
              ](this.adapter_);
            }

            return new __WEBPACK_IMPORTED_MODULE_4__rtl_default_scroller__["a"
            /* default */
            ](this.adapter_);
          }
          /**
           * @return {boolean}
           * @private
           */

        }, {
          key: 'isRTL_',
          value: function isRTL_() {
            return this.adapter_.getScrollContentStyleValue('direction') === 'rtl';
          }
        }]);

        return MDCTabScrollerFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCTabScrollerFoundation;
      /***/
    },
    /* 142 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__rtl_scroller__ = __webpack_require__(11);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(4);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @extends {MDCTabScrollerRTL}
       * @final
       */


      var MDCTabScrollerRTLDefault = function (_MDCTabScrollerRTL) {
        _inherits(MDCTabScrollerRTLDefault, _MDCTabScrollerRTL);

        function MDCTabScrollerRTLDefault() {
          _classCallCheck(this, MDCTabScrollerRTLDefault);

          return _possibleConstructorReturn(this, (MDCTabScrollerRTLDefault.__proto__ || Object.getPrototypeOf(MDCTabScrollerRTLDefault)).apply(this, arguments));
        }

        _createClass(MDCTabScrollerRTLDefault, [{
          key: 'getScrollPositionRTL',

          /**
           * @return {number}
           */
          value: function getScrollPositionRTL() {
            var currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();

            var _calculateScrollEdges = this.calculateScrollEdges_(),
                right = _calculateScrollEdges.right; // Scroll values on most browsers are ints instead of floats so we round


            return Math.round(right - currentScrollLeft);
          }
          /**
           * @param {number} scrollX
           * @return {!MDCTabScrollerAnimation}
           */

        }, {
          key: 'scrollToRTL',
          value: function scrollToRTL(scrollX) {
            var edges = this.calculateScrollEdges_();
            var currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();
            var clampedScrollLeft = this.clampScrollValue_(edges.right - scrollX);
            return (
              /** @type {!MDCTabScrollerAnimation} */
              {
                finalScrollPosition: clampedScrollLeft,
                scrollDelta: clampedScrollLeft - currentScrollLeft
              }
            );
          }
          /**
           * @param {number} scrollX
           * @return {!MDCTabScrollerAnimation}
           */

        }, {
          key: 'incrementScrollRTL',
          value: function incrementScrollRTL(scrollX) {
            var currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();
            var clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);
            return (
              /** @type {!MDCTabScrollerAnimation} */
              {
                finalScrollPosition: clampedScrollLeft,
                scrollDelta: clampedScrollLeft - currentScrollLeft
              }
            );
          }
          /**
           * @param {number} scrollX
           * @return {number}
           */

        }, {
          key: 'getAnimatingScrollPosition',
          value: function getAnimatingScrollPosition(scrollX) {
            return scrollX;
          }
          /**
           * @return {!MDCTabScrollerHorizontalEdges}
           * @private
           */

        }, {
          key: 'calculateScrollEdges_',
          value: function calculateScrollEdges_() {
            var contentWidth = this.adapter_.getScrollContentOffsetWidth();
            var rootWidth = this.adapter_.getScrollAreaOffsetWidth();
            return (
              /** @type {!MDCTabScrollerHorizontalEdges} */
              {
                left: 0,
                right: contentWidth - rootWidth
              }
            );
          }
          /**
           * @param {number} scrollX
           * @return {number}
           * @private
           */

        }, {
          key: 'clampScrollValue_',
          value: function clampScrollValue_(scrollX) {
            var edges = this.calculateScrollEdges_();
            return Math.min(Math.max(edges.left, scrollX), edges.right);
          }
        }]);

        return MDCTabScrollerRTLDefault;
      }(__WEBPACK_IMPORTED_MODULE_0__rtl_scroller__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCTabScrollerRTLDefault;
      /***/
    },
    /* 143 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__rtl_scroller__ = __webpack_require__(11);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(4);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @extends {MDCTabScrollerRTL}
       * @final
       */


      var MDCTabScrollerRTLNegative = function (_MDCTabScrollerRTL) {
        _inherits(MDCTabScrollerRTLNegative, _MDCTabScrollerRTL);

        function MDCTabScrollerRTLNegative() {
          _classCallCheck(this, MDCTabScrollerRTLNegative);

          return _possibleConstructorReturn(this, (MDCTabScrollerRTLNegative.__proto__ || Object.getPrototypeOf(MDCTabScrollerRTLNegative)).apply(this, arguments));
        }

        _createClass(MDCTabScrollerRTLNegative, [{
          key: 'getScrollPositionRTL',

          /**
           * @param {number} translateX The current translateX position
           * @return {number}
           */
          value: function getScrollPositionRTL(translateX) {
            var currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();
            return Math.round(translateX - currentScrollLeft);
          }
          /**
           * @param {number} scrollX
           * @return {!MDCTabScrollerAnimation}
           */

        }, {
          key: 'scrollToRTL',
          value: function scrollToRTL(scrollX) {
            var currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();
            var clampedScrollLeft = this.clampScrollValue_(-scrollX);
            return (
              /** @type {!MDCTabScrollerAnimation} */
              {
                finalScrollPosition: clampedScrollLeft,
                scrollDelta: clampedScrollLeft - currentScrollLeft
              }
            );
          }
          /**
           * @param {number} scrollX
           * @return {!MDCTabScrollerAnimation}
           */

        }, {
          key: 'incrementScrollRTL',
          value: function incrementScrollRTL(scrollX) {
            var currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();
            var clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);
            return (
              /** @type {!MDCTabScrollerAnimation} */
              {
                finalScrollPosition: clampedScrollLeft,
                scrollDelta: clampedScrollLeft - currentScrollLeft
              }
            );
          }
          /**
           * @param {number} scrollX
           * @param {number} translateX
           * @return {number}
           */

        }, {
          key: 'getAnimatingScrollPosition',
          value: function getAnimatingScrollPosition(scrollX, translateX) {
            return scrollX - translateX;
          }
          /**
           * @return {!MDCTabScrollerHorizontalEdges}
           * @private
           */

        }, {
          key: 'calculateScrollEdges_',
          value: function calculateScrollEdges_() {
            var contentWidth = this.adapter_.getScrollContentOffsetWidth();
            var rootWidth = this.adapter_.getScrollAreaOffsetWidth();
            return (
              /** @type {!MDCTabScrollerHorizontalEdges} */
              {
                left: rootWidth - contentWidth,
                right: 0
              }
            );
          }
          /**
           * @param {number} scrollX
           * @return {number}
           * @private
           */

        }, {
          key: 'clampScrollValue_',
          value: function clampScrollValue_(scrollX) {
            var edges = this.calculateScrollEdges_();
            return Math.max(Math.min(edges.right, scrollX), edges.left);
          }
        }]);

        return MDCTabScrollerRTLNegative;
      }(__WEBPACK_IMPORTED_MODULE_0__rtl_scroller__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCTabScrollerRTLNegative;
      /***/
    },
    /* 144 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__rtl_scroller__ = __webpack_require__(11);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(4);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @extends {MDCTabScrollerRTL}
       * @final
       */


      var MDCTabScrollerRTLReverse = function (_MDCTabScrollerRTL) {
        _inherits(MDCTabScrollerRTLReverse, _MDCTabScrollerRTL);

        function MDCTabScrollerRTLReverse() {
          _classCallCheck(this, MDCTabScrollerRTLReverse);

          return _possibleConstructorReturn(this, (MDCTabScrollerRTLReverse.__proto__ || Object.getPrototypeOf(MDCTabScrollerRTLReverse)).apply(this, arguments));
        }

        _createClass(MDCTabScrollerRTLReverse, [{
          key: 'getScrollPositionRTL',

          /**
           * @param {number} translateX
           * @return {number}
           */
          value: function getScrollPositionRTL(translateX) {
            var currentScrollLeft = this.adapter_.getScrollAreaScrollLeft(); // Scroll values on most browsers are ints instead of floats so we round

            return Math.round(currentScrollLeft - translateX);
          }
          /**
           * @param {number} scrollX
           * @return {!MDCTabScrollerAnimation}
           */

        }, {
          key: 'scrollToRTL',
          value: function scrollToRTL(scrollX) {
            var currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();
            var clampedScrollLeft = this.clampScrollValue_(scrollX);
            return (
              /** @type {!MDCTabScrollerAnimation} */
              {
                finalScrollPosition: clampedScrollLeft,
                scrollDelta: currentScrollLeft - clampedScrollLeft
              }
            );
          }
          /**
           * @param {number} scrollX
           * @return {!MDCTabScrollerAnimation}
           */

        }, {
          key: 'incrementScrollRTL',
          value: function incrementScrollRTL(scrollX) {
            var currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();
            var clampedScrollLeft = this.clampScrollValue_(currentScrollLeft + scrollX);
            return (
              /** @type {!MDCTabScrollerAnimation} */
              {
                finalScrollPosition: clampedScrollLeft,
                scrollDelta: currentScrollLeft - clampedScrollLeft
              }
            );
          }
          /**
           * @param {number} scrollX
           * @return {number}
           */

        }, {
          key: 'getAnimatingScrollPosition',
          value: function getAnimatingScrollPosition(scrollX, translateX) {
            return scrollX + translateX;
          }
          /**
           * @return {!MDCTabScrollerHorizontalEdges}
           * @private
           */

        }, {
          key: 'calculateScrollEdges_',
          value: function calculateScrollEdges_() {
            var contentWidth = this.adapter_.getScrollContentOffsetWidth();
            var rootWidth = this.adapter_.getScrollAreaOffsetWidth();
            return (
              /** @type {!MDCTabScrollerHorizontalEdges} */
              {
                left: contentWidth - rootWidth,
                right: 0
              }
            );
          }
          /**
           * @param {number} scrollX
           * @return {number}
           * @private
           */

        }, {
          key: 'clampScrollValue_',
          value: function clampScrollValue_(scrollX) {
            var edges = this.calculateScrollEdges_();
            return Math.min(Math.max(edges.right, scrollX), edges.left);
          }
        }]);

        return MDCTabScrollerRTLReverse;
      }(__WEBPACK_IMPORTED_MODULE_0__rtl_scroller__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCTabScrollerRTLReverse;
      /***/
    },
    /* 145 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "computeHorizontalScrollbarHeight", function () {
        return computeHorizontalScrollbarHeight;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getMatchesProperty", function () {
        return getMatchesProperty;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(57);
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * Stores result from computeHorizontalScrollbarHeight to avoid redundant processing.
       * @private {number|undefined}
       */


      var horizontalScrollbarHeight_ = void 0;
      /**
       * Computes the height of browser-rendered horizontal scrollbars using a self-created test element.
       * May return 0 (e.g. on OS X browsers under default configuration).
       * @param {!Document} documentObj
       * @param {boolean=} shouldCacheResult
       * @return {number}
       */

      function computeHorizontalScrollbarHeight(documentObj) {
        var shouldCacheResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

        if (shouldCacheResult && typeof horizontalScrollbarHeight_ !== 'undefined') {
          return horizontalScrollbarHeight_;
        }

        var el = documentObj.createElement('div');
        el.classList.add(__WEBPACK_IMPORTED_MODULE_0__constants__["a"
        /* cssClasses */
        ].SCROLL_TEST);
        documentObj.body.appendChild(el);
        var horizontalScrollbarHeight = el.offsetHeight - el.clientHeight;
        documentObj.body.removeChild(el);

        if (shouldCacheResult) {
          horizontalScrollbarHeight_ = horizontalScrollbarHeight;
        }

        return horizontalScrollbarHeight;
      }
      /**
       * @param {!Object} HTMLElementPrototype
       * @return {string}
       */


      function getMatchesProperty(HTMLElementPrototype) {
        return ['msMatchesSelector', 'matches'].filter(function (p) {
          return p in HTMLElementPrototype;
        }).pop();
      }
      /***/

    },
    /* 146 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(147);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__adapter__ = __webpack_require__(58);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__material_tab_adapter__ = __webpack_require__(10);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @type {Set<string>}
       */


      var ACCEPTABLE_KEYS = new Set(); // IE11 has no support for new Set with iterable so we need to initialize this by hand

      ACCEPTABLE_KEYS.add(__WEBPACK_IMPORTED_MODULE_1__constants__["b"
      /* strings */
      ].ARROW_LEFT_KEY);
      ACCEPTABLE_KEYS.add(__WEBPACK_IMPORTED_MODULE_1__constants__["b"
      /* strings */
      ].ARROW_RIGHT_KEY);
      ACCEPTABLE_KEYS.add(__WEBPACK_IMPORTED_MODULE_1__constants__["b"
      /* strings */
      ].END_KEY);
      ACCEPTABLE_KEYS.add(__WEBPACK_IMPORTED_MODULE_1__constants__["b"
      /* strings */
      ].HOME_KEY);
      ACCEPTABLE_KEYS.add(__WEBPACK_IMPORTED_MODULE_1__constants__["b"
      /* strings */
      ].ENTER_KEY);
      ACCEPTABLE_KEYS.add(__WEBPACK_IMPORTED_MODULE_1__constants__["b"
      /* strings */
      ].SPACE_KEY);
      /**
       * @type {Map<number, string>}
       */

      var KEYCODE_MAP = new Map(); // IE11 has no support for new Map with iterable so we need to initialize this by hand

      KEYCODE_MAP.set(__WEBPACK_IMPORTED_MODULE_1__constants__["a"
      /* numbers */
      ].ARROW_LEFT_KEYCODE, __WEBPACK_IMPORTED_MODULE_1__constants__["b"
      /* strings */
      ].ARROW_LEFT_KEY);
      KEYCODE_MAP.set(__WEBPACK_IMPORTED_MODULE_1__constants__["a"
      /* numbers */
      ].ARROW_RIGHT_KEYCODE, __WEBPACK_IMPORTED_MODULE_1__constants__["b"
      /* strings */
      ].ARROW_RIGHT_KEY);
      KEYCODE_MAP.set(__WEBPACK_IMPORTED_MODULE_1__constants__["a"
      /* numbers */
      ].END_KEYCODE, __WEBPACK_IMPORTED_MODULE_1__constants__["b"
      /* strings */
      ].END_KEY);
      KEYCODE_MAP.set(__WEBPACK_IMPORTED_MODULE_1__constants__["a"
      /* numbers */
      ].HOME_KEYCODE, __WEBPACK_IMPORTED_MODULE_1__constants__["b"
      /* strings */
      ].HOME_KEY);
      KEYCODE_MAP.set(__WEBPACK_IMPORTED_MODULE_1__constants__["a"
      /* numbers */
      ].ENTER_KEYCODE, __WEBPACK_IMPORTED_MODULE_1__constants__["b"
      /* strings */
      ].ENTER_KEY);
      KEYCODE_MAP.set(__WEBPACK_IMPORTED_MODULE_1__constants__["a"
      /* numbers */
      ].SPACE_KEYCODE, __WEBPACK_IMPORTED_MODULE_1__constants__["b"
      /* strings */
      ].SPACE_KEY);
      /**
       * @extends {MDCFoundation<!MDCTabBarAdapter>}
       * @final
       */

      var MDCTabBarFoundation = function (_MDCFoundation) {
        _inherits(MDCTabBarFoundation, _MDCFoundation);

        _createClass(MDCTabBarFoundation, null, [{
          key: 'strings',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_1__constants__["b"
            /* strings */
            ];
          }
          /** @return enum {number} */

        }, {
          key: 'numbers',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_1__constants__["a"
            /* numbers */
            ];
          }
          /**
           * @see MDCTabBarAdapter for typing information
           * @return {!MDCTabBarAdapter}
           */

        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCTabBarAdapter} */
              {
                scrollTo: function scrollTo() {},
                incrementScroll: function incrementScroll() {},
                getScrollPosition: function getScrollPosition() {},
                getScrollContentWidth: function getScrollContentWidth() {},
                getOffsetWidth: function getOffsetWidth() {},
                isRTL: function isRTL() {},
                setActiveTab: function setActiveTab() {},
                activateTabAtIndex: function activateTabAtIndex() {},
                deactivateTabAtIndex: function deactivateTabAtIndex() {},
                focusTabAtIndex: function focusTabAtIndex() {},
                getTabIndicatorClientRectAtIndex: function getTabIndicatorClientRectAtIndex() {},
                getTabDimensionsAtIndex: function getTabDimensionsAtIndex() {},
                getPreviousActiveTabIndex: function getPreviousActiveTabIndex() {},
                getFocusedTabIndex: function getFocusedTabIndex() {},
                getIndexOfTabById: function getIndexOfTabById() {},
                getTabListLength: function getTabListLength() {},
                notifyTabActivated: function notifyTabActivated() {}
              }
            );
          }
          /**
           * @param {!MDCTabBarAdapter} adapter
           * */

        }]);

        function MDCTabBarFoundation(adapter) {
          _classCallCheck(this, MDCTabBarFoundation);
          /** @private {boolean} */


          var _this = _possibleConstructorReturn(this, (MDCTabBarFoundation.__proto__ || Object.getPrototypeOf(MDCTabBarFoundation)).call(this, _extends(MDCTabBarFoundation.defaultAdapter, adapter)));

          _this.useAutomaticActivation_ = false;
          return _this;
        }
        /**
         * Switches between automatic and manual activation modes.
         * See https://www.w3.org/TR/wai-aria-practices/#tabpanel for examples.
         * @param {boolean} useAutomaticActivation
         */


        _createClass(MDCTabBarFoundation, [{
          key: 'setUseAutomaticActivation',
          value: function setUseAutomaticActivation(useAutomaticActivation) {
            this.useAutomaticActivation_ = useAutomaticActivation;
          }
          /**
           * Activates the tab at the given index
           * @param {number} index
           */

        }, {
          key: 'activateTab',
          value: function activateTab(index) {
            var previousActiveIndex = this.adapter_.getPreviousActiveTabIndex();

            if (!this.indexIsInRange_(index) || index === previousActiveIndex) {
              return;
            }

            this.adapter_.deactivateTabAtIndex(previousActiveIndex);
            this.adapter_.activateTabAtIndex(index, this.adapter_.getTabIndicatorClientRectAtIndex(previousActiveIndex));
            this.scrollIntoView(index);
            this.adapter_.notifyTabActivated(index);
          }
          /**
           * Handles the keydown event
           * @param {!Event} evt
           */

        }, {
          key: 'handleKeyDown',
          value: function handleKeyDown(evt) {
            // Get the key from the event
            var key = this.getKeyFromEvent_(evt); // Early exit if the event key isn't one of the keyboard navigation keys

            if (key === undefined) {
              return;
            } // Prevent default behavior for movement keys, but not for activation keys, since :active is used to apply ripple


            if (!this.isActivationKey_(key)) {
              evt.preventDefault();
            }

            if (this.useAutomaticActivation_) {
              if (this.isActivationKey_(key)) {
                return;
              }

              var index = this.determineTargetFromKey_(this.adapter_.getPreviousActiveTabIndex(), key);
              this.adapter_.setActiveTab(index);
              this.scrollIntoView(index);
            } else {
              var focusedTabIndex = this.adapter_.getFocusedTabIndex();

              if (this.isActivationKey_(key)) {
                this.adapter_.setActiveTab(focusedTabIndex);
              } else {
                var _index = this.determineTargetFromKey_(focusedTabIndex, key);

                this.adapter_.focusTabAtIndex(_index);
                this.scrollIntoView(_index);
              }
            }
          }
          /**
           * Handles the MDCTab:interacted event
           * @param {!Event} evt
           */

        }, {
          key: 'handleTabInteraction',
          value: function handleTabInteraction(evt) {
            this.adapter_.setActiveTab(this.adapter_.getIndexOfTabById(evt.detail.tabId));
          }
          /**
           * Scrolls the tab at the given index into view
           * @param {number} index The tab index to make visible
           */

        }, {
          key: 'scrollIntoView',
          value: function scrollIntoView(index) {
            // Early exit if the index is out of range
            if (!this.indexIsInRange_(index)) {
              return;
            } // Always scroll to 0 if scrolling to the 0th index


            if (index === 0) {
              return this.adapter_.scrollTo(0);
            } // Always scroll to the max value if scrolling to the Nth index
            // MDCTabScroller.scrollTo() will never scroll past the max possible value


            if (index === this.adapter_.getTabListLength() - 1) {
              return this.adapter_.scrollTo(this.adapter_.getScrollContentWidth());
            }

            if (this.isRTL_()) {
              return this.scrollIntoViewRTL_(index);
            }

            this.scrollIntoView_(index);
          }
          /**
           * Private method for determining the index of the destination tab based on what key was pressed
           * @param {number} origin The original index from which to determine the destination
           * @param {string} key The name of the key
           * @return {number}
           * @private
           */

        }, {
          key: 'determineTargetFromKey_',
          value: function determineTargetFromKey_(origin, key) {
            var isRTL = this.isRTL_();
            var maxIndex = this.adapter_.getTabListLength() - 1;
            var shouldGoToEnd = key === __WEBPACK_IMPORTED_MODULE_1__constants__["b"
            /* strings */
            ].END_KEY;
            var shouldDecrement = key === __WEBPACK_IMPORTED_MODULE_1__constants__["b"
            /* strings */
            ].ARROW_LEFT_KEY && !isRTL || key === __WEBPACK_IMPORTED_MODULE_1__constants__["b"
            /* strings */
            ].ARROW_RIGHT_KEY && isRTL;
            var shouldIncrement = key === __WEBPACK_IMPORTED_MODULE_1__constants__["b"
            /* strings */
            ].ARROW_RIGHT_KEY && !isRTL || key === __WEBPACK_IMPORTED_MODULE_1__constants__["b"
            /* strings */
            ].ARROW_LEFT_KEY && isRTL;
            var index = origin;

            if (shouldGoToEnd) {
              index = maxIndex;
            } else if (shouldDecrement) {
              index -= 1;
            } else if (shouldIncrement) {
              index += 1;
            } else {
              index = 0;
            }

            if (index < 0) {
              index = maxIndex;
            } else if (index > maxIndex) {
              index = 0;
            }

            return index;
          }
          /**
           * Calculates the scroll increment that will make the tab at the given index visible
           * @param {number} index The index of the tab
           * @param {number} nextIndex The index of the next tab
           * @param {number} scrollPosition The current scroll position
           * @param {number} barWidth The width of the Tab Bar
           * @return {number}
           * @private
           */

        }, {
          key: 'calculateScrollIncrement_',
          value: function calculateScrollIncrement_(index, nextIndex, scrollPosition, barWidth) {
            var nextTabDimensions = this.adapter_.getTabDimensionsAtIndex(nextIndex);
            var relativeContentLeft = nextTabDimensions.contentLeft - scrollPosition - barWidth;
            var relativeContentRight = nextTabDimensions.contentRight - scrollPosition;
            var leftIncrement = relativeContentRight - __WEBPACK_IMPORTED_MODULE_1__constants__["a"
            /* numbers */
            ].EXTRA_SCROLL_AMOUNT;
            var rightIncrement = relativeContentLeft + __WEBPACK_IMPORTED_MODULE_1__constants__["a"
            /* numbers */
            ].EXTRA_SCROLL_AMOUNT;

            if (nextIndex < index) {
              return Math.min(leftIncrement, 0);
            }

            return Math.max(rightIncrement, 0);
          }
          /**
           * Calculates the scroll increment that will make the tab at the given index visible in RTL
           * @param {number} index The index of the tab
           * @param {number} nextIndex The index of the next tab
           * @param {number} scrollPosition The current scroll position
           * @param {number} barWidth The width of the Tab Bar
           * @param {number} scrollContentWidth The width of the scroll content
           * @return {number}
           * @private
           */

        }, {
          key: 'calculateScrollIncrementRTL_',
          value: function calculateScrollIncrementRTL_(index, nextIndex, scrollPosition, barWidth, scrollContentWidth) {
            var nextTabDimensions = this.adapter_.getTabDimensionsAtIndex(nextIndex);
            var relativeContentLeft = scrollContentWidth - nextTabDimensions.contentLeft - scrollPosition;
            var relativeContentRight = scrollContentWidth - nextTabDimensions.contentRight - scrollPosition - barWidth;
            var leftIncrement = relativeContentRight + __WEBPACK_IMPORTED_MODULE_1__constants__["a"
            /* numbers */
            ].EXTRA_SCROLL_AMOUNT;
            var rightIncrement = relativeContentLeft - __WEBPACK_IMPORTED_MODULE_1__constants__["a"
            /* numbers */
            ].EXTRA_SCROLL_AMOUNT;

            if (nextIndex > index) {
              return Math.max(leftIncrement, 0);
            }

            return Math.min(rightIncrement, 0);
          }
          /**
           * Determines the index of the adjacent tab closest to either edge of the Tab Bar
           * @param {number} index The index of the tab
           * @param {!MDCTabDimensions} tabDimensions The dimensions of the tab
           * @param {number} scrollPosition The current scroll position
           * @param {number} barWidth The width of the tab bar
           * @return {number}
           * @private
           */

        }, {
          key: 'findAdjacentTabIndexClosestToEdge_',
          value: function findAdjacentTabIndexClosestToEdge_(index, tabDimensions, scrollPosition, barWidth) {
            /**
             * Tabs are laid out in the Tab Scroller like this:
             *
             *    Scroll Position
             *    +---+
             *    |   |   Bar Width
             *    |   +-----------------------------------+
             *    |   |                                   |
             *    |   V                                   V
             *    |   +-----------------------------------+
             *    V   |             Tab Scroller          |
             *    +------------+--------------+-------------------+
             *    |    Tab     |      Tab     |        Tab        |
             *    +------------+--------------+-------------------+
             *        |                                   |
             *        +-----------------------------------+
             *
             * To determine the next adjacent index, we look at the Tab root left and
             * Tab root right, both relative to the scroll position. If the Tab root
             * left is less than 0, then we know it's out of view to the left. If the
             * Tab root right minus the bar width is greater than 0, we know the Tab is
             * out of view to the right. From there, we either increment or decrement
             * the index.
             */
            var relativeRootLeft = tabDimensions.rootLeft - scrollPosition;
            var relativeRootRight = tabDimensions.rootRight - scrollPosition - barWidth;
            var relativeRootDelta = relativeRootLeft + relativeRootRight;
            var leftEdgeIsCloser = relativeRootLeft < 0 || relativeRootDelta < 0;
            var rightEdgeIsCloser = relativeRootRight > 0 || relativeRootDelta > 0;

            if (leftEdgeIsCloser) {
              return index - 1;
            }

            if (rightEdgeIsCloser) {
              return index + 1;
            }

            return -1;
          }
          /**
           * Determines the index of the adjacent tab closest to either edge of the Tab Bar in RTL
           * @param {number} index The index of the tab
           * @param {!MDCTabDimensions} tabDimensions The dimensions of the tab
           * @param {number} scrollPosition The current scroll position
           * @param {number} barWidth The width of the tab bar
           * @param {number} scrollContentWidth The width of the scroller content
           * @return {number}
           * @private
           */

        }, {
          key: 'findAdjacentTabIndexClosestToEdgeRTL_',
          value: function findAdjacentTabIndexClosestToEdgeRTL_(index, tabDimensions, scrollPosition, barWidth, scrollContentWidth) {
            var rootLeft = scrollContentWidth - tabDimensions.rootLeft - barWidth - scrollPosition;
            var rootRight = scrollContentWidth - tabDimensions.rootRight - scrollPosition;
            var rootDelta = rootLeft + rootRight;
            var leftEdgeIsCloser = rootLeft > 0 || rootDelta > 0;
            var rightEdgeIsCloser = rootRight < 0 || rootDelta < 0;

            if (leftEdgeIsCloser) {
              return index + 1;
            }

            if (rightEdgeIsCloser) {
              return index - 1;
            }

            return -1;
          }
          /**
           * Returns the key associated with a keydown event
           * @param {!Event} evt The keydown event
           * @return {string}
           * @private
           */

        }, {
          key: 'getKeyFromEvent_',
          value: function getKeyFromEvent_(evt) {
            if (ACCEPTABLE_KEYS.has(evt.key)) {
              return evt.key;
            }

            return KEYCODE_MAP.get(evt.keyCode);
          }
        }, {
          key: 'isActivationKey_',
          value: function isActivationKey_(key) {
            return key === __WEBPACK_IMPORTED_MODULE_1__constants__["b"
            /* strings */
            ].SPACE_KEY || key === __WEBPACK_IMPORTED_MODULE_1__constants__["b"
            /* strings */
            ].ENTER_KEY;
          }
          /**
           * Returns whether a given index is inclusively between the ends
           * @param {number} index The index to test
           * @private
           */

        }, {
          key: 'indexIsInRange_',
          value: function indexIsInRange_(index) {
            return index >= 0 && index < this.adapter_.getTabListLength();
          }
          /**
           * Returns the view's RTL property
           * @return {boolean}
           * @private
           */

        }, {
          key: 'isRTL_',
          value: function isRTL_() {
            return this.adapter_.isRTL();
          }
          /**
           * Scrolls the tab at the given index into view for left-to-right useragents
           * @param {number} index The index of the tab to scroll into view
           * @private
           */

        }, {
          key: 'scrollIntoView_',
          value: function scrollIntoView_(index) {
            var scrollPosition = this.adapter_.getScrollPosition();
            var barWidth = this.adapter_.getOffsetWidth();
            var tabDimensions = this.adapter_.getTabDimensionsAtIndex(index);
            var nextIndex = this.findAdjacentTabIndexClosestToEdge_(index, tabDimensions, scrollPosition, barWidth);

            if (!this.indexIsInRange_(nextIndex)) {
              return;
            }

            var scrollIncrement = this.calculateScrollIncrement_(index, nextIndex, scrollPosition, barWidth);
            this.adapter_.incrementScroll(scrollIncrement);
          }
          /**
           * Scrolls the tab at the given index into view in RTL
           * @param {number} index The tab index to make visible
           * @private
           */

        }, {
          key: 'scrollIntoViewRTL_',
          value: function scrollIntoViewRTL_(index) {
            var scrollPosition = this.adapter_.getScrollPosition();
            var barWidth = this.adapter_.getOffsetWidth();
            var tabDimensions = this.adapter_.getTabDimensionsAtIndex(index);
            var scrollWidth = this.adapter_.getScrollContentWidth();
            var nextIndex = this.findAdjacentTabIndexClosestToEdgeRTL_(index, tabDimensions, scrollPosition, barWidth, scrollWidth);

            if (!this.indexIsInRange_(nextIndex)) {
              return;
            }

            var scrollIncrement = this.calculateScrollIncrementRTL_(index, nextIndex, scrollPosition, barWidth, scrollWidth);
            this.adapter_.incrementScroll(scrollIncrement);
          }
        }]);

        return MDCTabBarFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCTabBarFoundation;
      /***/
    },
    /* 147 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return numbers;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var strings = {
        TAB_ACTIVATED_EVENT: 'MDCTabBar:activated',
        TAB_SCROLLER_SELECTOR: '.mdc-tab-scroller',
        TAB_SELECTOR: '.mdc-tab',
        ARROW_LEFT_KEY: 'ArrowLeft',
        ARROW_RIGHT_KEY: 'ArrowRight',
        END_KEY: 'End',
        HOME_KEY: 'Home',
        ENTER_KEY: 'Enter',
        SPACE_KEY: 'Space'
      };
      /** @enum {number} */

      var numbers = {
        EXTRA_SCROLL_AMOUNT: 20,
        ARROW_LEFT_KEYCODE: 37,
        ARROW_RIGHT_KEYCODE: 39,
        END_KEYCODE: 35,
        HOME_KEYCODE: 36,
        ENTER_KEYCODE: 13,
        SPACE_KEYCODE: 32
      };
      /***/
    },
    /* 148 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCTextField", function () {
        return MDCTextField;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__ = __webpack_require__(2);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__material_ripple_util__ = __webpack_require__(5);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__constants__ = __webpack_require__(59);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__adapter__ = __webpack_require__(60);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__foundation__ = __webpack_require__(151);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__material_line_ripple_index__ = __webpack_require__(17);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_7__helper_text_index__ = __webpack_require__(152);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_8__icon_index__ = __webpack_require__(153);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_9__material_floating_label_index__ = __webpack_require__(9);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_10__material_notched_outline_index__ = __webpack_require__(21);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCTextFieldFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_5__foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCTextFieldHelperText", function () {
        return __WEBPACK_IMPORTED_MODULE_7__helper_text_index__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCTextFieldHelperTextFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_7__helper_text_index__["b"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCTextFieldIcon", function () {
        return __WEBPACK_IMPORTED_MODULE_8__icon_index__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCTextFieldIconFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_8__icon_index__["b"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @extends {MDCComponent<!MDCTextFieldFoundation>}
       * @final
       */


      var MDCTextField = function (_MDCComponent) {
        _inherits(MDCTextField, _MDCComponent);
        /**
         * @param {...?} args
         */


        function MDCTextField() {
          var _ref;

          _classCallCheck(this, MDCTextField);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {?Element} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCTextField.__proto__ || Object.getPrototypeOf(MDCTextField)).call.apply(_ref, [this].concat(args)));

          _this.input_;
          /** @type {?MDCRipple} */

          _this.ripple;
          /** @private {?MDCLineRipple} */

          _this.lineRipple_;
          /** @private {?MDCTextFieldHelperText} */

          _this.helperText_;
          /** @private {?MDCTextFieldIcon} */

          _this.leadingIcon_;
          /** @private {?MDCTextFieldIcon} */

          _this.trailingIcon_;
          /** @private {?MDCFloatingLabel} */

          _this.label_;
          /** @private {?MDCNotchedOutline} */

          _this.outline_;
          return _this;
        }
        /**
         * @param {!Element} root
         * @return {!MDCTextField}
         */


        _createClass(MDCTextField, [{
          key: 'initialize',

          /**
           * @param {(function(!Element): !MDCRipple)=} rippleFactory A function which
           * creates a new MDCRipple.
           * @param {(function(!Element): !MDCLineRipple)=} lineRippleFactory A function which
           * creates a new MDCLineRipple.
           * @param {(function(!Element): !MDCTextFieldHelperText)=} helperTextFactory A function which
           * creates a new MDCTextFieldHelperText.
           * @param {(function(!Element): !MDCTextFieldIcon)=} iconFactory A function which
           * creates a new MDCTextFieldIcon.
           * @param {(function(!Element): !MDCFloatingLabel)=} labelFactory A function which
           * creates a new MDCFloatingLabel.
           * @param {(function(!Element): !MDCNotchedOutline)=} outlineFactory A function which
           * creates a new MDCNotchedOutline.
           */
          value: function initialize() {
            var rippleFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (el, foundation) {
              return new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__["MDCRipple"](el, foundation);
            };
            var lineRippleFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_6__material_line_ripple_index__["MDCLineRipple"](el);
            };
            var helperTextFactory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_7__helper_text_index__["a"
              /* MDCTextFieldHelperText */
              ](el);
            };
            var iconFactory = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_8__icon_index__["a"
              /* MDCTextFieldIcon */
              ](el);
            };

            var _this2 = this;

            var labelFactory = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_9__material_floating_label_index__["MDCFloatingLabel"](el);
            };
            var outlineFactory = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : function (el) {
              return new __WEBPACK_IMPORTED_MODULE_10__material_notched_outline_index__["MDCNotchedOutline"](el);
            };
            this.input_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__["e"
            /* strings */
            ].INPUT_SELECTOR);
            var labelElement = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__["e"
            /* strings */
            ].LABEL_SELECTOR);

            if (labelElement) {
              this.label_ = labelFactory(labelElement);
            }

            var lineRippleElement = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__["e"
            /* strings */
            ].LINE_RIPPLE_SELECTOR);

            if (lineRippleElement) {
              this.lineRipple_ = lineRippleFactory(lineRippleElement);
            }

            var outlineElement = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__["e"
            /* strings */
            ].OUTLINE_SELECTOR);

            if (outlineElement) {
              this.outline_ = outlineFactory(outlineElement);
            }

            if (this.input_.hasAttribute(__WEBPACK_IMPORTED_MODULE_3__constants__["e"
            /* strings */
            ].ARIA_CONTROLS)) {
              var helperTextElement = document.getElementById(this.input_.getAttribute(__WEBPACK_IMPORTED_MODULE_3__constants__["e"
              /* strings */
              ].ARIA_CONTROLS));

              if (helperTextElement) {
                this.helperText_ = helperTextFactory(helperTextElement);
              }
            }

            var iconElements = this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_3__constants__["e"
            /* strings */
            ].ICON_SELECTOR);

            if (iconElements.length > 0) {
              if (iconElements.length > 1) {
                // Has both icons.
                this.leadingIcon_ = iconFactory(iconElements[0]);
                this.trailingIcon_ = iconFactory(iconElements[1]);
              } else {
                if (this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_3__constants__["c"
                /* cssClasses */
                ].WITH_LEADING_ICON)) {
                  this.leadingIcon_ = iconFactory(iconElements[0]);
                } else {
                  this.trailingIcon_ = iconFactory(iconElements[0]);
                }
              }
            }

            this.ripple = null;

            if (!this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_3__constants__["c"
            /* cssClasses */
            ].TEXTAREA) && !this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_3__constants__["c"
            /* cssClasses */
            ].OUTLINED)) {
              var MATCHES = Object(__WEBPACK_IMPORTED_MODULE_2__material_ripple_util__["getMatchesProperty"])(HTMLElement.prototype);

              var adapter = _extends(__WEBPACK_IMPORTED_MODULE_1__material_ripple_index__["MDCRipple"].createAdapter(
              /** @type {!RippleCapableSurface} */
              this), {
                isSurfaceActive: function isSurfaceActive() {
                  return _this2.input_[MATCHES](':active');
                },
                registerInteractionHandler: function registerInteractionHandler(type, handler) {
                  return _this2.input_.addEventListener(type, handler);
                },
                deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
                  return _this2.input_.removeEventListener(type, handler);
                }
              });

              var foundation = new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__["MDCRippleFoundation"](adapter);
              this.ripple = rippleFactory(this.root_, foundation);
            }
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            if (this.ripple) {
              this.ripple.destroy();
            }

            if (this.lineRipple_) {
              this.lineRipple_.destroy();
            }

            if (this.helperText_) {
              this.helperText_.destroy();
            }

            if (this.leadingIcon_) {
              this.leadingIcon_.destroy();
            }

            if (this.trailingIcon_) {
              this.trailingIcon_.destroy();
            }

            if (this.label_) {
              this.label_.destroy();
            }

            if (this.outline_) {
              this.outline_.destroy();
            }

            _get(MDCTextField.prototype.__proto__ || Object.getPrototypeOf(MDCTextField.prototype), 'destroy', this).call(this);
          }
          /**
           * Initiliazes the Text Field's internal state based on the environment's
           * state.
           */

        }, {
          key: 'initialSyncWithDom',
          value: function initialSyncWithDom() {
            this.disabled = this.input_.disabled;
          }
          /**
           * @return {string} The value of the input.
           */

        }, {
          key: 'focus',

          /**
           * Focuses the input element.
           */
          value: function focus() {
            this.input_.focus();
          }
          /**
           * Recomputes the outline SVG path for the outline element.
           */

        }, {
          key: 'layout',
          value: function layout() {
            var openNotch = this.foundation_.shouldFloat;
            this.foundation_.notchOutline(openNotch);
          }
          /**
           * @return {!MDCTextFieldFoundation}
           */

        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this3 = this;

            return new __WEBPACK_IMPORTED_MODULE_5__foundation__["a"
            /* default */
            ](
            /** @type {!MDCTextFieldAdapter} */
            _extends({
              addClass: function addClass(className) {
                return _this3.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this3.root_.classList.remove(className);
              },
              hasClass: function hasClass(className) {
                return _this3.root_.classList.contains(className);
              },
              registerTextFieldInteractionHandler: function registerTextFieldInteractionHandler(evtType, handler) {
                return _this3.root_.addEventListener(evtType, handler);
              },
              deregisterTextFieldInteractionHandler: function deregisterTextFieldInteractionHandler(evtType, handler) {
                return _this3.root_.removeEventListener(evtType, handler);
              },
              registerValidationAttributeChangeHandler: function registerValidationAttributeChangeHandler(handler) {
                var getAttributesList = function getAttributesList(mutationsList) {
                  return mutationsList.map(function (mutation) {
                    return mutation.attributeName;
                  });
                };

                var observer = new MutationObserver(function (mutationsList) {
                  return handler(getAttributesList(mutationsList));
                });

                var targetNode = _this3.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__["e"
                /* strings */
                ].INPUT_SELECTOR);

                var config = {
                  attributes: true
                };
                observer.observe(targetNode, config);
                return observer;
              },
              deregisterValidationAttributeChangeHandler: function deregisterValidationAttributeChangeHandler(observer) {
                return observer.disconnect();
              },
              isFocused: function isFocused() {
                return document.activeElement === _this3.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__["e"
                /* strings */
                ].INPUT_SELECTOR);
              }
            }, this.getInputAdapterMethods_(), this.getLabelAdapterMethods_(), this.getLineRippleAdapterMethods_(), this.getOutlineAdapterMethods_()), this.getFoundationMap_());
          }
          /**
           * @return {!{
           *   shakeLabel: function(boolean): undefined,
           *   floatLabel: function(boolean): undefined,
           *   hasLabel: function(): boolean,
           *   getLabelWidth: function(): number,
           * }}
           */

        }, {
          key: 'getLabelAdapterMethods_',
          value: function getLabelAdapterMethods_() {
            var _this4 = this;

            return {
              shakeLabel: function shakeLabel(shouldShake) {
                return _this4.label_.shake(shouldShake);
              },
              floatLabel: function floatLabel(shouldFloat) {
                return _this4.label_.float(shouldFloat);
              },
              hasLabel: function hasLabel() {
                return !!_this4.label_;
              },
              getLabelWidth: function getLabelWidth() {
                return _this4.label_ ? _this4.label_.getWidth() : 0;
              }
            };
          }
          /**
           * @return {!{
           *   activateLineRipple: function(): undefined,
           *   deactivateLineRipple: function(): undefined,
           *   setLineRippleTransformOrigin: function(number): undefined,
           * }}
           */

        }, {
          key: 'getLineRippleAdapterMethods_',
          value: function getLineRippleAdapterMethods_() {
            var _this5 = this;

            return {
              activateLineRipple: function activateLineRipple() {
                if (_this5.lineRipple_) {
                  _this5.lineRipple_.activate();
                }
              },
              deactivateLineRipple: function deactivateLineRipple() {
                if (_this5.lineRipple_) {
                  _this5.lineRipple_.deactivate();
                }
              },
              setLineRippleTransformOrigin: function setLineRippleTransformOrigin(normalizedX) {
                if (_this5.lineRipple_) {
                  _this5.lineRipple_.setRippleCenter(normalizedX);
                }
              }
            };
          }
          /**
           * @return {!{
           *   notchOutline: function(number, boolean): undefined,
           *   hasOutline: function(): boolean,
           * }}
           */

        }, {
          key: 'getOutlineAdapterMethods_',
          value: function getOutlineAdapterMethods_() {
            var _this6 = this;

            return {
              notchOutline: function notchOutline(labelWidth) {
                return _this6.outline_.notch(labelWidth);
              },
              closeOutline: function closeOutline() {
                return _this6.outline_.closeNotch();
              },
              hasOutline: function hasOutline() {
                return !!_this6.outline_;
              }
            };
          }
          /**
           * @return {!{
           *   registerInputInteractionHandler: function(string, function()): undefined,
           *   deregisterInputInteractionHandler: function(string, function()): undefined,
           *   getNativeInput: function(): ?Element,
           * }}
           */

        }, {
          key: 'getInputAdapterMethods_',
          value: function getInputAdapterMethods_() {
            var _this7 = this;

            return {
              registerInputInteractionHandler: function registerInputInteractionHandler(evtType, handler) {
                return _this7.input_.addEventListener(evtType, handler);
              },
              deregisterInputInteractionHandler: function deregisterInputInteractionHandler(evtType, handler) {
                return _this7.input_.removeEventListener(evtType, handler);
              },
              getNativeInput: function getNativeInput() {
                return _this7.input_;
              }
            };
          }
          /**
           * Returns a map of all subcomponents to subfoundations.
           * @return {!FoundationMapType}
           */

        }, {
          key: 'getFoundationMap_',
          value: function getFoundationMap_() {
            return {
              helperText: this.helperText_ ? this.helperText_.foundation : undefined,
              leadingIcon: this.leadingIcon_ ? this.leadingIcon_.foundation : undefined,
              trailingIcon: this.trailingIcon_ ? this.trailingIcon_.foundation : undefined
            };
          }
        }, {
          key: 'value',
          get: function get() {
            return this.foundation_.getValue();
          }
          /**
           * @param {string} value The value to set on the input.
           */
          ,
          set: function set(value) {
            this.foundation_.setValue(value);
          }
          /**
           * @return {boolean} True if the Text Field is disabled.
           */

        }, {
          key: 'disabled',
          get: function get() {
            return this.foundation_.isDisabled();
          }
          /**
           * @param {boolean} disabled Sets the Text Field disabled or enabled.
           */
          ,
          set: function set(disabled) {
            this.foundation_.setDisabled(disabled);
          }
          /**
           * @return {boolean} valid True if the Text Field is valid.
           */

        }, {
          key: 'valid',
          get: function get() {
            return this.foundation_.isValid();
          }
          /**
           * @param {boolean} valid Sets the Text Field valid or invalid.
           */
          ,
          set: function set(valid) {
            this.foundation_.setValid(valid);
          }
          /**
           * @return {boolean} True if the Text Field is required.
           */

        }, {
          key: 'required',
          get: function get() {
            return this.input_.required;
          }
          /**
           * @param {boolean} required Sets the Text Field to required.
           */
          ,
          set: function set(required) {
            this.input_.required = required;
          }
          /**
           * @return {string} The input element's validation pattern.
           */

        }, {
          key: 'pattern',
          get: function get() {
            return this.input_.pattern;
          }
          /**
           * @param {string} pattern Sets the input element's validation pattern.
           */
          ,
          set: function set(pattern) {
            this.input_.pattern = pattern;
          }
          /**
           * @return {number} The input element's minLength.
           */

        }, {
          key: 'minLength',
          get: function get() {
            return this.input_.minLength;
          }
          /**
           * @param {number} minLength Sets the input element's minLength.
           */
          ,
          set: function set(minLength) {
            this.input_.minLength = minLength;
          }
          /**
           * @return {number} The input element's maxLength.
           */

        }, {
          key: 'maxLength',
          get: function get() {
            return this.input_.maxLength;
          }
          /**
           * @param {number} maxLength Sets the input element's maxLength.
           */
          ,
          set: function set(maxLength) {
            // Chrome throws exception if maxLength is set < 0
            if (maxLength < 0) {
              this.input_.removeAttribute('maxLength');
            } else {
              this.input_.maxLength = maxLength;
            }
          }
          /**
           * @return {string} The input element's min.
           */

        }, {
          key: 'min',
          get: function get() {
            return this.input_.min;
          }
          /**
           * @param {string} min Sets the input element's min.
           */
          ,
          set: function set(min) {
            this.input_.min = min;
          }
          /**
           * @return {string} The input element's max.
           */

        }, {
          key: 'max',
          get: function get() {
            return this.input_.max;
          }
          /**
           * @param {string} max Sets the input element's max.
           */
          ,
          set: function set(max) {
            this.input_.max = max;
          }
          /**
           * @return {string} The input element's step.
           */

        }, {
          key: 'step',
          get: function get() {
            return this.input_.step;
          }
          /**
           * @param {string} step Sets the input element's step.
           */
          ,
          set: function set(step) {
            this.input_.step = step;
          }
          /**
           * Sets the helper text element content.
           * @param {string} content
           */

        }, {
          key: 'helperTextContent',
          set: function set(content) {
            this.foundation_.setHelperTextContent(content);
          }
          /**
           * Sets the aria label of the leading icon.
           * @param {string} label
           */

        }, {
          key: 'leadingIconAriaLabel',
          set: function set(label) {
            this.foundation_.setLeadingIconAriaLabel(label);
          }
          /**
           * Sets the text content of the leading icon.
           * @param {string} content
           */

        }, {
          key: 'leadingIconContent',
          set: function set(content) {
            this.foundation_.setLeadingIconContent(content);
          }
          /**
           * Sets the aria label of the trailing icon.
           * @param {string} label
           */

        }, {
          key: 'trailingIconAriaLabel',
          set: function set(label) {
            this.foundation_.setTrailingIconAriaLabel(label);
          }
          /**
           * Sets the text content of the trailing icon.
           * @param {string} content
           */

        }, {
          key: 'trailingIconContent',
          set: function set(content) {
            this.foundation_.setTrailingIconContent(content);
          }
          /**
           * Enables or disables the use of native validation. Use this for custom validation.
           * @param {boolean} useNativeValidation Set this to false to ignore native input validation.
           */

        }, {
          key: 'useNativeValidation',
          set: function set(useNativeValidation) {
            this.foundation_.setUseNativeValidation(useNativeValidation);
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCTextField(root);
          }
        }]);

        return MDCTextField;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 149 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "b", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var strings = {
        ARIA_HIDDEN: 'aria-hidden',
        ROLE: 'role'
      };
      /** @enum {string} */

      var cssClasses = {
        HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',
        HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg'
      };
      /***/
    },
    /* 150 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return strings;
      });
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /** @enum {string} */


      var strings = {
        ICON_EVENT: 'MDCTextField:icon',
        ICON_ROLE: 'button'
      };
      /***/
    },
    /* 151 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__helper_text_foundation__ = __webpack_require__(26);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__icon_foundation__ = __webpack_require__(27);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__adapter__ = __webpack_require__(60);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(59);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2016 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /* eslint-disable no-unused-vars */

      /* eslint-enable no-unused-vars */

      /**
       * @extends {MDCFoundation<!MDCTextFieldAdapter>}
       * @final
       */


      var MDCTextFieldFoundation = function (_MDCFoundation) {
        _inherits(MDCTextFieldFoundation, _MDCFoundation);

        _createClass(MDCTextFieldFoundation, [{
          key: 'shouldShake',

          /** @return {boolean} */
          get: function get() {
            return !this.isValid() && !this.isFocused_ && !!this.getValue();
          }
          /**
           * @return {boolean}
           * @private
           */

        }, {
          key: 'shouldAlwaysFloat_',
          get: function get() {
            var type = this.getNativeInput_().type;
            return __WEBPACK_IMPORTED_MODULE_4__constants__["a"
            /* ALWAYS_FLOAT_TYPES */
            ].indexOf(type) >= 0;
          }
          /** @return {boolean} */

        }, {
          key: 'shouldFloat',
          get: function get() {
            return this.shouldAlwaysFloat_ || this.isFocused_ || !!this.getValue() || this.isBadInput_();
          }
          /**
           * {@see MDCTextFieldAdapter} for typing information on parameters and return
           * types.
           * @return {!MDCTextFieldAdapter}
           */

        }], [{
          key: 'cssClasses',

          /** @return enum {string} */
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_4__constants__["c"
            /* cssClasses */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_4__constants__["e"
            /* strings */
            ];
          }
          /** @return enum {string} */

        }, {
          key: 'numbers',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_4__constants__["d"
            /* numbers */
            ];
          }
        }, {
          key: 'defaultAdapter',
          get: function get() {
            return (
              /** @type {!MDCTextFieldAdapter} */
              {
                addClass: function addClass() {},
                removeClass: function removeClass() {},
                hasClass: function hasClass() {},
                registerTextFieldInteractionHandler: function registerTextFieldInteractionHandler() {},
                deregisterTextFieldInteractionHandler: function deregisterTextFieldInteractionHandler() {},
                registerInputInteractionHandler: function registerInputInteractionHandler() {},
                deregisterInputInteractionHandler: function deregisterInputInteractionHandler() {},
                registerValidationAttributeChangeHandler: function registerValidationAttributeChangeHandler() {},
                deregisterValidationAttributeChangeHandler: function deregisterValidationAttributeChangeHandler() {},
                getNativeInput: function getNativeInput() {},
                isFocused: function isFocused() {},
                activateLineRipple: function activateLineRipple() {},
                deactivateLineRipple: function deactivateLineRipple() {},
                setLineRippleTransformOrigin: function setLineRippleTransformOrigin() {},
                shakeLabel: function shakeLabel() {},
                floatLabel: function floatLabel() {},
                hasLabel: function hasLabel() {},
                getLabelWidth: function getLabelWidth() {},
                hasOutline: function hasOutline() {},
                notchOutline: function notchOutline() {},
                closeOutline: function closeOutline() {}
              }
            );
          }
          /**
           * @param {!MDCTextFieldAdapter} adapter
           * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.
           */

        }]);

        function MDCTextFieldFoundation(adapter) {
          var foundationMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] :
          /** @type {!FoundationMapType} */
          {};

          _classCallCheck(this, MDCTextFieldFoundation);
          /** @type {!MDCTextFieldHelperTextFoundation|undefined} */


          var _this = _possibleConstructorReturn(this, (MDCTextFieldFoundation.__proto__ || Object.getPrototypeOf(MDCTextFieldFoundation)).call(this, _extends(MDCTextFieldFoundation.defaultAdapter, adapter)));

          _this.helperText_ = foundationMap.helperText;
          /** @type {!MDCTextFieldIconFoundation|undefined} */

          _this.leadingIcon_ = foundationMap.leadingIcon;
          /** @type {!MDCTextFieldIconFoundation|undefined} */

          _this.trailingIcon_ = foundationMap.trailingIcon;
          /** @private {boolean} */

          _this.isFocused_ = false;
          /** @private {boolean} */

          _this.receivedUserInput_ = false;
          /** @private {boolean} */

          _this.useCustomValidityChecking_ = false;
          /** @private {boolean} */

          _this.isValid_ = true;
          /** @private {boolean} */

          _this.useNativeValidation_ = true;
          /** @private {function(): undefined} */

          _this.inputFocusHandler_ = function () {
            return _this.activateFocus();
          };
          /** @private {function(): undefined} */


          _this.inputBlurHandler_ = function () {
            return _this.deactivateFocus();
          };
          /** @private {function(): undefined} */


          _this.inputInputHandler_ = function () {
            return _this.autoCompleteFocus();
          };
          /** @private {function(!Event): undefined} */


          _this.setPointerXOffset_ = function (evt) {
            return _this.setTransformOrigin(evt);
          };
          /** @private {function(!Event): undefined} */


          _this.textFieldInteractionHandler_ = function () {
            return _this.handleTextFieldInteraction();
          };
          /** @private {function(!Array): undefined} */


          _this.validationAttributeChangeHandler_ = function (attributesList) {
            return _this.handleValidationAttributeChange(attributesList);
          };
          /** @private {!MutationObserver} */


          _this.validationObserver_;
          return _this;
        }

        _createClass(MDCTextFieldFoundation, [{
          key: 'init',
          value: function init() {
            var _this2 = this;

            if (this.adapter_.isFocused()) {
              this.inputFocusHandler_();
            } else if (this.adapter_.hasLabel() && this.shouldFloat) {
              this.notchOutline(true);
              this.adapter_.floatLabel(true);
            }

            this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);
            this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);
            this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);
            ['mousedown', 'touchstart'].forEach(function (evtType) {
              _this2.adapter_.registerInputInteractionHandler(evtType, _this2.setPointerXOffset_);
            });
            ['click', 'keydown'].forEach(function (evtType) {
              _this2.adapter_.registerTextFieldInteractionHandler(evtType, _this2.textFieldInteractionHandler_);
            });
            this.validationObserver_ = this.adapter_.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            var _this3 = this;

            this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);
            this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);
            this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);
            ['mousedown', 'touchstart'].forEach(function (evtType) {
              _this3.adapter_.deregisterInputInteractionHandler(evtType, _this3.setPointerXOffset_);
            });
            ['click', 'keydown'].forEach(function (evtType) {
              _this3.adapter_.deregisterTextFieldInteractionHandler(evtType, _this3.textFieldInteractionHandler_);
            });
            this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);
          }
          /**
           * Handles user interactions with the Text Field.
           */

        }, {
          key: 'handleTextFieldInteraction',
          value: function handleTextFieldInteraction() {
            if (this.adapter_.getNativeInput().disabled) {
              return;
            }

            this.receivedUserInput_ = true;
          }
          /**
           * Handles validation attribute changes
           * @param {!Array<string>} attributesList
           */

        }, {
          key: 'handleValidationAttributeChange',
          value: function handleValidationAttributeChange(attributesList) {
            var _this4 = this;

            attributesList.some(function (attributeName) {
              if (__WEBPACK_IMPORTED_MODULE_4__constants__["b"
              /* VALIDATION_ATTR_WHITELIST */
              ].indexOf(attributeName) > -1) {
                _this4.styleValidity_(true);

                return true;
              }
            });
          }
          /**
           * Opens/closes the notched outline.
           * @param {boolean} openNotch
           */

        }, {
          key: 'notchOutline',
          value: function notchOutline(openNotch) {
            if (!this.adapter_.hasOutline()) {
              return;
            }

            if (openNotch) {
              var isDense = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_4__constants__["c"
              /* cssClasses */
              ].DENSE);
              var labelScale = isDense ? __WEBPACK_IMPORTED_MODULE_4__constants__["d"
              /* numbers */
              ].DENSE_LABEL_SCALE : __WEBPACK_IMPORTED_MODULE_4__constants__["d"
              /* numbers */
              ].LABEL_SCALE;
              var labelWidth = this.adapter_.getLabelWidth() * labelScale;
              this.adapter_.notchOutline(labelWidth);
            } else {
              this.adapter_.closeOutline();
            }
          }
          /**
           * Activates the text field focus state.
           */

        }, {
          key: 'activateFocus',
          value: function activateFocus() {
            this.isFocused_ = true;
            this.styleFocused_(this.isFocused_);
            this.adapter_.activateLineRipple();

            if (this.adapter_.hasLabel()) {
              this.notchOutline(this.shouldFloat);
              this.adapter_.floatLabel(this.shouldFloat);
              this.adapter_.shakeLabel(this.shouldShake);
            }

            if (this.helperText_) {
              this.helperText_.showToScreenReader();
            }
          }
          /**
           * Sets the line ripple's transform origin, so that the line ripple activate
           * animation will animate out from the user's click location.
           * @param {!Event} evt
           */

        }, {
          key: 'setTransformOrigin',
          value: function setTransformOrigin(evt) {
            var targetEvent = void 0;

            if (evt.touches) {
              targetEvent = evt.touches[0];
            } else {
              targetEvent = evt;
            }

            var targetClientRect = targetEvent.target.getBoundingClientRect();
            var normalizedX = targetEvent.clientX - targetClientRect.left;
            this.adapter_.setLineRippleTransformOrigin(normalizedX);
          }
          /**
           * Activates the Text Field's focus state in cases when the input value
           * changes without user input (e.g. programatically).
           */

        }, {
          key: 'autoCompleteFocus',
          value: function autoCompleteFocus() {
            if (!this.receivedUserInput_) {
              this.activateFocus();
            }
          }
          /**
           * Deactivates the Text Field's focus state.
           */

        }, {
          key: 'deactivateFocus',
          value: function deactivateFocus() {
            this.isFocused_ = false;
            this.adapter_.deactivateLineRipple();
            var isValid = this.isValid();
            this.styleValidity_(isValid);
            this.styleFocused_(this.isFocused_);

            if (this.adapter_.hasLabel()) {
              this.notchOutline(this.shouldFloat);
              this.adapter_.floatLabel(this.shouldFloat);
              this.adapter_.shakeLabel(this.shouldShake);
            }

            if (!this.shouldFloat) {
              this.receivedUserInput_ = false;
            }
          }
          /**
           * @return {string} The value of the input Element.
           */

        }, {
          key: 'getValue',
          value: function getValue() {
            return this.getNativeInput_().value;
          }
          /**
           * @param {string} value The value to set on the input Element.
           */

        }, {
          key: 'setValue',
          value: function setValue(value) {
            // Prevent Safari from moving the caret to the end of the input when the value has not changed.
            if (this.getValue() !== value) {
              this.getNativeInput_().value = value;
            }

            var isValid = this.isValid();
            this.styleValidity_(isValid);

            if (this.adapter_.hasLabel()) {
              this.notchOutline(this.shouldFloat);
              this.adapter_.floatLabel(this.shouldFloat);
              this.adapter_.shakeLabel(this.shouldShake);
            }
          }
          /**
           * @return {boolean} If a custom validity is set, returns that value.
           *     Otherwise, returns the result of native validity checks.
           */

        }, {
          key: 'isValid',
          value: function isValid() {
            return this.useNativeValidation_ ? this.isNativeInputValid_() : this.isValid_;
          }
          /**
           * @param {boolean} isValid Sets the validity state of the Text Field.
           */

        }, {
          key: 'setValid',
          value: function setValid(isValid) {
            this.isValid_ = isValid;
            this.styleValidity_(isValid);
            var shouldShake = !isValid && !this.isFocused_;

            if (this.adapter_.hasLabel()) {
              this.adapter_.shakeLabel(shouldShake);
            }
          }
          /**
           * Enables or disables the use of native validation. Use this for custom validation.
           * @param {boolean} useNativeValidation Set this to false to ignore native input validation.
           */

        }, {
          key: 'setUseNativeValidation',
          value: function setUseNativeValidation(useNativeValidation) {
            this.useNativeValidation_ = useNativeValidation;
          }
          /**
           * @return {boolean} True if the Text Field is disabled.
           */

        }, {
          key: 'isDisabled',
          value: function isDisabled() {
            return this.getNativeInput_().disabled;
          }
          /**
           * @param {boolean} disabled Sets the text-field disabled or enabled.
           */

        }, {
          key: 'setDisabled',
          value: function setDisabled(disabled) {
            this.getNativeInput_().disabled = disabled;
            this.styleDisabled_(disabled);
          }
          /**
           * @param {string} content Sets the content of the helper text.
           */

        }, {
          key: 'setHelperTextContent',
          value: function setHelperTextContent(content) {
            if (this.helperText_) {
              this.helperText_.setContent(content);
            }
          }
          /**
           * Sets the aria label of the leading icon.
           * @param {string} label
           */

        }, {
          key: 'setLeadingIconAriaLabel',
          value: function setLeadingIconAriaLabel(label) {
            if (this.leadingIcon_) {
              this.leadingIcon_.setAriaLabel(label);
            }
          }
          /**
           * Sets the text content of the leading icon.
           * @param {string} content
           */

        }, {
          key: 'setLeadingIconContent',
          value: function setLeadingIconContent(content) {
            if (this.leadingIcon_) {
              this.leadingIcon_.setContent(content);
            }
          }
          /**
           * Sets the aria label of the trailing icon.
           * @param {string} label
           */

        }, {
          key: 'setTrailingIconAriaLabel',
          value: function setTrailingIconAriaLabel(label) {
            if (this.trailingIcon_) {
              this.trailingIcon_.setAriaLabel(label);
            }
          }
          /**
           * Sets the text content of the trailing icon.
           * @param {string} content
           */

        }, {
          key: 'setTrailingIconContent',
          value: function setTrailingIconContent(content) {
            if (this.trailingIcon_) {
              this.trailingIcon_.setContent(content);
            }
          }
          /**
           * @return {boolean} True if the Text Field input fails in converting the
           *     user-supplied value.
           * @private
           */

        }, {
          key: 'isBadInput_',
          value: function isBadInput_() {
            return this.getNativeInput_().validity.badInput;
          }
          /**
           * @return {boolean} The result of native validity checking
           *     (ValidityState.valid).
           */

        }, {
          key: 'isNativeInputValid_',
          value: function isNativeInputValid_() {
            return this.getNativeInput_().validity.valid;
          }
          /**
           * Styles the component based on the validity state.
           * @param {boolean} isValid
           * @private
           */

        }, {
          key: 'styleValidity_',
          value: function styleValidity_(isValid) {
            var INVALID = MDCTextFieldFoundation.cssClasses.INVALID;

            if (isValid) {
              this.adapter_.removeClass(INVALID);
            } else {
              this.adapter_.addClass(INVALID);
            }

            if (this.helperText_) {
              this.helperText_.setValidity(isValid);
            }
          }
          /**
           * Styles the component based on the focused state.
           * @param {boolean} isFocused
           * @private
           */

        }, {
          key: 'styleFocused_',
          value: function styleFocused_(isFocused) {
            var FOCUSED = MDCTextFieldFoundation.cssClasses.FOCUSED;

            if (isFocused) {
              this.adapter_.addClass(FOCUSED);
            } else {
              this.adapter_.removeClass(FOCUSED);
            }
          }
          /**
           * Styles the component based on the disabled state.
           * @param {boolean} isDisabled
           * @private
           */

        }, {
          key: 'styleDisabled_',
          value: function styleDisabled_(isDisabled) {
            var _MDCTextFieldFoundati = MDCTextFieldFoundation.cssClasses,
                DISABLED = _MDCTextFieldFoundati.DISABLED,
                INVALID = _MDCTextFieldFoundati.INVALID;

            if (isDisabled) {
              this.adapter_.addClass(DISABLED);
              this.adapter_.removeClass(INVALID);
            } else {
              this.adapter_.removeClass(DISABLED);
            }

            if (this.leadingIcon_) {
              this.leadingIcon_.setDisabled(isDisabled);
            }

            if (this.trailingIcon_) {
              this.trailingIcon_.setDisabled(isDisabled);
            }
          }
          /**
           * @return {!Element|!NativeInputType} The native text input from the
           * host environment, or a dummy if none exists.
           * @private
           */

        }, {
          key: 'getNativeInput_',
          value: function getNativeInput_() {
            return this.adapter_.getNativeInput() ||
            /** @type {!NativeInputType} */
            {
              value: '',
              disabled: false,
              validity: {
                badInput: false,
                valid: true
              }
            };
          }
        }]);

        return MDCTextFieldFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCTextFieldFoundation;
      /***/
    },
    /* 152 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return MDCTextFieldHelperText;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(61);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(26);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCComponent<!MDCTextFieldHelperTextFoundation>}
       * @final
       */


      var MDCTextFieldHelperText = function (_MDCComponent) {
        _inherits(MDCTextFieldHelperText, _MDCComponent);

        function MDCTextFieldHelperText() {
          _classCallCheck(this, MDCTextFieldHelperText);

          return _possibleConstructorReturn(this, (MDCTextFieldHelperText.__proto__ || Object.getPrototypeOf(MDCTextFieldHelperText)).apply(this, arguments));
        }

        _createClass(MDCTextFieldHelperText, [{
          key: 'getDefaultFoundation',

          /**
           * @return {!MDCTextFieldHelperTextFoundation}
           */
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ](
            /** @type {!MDCTextFieldHelperTextAdapter} */
            _extends({
              addClass: function addClass(className) {
                return _this2.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this2.root_.classList.remove(className);
              },
              hasClass: function hasClass(className) {
                return _this2.root_.classList.contains(className);
              },
              setAttr: function setAttr(attr, value) {
                return _this2.root_.setAttribute(attr, value);
              },
              removeAttr: function removeAttr(attr) {
                return _this2.root_.removeAttribute(attr);
              },
              setContent: function setContent(content) {
                _this2.root_.textContent = content;
              }
            }));
          }
        }, {
          key: 'foundation',

          /**
           * @return {!MDCTextFieldHelperTextFoundation}
           */
          get: function get() {
            return this.foundation_;
          }
        }], [{
          key: 'attachTo',

          /**
           * @param {!Element} root
           * @return {!MDCTextFieldHelperText}
           */
          value: function attachTo(root) {
            return new MDCTextFieldHelperText(root);
          }
        }]);

        return MDCTextFieldHelperText;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 153 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return MDCTextFieldIcon;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(62);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(27);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCComponent<!MDCTextFieldIconFoundation>}
       * @final
       */


      var MDCTextFieldIcon = function (_MDCComponent) {
        _inherits(MDCTextFieldIcon, _MDCComponent);

        function MDCTextFieldIcon() {
          _classCallCheck(this, MDCTextFieldIcon);

          return _possibleConstructorReturn(this, (MDCTextFieldIcon.__proto__ || Object.getPrototypeOf(MDCTextFieldIcon)).apply(this, arguments));
        }

        _createClass(MDCTextFieldIcon, [{
          key: 'getDefaultFoundation',

          /**
           * @return {!MDCTextFieldIconFoundation}
           */
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ](
            /** @type {!MDCTextFieldIconAdapter} */
            _extends({
              getAttr: function getAttr(attr) {
                return _this2.root_.getAttribute(attr);
              },
              setAttr: function setAttr(attr, value) {
                return _this2.root_.setAttribute(attr, value);
              },
              removeAttr: function removeAttr(attr) {
                return _this2.root_.removeAttribute(attr);
              },
              setContent: function setContent(content) {
                _this2.root_.textContent = content;
              },
              registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
                return _this2.root_.addEventListener(evtType, handler);
              },
              deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
                return _this2.root_.removeEventListener(evtType, handler);
              },
              notifyIconAction: function notifyIconAction() {
                return _this2.emit(__WEBPACK_IMPORTED_MODULE_2__foundation__["a"
                /* default */
                ].strings.ICON_EVENT, {}
                /* evtData */
                , true
                /* shouldBubble */
                );
              }
            }));
          }
        }, {
          key: 'foundation',

          /**
           * @return {!MDCTextFieldIconFoundation}
           */
          get: function get() {
            return this.foundation_;
          }
        }], [{
          key: 'attachTo',

          /**
           * @param {!Element} root
           * @return {!MDCTextFieldIcon}
           */
          value: function attachTo(root) {
            return new MDCTextFieldIcon(root);
          }
        }]);

        return MDCTextFieldIcon;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 154 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCToolbar", function () {
        return MDCToolbar;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__ = __webpack_require__(2);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(155);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCToolbarFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__["a"];
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var MDCToolbar = function (_MDCComponent) {
        _inherits(MDCToolbar, _MDCComponent);

        function MDCToolbar() {
          _classCallCheck(this, MDCToolbar);

          return _possibleConstructorReturn(this, (MDCToolbar.__proto__ || Object.getPrototypeOf(MDCToolbar)).apply(this, arguments));
        }

        _createClass(MDCToolbar, [{
          key: 'initialize',
          value: function initialize() {
            this.ripples_ = [].map.call(this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ].strings.ICON_SELECTOR), function (icon) {
              var ripple = __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__["MDCRipple"].attachTo(icon);

              ripple.unbounded = true;
              return ripple;
            });
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.ripples_.forEach(function (ripple) {
              ripple.destroy();
            });

            _get(MDCToolbar.prototype.__proto__ || Object.getPrototypeOf(MDCToolbar.prototype), 'destroy', this).call(this);
          }
        }, {
          key: 'getDefaultFoundation',
          value: function getDefaultFoundation() {
            var _this2 = this;

            return new __WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ]({
              hasClass: function hasClass(className) {
                return _this2.root_.classList.contains(className);
              },
              addClass: function addClass(className) {
                return _this2.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this2.root_.classList.remove(className);
              },
              registerScrollHandler: function registerScrollHandler(handler) {
                return window.addEventListener('scroll', handler);
              },
              deregisterScrollHandler: function deregisterScrollHandler(handler) {
                return window.removeEventListener('scroll', handler);
              },
              registerResizeHandler: function registerResizeHandler(handler) {
                return window.addEventListener('resize', handler);
              },
              deregisterResizeHandler: function deregisterResizeHandler(handler) {
                return window.removeEventListener('resize', handler);
              },
              getViewportWidth: function getViewportWidth() {
                return window.innerWidth;
              },
              getViewportScrollY: function getViewportScrollY() {
                return window.pageYOffset;
              },
              getOffsetHeight: function getOffsetHeight() {
                return _this2.root_.offsetHeight;
              },
              getFirstRowElementOffsetHeight: function getFirstRowElementOffsetHeight() {
                return _this2.firstRowElement_.offsetHeight;
              },
              notifyChange: function notifyChange(evtData) {
                return _this2.emit(__WEBPACK_IMPORTED_MODULE_2__foundation__["a"
                /* default */
                ].strings.CHANGE_EVENT, evtData);
              },
              setStyle: function setStyle(property, value) {
                return _this2.root_.style.setProperty(property, value);
              },
              setStyleForTitleElement: function setStyleForTitleElement(property, value) {
                return _this2.titleElement_.style.setProperty(property, value);
              },
              setStyleForFlexibleRowElement: function setStyleForFlexibleRowElement(property, value) {
                return _this2.firstRowElement_.style.setProperty(property, value);
              },
              setStyleForFixedAdjustElement: function setStyleForFixedAdjustElement(property, value) {
                if (_this2.fixedAdjustElement) {
                  _this2.fixedAdjustElement.style.setProperty(property, value);
                }
              }
            });
          }
        }, {
          key: 'firstRowElement_',
          get: function get() {
            return this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ].strings.FIRST_ROW_SELECTOR);
          }
        }, {
          key: 'titleElement_',
          get: function get() {
            return this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_2__foundation__["a"
            /* default */
            ].strings.TITLE_SELECTOR);
          }
        }, {
          key: 'fixedAdjustElement',
          set: function set(fixedAdjustElement) {
            this.fixedAdjustElement_ = fixedAdjustElement;
            this.foundation_.updateAdjustElementStyles();
          },
          get: function get() {
            return this.fixedAdjustElement_;
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCToolbar(root);
          }
        }]);

        return MDCToolbar;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 155 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(156);

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var MDCToolbarFoundation = function (_MDCFoundation) {
        _inherits(MDCToolbarFoundation, _MDCFoundation);

        _createClass(MDCToolbarFoundation, null, [{
          key: 'cssClasses',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_1__constants__["a"
            /* cssClasses */
            ];
          }
        }, {
          key: 'strings',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_1__constants__["c"
            /* strings */
            ];
          }
        }, {
          key: 'numbers',
          get: function get() {
            return __WEBPACK_IMPORTED_MODULE_1__constants__["b"
            /* numbers */
            ];
          }
        }, {
          key: 'defaultAdapter',
          get: function get() {
            return {
              hasClass: function hasClass() {
                return (
                  /* className: string */

                  /* boolean */
                  false
                );
              },
              addClass: function addClass()
              /* className: string */
              {},
              removeClass: function removeClass()
              /* className: string */
              {},
              registerScrollHandler: function registerScrollHandler()
              /* handler: EventListener */
              {},
              deregisterScrollHandler: function deregisterScrollHandler()
              /* handler: EventListener */
              {},
              registerResizeHandler: function registerResizeHandler()
              /* handler: EventListener */
              {},
              deregisterResizeHandler: function deregisterResizeHandler()
              /* handler: EventListener */
              {},
              getViewportWidth: function getViewportWidth() {
                return (
                  /* number */
                  0
                );
              },
              getViewportScrollY: function getViewportScrollY() {
                return (
                  /* number */
                  0
                );
              },
              getOffsetHeight: function getOffsetHeight() {
                return (
                  /* number */
                  0
                );
              },
              getFirstRowElementOffsetHeight: function getFirstRowElementOffsetHeight() {
                return (
                  /* number */
                  0
                );
              },
              notifyChange: function notifyChange()
              /* evtData: {flexibleExpansionRatio: number} */
              {},
              setStyle: function setStyle()
              /* property: string, value: string */
              {},
              setStyleForTitleElement: function setStyleForTitleElement()
              /* property: string, value: string */
              {},
              setStyleForFlexibleRowElement: function setStyleForFlexibleRowElement()
              /* property: string, value: string */
              {},
              setStyleForFixedAdjustElement: function setStyleForFixedAdjustElement()
              /* property: string, value: string */
              {}
            };
          }
        }]);

        function MDCToolbarFoundation(adapter) {
          _classCallCheck(this, MDCToolbarFoundation);

          var _this = _possibleConstructorReturn(this, (MDCToolbarFoundation.__proto__ || Object.getPrototypeOf(MDCToolbarFoundation)).call(this, _extends(MDCToolbarFoundation.defaultAdapter, adapter)));

          _this.resizeHandler_ = function () {
            return _this.checkRowHeight_();
          };

          _this.scrollHandler_ = function () {
            return _this.updateToolbarStyles_();
          };

          _this.checkRowHeightFrame_ = 0;
          _this.scrollFrame_ = 0;
          _this.executedLastChange_ = false;
          _this.calculations_ = {
            toolbarRowHeight: 0,
            // Calculated Height ratio. We use ratio to calculate corresponding heights in resize event.
            toolbarRatio: 0,
            // The ratio of toolbar height to row height
            flexibleExpansionRatio: 0,
            // The ratio of flexible space height to row height
            maxTranslateYRatio: 0,
            // The ratio of max toolbar move up distance to row height
            scrollThresholdRatio: 0,
            // The ratio of max scrollTop that we should listen to to row height
            // Derived Heights based on the above key ratios.
            toolbarHeight: 0,
            flexibleExpansionHeight: 0,
            // Flexible row minus toolbar height (derived)
            maxTranslateYDistance: 0,
            // When toolbar only fix last row (derived)
            scrollThreshold: 0
          }; // Toolbar fixed behavior
          // If toolbar is fixed

          _this.fixed_ = false; // If fixed is targeted only at the last row

          _this.fixedLastrow_ = false; // Toolbar flexible behavior
          // If the first row is flexible

          _this.hasFlexibleRow_ = false; // If use the default behavior

          _this.useFlexDefaultBehavior_ = false;
          return _this;
        }

        _createClass(MDCToolbarFoundation, [{
          key: 'init',
          value: function init() {
            this.fixed_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED);
            this.fixedLastrow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED_LASTROW) & this.fixed_;
            this.hasFlexibleRow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.TOOLBAR_ROW_FLEXIBLE);

            if (this.hasFlexibleRow_) {
              this.useFlexDefaultBehavior_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_DEFAULT_BEHAVIOR);
            }

            this.initKeyRatio_();
            this.setKeyHeights_();
            this.adapter_.registerResizeHandler(this.resizeHandler_);
            this.adapter_.registerScrollHandler(this.scrollHandler_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.adapter_.deregisterResizeHandler(this.resizeHandler_);
            this.adapter_.deregisterScrollHandler(this.scrollHandler_);
          }
        }, {
          key: 'updateAdjustElementStyles',
          value: function updateAdjustElementStyles() {
            if (this.fixed_) {
              this.adapter_.setStyleForFixedAdjustElement('margin-top', this.calculations_.toolbarHeight + 'px');
            }
          }
        }, {
          key: 'getFlexibleExpansionRatio_',
          value: function getFlexibleExpansionRatio_(scrollTop) {
            // To prevent division by zero when there is no flexibleExpansionHeight
            var delta = 0.0001;
            return Math.max(0, 1 - scrollTop / (this.calculations_.flexibleExpansionHeight + delta));
          }
        }, {
          key: 'checkRowHeight_',
          value: function checkRowHeight_() {
            var _this2 = this;

            cancelAnimationFrame(this.checkRowHeightFrame_);
            this.checkRowHeightFrame_ = requestAnimationFrame(function () {
              return _this2.setKeyHeights_();
            });
          }
        }, {
          key: 'setKeyHeights_',
          value: function setKeyHeights_() {
            var newToolbarRowHeight = this.getRowHeight_();

            if (newToolbarRowHeight !== this.calculations_.toolbarRowHeight) {
              this.calculations_.toolbarRowHeight = newToolbarRowHeight;
              this.calculations_.toolbarHeight = this.calculations_.toolbarRatio * this.calculations_.toolbarRowHeight;
              this.calculations_.flexibleExpansionHeight = this.calculations_.flexibleExpansionRatio * this.calculations_.toolbarRowHeight;
              this.calculations_.maxTranslateYDistance = this.calculations_.maxTranslateYRatio * this.calculations_.toolbarRowHeight;
              this.calculations_.scrollThreshold = this.calculations_.scrollThresholdRatio * this.calculations_.toolbarRowHeight;
              this.updateAdjustElementStyles();
              this.updateToolbarStyles_();
            }
          }
        }, {
          key: 'updateToolbarStyles_',
          value: function updateToolbarStyles_() {
            var _this3 = this;

            cancelAnimationFrame(this.scrollFrame_);
            this.scrollFrame_ = requestAnimationFrame(function () {
              var scrollTop = _this3.adapter_.getViewportScrollY();

              var hasScrolledOutOfThreshold = _this3.scrolledOutOfThreshold_(scrollTop);

              if (hasScrolledOutOfThreshold && _this3.executedLastChange_) {
                return;
              }

              var flexibleExpansionRatio = _this3.getFlexibleExpansionRatio_(scrollTop);

              _this3.updateToolbarFlexibleState_(flexibleExpansionRatio);

              if (_this3.fixedLastrow_) {
                _this3.updateToolbarFixedState_(scrollTop);
              }

              if (_this3.hasFlexibleRow_) {
                _this3.updateFlexibleRowElementStyles_(flexibleExpansionRatio);
              }

              _this3.executedLastChange_ = hasScrolledOutOfThreshold;

              _this3.adapter_.notifyChange({
                flexibleExpansionRatio: flexibleExpansionRatio
              });
            });
          }
        }, {
          key: 'scrolledOutOfThreshold_',
          value: function scrolledOutOfThreshold_(scrollTop) {
            return scrollTop > this.calculations_.scrollThreshold;
          }
        }, {
          key: 'initKeyRatio_',
          value: function initKeyRatio_() {
            var toolbarRowHeight = this.getRowHeight_();
            var firstRowMaxRatio = this.adapter_.getFirstRowElementOffsetHeight() / toolbarRowHeight;
            this.calculations_.toolbarRatio = this.adapter_.getOffsetHeight() / toolbarRowHeight;
            this.calculations_.flexibleExpansionRatio = firstRowMaxRatio - 1;
            this.calculations_.maxTranslateYRatio = this.fixedLastrow_ ? this.calculations_.toolbarRatio - firstRowMaxRatio : 0;
            this.calculations_.scrollThresholdRatio = (this.fixedLastrow_ ? this.calculations_.toolbarRatio : firstRowMaxRatio) - 1;
          }
        }, {
          key: 'getRowHeight_',
          value: function getRowHeight_() {
            var breakpoint = MDCToolbarFoundation.numbers.TOOLBAR_MOBILE_BREAKPOINT;
            return this.adapter_.getViewportWidth() < breakpoint ? MDCToolbarFoundation.numbers.TOOLBAR_ROW_MOBILE_HEIGHT : MDCToolbarFoundation.numbers.TOOLBAR_ROW_HEIGHT;
          }
        }, {
          key: 'updateToolbarFlexibleState_',
          value: function updateToolbarFlexibleState_(flexibleExpansionRatio) {
            this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);
            this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);

            if (flexibleExpansionRatio === 1) {
              this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);
            } else if (flexibleExpansionRatio === 0) {
              this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);
            }
          }
        }, {
          key: 'updateToolbarFixedState_',
          value: function updateToolbarFixedState_(scrollTop) {
            var translateDistance = Math.max(0, Math.min(scrollTop - this.calculations_.flexibleExpansionHeight, this.calculations_.maxTranslateYDistance));
            this.adapter_.setStyle('transform', 'translateY(' + -translateDistance + 'px)');

            if (translateDistance === this.calculations_.maxTranslateYDistance) {
              this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);
            } else {
              this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);
            }
          }
        }, {
          key: 'updateFlexibleRowElementStyles_',
          value: function updateFlexibleRowElementStyles_(flexibleExpansionRatio) {
            if (this.fixed_) {
              var height = this.calculations_.flexibleExpansionHeight * flexibleExpansionRatio;
              this.adapter_.setStyleForFlexibleRowElement('height', height + this.calculations_.toolbarRowHeight + 'px');
            }

            if (this.useFlexDefaultBehavior_) {
              this.updateElementStylesDefaultBehavior_(flexibleExpansionRatio);
            }
          }
        }, {
          key: 'updateElementStylesDefaultBehavior_',
          value: function updateElementStylesDefaultBehavior_(flexibleExpansionRatio) {
            var maxTitleSize = MDCToolbarFoundation.numbers.MAX_TITLE_SIZE;
            var minTitleSize = MDCToolbarFoundation.numbers.MIN_TITLE_SIZE;
            var currentTitleSize = (maxTitleSize - minTitleSize) * flexibleExpansionRatio + minTitleSize;
            this.adapter_.setStyleForTitleElement('font-size', currentTitleSize + 'rem');
          }
        }]);

        return MDCToolbarFoundation;
      }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCToolbarFoundation;
      /***/
    },
    /* 156 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "a", function () {
        return cssClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "c", function () {
        return strings;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return numbers;
      });
      /**
       * @license
       * Copyright 2017 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var cssClasses = {
        FIXED: 'mdc-toolbar--fixed',
        FIXED_LASTROW: 'mdc-toolbar--fixed-lastrow-only',
        FIXED_AT_LAST_ROW: 'mdc-toolbar--fixed-at-last-row',
        TOOLBAR_ROW_FLEXIBLE: 'mdc-toolbar--flexible',
        FLEXIBLE_DEFAULT_BEHAVIOR: 'mdc-toolbar--flexible-default-behavior',
        FLEXIBLE_MAX: 'mdc-toolbar--flexible-space-maximized',
        FLEXIBLE_MIN: 'mdc-toolbar--flexible-space-minimized'
      };
      var strings = {
        TITLE_SELECTOR: '.mdc-toolbar__title',
        ICON_SELECTOR: '.mdc-toolbar__icon',
        FIRST_ROW_SELECTOR: '.mdc-toolbar__row:first-child',
        CHANGE_EVENT: 'MDCToolbar:change'
      };
      var numbers = {
        MAX_TITLE_SIZE: 2.125,
        MIN_TITLE_SIZE: 1.25,
        TOOLBAR_ROW_HEIGHT: 64,
        TOOLBAR_ROW_MOBILE_HEIGHT: 56,
        TOOLBAR_MOBILE_BREAKPOINT: 600
      };
      /***/
    },
    /* 157 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";

      Object.defineProperty(__webpack_exports__, "__esModule", {
        value: true
      });
      /* harmony export (binding) */

      __webpack_require__.d(__webpack_exports__, "MDCTopAppBar", function () {
        return MDCTopAppBar;
      });
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_0__adapter__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__material_base_component__ = __webpack_require__(1);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__material_ripple_index__ = __webpack_require__(2);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_3__constants__ = __webpack_require__(7);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_4__foundation__ = __webpack_require__(12);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_5__fixed_foundation__ = __webpack_require__(158);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_6__short_foundation__ = __webpack_require__(159);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_7__standard_foundation__ = __webpack_require__(160);
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCTopAppBarBaseFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_4__foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCTopAppBarFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_7__standard_foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCFixedTopAppBarFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_5__fixed_foundation__["a"];
      });
      /* harmony reexport (binding) */


      __webpack_require__.d(__webpack_exports__, "MDCShortTopAppBarFoundation", function () {
        return __WEBPACK_IMPORTED_MODULE_6__short_foundation__["a"];
      });

      var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCComponent<!MDCTopAppBarBaseFoundation>}
       * @final
       */


      var MDCTopAppBar = function (_MDCComponent) {
        _inherits(MDCTopAppBar, _MDCComponent);
        /**
         * @param {...?} args
         */


        function MDCTopAppBar() {
          var _ref;

          _classCallCheck(this, MDCTopAppBar);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          /** @private {?Element} */


          var _this = _possibleConstructorReturn(this, (_ref = MDCTopAppBar.__proto__ || Object.getPrototypeOf(MDCTopAppBar)).call.apply(_ref, [this].concat(args)));

          _this.navIcon_;
          /** @type {?Array<MDCRipple>} */

          _this.iconRipples_;
          /** @type {Object} */

          _this.scrollTarget_;
          return _this;
        }

        _createClass(MDCTopAppBar, [{
          key: 'initialize',
          value: function initialize() {
            var rippleFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (el) {
              return __WEBPACK_IMPORTED_MODULE_2__material_ripple_index__["MDCRipple"].attachTo(el);
            };
            this.navIcon_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__["c"
            /* strings */
            ].NAVIGATION_ICON_SELECTOR); // Get all icons in the toolbar and instantiate the ripples

            var icons = [].slice.call(this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_3__constants__["c"
            /* strings */
            ].ACTION_ITEM_SELECTOR));

            if (this.navIcon_) {
              icons.push(this.navIcon_);
            }

            this.iconRipples_ = icons.map(function (icon) {
              var ripple = rippleFactory(icon);
              ripple.unbounded = true;
              return ripple;
            });
            this.scrollTarget_ = window;
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            this.iconRipples_.forEach(function (iconRipple) {
              return iconRipple.destroy();
            });

            _get(MDCTopAppBar.prototype.__proto__ || Object.getPrototypeOf(MDCTopAppBar.prototype), 'destroy', this).call(this);
          }
        }, {
          key: 'setScrollTarget',
          value: function setScrollTarget(target) {
            this.foundation_.destroyScrollHandler();
            this.scrollTarget_ = target;
            this.foundation_.initScrollHandler();
          }
          /**
           * @param {!Element} root
           * @return {!MDCTopAppBar}
           */

        }, {
          key: 'getDefaultFoundation',

          /**
           * @return {!MDCTopAppBarBaseFoundation}
           */
          value: function getDefaultFoundation() {
            var _this2 = this;
            /** @type {!MDCTopAppBarAdapter} */


            var adapter =
            /** @type {!MDCTopAppBarAdapter} */
            _extends({
              hasClass: function hasClass(className) {
                return _this2.root_.classList.contains(className);
              },
              addClass: function addClass(className) {
                return _this2.root_.classList.add(className);
              },
              removeClass: function removeClass(className) {
                return _this2.root_.classList.remove(className);
              },
              setStyle: function setStyle(property, value) {
                return _this2.root_.style.setProperty(property, value);
              },
              getTopAppBarHeight: function getTopAppBarHeight() {
                return _this2.root_.clientHeight;
              },
              registerNavigationIconInteractionHandler: function registerNavigationIconInteractionHandler(evtType, handler) {
                if (_this2.navIcon_) {
                  _this2.navIcon_.addEventListener(evtType, handler);
                }
              },
              deregisterNavigationIconInteractionHandler: function deregisterNavigationIconInteractionHandler(evtType, handler) {
                if (_this2.navIcon_) {
                  _this2.navIcon_.removeEventListener(evtType, handler);
                }
              },
              notifyNavigationIconClicked: function notifyNavigationIconClicked() {
                _this2.emit(__WEBPACK_IMPORTED_MODULE_3__constants__["c"
                /* strings */
                ].NAVIGATION_EVENT, {});
              },
              registerScrollHandler: function registerScrollHandler(handler) {
                return _this2.scrollTarget_.addEventListener('scroll', handler);
              },
              deregisterScrollHandler: function deregisterScrollHandler(handler) {
                return _this2.scrollTarget_.removeEventListener('scroll', handler);
              },
              registerResizeHandler: function registerResizeHandler(handler) {
                return window.addEventListener('resize', handler);
              },
              deregisterResizeHandler: function deregisterResizeHandler(handler) {
                return window.removeEventListener('resize', handler);
              },
              getViewportScrollY: function getViewportScrollY() {
                return _this2.scrollTarget_[_this2.scrollTarget_ === window ? 'pageYOffset' : 'scrollTop'];
              },
              getTotalActionItems: function getTotalActionItems() {
                return _this2.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_3__constants__["c"
                /* strings */
                ].ACTION_ITEM_SELECTOR).length;
              }
            });
            /** @type {!MDCTopAppBarBaseFoundation} */


            var foundation = void 0;

            if (this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_3__constants__["a"
            /* cssClasses */
            ].SHORT_CLASS)) {
              foundation = new __WEBPACK_IMPORTED_MODULE_6__short_foundation__["a"
              /* default */
              ](adapter);
            } else if (this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_3__constants__["a"
            /* cssClasses */
            ].FIXED_CLASS)) {
              foundation = new __WEBPACK_IMPORTED_MODULE_5__fixed_foundation__["a"
              /* default */
              ](adapter);
            } else {
              foundation = new __WEBPACK_IMPORTED_MODULE_7__standard_foundation__["a"
              /* default */
              ](adapter);
            }

            return foundation;
          }
        }], [{
          key: 'attachTo',
          value: function attachTo(root) {
            return new MDCTopAppBar(root);
          }
        }]);

        return MDCTopAppBar;
      }(__WEBPACK_IMPORTED_MODULE_1__material_base_component__["a"
      /* default */
      ]);
      /***/

    },
    /* 158 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(7);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(12);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCTopAppBarFoundation<!MDCFixedTopAppBarFoundation>}
       * @final
       */


      var MDCFixedTopAppBarFoundation = function (_MDCTopAppBarFoundati) {
        _inherits(MDCFixedTopAppBarFoundation, _MDCTopAppBarFoundati);
        /**
         * @param {!MDCTopAppBarAdapter} adapter
         */


        function MDCFixedTopAppBarFoundation(adapter) {
          _classCallCheck(this, MDCFixedTopAppBarFoundation);
          /** State variable for the previous scroll iteration top app bar state */


          var _this = _possibleConstructorReturn(this, (MDCFixedTopAppBarFoundation.__proto__ || Object.getPrototypeOf(MDCFixedTopAppBarFoundation)).call(this, adapter));

          _this.wasScrolled_ = false;

          _this.scrollHandler_ = function () {
            return _this.fixedScrollHandler_();
          };

          return _this;
        }

        _createClass(MDCFixedTopAppBarFoundation, [{
          key: 'init',
          value: function init() {
            _get(MDCFixedTopAppBarFoundation.prototype.__proto__ || Object.getPrototypeOf(MDCFixedTopAppBarFoundation.prototype), 'init', this).call(this);

            this.adapter_.registerScrollHandler(this.scrollHandler_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            _get(MDCFixedTopAppBarFoundation.prototype.__proto__ || Object.getPrototypeOf(MDCFixedTopAppBarFoundation.prototype), 'destroy', this).call(this);

            this.adapter_.deregisterScrollHandler(this.scrollHandler_);
          }
          /**
           * Scroll handler for applying/removing the modifier class
           * on the fixed top app bar.
           */

        }, {
          key: 'fixedScrollHandler_',
          value: function fixedScrollHandler_() {
            var currentScroll = this.adapter_.getViewportScrollY();

            if (currentScroll <= 0) {
              if (this.wasScrolled_) {
                this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_0__constants__["a"
                /* cssClasses */
                ].FIXED_SCROLLED_CLASS);
                this.wasScrolled_ = false;
              }
            } else {
              if (!this.wasScrolled_) {
                this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_0__constants__["a"
                /* cssClasses */
                ].FIXED_SCROLLED_CLASS);
                this.wasScrolled_ = true;
              }
            }
          }
        }]);

        return MDCFixedTopAppBarFoundation;
      }(__WEBPACK_IMPORTED_MODULE_2__foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCFixedTopAppBarFoundation;
      /***/
    },
    /* 159 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__adapter__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(12);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(7);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */

      /**
       * @extends {MDCTopAppBarBaseFoundation<!MDCShortTopAppBarFoundation>}
       * @final
       */


      var MDCShortTopAppBarFoundation = function (_MDCTopAppBarBaseFoun) {
        _inherits(MDCShortTopAppBarFoundation, _MDCTopAppBarBaseFoun);
        /**
         * @param {!MDCTopAppBarAdapter} adapter
         */


        function MDCShortTopAppBarFoundation(adapter) {
          _classCallCheck(this, MDCShortTopAppBarFoundation); // State variable for the current top app bar state


          var _this = _possibleConstructorReturn(this, (MDCShortTopAppBarFoundation.__proto__ || Object.getPrototypeOf(MDCShortTopAppBarFoundation)).call(this, adapter));

          _this.isCollapsed = false;

          _this.scrollHandler_ = function () {
            return _this.shortAppBarScrollHandler_();
          };

          return _this;
        }

        _createClass(MDCShortTopAppBarFoundation, [{
          key: 'init',
          value: function init() {
            _get(MDCShortTopAppBarFoundation.prototype.__proto__ || Object.getPrototypeOf(MDCShortTopAppBarFoundation.prototype), 'init', this).call(this);

            var isAlwaysCollapsed = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
            /* cssClasses */
            ].SHORT_COLLAPSED_CLASS);

            if (this.adapter_.getTotalActionItems() > 0) {
              this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
              /* cssClasses */
              ].SHORT_HAS_ACTION_ITEM_CLASS);
            }

            if (!isAlwaysCollapsed) {
              this.adapter_.registerScrollHandler(this.scrollHandler_);
              this.shortAppBarScrollHandler_();
            }
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            _get(MDCShortTopAppBarFoundation.prototype.__proto__ || Object.getPrototypeOf(MDCShortTopAppBarFoundation.prototype), 'destroy', this).call(this);

            this.adapter_.deregisterScrollHandler(this.scrollHandler_);
          }
          /**
           * Scroll handler for applying/removing the collapsed modifier class
           * on the short top app bar.
           * @private
           */

        }, {
          key: 'shortAppBarScrollHandler_',
          value: function shortAppBarScrollHandler_() {
            var currentScroll = this.adapter_.getViewportScrollY();

            if (currentScroll <= 0) {
              if (this.isCollapsed) {
                this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].SHORT_COLLAPSED_CLASS);
                this.isCollapsed = false;
              }
            } else {
              if (!this.isCollapsed) {
                this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__["a"
                /* cssClasses */
                ].SHORT_COLLAPSED_CLASS);
                this.isCollapsed = true;
              }
            }
          }
        }]);

        return MDCShortTopAppBarFoundation;
      }(__WEBPACK_IMPORTED_MODULE_1__foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCShortTopAppBarFoundation;
      /***/
    },
    /* 160 */

    /***/
    function (module, __webpack_exports__, __webpack_require__) {
      "use strict";
      /* harmony import */

      var __WEBPACK_IMPORTED_MODULE_0__adapter__ = __webpack_require__(6);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(12);
      /* harmony import */


      var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(7);

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);

        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);

          if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;

          if (getter === undefined) {
            return undefined;
          }

          return getter.call(receiver);
        }
      };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (_typeof(call) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + _typeof(superClass));
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      /**
       * @license
       * Copyright 2018 Google Inc.
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy
       * of this software and associated documentation files (the "Software"), to deal
       * in the Software without restriction, including without limitation the rights
       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
       * copies of the Software, and to permit persons to whom the Software is
       * furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in
       * all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
       * THE SOFTWARE.
       */


      var INITIAL_VALUE = 0;
      /**
       * @extends {MDCTopAppBarBaseFoundation<!MDCTopAppBarFoundation>}
       * @final
       */

      var MDCTopAppBarFoundation = function (_MDCTopAppBarBaseFoun) {
        _inherits(MDCTopAppBarFoundation, _MDCTopAppBarBaseFoun);
        /**
         * @param {!MDCTopAppBarAdapter} adapter
         */


        function MDCTopAppBarFoundation(adapter) {
          _classCallCheck(this, MDCTopAppBarFoundation);
          /**
           * Used for diffs of current scroll position vs previous scroll position
           * @private {number}
           */


          var _this = _possibleConstructorReturn(this, (MDCTopAppBarFoundation.__proto__ || Object.getPrototypeOf(MDCTopAppBarFoundation)).call(this, adapter));

          _this.lastScrollPosition_ = _this.adapter_.getViewportScrollY();
          /**
           * Used to verify when the top app bar is completely showing or completely hidden
           * @private {number}
           */

          _this.topAppBarHeight_ = _this.adapter_.getTopAppBarHeight();
          /**
           * wasDocked_ is used to indicate if the top app bar was docked in the previous
           * scroll handler iteration.
           * @private {boolean}
           */

          _this.wasDocked_ = true;
          /**
           * isDockedShowing_ is used to indicate if the top app bar is docked in the fully
           * shown position.
           * @private {boolean}
           */

          _this.isDockedShowing_ = true;
          /**
           * Variable for current scroll position of the top app bar
           * @private {number}
           */

          _this.currentAppBarOffsetTop_ = 0;
          /**
           * Used to prevent the top app bar from being scrolled out of view during resize events
           * @private {boolean} */

          _this.isCurrentlyBeingResized_ = false;
          /**
           * The timeout that's used to throttle the resize events
           * @private {number}
           */

          _this.resizeThrottleId_ = INITIAL_VALUE;
          /**
           * The timeout that's used to debounce toggling the isCurrentlyBeingResized_ variable after a resize
           * @private {number}
           */

          _this.resizeDebounceId_ = INITIAL_VALUE;

          _this.scrollHandler_ = function () {
            return _this.topAppBarScrollHandler_();
          };

          _this.resizeHandler_ = function () {
            return _this.topAppBarResizeHandler_();
          };

          return _this;
        }

        _createClass(MDCTopAppBarFoundation, [{
          key: 'init',
          value: function init() {
            _get(MDCTopAppBarFoundation.prototype.__proto__ || Object.getPrototypeOf(MDCTopAppBarFoundation.prototype), 'init', this).call(this);

            this.adapter_.registerScrollHandler(this.scrollHandler_);
            this.adapter_.registerResizeHandler(this.resizeHandler_);
          }
        }, {
          key: 'destroy',
          value: function destroy() {
            _get(MDCTopAppBarFoundation.prototype.__proto__ || Object.getPrototypeOf(MDCTopAppBarFoundation.prototype), 'destroy', this).call(this);

            this.adapter_.deregisterScrollHandler(this.scrollHandler_);
            this.adapter_.deregisterResizeHandler(this.resizeHandler_);
            this.adapter_.setStyle('top', '');
          }
          /**
           * Function to determine if the DOM needs to update.
           * @return {boolean}
           * @private
           */

        }, {
          key: 'checkForUpdate_',
          value: function checkForUpdate_() {
            var offscreenBoundaryTop = -this.topAppBarHeight_;
            var hasAnyPixelsOffscreen = this.currentAppBarOffsetTop_ < 0;
            var hasAnyPixelsOnscreen = this.currentAppBarOffsetTop_ > offscreenBoundaryTop;
            var partiallyShowing = hasAnyPixelsOffscreen && hasAnyPixelsOnscreen; // If it's partially showing, it can't be docked.

            if (partiallyShowing) {
              this.wasDocked_ = false;
            } else {
              // Not previously docked and not partially showing, it's now docked.
              if (!this.wasDocked_) {
                this.wasDocked_ = true;
                return true;
              } else if (this.isDockedShowing_ !== hasAnyPixelsOnscreen) {
                this.isDockedShowing_ = hasAnyPixelsOnscreen;
                return true;
              }
            }

            return partiallyShowing;
          }
          /**
           * Function to move the top app bar if needed.
           * @private
           */

        }, {
          key: 'moveTopAppBar_',
          value: function moveTopAppBar_() {
            if (this.checkForUpdate_()) {
              // Once the top app bar is fully hidden we use the max potential top app bar height as our offset
              // so the top app bar doesn't show if the window resizes and the new height > the old height.
              var offset = this.currentAppBarOffsetTop_;

              if (Math.abs(offset) >= this.topAppBarHeight_) {
                offset = -__WEBPACK_IMPORTED_MODULE_2__constants__["b"
                /* numbers */
                ].MAX_TOP_APP_BAR_HEIGHT;
              }

              this.adapter_.setStyle('top', offset + 'px');
            }
          }
          /**
           * Scroll handler for the default scroll behavior of the top app bar.
           * @private
           */

        }, {
          key: 'topAppBarScrollHandler_',
          value: function topAppBarScrollHandler_() {
            var currentScrollPosition = Math.max(this.adapter_.getViewportScrollY(), 0);
            var diff = currentScrollPosition - this.lastScrollPosition_;
            this.lastScrollPosition_ = currentScrollPosition; // If the window is being resized the lastScrollPosition_ needs to be updated but the
            // current scroll of the top app bar should stay in the same position.

            if (!this.isCurrentlyBeingResized_) {
              this.currentAppBarOffsetTop_ -= diff;

              if (this.currentAppBarOffsetTop_ > 0) {
                this.currentAppBarOffsetTop_ = 0;
              } else if (Math.abs(this.currentAppBarOffsetTop_) > this.topAppBarHeight_) {
                this.currentAppBarOffsetTop_ = -this.topAppBarHeight_;
              }

              this.moveTopAppBar_();
            }
          }
          /**
           * Top app bar resize handler that throttle/debounce functions that execute updates.
           * @private
           */

        }, {
          key: 'topAppBarResizeHandler_',
          value: function topAppBarResizeHandler_() {
            var _this2 = this; // Throttle resize events 10 p/s


            if (!this.resizeThrottleId_) {
              this.resizeThrottleId_ = setTimeout(function () {
                _this2.resizeThrottleId_ = INITIAL_VALUE;

                _this2.throttledResizeHandler_();
              }, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
              /* numbers */
              ].DEBOUNCE_THROTTLE_RESIZE_TIME_MS);
            }

            this.isCurrentlyBeingResized_ = true;

            if (this.resizeDebounceId_) {
              clearTimeout(this.resizeDebounceId_);
            }

            this.resizeDebounceId_ = setTimeout(function () {
              _this2.topAppBarScrollHandler_();

              _this2.isCurrentlyBeingResized_ = false;
              _this2.resizeDebounceId_ = INITIAL_VALUE;
            }, __WEBPACK_IMPORTED_MODULE_2__constants__["b"
            /* numbers */
            ].DEBOUNCE_THROTTLE_RESIZE_TIME_MS);
          }
          /**
           * Throttled function that updates the top app bar scrolled values if the
           * top app bar height changes.
           * @private
           */

        }, {
          key: 'throttledResizeHandler_',
          value: function throttledResizeHandler_() {
            var currentHeight = this.adapter_.getTopAppBarHeight();

            if (this.topAppBarHeight_ !== currentHeight) {
              this.wasDocked_ = false; // Since the top app bar has a different height depending on the screen width, this
              // will ensure that the top app bar remains in the correct location if
              // completely hidden and a resize makes the top app bar a different height.

              this.currentAppBarOffsetTop_ -= this.topAppBarHeight_ - currentHeight;
              this.topAppBarHeight_ = currentHeight;
            }

            this.topAppBarScrollHandler_();
          }
        }]);

        return MDCTopAppBarFoundation;
      }(__WEBPACK_IMPORTED_MODULE_1__foundation__["a"
      /* default */
      ]);
      /* harmony default export */


      __webpack_exports__["a"] = MDCTopAppBarFoundation;
      /***/
    }])
  );
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/mobile-detect/mobile-detect.js":
/*!*****************************************************!*\
  !*** ./node_modules/mobile-detect/mobile-detect.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// THIS FILE IS GENERATED - DO NOT EDIT!

/*!mobile-detect v1.4.3 2018-09-08*/

/*global module:false, define:false*/

/*jshint latedef:false*/

/*!@license Copyright 2013, Heinrich Goebl, License: MIT, see https://github.com/hgoebl/mobile-detect.js*/
(function (define, undefined) {
  define(function () {
    'use strict';

    var impl = {};
    impl.mobileDetectRules = {
      "phones": {
        "iPhone": "\\biPhone\\b|\\biPod\\b",
        "BlackBerry": "BlackBerry|\\bBB10\\b|rim[0-9]+",
        "HTC": "HTC|HTC.*(Sensation|Evo|Vision|Explorer|6800|8100|8900|A7272|S510e|C110e|Legend|Desire|T8282)|APX515CKT|Qtek9090|APA9292KT|HD_mini|Sensation.*Z710e|PG86100|Z715e|Desire.*(A8181|HD)|ADR6200|ADR6400L|ADR6425|001HT|Inspire 4G|Android.*\\bEVO\\b|T-Mobile G1|Z520m|Android [0-9.]+; Pixel",
        "Nexus": "Nexus One|Nexus S|Galaxy.*Nexus|Android.*Nexus.*Mobile|Nexus 4|Nexus 5|Nexus 6",
        "Dell": "Dell[;]? (Streak|Aero|Venue|Venue Pro|Flash|Smoke|Mini 3iX)|XCD28|XCD35|\\b001DL\\b|\\b101DL\\b|\\bGS01\\b",
        "Motorola": "Motorola|DROIDX|DROID BIONIC|\\bDroid\\b.*Build|Android.*Xoom|HRI39|MOT-|A1260|A1680|A555|A853|A855|A953|A955|A956|Motorola.*ELECTRIFY|Motorola.*i1|i867|i940|MB200|MB300|MB501|MB502|MB508|MB511|MB520|MB525|MB526|MB611|MB612|MB632|MB810|MB855|MB860|MB861|MB865|MB870|ME501|ME502|ME511|ME525|ME600|ME632|ME722|ME811|ME860|ME863|ME865|MT620|MT710|MT716|MT720|MT810|MT870|MT917|Motorola.*TITANIUM|WX435|WX445|XT300|XT301|XT311|XT316|XT317|XT319|XT320|XT390|XT502|XT530|XT531|XT532|XT535|XT603|XT610|XT611|XT615|XT681|XT701|XT702|XT711|XT720|XT800|XT806|XT860|XT862|XT875|XT882|XT883|XT894|XT901|XT907|XT909|XT910|XT912|XT928|XT926|XT915|XT919|XT925|XT1021|\\bMoto E\\b|XT1068|XT1092|XT1052",
        "Samsung": "\\bSamsung\\b|SM-G950F|SM-G955F|SM-G9250|GT-19300|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9082|GT-I9100|GT-I9103|GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|GT-S7710|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|SCH-I910|SCH-I920|SCH-I959|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|GT-N7105|SCH-I535|SM-N900A|SGH-I317|SGH-T999L|GT-S5360B|GT-I8262|GT-S6802|GT-S6312|GT-S6310|GT-S5312|GT-S5310|GT-I9105|GT-I8510|GT-S6790N|SM-G7105|SM-N9005|GT-S5301|GT-I9295|GT-I9195|SM-C101|GT-S7392|GT-S7560|GT-B7610|GT-I5510|GT-S7582|GT-S7530E|GT-I8750|SM-G9006V|SM-G9008V|SM-G9009D|SM-G900A|SM-G900D|SM-G900F|SM-G900H|SM-G900I|SM-G900J|SM-G900K|SM-G900L|SM-G900M|SM-G900P|SM-G900R4|SM-G900S|SM-G900T|SM-G900V|SM-G900W8|SHV-E160K|SCH-P709|SCH-P729|SM-T2558|GT-I9205|SM-G9350|SM-J120F|SM-G920F|SM-G920V|SM-G930F|SM-N910C|SM-A310F|GT-I9190|SM-J500FN|SM-G903F|SM-J330F",
        "LG": "\\bLG\\b;|LG[- ]?(C800|C900|E400|E610|E900|E-900|F160|F180K|F180L|F180S|730|855|L160|LS740|LS840|LS970|LU6200|MS690|MS695|MS770|MS840|MS870|MS910|P500|P700|P705|VM696|AS680|AS695|AX840|C729|E970|GS505|272|C395|E739BK|E960|L55C|L75C|LS696|LS860|P769BK|P350|P500|P509|P870|UN272|US730|VS840|VS950|LN272|LN510|LS670|LS855|LW690|MN270|MN510|P509|P769|P930|UN200|UN270|UN510|UN610|US670|US740|US760|UX265|UX840|VN271|VN530|VS660|VS700|VS740|VS750|VS910|VS920|VS930|VX9200|VX11000|AX840A|LW770|P506|P925|P999|E612|D955|D802|MS323|M257)",
        "Sony": "SonyST|SonyLT|SonyEricsson|SonyEricssonLT15iv|LT18i|E10i|LT28h|LT26w|SonyEricssonMT27i|C5303|C6902|C6903|C6906|C6943|D2533",
        "Asus": "Asus.*Galaxy|PadFone.*Mobile",
        "NokiaLumia": "Lumia [0-9]{3,4}",
        "Micromax": "Micromax.*\\b(A210|A92|A88|A72|A111|A110Q|A115|A116|A110|A90S|A26|A51|A35|A54|A25|A27|A89|A68|A65|A57|A90)\\b",
        "Palm": "PalmSource|Palm",
        "Vertu": "Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature",
        "Pantech": "PANTECH|IM-A850S|IM-A840S|IM-A830L|IM-A830K|IM-A830S|IM-A820L|IM-A810K|IM-A810S|IM-A800S|IM-T100K|IM-A725L|IM-A780L|IM-A775C|IM-A770K|IM-A760S|IM-A750K|IM-A740S|IM-A730S|IM-A720L|IM-A710K|IM-A690L|IM-A690S|IM-A650S|IM-A630K|IM-A600S|VEGA PTL21|PT003|P8010|ADR910L|P6030|P6020|P9070|P4100|P9060|P5000|CDM8992|TXT8045|ADR8995|IS11PT|P2030|P6010|P8000|PT002|IS06|CDM8999|P9050|PT001|TXT8040|P2020|P9020|P2000|P7040|P7000|C790",
        "Fly": "IQ230|IQ444|IQ450|IQ440|IQ442|IQ441|IQ245|IQ256|IQ236|IQ255|IQ235|IQ245|IQ275|IQ240|IQ285|IQ280|IQ270|IQ260|IQ250",
        "Wiko": "KITE 4G|HIGHWAY|GETAWAY|STAIRWAY|DARKSIDE|DARKFULL|DARKNIGHT|DARKMOON|SLIDE|WAX 4G|RAINBOW|BLOOM|SUNSET|GOA(?!nna)|LENNY|BARRY|IGGY|OZZY|CINK FIVE|CINK PEAX|CINK PEAX 2|CINK SLIM|CINK SLIM 2|CINK +|CINK KING|CINK PEAX|CINK SLIM|SUBLIM",
        "iMobile": "i-mobile (IQ|i-STYLE|idea|ZAA|Hitz)",
        "SimValley": "\\b(SP-80|XT-930|SX-340|XT-930|SX-310|SP-360|SP60|SPT-800|SP-120|SPT-800|SP-140|SPX-5|SPX-8|SP-100|SPX-8|SPX-12)\\b",
        "Wolfgang": "AT-B24D|AT-AS50HD|AT-AS40W|AT-AS55HD|AT-AS45q2|AT-B26D|AT-AS50Q",
        "Alcatel": "Alcatel",
        "Nintendo": "Nintendo (3DS|Switch)",
        "Amoi": "Amoi",
        "INQ": "INQ",
        "GenericPhone": "Tapatalk|PDA;|SAGEM|\\bmmp\\b|pocket|\\bpsp\\b|symbian|Smartphone|smartfon|treo|up.browser|up.link|vodafone|\\bwap\\b|nokia|Series40|Series60|S60|SonyEricsson|N900|MAUI.*WAP.*Browser"
      },
      "tablets": {
        "iPad": "iPad|iPad.*Mobile",
        "NexusTablet": "Android.*Nexus[\\s]+(7|9|10)",
        "GoogleTablet": "Android.*Pixel C",
        "SamsungTablet": "SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|GT-I9200|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-T337V|SM-T537V|SM-T707V|SM-T807V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|SM-T530|SM-T705|SM-T705C|SM-T535|SM-T331|SM-T800|SM-T700|SM-T537|SM-T807|SM-P907A|SM-T337A|SM-T537A|SM-T707A|SM-T807A|SM-T237|SM-T807P|SM-P607T|SM-T217T|SM-T337T|SM-T807T|SM-T116NQ|SM-T116BU|SM-P550|SM-T350|SM-T550|SM-T9000|SM-P9000|SM-T705Y|SM-T805|GT-P3113|SM-T710|SM-T810|SM-T815|SM-T360|SM-T533|SM-T113|SM-T335|SM-T715|SM-T560|SM-T670|SM-T677|SM-T377|SM-T567|SM-T357T|SM-T555|SM-T561|SM-T713|SM-T719|SM-T813|SM-T819|SM-T580|SM-T355Y?|SM-T280|SM-T817A|SM-T820|SM-W700|SM-P580|SM-T587|SM-P350|SM-P555M|SM-P355M|SM-T113NU|SM-T815Y|SM-T585|SM-T285|SM-T825|SM-W708|SM-T835",
        "Kindle": "Kindle|Silk.*Accelerated|Android.*\\b(KFOT|KFTT|KFJWI|KFJWA|KFOTE|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|WFJWAE|KFSAWA|KFSAWI|KFASWI|KFARWI|KFFOWI|KFGIWI|KFMEWI)\\b|Android.*Silk\/[0-9.]+ like Chrome\/[0-9.]+ (?!Mobile)",
        "SurfaceTablet": "Windows NT [0-9.]+; ARM;.*(Tablet|ARMBJS)",
        "HPTablet": "HP Slate (7|8|10)|HP ElitePad 900|hp-tablet|EliteBook.*Touch|HP 8|Slate 21|HP SlateBook 10",
        "AsusTablet": "^.*PadFone((?!Mobile).)*$|Transformer|TF101|TF101G|TF300T|TF300TG|TF300TL|TF700T|TF700KL|TF701T|TF810C|ME171|ME301T|ME302C|ME371MG|ME370T|ME372MG|ME172V|ME173X|ME400C|Slider SL101|\\bK00F\\b|\\bK00C\\b|\\bK00E\\b|\\bK00L\\b|TX201LA|ME176C|ME102A|\\bM80TA\\b|ME372CL|ME560CG|ME372CG|ME302KL| K010 | K011 | K017 | K01E |ME572C|ME103K|ME170C|ME171C|\\bME70C\\b|ME581C|ME581CL|ME8510C|ME181C|P01Y|PO1MA|P01Z|\\bP027\\b|\\bP024\\b|\\bP00C\\b",
        "BlackBerryTablet": "PlayBook|RIM Tablet",
        "HTCtablet": "HTC_Flyer_P512|HTC Flyer|HTC Jetstream|HTC-P715a|HTC EVO View 4G|PG41200|PG09410",
        "MotorolaTablet": "xoom|sholest|MZ615|MZ605|MZ505|MZ601|MZ602|MZ603|MZ604|MZ606|MZ607|MZ608|MZ609|MZ615|MZ616|MZ617",
        "NookTablet": "Android.*Nook|NookColor|nook browser|BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2",
        "AcerTablet": "Android.*; \\b(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700|A701|W500|W500P|W501|W501P|W510|W511|W700|G100|G100W|B1-A71|B1-710|B1-711|A1-810|A1-811|A1-830)\\b|W3-810|\\bA3-A10\\b|\\bA3-A11\\b|\\bA3-A20\\b|\\bA3-A30",
        "ToshibaTablet": "Android.*(AT100|AT105|AT200|AT205|AT270|AT275|AT300|AT305|AT1S5|AT500|AT570|AT700|AT830)|TOSHIBA.*FOLIO",
        "LGTablet": "\\bL-06C|LG-V909|LG-V900|LG-V700|LG-V510|LG-V500|LG-V410|LG-V400|LG-VK810\\b",
        "FujitsuTablet": "Android.*\\b(F-01D|F-02F|F-05E|F-10D|M532|Q572)\\b",
        "PrestigioTablet": "PMP3170B|PMP3270B|PMP3470B|PMP7170B|PMP3370B|PMP3570C|PMP5870C|PMP3670B|PMP5570C|PMP5770D|PMP3970B|PMP3870C|PMP5580C|PMP5880D|PMP5780D|PMP5588C|PMP7280C|PMP7280C3G|PMP7280|PMP7880D|PMP5597D|PMP5597|PMP7100D|PER3464|PER3274|PER3574|PER3884|PER5274|PER5474|PMP5097CPRO|PMP5097|PMP7380D|PMP5297C|PMP5297C_QUAD|PMP812E|PMP812E3G|PMP812F|PMP810E|PMP880TD|PMT3017|PMT3037|PMT3047|PMT3057|PMT7008|PMT5887|PMT5001|PMT5002",
        "LenovoTablet": "Lenovo TAB|Idea(Tab|Pad)( A1|A10| K1|)|ThinkPad([ ]+)?Tablet|YT3-850M|YT3-X90L|YT3-X90F|YT3-X90X|Lenovo.*(S2109|S2110|S5000|S6000|K3011|A3000|A3500|A1000|A2107|A2109|A1107|A5500|A7600|B6000|B8000|B8080)(-|)(FL|F|HV|H|)|TB-X103F|TB-X304F|TB-X304L|TB-8703F|Tab2A7-10F|TB2-X30L",
        "DellTablet": "Venue 11|Venue 8|Venue 7|Dell Streak 10|Dell Streak 7",
        "YarvikTablet": "Android.*\\b(TAB210|TAB211|TAB224|TAB250|TAB260|TAB264|TAB310|TAB360|TAB364|TAB410|TAB411|TAB420|TAB424|TAB450|TAB460|TAB461|TAB464|TAB465|TAB467|TAB468|TAB07-100|TAB07-101|TAB07-150|TAB07-151|TAB07-152|TAB07-200|TAB07-201-3G|TAB07-210|TAB07-211|TAB07-212|TAB07-214|TAB07-220|TAB07-400|TAB07-485|TAB08-150|TAB08-200|TAB08-201-3G|TAB08-201-30|TAB09-100|TAB09-211|TAB09-410|TAB10-150|TAB10-201|TAB10-211|TAB10-400|TAB10-410|TAB13-201|TAB274EUK|TAB275EUK|TAB374EUK|TAB462EUK|TAB474EUK|TAB9-200)\\b",
        "MedionTablet": "Android.*\\bOYO\\b|LIFE.*(P9212|P9514|P9516|S9512)|LIFETAB",
        "ArnovaTablet": "97G4|AN10G2|AN7bG3|AN7fG3|AN8G3|AN8cG3|AN7G3|AN9G3|AN7dG3|AN7dG3ST|AN7dG3ChildPad|AN10bG3|AN10bG3DT|AN9G2",
        "IntensoTablet": "INM8002KP|INM1010FP|INM805ND|Intenso Tab|TAB1004",
        "IRUTablet": "M702pro",
        "MegafonTablet": "MegaFon V9|\\bZTE V9\\b|Android.*\\bMT7A\\b",
        "EbodaTablet": "E-Boda (Supreme|Impresspeed|Izzycomm|Essential)",
        "AllViewTablet": "Allview.*(Viva|Alldro|City|Speed|All TV|Frenzy|Quasar|Shine|TX1|AX1|AX2)",
        "ArchosTablet": "\\b(101G9|80G9|A101IT)\\b|Qilive 97R|Archos5|\\bARCHOS (70|79|80|90|97|101|FAMILYPAD|)(b|c|)(G10| Cobalt| TITANIUM(HD|)| Xenon| Neon|XSK| 2| XS 2| PLATINUM| CARBON|GAMEPAD)\\b",
        "AinolTablet": "NOVO7|NOVO8|NOVO10|Novo7Aurora|Novo7Basic|NOVO7PALADIN|novo9-Spark",
        "NokiaLumiaTablet": "Lumia 2520",
        "SonyTablet": "Sony.*Tablet|Xperia Tablet|Sony Tablet S|SO-03E|SGPT12|SGPT13|SGPT114|SGPT121|SGPT122|SGPT123|SGPT111|SGPT112|SGPT113|SGPT131|SGPT132|SGPT133|SGPT211|SGPT212|SGPT213|SGP311|SGP312|SGP321|EBRD1101|EBRD1102|EBRD1201|SGP351|SGP341|SGP511|SGP512|SGP521|SGP541|SGP551|SGP621|SGP641|SGP612|SOT31|SGP771|SGP611|SGP612|SGP712",
        "PhilipsTablet": "\\b(PI2010|PI3000|PI3100|PI3105|PI3110|PI3205|PI3210|PI3900|PI4010|PI7000|PI7100)\\b",
        "CubeTablet": "Android.*(K8GT|U9GT|U10GT|U16GT|U17GT|U18GT|U19GT|U20GT|U23GT|U30GT)|CUBE U8GT",
        "CobyTablet": "MID1042|MID1045|MID1125|MID1126|MID7012|MID7014|MID7015|MID7034|MID7035|MID7036|MID7042|MID7048|MID7127|MID8042|MID8048|MID8127|MID9042|MID9740|MID9742|MID7022|MID7010",
        "MIDTablet": "M9701|M9000|M9100|M806|M1052|M806|T703|MID701|MID713|MID710|MID727|MID760|MID830|MID728|MID933|MID125|MID810|MID732|MID120|MID930|MID800|MID731|MID900|MID100|MID820|MID735|MID980|MID130|MID833|MID737|MID960|MID135|MID860|MID736|MID140|MID930|MID835|MID733|MID4X10",
        "MSITablet": "MSI \\b(Primo 73K|Primo 73L|Primo 81L|Primo 77|Primo 93|Primo 75|Primo 76|Primo 73|Primo 81|Primo 91|Primo 90|Enjoy 71|Enjoy 7|Enjoy 10)\\b",
        "SMiTTablet": "Android.*(\\bMID\\b|MID-560|MTV-T1200|MTV-PND531|MTV-P1101|MTV-PND530)",
        "RockChipTablet": "Android.*(RK2818|RK2808A|RK2918|RK3066)|RK2738|RK2808A",
        "FlyTablet": "IQ310|Fly Vision",
        "bqTablet": "Android.*(bq)?.*(Elcano|Curie|Edison|Maxwell|Kepler|Pascal|Tesla|Hypatia|Platon|Newton|Livingstone|Cervantes|Avant|Aquaris ([E|M]10|M8))|Maxwell.*Lite|Maxwell.*Plus",
        "HuaweiTablet": "MediaPad|MediaPad 7 Youth|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|S7-201|S7-Slim|M2-A01L|BAH-L09|BAH-W09",
        "NecTablet": "\\bN-06D|\\bN-08D",
        "PantechTablet": "Pantech.*P4100",
        "BronchoTablet": "Broncho.*(N701|N708|N802|a710)",
        "VersusTablet": "TOUCHPAD.*[78910]|\\bTOUCHTAB\\b",
        "ZyncTablet": "z1000|Z99 2G|z99|z930|z999|z990|z909|Z919|z900",
        "PositivoTablet": "TB07STA|TB10STA|TB07FTA|TB10FTA",
        "NabiTablet": "Android.*\\bNabi",
        "KoboTablet": "Kobo Touch|\\bK080\\b|\\bVox\\b Build|\\bArc\\b Build",
        "DanewTablet": "DSlide.*\\b(700|701R|702|703R|704|802|970|971|972|973|974|1010|1012)\\b",
        "TexetTablet": "NaviPad|TB-772A|TM-7045|TM-7055|TM-9750|TM-7016|TM-7024|TM-7026|TM-7041|TM-7043|TM-7047|TM-8041|TM-9741|TM-9747|TM-9748|TM-9751|TM-7022|TM-7021|TM-7020|TM-7011|TM-7010|TM-7023|TM-7025|TM-7037W|TM-7038W|TM-7027W|TM-9720|TM-9725|TM-9737W|TM-1020|TM-9738W|TM-9740|TM-9743W|TB-807A|TB-771A|TB-727A|TB-725A|TB-719A|TB-823A|TB-805A|TB-723A|TB-715A|TB-707A|TB-705A|TB-709A|TB-711A|TB-890HD|TB-880HD|TB-790HD|TB-780HD|TB-770HD|TB-721HD|TB-710HD|TB-434HD|TB-860HD|TB-840HD|TB-760HD|TB-750HD|TB-740HD|TB-730HD|TB-722HD|TB-720HD|TB-700HD|TB-500HD|TB-470HD|TB-431HD|TB-430HD|TB-506|TB-504|TB-446|TB-436|TB-416|TB-146SE|TB-126SE",
        "PlaystationTablet": "Playstation.*(Portable|Vita)",
        "TrekstorTablet": "ST10416-1|VT10416-1|ST70408-1|ST702xx-1|ST702xx-2|ST80208|ST97216|ST70104-2|VT10416-2|ST10216-2A|SurfTab",
        "PyleAudioTablet": "\\b(PTBL10CEU|PTBL10C|PTBL72BC|PTBL72BCEU|PTBL7CEU|PTBL7C|PTBL92BC|PTBL92BCEU|PTBL9CEU|PTBL9CUK|PTBL9C)\\b",
        "AdvanTablet": "Android.* \\b(E3A|T3X|T5C|T5B|T3E|T3C|T3B|T1J|T1F|T2A|T1H|T1i|E1C|T1-E|T5-A|T4|E1-B|T2Ci|T1-B|T1-D|O1-A|E1-A|T1-A|T3A|T4i)\\b ",
        "DanyTechTablet": "Genius Tab G3|Genius Tab S2|Genius Tab Q3|Genius Tab G4|Genius Tab Q4|Genius Tab G-II|Genius TAB GII|Genius TAB GIII|Genius Tab S1",
        "GalapadTablet": "Android.*\\bG1\\b(?!\\))",
        "MicromaxTablet": "Funbook|Micromax.*\\b(P250|P560|P360|P362|P600|P300|P350|P500|P275)\\b",
        "KarbonnTablet": "Android.*\\b(A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2)\\b",
        "AllFineTablet": "Fine7 Genius|Fine7 Shine|Fine7 Air|Fine8 Style|Fine9 More|Fine10 Joy|Fine11 Wide",
        "PROSCANTablet": "\\b(PEM63|PLT1023G|PLT1041|PLT1044|PLT1044G|PLT1091|PLT4311|PLT4311PL|PLT4315|PLT7030|PLT7033|PLT7033D|PLT7035|PLT7035D|PLT7044K|PLT7045K|PLT7045KB|PLT7071KG|PLT7072|PLT7223G|PLT7225G|PLT7777G|PLT7810K|PLT7849G|PLT7851G|PLT7852G|PLT8015|PLT8031|PLT8034|PLT8036|PLT8080K|PLT8082|PLT8088|PLT8223G|PLT8234G|PLT8235G|PLT8816K|PLT9011|PLT9045K|PLT9233G|PLT9735|PLT9760G|PLT9770G)\\b",
        "YONESTablet": "BQ1078|BC1003|BC1077|RK9702|BC9730|BC9001|IT9001|BC7008|BC7010|BC708|BC728|BC7012|BC7030|BC7027|BC7026",
        "ChangJiaTablet": "TPC7102|TPC7103|TPC7105|TPC7106|TPC7107|TPC7201|TPC7203|TPC7205|TPC7210|TPC7708|TPC7709|TPC7712|TPC7110|TPC8101|TPC8103|TPC8105|TPC8106|TPC8203|TPC8205|TPC8503|TPC9106|TPC9701|TPC97101|TPC97103|TPC97105|TPC97106|TPC97111|TPC97113|TPC97203|TPC97603|TPC97809|TPC97205|TPC10101|TPC10103|TPC10106|TPC10111|TPC10203|TPC10205|TPC10503",
        "GUTablet": "TX-A1301|TX-M9002|Q702|kf026",
        "PointOfViewTablet": "TAB-P506|TAB-navi-7-3G-M|TAB-P517|TAB-P-527|TAB-P701|TAB-P703|TAB-P721|TAB-P731N|TAB-P741|TAB-P825|TAB-P905|TAB-P925|TAB-PR945|TAB-PL1015|TAB-P1025|TAB-PI1045|TAB-P1325|TAB-PROTAB[0-9]+|TAB-PROTAB25|TAB-PROTAB26|TAB-PROTAB27|TAB-PROTAB26XL|TAB-PROTAB2-IPS9|TAB-PROTAB30-IPS9|TAB-PROTAB25XXL|TAB-PROTAB26-IPS10|TAB-PROTAB30-IPS10",
        "OvermaxTablet": "OV-(SteelCore|NewBase|Basecore|Baseone|Exellen|Quattor|EduTab|Solution|ACTION|BasicTab|TeddyTab|MagicTab|Stream|TB-08|TB-09)|Qualcore 1027",
        "HCLTablet": "HCL.*Tablet|Connect-3G-2.0|Connect-2G-2.0|ME Tablet U1|ME Tablet U2|ME Tablet G1|ME Tablet X1|ME Tablet Y2|ME Tablet Sync",
        "DPSTablet": "DPS Dream 9|DPS Dual 7",
        "VistureTablet": "V97 HD|i75 3G|Visture V4( HD)?|Visture V5( HD)?|Visture V10",
        "CrestaTablet": "CTP(-)?810|CTP(-)?818|CTP(-)?828|CTP(-)?838|CTP(-)?888|CTP(-)?978|CTP(-)?980|CTP(-)?987|CTP(-)?988|CTP(-)?989",
        "MediatekTablet": "\\bMT8125|MT8389|MT8135|MT8377\\b",
        "ConcordeTablet": "Concorde([ ]+)?Tab|ConCorde ReadMan",
        "GoCleverTablet": "GOCLEVER TAB|A7GOCLEVER|M1042|M7841|M742|R1042BK|R1041|TAB A975|TAB A7842|TAB A741|TAB A741L|TAB M723G|TAB M721|TAB A1021|TAB I921|TAB R721|TAB I720|TAB T76|TAB R70|TAB R76.2|TAB R106|TAB R83.2|TAB M813G|TAB I721|GCTA722|TAB I70|TAB I71|TAB S73|TAB R73|TAB R74|TAB R93|TAB R75|TAB R76.1|TAB A73|TAB A93|TAB A93.2|TAB T72|TAB R83|TAB R974|TAB R973|TAB A101|TAB A103|TAB A104|TAB A104.2|R105BK|M713G|A972BK|TAB A971|TAB R974.2|TAB R104|TAB R83.3|TAB A1042",
        "ModecomTablet": "FreeTAB 9000|FreeTAB 7.4|FreeTAB 7004|FreeTAB 7800|FreeTAB 2096|FreeTAB 7.5|FreeTAB 1014|FreeTAB 1001 |FreeTAB 8001|FreeTAB 9706|FreeTAB 9702|FreeTAB 7003|FreeTAB 7002|FreeTAB 1002|FreeTAB 7801|FreeTAB 1331|FreeTAB 1004|FreeTAB 8002|FreeTAB 8014|FreeTAB 9704|FreeTAB 1003",
        "VoninoTablet": "\\b(Argus[ _]?S|Diamond[ _]?79HD|Emerald[ _]?78E|Luna[ _]?70C|Onyx[ _]?S|Onyx[ _]?Z|Orin[ _]?HD|Orin[ _]?S|Otis[ _]?S|SpeedStar[ _]?S|Magnet[ _]?M9|Primus[ _]?94[ _]?3G|Primus[ _]?94HD|Primus[ _]?QS|Android.*\\bQ8\\b|Sirius[ _]?EVO[ _]?QS|Sirius[ _]?QS|Spirit[ _]?S)\\b",
        "ECSTablet": "V07OT2|TM105A|S10OT1|TR10CS1",
        "StorexTablet": "eZee[_']?(Tab|Go)[0-9]+|TabLC7|Looney Tunes Tab",
        "VodafoneTablet": "SmartTab([ ]+)?[0-9]+|SmartTabII10|SmartTabII7|VF-1497",
        "EssentielBTablet": "Smart[ ']?TAB[ ]+?[0-9]+|Family[ ']?TAB2",
        "RossMoorTablet": "RM-790|RM-997|RMD-878G|RMD-974R|RMT-705A|RMT-701|RME-601|RMT-501|RMT-711",
        "iMobileTablet": "i-mobile i-note",
        "TolinoTablet": "tolino tab [0-9.]+|tolino shine",
        "AudioSonicTablet": "\\bC-22Q|T7-QC|T-17B|T-17P\\b",
        "AMPETablet": "Android.* A78 ",
        "SkkTablet": "Android.* (SKYPAD|PHOENIX|CYCLOPS)",
        "TecnoTablet": "TECNO P9|TECNO DP8D",
        "JXDTablet": "Android.* \\b(F3000|A3300|JXD5000|JXD3000|JXD2000|JXD300B|JXD300|S5800|S7800|S602b|S5110b|S7300|S5300|S602|S603|S5100|S5110|S601|S7100a|P3000F|P3000s|P101|P200s|P1000m|P200m|P9100|P1000s|S6600b|S908|P1000|P300|S18|S6600|S9100)\\b",
        "iJoyTablet": "Tablet (Spirit 7|Essentia|Galatea|Fusion|Onix 7|Landa|Titan|Scooby|Deox|Stella|Themis|Argon|Unique 7|Sygnus|Hexen|Finity 7|Cream|Cream X2|Jade|Neon 7|Neron 7|Kandy|Scape|Saphyr 7|Rebel|Biox|Rebel|Rebel 8GB|Myst|Draco 7|Myst|Tab7-004|Myst|Tadeo Jones|Tablet Boing|Arrow|Draco Dual Cam|Aurix|Mint|Amity|Revolution|Finity 9|Neon 9|T9w|Amity 4GB Dual Cam|Stone 4GB|Stone 8GB|Andromeda|Silken|X2|Andromeda II|Halley|Flame|Saphyr 9,7|Touch 8|Planet|Triton|Unique 10|Hexen 10|Memphis 4GB|Memphis 8GB|Onix 10)",
        "FX2Tablet": "FX2 PAD7|FX2 PAD10",
        "XoroTablet": "KidsPAD 701|PAD[ ]?712|PAD[ ]?714|PAD[ ]?716|PAD[ ]?717|PAD[ ]?718|PAD[ ]?720|PAD[ ]?721|PAD[ ]?722|PAD[ ]?790|PAD[ ]?792|PAD[ ]?900|PAD[ ]?9715D|PAD[ ]?9716DR|PAD[ ]?9718DR|PAD[ ]?9719QR|PAD[ ]?9720QR|TelePAD1030|Telepad1032|TelePAD730|TelePAD731|TelePAD732|TelePAD735Q|TelePAD830|TelePAD9730|TelePAD795|MegaPAD 1331|MegaPAD 1851|MegaPAD 2151",
        "ViewsonicTablet": "ViewPad 10pi|ViewPad 10e|ViewPad 10s|ViewPad E72|ViewPad7|ViewPad E100|ViewPad 7e|ViewSonic VB733|VB100a",
        "VerizonTablet": "QTAQZ3|QTAIR7|QTAQTZ3|QTASUN1|QTASUN2|QTAXIA1",
        "OdysTablet": "LOOX|XENO10|ODYS[ -](Space|EVO|Xpress|NOON)|\\bXELIO\\b|Xelio10Pro|XELIO7PHONETAB|XELIO10EXTREME|XELIOPT2|NEO_QUAD10",
        "CaptivaTablet": "CAPTIVA PAD",
        "IconbitTablet": "NetTAB|NT-3702|NT-3702S|NT-3702S|NT-3603P|NT-3603P|NT-0704S|NT-0704S|NT-3805C|NT-3805C|NT-0806C|NT-0806C|NT-0909T|NT-0909T|NT-0907S|NT-0907S|NT-0902S|NT-0902S",
        "TeclastTablet": "T98 4G|\\bP80\\b|\\bX90HD\\b|X98 Air|X98 Air 3G|\\bX89\\b|P80 3G|\\bX80h\\b|P98 Air|\\bX89HD\\b|P98 3G|\\bP90HD\\b|P89 3G|X98 3G|\\bP70h\\b|P79HD 3G|G18d 3G|\\bP79HD\\b|\\bP89s\\b|\\bA88\\b|\\bP10HD\\b|\\bP19HD\\b|G18 3G|\\bP78HD\\b|\\bA78\\b|\\bP75\\b|G17s 3G|G17h 3G|\\bP85t\\b|\\bP90\\b|\\bP11\\b|\\bP98t\\b|\\bP98HD\\b|\\bG18d\\b|\\bP85s\\b|\\bP11HD\\b|\\bP88s\\b|\\bA80HD\\b|\\bA80se\\b|\\bA10h\\b|\\bP89\\b|\\bP78s\\b|\\bG18\\b|\\bP85\\b|\\bA70h\\b|\\bA70\\b|\\bG17\\b|\\bP18\\b|\\bA80s\\b|\\bA11s\\b|\\bP88HD\\b|\\bA80h\\b|\\bP76s\\b|\\bP76h\\b|\\bP98\\b|\\bA10HD\\b|\\bP78\\b|\\bP88\\b|\\bA11\\b|\\bA10t\\b|\\bP76a\\b|\\bP76t\\b|\\bP76e\\b|\\bP85HD\\b|\\bP85a\\b|\\bP86\\b|\\bP75HD\\b|\\bP76v\\b|\\bA12\\b|\\bP75a\\b|\\bA15\\b|\\bP76Ti\\b|\\bP81HD\\b|\\bA10\\b|\\bT760VE\\b|\\bT720HD\\b|\\bP76\\b|\\bP73\\b|\\bP71\\b|\\bP72\\b|\\bT720SE\\b|\\bC520Ti\\b|\\bT760\\b|\\bT720VE\\b|T720-3GE|T720-WiFi",
        "OndaTablet": "\\b(V975i|Vi30|VX530|V701|Vi60|V701s|Vi50|V801s|V719|Vx610w|VX610W|V819i|Vi10|VX580W|Vi10|V711s|V813|V811|V820w|V820|Vi20|V711|VI30W|V712|V891w|V972|V819w|V820w|Vi60|V820w|V711|V813s|V801|V819|V975s|V801|V819|V819|V818|V811|V712|V975m|V101w|V961w|V812|V818|V971|V971s|V919|V989|V116w|V102w|V973|Vi40)\\b[\\s]+|V10 \\b4G\\b",
        "JaytechTablet": "TPC-PA762",
        "BlaupunktTablet": "Endeavour 800NG|Endeavour 1010",
        "DigmaTablet": "\\b(iDx10|iDx9|iDx8|iDx7|iDxD7|iDxD8|iDsQ8|iDsQ7|iDsQ8|iDsD10|iDnD7|3TS804H|iDsQ11|iDj7|iDs10)\\b",
        "EvolioTablet": "ARIA_Mini_wifi|Aria[ _]Mini|Evolio X10|Evolio X7|Evolio X8|\\bEvotab\\b|\\bNeura\\b",
        "LavaTablet": "QPAD E704|\\bIvoryS\\b|E-TAB IVORY|\\bE-TAB\\b",
        "AocTablet": "MW0811|MW0812|MW0922|MTK8382|MW1031|MW0831|MW0821|MW0931|MW0712",
        "MpmanTablet": "MP11 OCTA|MP10 OCTA|MPQC1114|MPQC1004|MPQC994|MPQC974|MPQC973|MPQC804|MPQC784|MPQC780|\\bMPG7\\b|MPDCG75|MPDCG71|MPDC1006|MP101DC|MPDC9000|MPDC905|MPDC706HD|MPDC706|MPDC705|MPDC110|MPDC100|MPDC99|MPDC97|MPDC88|MPDC8|MPDC77|MP709|MID701|MID711|MID170|MPDC703|MPQC1010",
        "CelkonTablet": "CT695|CT888|CT[\\s]?910|CT7 Tab|CT9 Tab|CT3 Tab|CT2 Tab|CT1 Tab|C820|C720|\\bCT-1\\b",
        "WolderTablet": "miTab \\b(DIAMOND|SPACE|BROOKLYN|NEO|FLY|MANHATTAN|FUNK|EVOLUTION|SKY|GOCAR|IRON|GENIUS|POP|MINT|EPSILON|BROADWAY|JUMP|HOP|LEGEND|NEW AGE|LINE|ADVANCE|FEEL|FOLLOW|LIKE|LINK|LIVE|THINK|FREEDOM|CHICAGO|CLEVELAND|BALTIMORE-GH|IOWA|BOSTON|SEATTLE|PHOENIX|DALLAS|IN 101|MasterChef)\\b",
        "MediacomTablet": "M-MPI10C3G|M-SP10EG|M-SP10EGP|M-SP10HXAH|M-SP7HXAH|M-SP10HXBH|M-SP8HXAH|M-SP8MXA",
        "MiTablet": "\\bMI PAD\\b|\\bHM NOTE 1W\\b",
        "NibiruTablet": "Nibiru M1|Nibiru Jupiter One",
        "NexoTablet": "NEXO NOVA|NEXO 10|NEXO AVIO|NEXO FREE|NEXO GO|NEXO EVO|NEXO 3G|NEXO SMART|NEXO KIDDO|NEXO MOBI",
        "LeaderTablet": "TBLT10Q|TBLT10I|TBL-10WDKB|TBL-10WDKBO2013|TBL-W230V2|TBL-W450|TBL-W500|SV572|TBLT7I|TBA-AC7-8G|TBLT79|TBL-8W16|TBL-10W32|TBL-10WKB|TBL-W100",
        "UbislateTablet": "UbiSlate[\\s]?7C",
        "PocketBookTablet": "Pocketbook",
        "KocasoTablet": "\\b(TB-1207)\\b",
        "HisenseTablet": "\\b(F5281|E2371)\\b",
        "Hudl": "Hudl HT7S3|Hudl 2",
        "TelstraTablet": "T-Hub2",
        "GenericTablet": "Android.*\\b97D\\b|Tablet(?!.*PC)|BNTV250A|MID-WCDMA|LogicPD Zoom2|\\bA7EB\\b|CatNova8|A1_07|CT704|CT1002|\\bM721\\b|rk30sdk|\\bEVOTAB\\b|M758A|ET904|ALUMIUM10|Smartfren Tab|Endeavour 1010|Tablet-PC-4|Tagi Tab|\\bM6pro\\b|CT1020W|arc 10HD|\\bTP750\\b|\\bQTAQZ3\\b|WVT101|TM1088|KT107"
      },
      "oss": {
        "AndroidOS": "Android",
        "BlackBerryOS": "blackberry|\\bBB10\\b|rim tablet os",
        "PalmOS": "PalmOS|avantgo|blazer|elaine|hiptop|palm|plucker|xiino",
        "SymbianOS": "Symbian|SymbOS|Series60|Series40|SYB-[0-9]+|\\bS60\\b",
        "WindowsMobileOS": "Windows CE.*(PPC|Smartphone|Mobile|[0-9]{3}x[0-9]{3})|Window Mobile|Windows Phone [0-9.]+|WCE;",
        "WindowsPhoneOS": "Windows Phone 10.0|Windows Phone 8.1|Windows Phone 8.0|Windows Phone OS|XBLWP7|ZuneWP7|Windows NT 6.[23]; ARM;",
        "iOS": "\\biPhone.*Mobile|\\biPod|\\biPad|AppleCoreMedia",
        "MeeGoOS": "MeeGo",
        "MaemoOS": "Maemo",
        "JavaOS": "J2ME\/|\\bMIDP\\b|\\bCLDC\\b",
        "webOS": "webOS|hpwOS",
        "badaOS": "\\bBada\\b",
        "BREWOS": "BREW"
      },
      "uas": {
        "Chrome": "\\bCrMo\\b|CriOS|Android.*Chrome\/[.0-9]* (Mobile)?",
        "Dolfin": "\\bDolfin\\b",
        "Opera": "Opera.*Mini|Opera.*Mobi|Android.*Opera|Mobile.*OPR\/[0-9.]+$|Coast\/[0-9.]+",
        "Skyfire": "Skyfire",
        "Edge": "Mobile Safari\/[.0-9]* Edge",
        "IE": "IEMobile|MSIEMobile",
        "Firefox": "fennec|firefox.*maemo|(Mobile|Tablet).*Firefox|Firefox.*Mobile|FxiOS",
        "Bolt": "bolt",
        "TeaShark": "teashark",
        "Blazer": "Blazer",
        "Safari": "Version.*Mobile.*Safari|Safari.*Mobile|MobileSafari",
        "WeChat": "\\bMicroMessenger\\b",
        "UCBrowser": "UC.*Browser|UCWEB",
        "baiduboxapp": "baiduboxapp",
        "baidubrowser": "baidubrowser",
        "DiigoBrowser": "DiigoBrowser",
        "Puffin": "Puffin",
        "Mercury": "\\bMercury\\b",
        "ObigoBrowser": "Obigo",
        "NetFront": "NF-Browser",
        "GenericBrowser": "NokiaBrowser|OviBrowser|OneBrowser|TwonkyBeamBrowser|SEMC.*Browser|FlyFlow|Minimo|NetFront|Novarra-Vision|MQQBrowser|MicroMessenger",
        "PaleMoon": "Android.*PaleMoon|Mobile.*PaleMoon"
      },
      "props": {
        "Mobile": "Mobile\/[VER]",
        "Build": "Build\/[VER]",
        "Version": "Version\/[VER]",
        "VendorID": "VendorID\/[VER]",
        "iPad": "iPad.*CPU[a-z ]+[VER]",
        "iPhone": "iPhone.*CPU[a-z ]+[VER]",
        "iPod": "iPod.*CPU[a-z ]+[VER]",
        "Kindle": "Kindle\/[VER]",
        "Chrome": ["Chrome\/[VER]", "CriOS\/[VER]", "CrMo\/[VER]"],
        "Coast": ["Coast\/[VER]"],
        "Dolfin": "Dolfin\/[VER]",
        "Firefox": ["Firefox\/[VER]", "FxiOS\/[VER]"],
        "Fennec": "Fennec\/[VER]",
        "Edge": "Edge\/[VER]",
        "IE": ["IEMobile\/[VER];", "IEMobile [VER]", "MSIE [VER];", "Trident\/[0-9.]+;.*rv:[VER]"],
        "NetFront": "NetFront\/[VER]",
        "NokiaBrowser": "NokiaBrowser\/[VER]",
        "Opera": [" OPR\/[VER]", "Opera Mini\/[VER]", "Version\/[VER]"],
        "Opera Mini": "Opera Mini\/[VER]",
        "Opera Mobi": "Version\/[VER]",
        "UCBrowser": ["UCWEB[VER]", "UC.*Browser\/[VER]"],
        "MQQBrowser": "MQQBrowser\/[VER]",
        "MicroMessenger": "MicroMessenger\/[VER]",
        "baiduboxapp": "baiduboxapp\/[VER]",
        "baidubrowser": "baidubrowser\/[VER]",
        "SamsungBrowser": "SamsungBrowser\/[VER]",
        "Iron": "Iron\/[VER]",
        "Safari": ["Version\/[VER]", "Safari\/[VER]"],
        "Skyfire": "Skyfire\/[VER]",
        "Tizen": "Tizen\/[VER]",
        "Webkit": "webkit[ \/][VER]",
        "PaleMoon": "PaleMoon\/[VER]",
        "Gecko": "Gecko\/[VER]",
        "Trident": "Trident\/[VER]",
        "Presto": "Presto\/[VER]",
        "Goanna": "Goanna\/[VER]",
        "iOS": " \\bi?OS\\b [VER][ ;]{1}",
        "Android": "Android [VER]",
        "BlackBerry": ["BlackBerry[\\w]+\/[VER]", "BlackBerry.*Version\/[VER]", "Version\/[VER]"],
        "BREW": "BREW [VER]",
        "Java": "Java\/[VER]",
        "Windows Phone OS": ["Windows Phone OS [VER]", "Windows Phone [VER]"],
        "Windows Phone": "Windows Phone [VER]",
        "Windows CE": "Windows CE\/[VER]",
        "Windows NT": "Windows NT [VER]",
        "Symbian": ["SymbianOS\/[VER]", "Symbian\/[VER]"],
        "webOS": ["webOS\/[VER]", "hpwOS\/[VER];"]
      },
      "utils": {
        "Bot": "Googlebot|facebookexternalhit|AdsBot-Google|Google Keyword Suggestion|Facebot|YandexBot|YandexMobileBot|bingbot|ia_archiver|AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|Exabot|MJ12bot|YandexImages|TurnitinBot|Pingdom",
        "MobileBot": "Googlebot-Mobile|AdsBot-Google-Mobile|YahooSeeker\/M1A1-R2D2",
        "DesktopMode": "WPDesktop",
        "TV": "SonyDTV|HbbTV",
        "WebKit": "(webkit)[ \/]([\\w.]+)",
        "Console": "\\b(Nintendo|Nintendo WiiU|Nintendo 3DS|Nintendo Switch|PLAYSTATION|Xbox)\\b",
        "Watch": "SM-V700"
      }
    }; // following patterns come from http://detectmobilebrowsers.com/

    impl.detectMobileBrowsers = {
      fullPattern: /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,
      shortPattern: /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i,
      tabletPattern: /android|ipad|playbook|silk/i
    };
    var hasOwnProp = Object.prototype.hasOwnProperty,
        isArray;
    impl.FALLBACK_PHONE = 'UnknownPhone';
    impl.FALLBACK_TABLET = 'UnknownTablet';
    impl.FALLBACK_MOBILE = 'UnknownMobile';
    isArray = 'isArray' in Array ? Array.isArray : function (value) {
      return Object.prototype.toString.call(value) === '[object Array]';
    };

    function equalIC(a, b) {
      return a != null && b != null && a.toLowerCase() === b.toLowerCase();
    }

    function containsIC(array, value) {
      var valueLC,
          i,
          len = array.length;

      if (!len || !value) {
        return false;
      }

      valueLC = value.toLowerCase();

      for (i = 0; i < len; ++i) {
        if (valueLC === array[i].toLowerCase()) {
          return true;
        }
      }

      return false;
    }

    function convertPropsToRegExp(object) {
      for (var key in object) {
        if (hasOwnProp.call(object, key)) {
          object[key] = new RegExp(object[key], 'i');
        }
      }
    }

    function prepareUserAgent(userAgent) {
      return (userAgent || '').substr(0, 500); // mitigate vulnerable to ReDoS
    }

    (function init() {
      var key,
          values,
          value,
          i,
          len,
          verPos,
          mobileDetectRules = impl.mobileDetectRules;

      for (key in mobileDetectRules.props) {
        if (hasOwnProp.call(mobileDetectRules.props, key)) {
          values = mobileDetectRules.props[key];

          if (!isArray(values)) {
            values = [values];
          }

          len = values.length;

          for (i = 0; i < len; ++i) {
            value = values[i];
            verPos = value.indexOf('[VER]');

            if (verPos >= 0) {
              value = value.substring(0, verPos) + '([\\w._\\+]+)' + value.substring(verPos + 5);
            }

            values[i] = new RegExp(value, 'i');
          }

          mobileDetectRules.props[key] = values;
        }
      }

      convertPropsToRegExp(mobileDetectRules.oss);
      convertPropsToRegExp(mobileDetectRules.phones);
      convertPropsToRegExp(mobileDetectRules.tablets);
      convertPropsToRegExp(mobileDetectRules.uas);
      convertPropsToRegExp(mobileDetectRules.utils); // copy some patterns to oss0 which are tested first (see issue#15)

      mobileDetectRules.oss0 = {
        WindowsPhoneOS: mobileDetectRules.oss.WindowsPhoneOS,
        WindowsMobileOS: mobileDetectRules.oss.WindowsMobileOS
      };
    })();
    /**
     * Test userAgent string against a set of rules and find the first matched key.
     * @param {Object} rules (key is String, value is RegExp)
     * @param {String} userAgent the navigator.userAgent (or HTTP-Header 'User-Agent').
     * @returns {String|null} the matched key if found, otherwise <tt>null</tt>
     * @private
     */


    impl.findMatch = function (rules, userAgent) {
      for (var key in rules) {
        if (hasOwnProp.call(rules, key)) {
          if (rules[key].test(userAgent)) {
            return key;
          }
        }
      }

      return null;
    };
    /**
     * Test userAgent string against a set of rules and return an array of matched keys.
     * @param {Object} rules (key is String, value is RegExp)
     * @param {String} userAgent the navigator.userAgent (or HTTP-Header 'User-Agent').
     * @returns {Array} an array of matched keys, may be empty when there is no match, but not <tt>null</tt>
     * @private
     */


    impl.findMatches = function (rules, userAgent) {
      var result = [];

      for (var key in rules) {
        if (hasOwnProp.call(rules, key)) {
          if (rules[key].test(userAgent)) {
            result.push(key);
          }
        }
      }

      return result;
    };
    /**
     * Check the version of the given property in the User-Agent.
     *
     * @param {String} propertyName
     * @param {String} userAgent
     * @return {String} version or <tt>null</tt> if version not found
     * @private
     */


    impl.getVersionStr = function (propertyName, userAgent) {
      var props = impl.mobileDetectRules.props,
          patterns,
          i,
          len,
          match;

      if (hasOwnProp.call(props, propertyName)) {
        patterns = props[propertyName];
        len = patterns.length;

        for (i = 0; i < len; ++i) {
          match = patterns[i].exec(userAgent);

          if (match !== null) {
            return match[1];
          }
        }
      }

      return null;
    };
    /**
     * Check the version of the given property in the User-Agent.
     * Will return a float number. (eg. 2_0 will return 2.0, 4.3.1 will return 4.31)
     *
     * @param {String} propertyName
     * @param {String} userAgent
     * @return {Number} version or <tt>NaN</tt> if version not found
     * @private
     */


    impl.getVersion = function (propertyName, userAgent) {
      var version = impl.getVersionStr(propertyName, userAgent);
      return version ? impl.prepareVersionNo(version) : NaN;
    };
    /**
     * Prepare the version number.
     *
     * @param {String} version
     * @return {Number} the version number as a floating number
     * @private
     */


    impl.prepareVersionNo = function (version) {
      var numbers;
      numbers = version.split(/[a-z._ \/\-]/i);

      if (numbers.length === 1) {
        version = numbers[0];
      }

      if (numbers.length > 1) {
        version = numbers[0] + '.';
        numbers.shift();
        version += numbers.join('');
      }

      return Number(version);
    };

    impl.isMobileFallback = function (userAgent) {
      return impl.detectMobileBrowsers.fullPattern.test(userAgent) || impl.detectMobileBrowsers.shortPattern.test(userAgent.substr(0, 4));
    };

    impl.isTabletFallback = function (userAgent) {
      return impl.detectMobileBrowsers.tabletPattern.test(userAgent);
    };

    impl.prepareDetectionCache = function (cache, userAgent, maxPhoneWidth) {
      if (cache.mobile !== undefined) {
        return;
      }

      var phone, tablet, phoneSized; // first check for stronger tablet rules, then phone (see issue#5)

      tablet = impl.findMatch(impl.mobileDetectRules.tablets, userAgent);

      if (tablet) {
        cache.mobile = cache.tablet = tablet;
        cache.phone = null;
        return; // unambiguously identified as tablet
      }

      phone = impl.findMatch(impl.mobileDetectRules.phones, userAgent);

      if (phone) {
        cache.mobile = cache.phone = phone;
        cache.tablet = null;
        return; // unambiguously identified as phone
      } // our rules haven't found a match -> try more general fallback rules


      if (impl.isMobileFallback(userAgent)) {
        phoneSized = MobileDetect.isPhoneSized(maxPhoneWidth);

        if (phoneSized === undefined) {
          cache.mobile = impl.FALLBACK_MOBILE;
          cache.tablet = cache.phone = null;
        } else if (phoneSized) {
          cache.mobile = cache.phone = impl.FALLBACK_PHONE;
          cache.tablet = null;
        } else {
          cache.mobile = cache.tablet = impl.FALLBACK_TABLET;
          cache.phone = null;
        }
      } else if (impl.isTabletFallback(userAgent)) {
        cache.mobile = cache.tablet = impl.FALLBACK_TABLET;
        cache.phone = null;
      } else {
        // not mobile at all!
        cache.mobile = cache.tablet = cache.phone = null;
      }
    }; // t is a reference to a MobileDetect instance


    impl.mobileGrade = function (t) {
      // impl note:
      // To keep in sync w/ Mobile_Detect.php easily, the following code is tightly aligned to the PHP version.
      // When changes are made in Mobile_Detect.php, copy this method and replace:
      //     $this-> / t.
      //     self::MOBILE_GRADE_(.) / '$1'
      //     , self::VERSION_TYPE_FLOAT / (nothing)
      //     isIOS() / os('iOS')
      //     [reg] / (nothing)   <-- jsdelivr complaining about unescaped unicode character U+00AE
      var $isMobile = t.mobile() !== null;

      if ( // Apple iOS 3.2-5.1 - Tested on the original iPad (4.3 / 5.0), iPad 2 (4.3), iPad 3 (5.1), original iPhone (3.1), iPhone 3 (3.2), 3GS (4.3), 4 (4.3 / 5.0), and 4S (5.1)
      t.os('iOS') && t.version('iPad') >= 4.3 || t.os('iOS') && t.version('iPhone') >= 3.1 || t.os('iOS') && t.version('iPod') >= 3.1 || // Android 2.1-2.3 - Tested on the HTC Incredible (2.2), original Droid (2.2), HTC Aria (2.1), Google Nexus S (2.3). Functional on 1.5 & 1.6 but performance may be sluggish, tested on Google G1 (1.5)
      // Android 3.1 (Honeycomb)  - Tested on the Samsung Galaxy Tab 10.1 and Motorola XOOM
      // Android 4.0 (ICS)  - Tested on a Galaxy Nexus. Note: transition performance can be poor on upgraded devices
      // Android 4.1 (Jelly Bean)  - Tested on a Galaxy Nexus and Galaxy 7
      t.version('Android') > 2.1 && t.is('Webkit') || // Windows Phone 7-7.5 - Tested on the HTC Surround (7.0) HTC Trophy (7.5), LG-E900 (7.5), Nokia Lumia 800
      t.version('Windows Phone OS') >= 7.0 || // Blackberry 7 - Tested on BlackBerry Torch 9810
      // Blackberry 6.0 - Tested on the Torch 9800 and Style 9670
      t.is('BlackBerry') && t.version('BlackBerry') >= 6.0 || // Blackberry Playbook (1.0-2.0) - Tested on PlayBook
      t.match('Playbook.*Tablet') || // Palm WebOS (1.4-2.0) - Tested on the Palm Pixi (1.4), Pre (1.4), Pre 2 (2.0)
      t.version('webOS') >= 1.4 && t.match('Palm|Pre|Pixi') || // Palm WebOS 3.0  - Tested on HP TouchPad
      t.match('hp.*TouchPad') || // Firefox Mobile (12 Beta) - Tested on Android 2.3 device
      t.is('Firefox') && t.version('Firefox') >= 12 || // Chrome for Android - Tested on Android 4.0, 4.1 device
      t.is('Chrome') && t.is('AndroidOS') && t.version('Android') >= 4.0 || // Skyfire 4.1 - Tested on Android 2.3 device
      t.is('Skyfire') && t.version('Skyfire') >= 4.1 && t.is('AndroidOS') && t.version('Android') >= 2.3 || // Opera Mobile 11.5-12: Tested on Android 2.3
      t.is('Opera') && t.version('Opera Mobi') > 11 && t.is('AndroidOS') || // Meego 1.2 - Tested on Nokia 950 and N9
      t.is('MeeGoOS') || // Tizen (pre-release) - Tested on early hardware
      t.is('Tizen') || // Samsung Bada 2.0 - Tested on a Samsung Wave 3, Dolphin browser
      // @todo: more tests here!
      t.is('Dolfin') && t.version('Bada') >= 2.0 || // UC Browser - Tested on Android 2.3 device
      (t.is('UC Browser') || t.is('Dolfin')) && t.version('Android') >= 2.3 || // Kindle 3 and Fire  - Tested on the built-in WebKit browser for each
      t.match('Kindle Fire') || t.is('Kindle') && t.version('Kindle') >= 3.0 || // Nook Color 1.4.1 - Tested on original Nook Color, not Nook Tablet
      t.is('AndroidOS') && t.is('NookTablet') || // Chrome Desktop 11-21 - Tested on OS X 10.7 and Windows 7
      t.version('Chrome') >= 11 && !$isMobile || // Safari Desktop 4-5 - Tested on OS X 10.7 and Windows 7
      t.version('Safari') >= 5.0 && !$isMobile || // Firefox Desktop 4-13 - Tested on OS X 10.7 and Windows 7
      t.version('Firefox') >= 4.0 && !$isMobile || // Internet Explorer 7-9 - Tested on Windows XP, Vista and 7
      t.version('MSIE') >= 7.0 && !$isMobile || // Opera Desktop 10-12 - Tested on OS X 10.7 and Windows 7
      // @reference: http://my.opera.com/community/openweb/idopera/
      t.version('Opera') >= 10 && !$isMobile) {
        return 'A';
      }

      if (t.os('iOS') && t.version('iPad') < 4.3 || t.os('iOS') && t.version('iPhone') < 3.1 || t.os('iOS') && t.version('iPod') < 3.1 || // Blackberry 5.0: Tested on the Storm 2 9550, Bold 9770
      t.is('Blackberry') && t.version('BlackBerry') >= 5 && t.version('BlackBerry') < 6 || //Opera Mini (5.0-6.5) - Tested on iOS 3.2/4.3 and Android 2.3
      t.version('Opera Mini') >= 5.0 && t.version('Opera Mini') <= 6.5 && (t.version('Android') >= 2.3 || t.is('iOS')) || // Nokia Symbian^3 - Tested on Nokia N8 (Symbian^3), C7 (Symbian^3), also works on N97 (Symbian^1)
      t.match('NokiaN8|NokiaC7|N97.*Series60|Symbian/3') || // @todo: report this (tested on Nokia N71)
      t.version('Opera Mobi') >= 11 && t.is('SymbianOS')) {
        return 'B';
      }

      if ( // Blackberry 4.x - Tested on the Curve 8330
      t.version('BlackBerry') < 5.0 || // Windows Mobile - Tested on the HTC Leo (WinMo 5.2)
      t.match('MSIEMobile|Windows CE.*Mobile') || t.version('Windows Mobile') <= 5.2) {
        return 'C';
      } //All older smartphone platforms and featurephones - Any device that doesn't support media queries
      //will receive the basic, C grade experience.


      return 'C';
    };

    impl.detectOS = function (ua) {
      return impl.findMatch(impl.mobileDetectRules.oss0, ua) || impl.findMatch(impl.mobileDetectRules.oss, ua);
    };

    impl.getDeviceSmallerSide = function () {
      return window.screen.width < window.screen.height ? window.screen.width : window.screen.height;
    };
    /**
     * Constructor for MobileDetect object.
     * <br>
     * Such an object will keep a reference to the given user-agent string and cache most of the detect queries.<br>
     * <div style="background-color: #d9edf7; border: 1px solid #bce8f1; color: #3a87ad; padding: 14px; border-radius: 2px; margin-top: 20px">
     *     <strong>Find information how to download and install:</strong>
     *     <a href="https://github.com/hgoebl/mobile-detect.js/">github.com/hgoebl/mobile-detect.js/</a>
     * </div>
     *
     * @example <pre>
     *     var md = new MobileDetect(window.navigator.userAgent);
     *     if (md.mobile()) {
     *         location.href = (md.mobileGrade() === 'A') ? '/mobile/' : '/lynx/';
     *     }
     * </pre>
     *
     * @param {string} userAgent typically taken from window.navigator.userAgent or http_header['User-Agent']
     * @param {number} [maxPhoneWidth=600] <strong>only for browsers</strong> specify a value for the maximum
     *        width of smallest device side (in logical "CSS" pixels) until a device detected as mobile will be handled
     *        as phone.
     *        This is only used in cases where the device cannot be classified as phone or tablet.<br>
     *        See <a href="http://developer.android.com/guide/practices/screens_support.html">Declaring Tablet Layouts
     *        for Android</a>.<br>
     *        If you provide a value < 0, then this "fuzzy" check is disabled.
     * @constructor
     * @global
     */


    function MobileDetect(userAgent, maxPhoneWidth) {
      this.ua = prepareUserAgent(userAgent);
      this._cache = {}; //600dp is typical 7" tablet minimum width

      this.maxPhoneWidth = maxPhoneWidth || 600;
    }

    MobileDetect.prototype = {
      constructor: MobileDetect,

      /**
       * Returns the detected phone or tablet type or <tt>null</tt> if it is not a mobile device.
       * <br>
       * For a list of possible return values see {@link MobileDetect#phone} and {@link MobileDetect#tablet}.<br>
       * <br>
       * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against
       * the patterns of <a href="http://detectmobilebrowsers.com/">detectmobilebrowsers.com</a>. If this test
       * is positive, a value of <code>UnknownPhone</code>, <code>UnknownTablet</code> or
       * <code>UnknownMobile</code> is returned.<br>
       * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>
       * <br>
       * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>
       * and <code>UnknownMobile</code>, so you will get <code>UnknownMobile</code> here.<br>
       * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:
       * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.
       * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.
       * <br>
       * In most cases you will use the return value just as a boolean.
       *
       * @returns {String} the key for the phone family or tablet family, e.g. "Nexus".
       * @function MobileDetect#mobile
       */
      mobile: function mobile() {
        impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);
        return this._cache.mobile;
      },

      /**
       * Returns the detected phone type/family string or <tt>null</tt>.
       * <br>
       * The returned tablet (family or producer) is one of following keys:<br>
       * <br><tt>iPhone, BlackBerry, HTC, Nexus, Dell, Motorola, Samsung, LG, Sony, Asus,
       * NokiaLumia, Micromax, Palm, Vertu, Pantech, Fly, Wiko, iMobile, SimValley,
       * Wolfgang, Alcatel, Nintendo, Amoi, INQ, GenericPhone</tt><br>
       * <br>
       * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against
       * the patterns of <a href="http://detectmobilebrowsers.com/">detectmobilebrowsers.com</a>. If this test
       * is positive, a value of <code>UnknownPhone</code> or <code>UnknownMobile</code> is returned.<br>
       * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>
       * <br>
       * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>
       * and <code>UnknownMobile</code>, so you will get <code>null</code> here, while {@link MobileDetect#mobile}
       * will return <code>UnknownMobile</code>.<br>
       * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:
       * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.
       * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.
       * <br>
       * In most cases you will use the return value just as a boolean.
       *
       * @returns {String} the key of the phone family or producer, e.g. "iPhone"
       * @function MobileDetect#phone
       */
      phone: function phone() {
        impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);
        return this._cache.phone;
      },

      /**
       * Returns the detected tablet type/family string or <tt>null</tt>.
       * <br>
       * The returned tablet (family or producer) is one of following keys:<br>
       * <br><tt>iPad, NexusTablet, GoogleTablet, SamsungTablet, Kindle, SurfaceTablet,
       * HPTablet, AsusTablet, BlackBerryTablet, HTCtablet, MotorolaTablet, NookTablet,
       * AcerTablet, ToshibaTablet, LGTablet, FujitsuTablet, PrestigioTablet,
       * LenovoTablet, DellTablet, YarvikTablet, MedionTablet, ArnovaTablet,
       * IntensoTablet, IRUTablet, MegafonTablet, EbodaTablet, AllViewTablet,
       * ArchosTablet, AinolTablet, NokiaLumiaTablet, SonyTablet, PhilipsTablet,
       * CubeTablet, CobyTablet, MIDTablet, MSITablet, SMiTTablet, RockChipTablet,
       * FlyTablet, bqTablet, HuaweiTablet, NecTablet, PantechTablet, BronchoTablet,
       * VersusTablet, ZyncTablet, PositivoTablet, NabiTablet, KoboTablet, DanewTablet,
       * TexetTablet, PlaystationTablet, TrekstorTablet, PyleAudioTablet, AdvanTablet,
       * DanyTechTablet, GalapadTablet, MicromaxTablet, KarbonnTablet, AllFineTablet,
       * PROSCANTablet, YONESTablet, ChangJiaTablet, GUTablet, PointOfViewTablet,
       * OvermaxTablet, HCLTablet, DPSTablet, VistureTablet, CrestaTablet,
       * MediatekTablet, ConcordeTablet, GoCleverTablet, ModecomTablet, VoninoTablet,
       * ECSTablet, StorexTablet, VodafoneTablet, EssentielBTablet, RossMoorTablet,
       * iMobileTablet, TolinoTablet, AudioSonicTablet, AMPETablet, SkkTablet,
       * TecnoTablet, JXDTablet, iJoyTablet, FX2Tablet, XoroTablet, ViewsonicTablet,
       * VerizonTablet, OdysTablet, CaptivaTablet, IconbitTablet, TeclastTablet,
       * OndaTablet, JaytechTablet, BlaupunktTablet, DigmaTablet, EvolioTablet,
       * LavaTablet, AocTablet, MpmanTablet, CelkonTablet, WolderTablet, MediacomTablet,
       * MiTablet, NibiruTablet, NexoTablet, LeaderTablet, UbislateTablet,
       * PocketBookTablet, KocasoTablet, HisenseTablet, Hudl, TelstraTablet,
       * GenericTablet</tt><br>
       * <br>
       * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against
       * the patterns of <a href="http://detectmobilebrowsers.com/">detectmobilebrowsers.com</a>. If this test
       * is positive, a value of <code>UnknownTablet</code> or <code>UnknownMobile</code> is returned.<br>
       * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>
       * <br>
       * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>
       * and <code>UnknownMobile</code>, so you will get <code>null</code> here, while {@link MobileDetect#mobile}
       * will return <code>UnknownMobile</code>.<br>
       * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:
       * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.
       * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.
       * <br>
       * In most cases you will use the return value just as a boolean.
       *
       * @returns {String} the key of the tablet family or producer, e.g. "SamsungTablet"
       * @function MobileDetect#tablet
       */
      tablet: function tablet() {
        impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);
        return this._cache.tablet;
      },

      /**
       * Returns the (first) detected user-agent string or <tt>null</tt>.
       * <br>
       * The returned user-agent is one of following keys:<br>
       * <br><tt>Chrome, Dolfin, Opera, Skyfire, Edge, IE, Firefox, Bolt, TeaShark, Blazer,
       * Safari, WeChat, UCBrowser, baiduboxapp, baidubrowser, DiigoBrowser, Puffin,
       * Mercury, ObigoBrowser, NetFront, GenericBrowser, PaleMoon</tt><br>
       * <br>
       * In most cases calling {@link MobileDetect#userAgent} will be sufficient. But there are rare
       * cases where a mobile device pretends to be more than one particular browser. You can get the
       * list of all matches with {@link MobileDetect#userAgents} or check for a particular value by
       * providing one of the defined keys as first argument to {@link MobileDetect#is}.
       *
       * @returns {String} the key for the detected user-agent or <tt>null</tt>
       * @function MobileDetect#userAgent
       */
      userAgent: function userAgent() {
        if (this._cache.userAgent === undefined) {
          this._cache.userAgent = impl.findMatch(impl.mobileDetectRules.uas, this.ua);
        }

        return this._cache.userAgent;
      },

      /**
       * Returns all detected user-agent strings.
       * <br>
       * The array is empty or contains one or more of following keys:<br>
       * <br><tt>Chrome, Dolfin, Opera, Skyfire, Edge, IE, Firefox, Bolt, TeaShark, Blazer,
       * Safari, WeChat, UCBrowser, baiduboxapp, baidubrowser, DiigoBrowser, Puffin,
       * Mercury, ObigoBrowser, NetFront, GenericBrowser, PaleMoon</tt><br>
       * <br>
       * In most cases calling {@link MobileDetect#userAgent} will be sufficient. But there are rare
       * cases where a mobile device pretends to be more than one particular browser. You can get the
       * list of all matches with {@link MobileDetect#userAgents} or check for a particular value by
       * providing one of the defined keys as first argument to {@link MobileDetect#is}.
       *
       * @returns {Array} the array of detected user-agent keys or <tt>[]</tt>
       * @function MobileDetect#userAgents
       */
      userAgents: function userAgents() {
        if (this._cache.userAgents === undefined) {
          this._cache.userAgents = impl.findMatches(impl.mobileDetectRules.uas, this.ua);
        }

        return this._cache.userAgents;
      },

      /**
       * Returns the detected operating system string or <tt>null</tt>.
       * <br>
       * The operating system is one of following keys:<br>
       * <br><tt>AndroidOS, BlackBerryOS, PalmOS, SymbianOS, WindowsMobileOS, WindowsPhoneOS,
       * iOS, MeeGoOS, MaemoOS, JavaOS, webOS, badaOS, BREWOS</tt><br>
       *
       * @returns {String} the key for the detected operating system.
       * @function MobileDetect#os
       */
      os: function os() {
        if (this._cache.os === undefined) {
          this._cache.os = impl.detectOS(this.ua);
        }

        return this._cache.os;
      },

      /**
       * Get the version (as Number) of the given property in the User-Agent.
       * <br>
       * Will return a float number. (eg. 2_0 will return 2.0, 4.3.1 will return 4.31)
       *
       * @param {String} key a key defining a thing which has a version.<br>
       *        You can use one of following keys:<br>
       * <br><tt>Mobile, Build, Version, VendorID, iPad, iPhone, iPod, Kindle, Chrome, Coast,
       * Dolfin, Firefox, Fennec, Edge, IE, NetFront, NokiaBrowser, Opera, Opera Mini,
       * Opera Mobi, UCBrowser, MQQBrowser, MicroMessenger, baiduboxapp, baidubrowser,
       * SamsungBrowser, Iron, Safari, Skyfire, Tizen, Webkit, PaleMoon, Gecko, Trident,
       * Presto, Goanna, iOS, Android, BlackBerry, BREW, Java, Windows Phone OS, Windows
       * Phone, Windows CE, Windows NT, Symbian, webOS</tt><br>
       *
       * @returns {Number} the version as float or <tt>NaN</tt> if User-Agent doesn't contain this version.
       *          Be careful when comparing this value with '==' operator!
       * @function MobileDetect#version
       */
      version: function version(key) {
        return impl.getVersion(key, this.ua);
      },

      /**
       * Get the version (as String) of the given property in the User-Agent.
       * <br>
       *
       * @param {String} key a key defining a thing which has a version.<br>
       *        You can use one of following keys:<br>
       * <br><tt>Mobile, Build, Version, VendorID, iPad, iPhone, iPod, Kindle, Chrome, Coast,
       * Dolfin, Firefox, Fennec, Edge, IE, NetFront, NokiaBrowser, Opera, Opera Mini,
       * Opera Mobi, UCBrowser, MQQBrowser, MicroMessenger, baiduboxapp, baidubrowser,
       * SamsungBrowser, Iron, Safari, Skyfire, Tizen, Webkit, PaleMoon, Gecko, Trident,
       * Presto, Goanna, iOS, Android, BlackBerry, BREW, Java, Windows Phone OS, Windows
       * Phone, Windows CE, Windows NT, Symbian, webOS</tt><br>
       *
       * @returns {String} the "raw" version as String or <tt>null</tt> if User-Agent doesn't contain this version.
       *
       * @function MobileDetect#versionStr
       */
      versionStr: function versionStr(key) {
        return impl.getVersionStr(key, this.ua);
      },

      /**
       * Global test key against userAgent, os, phone, tablet and some other properties of userAgent string.
       *
       * @param {String} key the key (case-insensitive) of a userAgent, an operating system, phone or
       *        tablet family.<br>
       *        For a complete list of possible values, see {@link MobileDetect#userAgent},
       *        {@link MobileDetect#os}, {@link MobileDetect#phone}, {@link MobileDetect#tablet}.<br>
       *        Additionally you have following keys:<br>
       * <br><tt>Bot, MobileBot, DesktopMode, TV, WebKit, Console, Watch</tt><br>
       *
       * @returns {boolean} <tt>true</tt> when the given key is one of the defined keys of userAgent, os, phone,
       *                    tablet or one of the listed additional keys, otherwise <tt>false</tt>
       * @function MobileDetect#is
       */
      is: function is(key) {
        return containsIC(this.userAgents(), key) || equalIC(key, this.os()) || equalIC(key, this.phone()) || equalIC(key, this.tablet()) || containsIC(impl.findMatches(impl.mobileDetectRules.utils, this.ua), key);
      },

      /**
       * Do a quick test against navigator::userAgent.
       *
       * @param {String|RegExp} pattern the pattern, either as String or RegExp
       *                        (a string will be converted to a case-insensitive RegExp).
       * @returns {boolean} <tt>true</tt> when the pattern matches, otherwise <tt>false</tt>
       * @function MobileDetect#match
       */
      match: function match(pattern) {
        if (!(pattern instanceof RegExp)) {
          pattern = new RegExp(pattern, 'i');
        }

        return pattern.test(this.ua);
      },

      /**
       * Checks whether the mobile device can be considered as phone regarding <code>screen.width</code>.
       * <br>
       * Obviously this method makes sense in browser environments only (not for Node.js)!
       * @param {number} [maxPhoneWidth] the maximum logical pixels (aka. CSS-pixels) to be considered as phone.<br>
       *        The argument is optional and if not present or falsy, the value of the constructor is taken.
       * @returns {boolean|undefined} <code>undefined</code> if screen size wasn't detectable, else <code>true</code>
       *          when screen.width is less or equal to maxPhoneWidth, otherwise <code>false</code>.<br>
       *          Will always return <code>undefined</code> server-side.
       */
      isPhoneSized: function isPhoneSized(maxPhoneWidth) {
        return MobileDetect.isPhoneSized(maxPhoneWidth || this.maxPhoneWidth);
      },

      /**
       * Returns the mobile grade ('A', 'B', 'C').
       *
       * @returns {String} one of the mobile grades ('A', 'B', 'C').
       * @function MobileDetect#mobileGrade
       */
      mobileGrade: function mobileGrade() {
        if (this._cache.grade === undefined) {
          this._cache.grade = impl.mobileGrade(this);
        }

        return this._cache.grade;
      }
    }; // environment-dependent

    if (typeof window !== 'undefined' && window.screen) {
      MobileDetect.isPhoneSized = function (maxPhoneWidth) {
        return maxPhoneWidth < 0 ? undefined : impl.getDeviceSmallerSide() <= maxPhoneWidth;
      };
    } else {
      MobileDetect.isPhoneSized = function () {};
    } // should not be replaced by a completely new object - just overwrite existing methods


    MobileDetect._impl = impl;
    MobileDetect.version = '1.4.3 2018-09-08';
    return MobileDetect;
  }); // end of call of define()
})(function (undefined) {
  if ( true && module.exports) {
    return function (factory) {
      module.exports = factory();
    };
  } else if (true) {
    return __webpack_require__(/*! !webpack amd define */ "./node_modules/webpack/buildin/amd-define.js");
  } else {}
}());

/***/ }),

/***/ "./node_modules/query-string/index.js":
/*!********************************************!*\
  !*** ./node_modules/query-string/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var strictUriEncode = __webpack_require__(/*! strict-uri-encode */ "./node_modules/strict-uri-encode/index.js");

var decodeComponent = __webpack_require__(/*! decode-uri-component */ "./node_modules/decode-uri-component/index.js");

var splitOnFirst = __webpack_require__(/*! split-on-first */ "./node_modules/split-on-first/index.js");

function encoderForArrayFormat(options) {
  switch (options.arrayFormat) {
    case 'index':
      return function (key) {
        return function (result, value) {
          var index = result.length;

          if (value === undefined) {
            return result;
          }

          if (value === null) {
            return [].concat(_toConsumableArray(result), [[encode(key, options), '[', index, ']'].join('')]);
          }

          return [].concat(_toConsumableArray(result), [[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')]);
        };
      };

    case 'bracket':
      return function (key) {
        return function (result, value) {
          if (value === undefined) {
            return result;
          }

          if (value === null) {
            return [].concat(_toConsumableArray(result), [[encode(key, options), '[]'].join('')]);
          }

          return [].concat(_toConsumableArray(result), [[encode(key, options), '[]=', encode(value, options)].join('')]);
        };
      };

    case 'comma':
      return function (key) {
        return function (result, value, index) {
          if (!value) {
            return result;
          }

          if (index === 0) {
            return [[encode(key, options), '=', encode(value, options)].join('')];
          }

          return [[result, encode(value, options)].join(',')];
        };
      };

    default:
      return function (key) {
        return function (result, value) {
          if (value === undefined) {
            return result;
          }

          if (value === null) {
            return [].concat(_toConsumableArray(result), [encode(key, options)]);
          }

          return [].concat(_toConsumableArray(result), [[encode(key, options), '=', encode(value, options)].join('')]);
        };
      };
  }
}

function parserForArrayFormat(options) {
  var result;

  switch (options.arrayFormat) {
    case 'index':
      return function (key, value, accumulator) {
        result = /\[(\d*)\]$/.exec(key);
        key = key.replace(/\[\d*\]$/, '');

        if (!result) {
          accumulator[key] = value;
          return;
        }

        if (accumulator[key] === undefined) {
          accumulator[key] = {};
        }

        accumulator[key][result[1]] = value;
      };

    case 'bracket':
      return function (key, value, accumulator) {
        result = /(\[\])$/.exec(key);
        key = key.replace(/\[\]$/, '');

        if (!result) {
          accumulator[key] = value;
          return;
        }

        if (accumulator[key] === undefined) {
          accumulator[key] = [value];
          return;
        }

        accumulator[key] = [].concat(accumulator[key], value);
      };

    case 'comma':
      return function (key, value, accumulator) {
        var isArray = typeof value === 'string' && value.split('').indexOf(',') > -1;
        var newValue = isArray ? value.split(',') : value;
        accumulator[key] = newValue;
      };

    default:
      return function (key, value, accumulator) {
        if (accumulator[key] === undefined) {
          accumulator[key] = value;
          return;
        }

        accumulator[key] = [].concat(accumulator[key], value);
      };
  }
}

function encode(value, options) {
  if (options.encode) {
    return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
  }

  return value;
}

function decode(value, options) {
  if (options.decode) {
    return decodeComponent(value);
  }

  return value;
}

function keysSorter(input) {
  if (Array.isArray(input)) {
    return input.sort();
  }

  if (_typeof(input) === 'object') {
    return keysSorter(Object.keys(input)).sort(function (a, b) {
      return Number(a) - Number(b);
    }).map(function (key) {
      return input[key];
    });
  }

  return input;
}

function extract(input) {
  var queryStart = input.indexOf('?');

  if (queryStart === -1) {
    return '';
  }

  return input.slice(queryStart + 1);
}

function parse(input, options) {
  options = Object.assign({
    decode: true,
    arrayFormat: 'none'
  }, options);
  var formatter = parserForArrayFormat(options); // Create an object with no prototype

  var ret = Object.create(null);

  if (typeof input !== 'string') {
    return ret;
  }

  input = input.trim().replace(/^[?#&]/, '');

  if (!input) {
    return ret;
  }

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = input.split('&')[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var param = _step.value;

      var _splitOnFirst = splitOnFirst(param.replace(/\+/g, ' '), '='),
          _splitOnFirst2 = _slicedToArray(_splitOnFirst, 2),
          key = _splitOnFirst2[0],
          value = _splitOnFirst2[1]; // Missing `=` should be `null`:
      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters


      value = value === undefined ? null : decode(value, options);
      formatter(decode(key, options), value, ret);
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return != null) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return Object.keys(ret).sort().reduce(function (result, key) {
    var value = ret[key];

    if (Boolean(value) && _typeof(value) === 'object' && !Array.isArray(value)) {
      // Sort object keys, not values
      result[key] = keysSorter(value);
    } else {
      result[key] = value;
    }

    return result;
  }, Object.create(null));
}

exports.extract = extract;
exports.parse = parse;

exports.stringify = function (object, options) {
  if (!object) {
    return '';
  }

  options = Object.assign({
    encode: true,
    strict: true,
    arrayFormat: 'none'
  }, options);
  var formatter = encoderForArrayFormat(options);
  var keys = Object.keys(object);

  if (options.sort !== false) {
    keys.sort(options.sort);
  }

  return keys.map(function (key) {
    var value = object[key];

    if (value === undefined) {
      return '';
    }

    if (value === null) {
      return encode(key, options);
    }

    if (Array.isArray(value)) {
      return value.reduce(formatter(key), []).join('&');
    }

    return encode(key, options) + '=' + encode(value, options);
  }).filter(function (x) {
    return x.length > 0;
  }).join('&');
};

exports.parseUrl = function (input, options) {
  var hashStart = input.indexOf('#');

  if (hashStart !== -1) {
    input = input.slice(0, hashStart);
  }

  return {
    url: input.split('?')[0] || '',
    query: parse(extract(input), options)
  };
};

/***/ }),

/***/ "./node_modules/split-on-first/index.js":
/*!**********************************************!*\
  !*** ./node_modules/split-on-first/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (string, separator) {
  if (!(typeof string === 'string' && typeof separator === 'string')) {
    throw new TypeError('Expected the arguments to be of type `string`');
  }

  if (separator === '') {
    return [string];
  }

  var separatorIndex = string.indexOf(separator);

  if (separatorIndex === -1) {
    return [string];
  }

  return [string.slice(0, separatorIndex), string.slice(separatorIndex + separator.length)];
};

/***/ }),

/***/ "./node_modules/stimulus/index.js":
/*!****************************************!*\
  !*** ./node_modules/stimulus/index.js ***!
  \****************************************/
/*! exports provided: Application, Context, Controller, defaultSchema */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _stimulus_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stimulus/core */ "./node_modules/@stimulus/core/dist/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Application", function() { return _stimulus_core__WEBPACK_IMPORTED_MODULE_0__["Application"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Context", function() { return _stimulus_core__WEBPACK_IMPORTED_MODULE_0__["Context"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Controller", function() { return _stimulus_core__WEBPACK_IMPORTED_MODULE_0__["Controller"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultSchema", function() { return _stimulus_core__WEBPACK_IMPORTED_MODULE_0__["defaultSchema"]; });



/***/ }),

/***/ "./node_modules/stimulus/webpack-helpers.js":
/*!**************************************************!*\
  !*** ./node_modules/stimulus/webpack-helpers.js ***!
  \**************************************************/
/*! exports provided: definitionsFromContext, identifierForContextKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _stimulus_webpack_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stimulus/webpack-helpers */ "./node_modules/@stimulus/webpack-helpers/dist/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "definitionsFromContext", function() { return _stimulus_webpack_helpers__WEBPACK_IMPORTED_MODULE_0__["definitionsFromContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identifierForContextKey", function() { return _stimulus_webpack_helpers__WEBPACK_IMPORTED_MODULE_0__["identifierForContextKey"]; });



/***/ }),

/***/ "./node_modules/strict-uri-encode/index.js":
/*!*************************************************!*\
  !*** ./node_modules/strict-uri-encode/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (str) {
  return encodeURIComponent(str).replace(/[!'()*]/g, function (x) {
    return "%".concat(x.charCodeAt(0).toString(16).toUpperCase());
  });
};

/***/ }),

/***/ "./node_modules/turbolinks/dist/turbolinks.js":
/*!****************************************************!*\
  !*** ./node_modules/turbolinks/dist/turbolinks.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*
Turbolinks 5.2.0
Copyright © 2018 Basecamp, LLC
 */
(function () {
  var t = this;
  (function () {
    (function () {
      this.Turbolinks = {
        supported: function () {
          return null != window.history.pushState && null != window.requestAnimationFrame && null != window.addEventListener;
        }(),
        visit: function visit(t, r) {
          return e.controller.visit(t, r);
        },
        clearCache: function clearCache() {
          return e.controller.clearCache();
        },
        setProgressBarDelay: function setProgressBarDelay(t) {
          return e.controller.setProgressBarDelay(t);
        }
      };
    }).call(this);
  }).call(t);
  var e = t.Turbolinks;
  (function () {
    (function () {
      var t,
          r,
          n,
          o = [].slice;
      e.copyObject = function (t) {
        var e, r, n;
        r = {};

        for (e in t) {
          n = t[e], r[e] = n;
        }

        return r;
      }, e.closest = function (e, r) {
        return t.call(e, r);
      }, t = function () {
        var t, e;
        return t = document.documentElement, null != (e = t.closest) ? e : function (t) {
          var e;

          for (e = this; e;) {
            if (e.nodeType === Node.ELEMENT_NODE && r.call(e, t)) return e;
            e = e.parentNode;
          }
        };
      }(), e.defer = function (t) {
        return setTimeout(t, 1);
      }, e.throttle = function (t) {
        var e;
        return e = null, function () {
          var r;
          return r = 1 <= arguments.length ? o.call(arguments, 0) : [], null != e ? e : e = requestAnimationFrame(function (n) {
            return function () {
              return e = null, t.apply(n, r);
            };
          }(this));
        };
      }, e.dispatch = function (t, e) {
        var r, o, i, s, a, u;
        return a = null != e ? e : {}, u = a.target, r = a.cancelable, o = a.data, i = document.createEvent("Events"), i.initEvent(t, !0, r === !0), i.data = null != o ? o : {}, i.cancelable && !n && (s = i.preventDefault, i.preventDefault = function () {
          return this.defaultPrevented || Object.defineProperty(this, "defaultPrevented", {
            get: function get() {
              return !0;
            }
          }), s.call(this);
        }), (null != u ? u : document).dispatchEvent(i), i;
      }, n = function () {
        var t;
        return t = document.createEvent("Events"), t.initEvent("test", !0, !0), t.preventDefault(), t.defaultPrevented;
      }(), e.match = function (t, e) {
        return r.call(t, e);
      }, r = function () {
        var t, e, r, n;
        return t = document.documentElement, null != (e = null != (r = null != (n = t.matchesSelector) ? n : t.webkitMatchesSelector) ? r : t.msMatchesSelector) ? e : t.mozMatchesSelector;
      }(), e.uuid = function () {
        var t, e, r;

        for (r = "", t = e = 1; 36 >= e; t = ++e) {
          r += 9 === t || 14 === t || 19 === t || 24 === t ? "-" : 15 === t ? "4" : 20 === t ? (Math.floor(4 * Math.random()) + 8).toString(16) : Math.floor(15 * Math.random()).toString(16);
        }

        return r;
      };
    }).call(this), function () {
      e.Location = function () {
        function t(t) {
          var e, r;
          null == t && (t = ""), r = document.createElement("a"), r.href = t.toString(), this.absoluteURL = r.href, e = r.hash.length, 2 > e ? this.requestURL = this.absoluteURL : (this.requestURL = this.absoluteURL.slice(0, -e), this.anchor = r.hash.slice(1));
        }

        var e, r, n, o;
        return t.wrap = function (t) {
          return t instanceof this ? t : new this(t);
        }, t.prototype.getOrigin = function () {
          return this.absoluteURL.split("/", 3).join("/");
        }, t.prototype.getPath = function () {
          var t, e;
          return null != (t = null != (e = this.requestURL.match(/\/\/[^\/]*(\/[^?;]*)/)) ? e[1] : void 0) ? t : "/";
        }, t.prototype.getPathComponents = function () {
          return this.getPath().split("/").slice(1);
        }, t.prototype.getLastPathComponent = function () {
          return this.getPathComponents().slice(-1)[0];
        }, t.prototype.getExtension = function () {
          var t, e;
          return null != (t = null != (e = this.getLastPathComponent().match(/\.[^.]*$/)) ? e[0] : void 0) ? t : "";
        }, t.prototype.isHTML = function () {
          return this.getExtension().match(/^(?:|\.(?:htm|html|xhtml))$/);
        }, t.prototype.isPrefixedBy = function (t) {
          var e;
          return e = r(t), this.isEqualTo(t) || o(this.absoluteURL, e);
        }, t.prototype.isEqualTo = function (t) {
          return this.absoluteURL === (null != t ? t.absoluteURL : void 0);
        }, t.prototype.toCacheKey = function () {
          return this.requestURL;
        }, t.prototype.toJSON = function () {
          return this.absoluteURL;
        }, t.prototype.toString = function () {
          return this.absoluteURL;
        }, t.prototype.valueOf = function () {
          return this.absoluteURL;
        }, r = function r(t) {
          return e(t.getOrigin() + t.getPath());
        }, e = function e(t) {
          return n(t, "/") ? t : t + "/";
        }, o = function o(t, e) {
          return t.slice(0, e.length) === e;
        }, n = function n(t, e) {
          return t.slice(-e.length) === e;
        }, t;
      }();
    }.call(this), function () {
      var t = function t(_t, e) {
        return function () {
          return _t.apply(e, arguments);
        };
      };

      e.HttpRequest = function () {
        function r(r, n, o) {
          this.delegate = r, this.requestCanceled = t(this.requestCanceled, this), this.requestTimedOut = t(this.requestTimedOut, this), this.requestFailed = t(this.requestFailed, this), this.requestLoaded = t(this.requestLoaded, this), this.requestProgressed = t(this.requestProgressed, this), this.url = e.Location.wrap(n).requestURL, this.referrer = e.Location.wrap(o).absoluteURL, this.createXHR();
        }

        return r.NETWORK_FAILURE = 0, r.TIMEOUT_FAILURE = -1, r.timeout = 60, r.prototype.send = function () {
          var t;
          return this.xhr && !this.sent ? (this.notifyApplicationBeforeRequestStart(), this.setProgress(0), this.xhr.send(), this.sent = !0, "function" == typeof (t = this.delegate).requestStarted ? t.requestStarted() : void 0) : void 0;
        }, r.prototype.cancel = function () {
          return this.xhr && this.sent ? this.xhr.abort() : void 0;
        }, r.prototype.requestProgressed = function (t) {
          return t.lengthComputable ? this.setProgress(t.loaded / t.total) : void 0;
        }, r.prototype.requestLoaded = function () {
          return this.endRequest(function (t) {
            return function () {
              var e;
              return 200 <= (e = t.xhr.status) && 300 > e ? t.delegate.requestCompletedWithResponse(t.xhr.responseText, t.xhr.getResponseHeader("Turbolinks-Location")) : (t.failed = !0, t.delegate.requestFailedWithStatusCode(t.xhr.status, t.xhr.responseText));
            };
          }(this));
        }, r.prototype.requestFailed = function () {
          return this.endRequest(function (t) {
            return function () {
              return t.failed = !0, t.delegate.requestFailedWithStatusCode(t.constructor.NETWORK_FAILURE);
            };
          }(this));
        }, r.prototype.requestTimedOut = function () {
          return this.endRequest(function (t) {
            return function () {
              return t.failed = !0, t.delegate.requestFailedWithStatusCode(t.constructor.TIMEOUT_FAILURE);
            };
          }(this));
        }, r.prototype.requestCanceled = function () {
          return this.endRequest();
        }, r.prototype.notifyApplicationBeforeRequestStart = function () {
          return e.dispatch("turbolinks:request-start", {
            data: {
              url: this.url,
              xhr: this.xhr
            }
          });
        }, r.prototype.notifyApplicationAfterRequestEnd = function () {
          return e.dispatch("turbolinks:request-end", {
            data: {
              url: this.url,
              xhr: this.xhr
            }
          });
        }, r.prototype.createXHR = function () {
          return this.xhr = new XMLHttpRequest(), this.xhr.open("GET", this.url, !0), this.xhr.timeout = 1e3 * this.constructor.timeout, this.xhr.setRequestHeader("Accept", "text/html, application/xhtml+xml"), this.xhr.setRequestHeader("Turbolinks-Referrer", this.referrer), this.xhr.onprogress = this.requestProgressed, this.xhr.onload = this.requestLoaded, this.xhr.onerror = this.requestFailed, this.xhr.ontimeout = this.requestTimedOut, this.xhr.onabort = this.requestCanceled;
        }, r.prototype.endRequest = function (t) {
          return this.xhr ? (this.notifyApplicationAfterRequestEnd(), null != t && t.call(this), this.destroy()) : void 0;
        }, r.prototype.setProgress = function (t) {
          var e;
          return this.progress = t, "function" == typeof (e = this.delegate).requestProgressed ? e.requestProgressed(this.progress) : void 0;
        }, r.prototype.destroy = function () {
          var t;
          return this.setProgress(1), "function" == typeof (t = this.delegate).requestFinished && t.requestFinished(), this.delegate = null, this.xhr = null;
        }, r;
      }();
    }.call(this), function () {
      var t = function t(_t2, e) {
        return function () {
          return _t2.apply(e, arguments);
        };
      };

      e.ProgressBar = function () {
        function e() {
          this.trickle = t(this.trickle, this), this.stylesheetElement = this.createStylesheetElement(), this.progressElement = this.createProgressElement();
        }

        var r;
        return r = 300, e.defaultCSS = ".turbolinks-progress-bar {\n  position: fixed;\n  display: block;\n  top: 0;\n  left: 0;\n  height: 3px;\n  background: #0076ff;\n  z-index: 9999;\n  transition: width " + r + "ms ease-out, opacity " + r / 2 + "ms " + r / 2 + "ms ease-in;\n  transform: translate3d(0, 0, 0);\n}", e.prototype.show = function () {
          return this.visible ? void 0 : (this.visible = !0, this.installStylesheetElement(), this.installProgressElement(), this.startTrickling());
        }, e.prototype.hide = function () {
          return this.visible && !this.hiding ? (this.hiding = !0, this.fadeProgressElement(function (t) {
            return function () {
              return t.uninstallProgressElement(), t.stopTrickling(), t.visible = !1, t.hiding = !1;
            };
          }(this))) : void 0;
        }, e.prototype.setValue = function (t) {
          return this.value = t, this.refresh();
        }, e.prototype.installStylesheetElement = function () {
          return document.head.insertBefore(this.stylesheetElement, document.head.firstChild);
        }, e.prototype.installProgressElement = function () {
          return this.progressElement.style.width = 0, this.progressElement.style.opacity = 1, document.documentElement.insertBefore(this.progressElement, document.body), this.refresh();
        }, e.prototype.fadeProgressElement = function (t) {
          return this.progressElement.style.opacity = 0, setTimeout(t, 1.5 * r);
        }, e.prototype.uninstallProgressElement = function () {
          return this.progressElement.parentNode ? document.documentElement.removeChild(this.progressElement) : void 0;
        }, e.prototype.startTrickling = function () {
          return null != this.trickleInterval ? this.trickleInterval : this.trickleInterval = setInterval(this.trickle, r);
        }, e.prototype.stopTrickling = function () {
          return clearInterval(this.trickleInterval), this.trickleInterval = null;
        }, e.prototype.trickle = function () {
          return this.setValue(this.value + Math.random() / 100);
        }, e.prototype.refresh = function () {
          return requestAnimationFrame(function (t) {
            return function () {
              return t.progressElement.style.width = 10 + 90 * t.value + "%";
            };
          }(this));
        }, e.prototype.createStylesheetElement = function () {
          var t;
          return t = document.createElement("style"), t.type = "text/css", t.textContent = this.constructor.defaultCSS, t;
        }, e.prototype.createProgressElement = function () {
          var t;
          return t = document.createElement("div"), t.className = "turbolinks-progress-bar", t;
        }, e;
      }();
    }.call(this), function () {
      var t = function t(_t3, e) {
        return function () {
          return _t3.apply(e, arguments);
        };
      };

      e.BrowserAdapter = function () {
        function r(r) {
          this.controller = r, this.showProgressBar = t(this.showProgressBar, this), this.progressBar = new e.ProgressBar();
        }

        var n, o, i;
        return i = e.HttpRequest, n = i.NETWORK_FAILURE, o = i.TIMEOUT_FAILURE, r.prototype.visitProposedToLocationWithAction = function (t, e) {
          return this.controller.startVisitToLocationWithAction(t, e);
        }, r.prototype.visitStarted = function (t) {
          return t.issueRequest(), t.changeHistory(), t.loadCachedSnapshot();
        }, r.prototype.visitRequestStarted = function (t) {
          return this.progressBar.setValue(0), t.hasCachedSnapshot() || "restore" !== t.action ? this.showProgressBarAfterDelay() : this.showProgressBar();
        }, r.prototype.visitRequestProgressed = function (t) {
          return this.progressBar.setValue(t.progress);
        }, r.prototype.visitRequestCompleted = function (t) {
          return t.loadResponse();
        }, r.prototype.visitRequestFailedWithStatusCode = function (t, e) {
          switch (e) {
            case n:
            case o:
              return this.reload();

            default:
              return t.loadResponse();
          }
        }, r.prototype.visitRequestFinished = function (t) {
          return this.hideProgressBar();
        }, r.prototype.visitCompleted = function (t) {
          return t.followRedirect();
        }, r.prototype.pageInvalidated = function () {
          return this.reload();
        }, r.prototype.showProgressBarAfterDelay = function () {
          return this.progressBarTimeout = setTimeout(this.showProgressBar, this.controller.progressBarDelay);
        }, r.prototype.showProgressBar = function () {
          return this.progressBar.show();
        }, r.prototype.hideProgressBar = function () {
          return this.progressBar.hide(), clearTimeout(this.progressBarTimeout);
        }, r.prototype.reload = function () {
          return window.location.reload();
        }, r;
      }();
    }.call(this), function () {
      var t = function t(_t4, e) {
        return function () {
          return _t4.apply(e, arguments);
        };
      };

      e.History = function () {
        function r(e) {
          this.delegate = e, this.onPageLoad = t(this.onPageLoad, this), this.onPopState = t(this.onPopState, this);
        }

        return r.prototype.start = function () {
          return this.started ? void 0 : (addEventListener("popstate", this.onPopState, !1), addEventListener("load", this.onPageLoad, !1), this.started = !0);
        }, r.prototype.stop = function () {
          return this.started ? (removeEventListener("popstate", this.onPopState, !1), removeEventListener("load", this.onPageLoad, !1), this.started = !1) : void 0;
        }, r.prototype.push = function (t, r) {
          return t = e.Location.wrap(t), this.update("push", t, r);
        }, r.prototype.replace = function (t, r) {
          return t = e.Location.wrap(t), this.update("replace", t, r);
        }, r.prototype.onPopState = function (t) {
          var r, n, o, i;
          return this.shouldHandlePopState() && (i = null != (n = t.state) ? n.turbolinks : void 0) ? (r = e.Location.wrap(window.location), o = i.restorationIdentifier, this.delegate.historyPoppedToLocationWithRestorationIdentifier(r, o)) : void 0;
        }, r.prototype.onPageLoad = function (t) {
          return e.defer(function (t) {
            return function () {
              return t.pageLoaded = !0;
            };
          }(this));
        }, r.prototype.shouldHandlePopState = function () {
          return this.pageIsLoaded();
        }, r.prototype.pageIsLoaded = function () {
          return this.pageLoaded || "complete" === document.readyState;
        }, r.prototype.update = function (t, e, r) {
          var n;
          return n = {
            turbolinks: {
              restorationIdentifier: r
            }
          }, history[t + "State"](n, null, e);
        }, r;
      }();
    }.call(this), function () {
      e.HeadDetails = function () {
        function t(t) {
          var e, r, n, s, a, u;

          for (this.elements = {}, n = 0, a = t.length; a > n; n++) {
            u = t[n], u.nodeType === Node.ELEMENT_NODE && (s = u.outerHTML, r = null != (e = this.elements)[s] ? e[s] : e[s] = {
              type: i(u),
              tracked: o(u),
              elements: []
            }, r.elements.push(u));
          }
        }

        var e, r, n, o, i;
        return t.fromHeadElement = function (t) {
          var e;
          return new this(null != (e = null != t ? t.childNodes : void 0) ? e : []);
        }, t.prototype.hasElementWithKey = function (t) {
          return t in this.elements;
        }, t.prototype.getTrackedElementSignature = function () {
          var t, e;
          return function () {
            var r, n;
            r = this.elements, n = [];

            for (t in r) {
              e = r[t].tracked, e && n.push(t);
            }

            return n;
          }.call(this).join("");
        }, t.prototype.getScriptElementsNotInDetails = function (t) {
          return this.getElementsMatchingTypeNotInDetails("script", t);
        }, t.prototype.getStylesheetElementsNotInDetails = function (t) {
          return this.getElementsMatchingTypeNotInDetails("stylesheet", t);
        }, t.prototype.getElementsMatchingTypeNotInDetails = function (t, e) {
          var r, n, o, i, s, a;
          o = this.elements, s = [];

          for (n in o) {
            i = o[n], a = i.type, r = i.elements, a !== t || e.hasElementWithKey(n) || s.push(r[0]);
          }

          return s;
        }, t.prototype.getProvisionalElements = function () {
          var t, e, r, n, o, i, s;
          r = [], n = this.elements;

          for (e in n) {
            o = n[e], s = o.type, i = o.tracked, t = o.elements, null != s || i ? t.length > 1 && r.push.apply(r, t.slice(1)) : r.push.apply(r, t);
          }

          return r;
        }, t.prototype.getMetaValue = function (t) {
          var e;
          return null != (e = this.findMetaElementByName(t)) ? e.getAttribute("content") : void 0;
        }, t.prototype.findMetaElementByName = function (t) {
          var r, n, o, i;
          r = void 0, i = this.elements;

          for (o in i) {
            n = i[o].elements, e(n[0], t) && (r = n[0]);
          }

          return r;
        }, i = function i(t) {
          return r(t) ? "script" : n(t) ? "stylesheet" : void 0;
        }, o = function o(t) {
          return "reload" === t.getAttribute("data-turbolinks-track");
        }, r = function r(t) {
          var e;
          return e = t.tagName.toLowerCase(), "script" === e;
        }, n = function n(t) {
          var e;
          return e = t.tagName.toLowerCase(), "style" === e || "link" === e && "stylesheet" === t.getAttribute("rel");
        }, e = function e(t, _e) {
          var r;
          return r = t.tagName.toLowerCase(), "meta" === r && t.getAttribute("name") === _e;
        }, t;
      }();
    }.call(this), function () {
      e.Snapshot = function () {
        function t(t, e) {
          this.headDetails = t, this.bodyElement = e;
        }

        return t.wrap = function (t) {
          return t instanceof this ? t : "string" == typeof t ? this.fromHTMLString(t) : this.fromHTMLElement(t);
        }, t.fromHTMLString = function (t) {
          var e;
          return e = document.createElement("html"), e.innerHTML = t, this.fromHTMLElement(e);
        }, t.fromHTMLElement = function (t) {
          var r, n, o, i;
          return o = t.querySelector("head"), r = null != (i = t.querySelector("body")) ? i : document.createElement("body"), n = e.HeadDetails.fromHeadElement(o), new this(n, r);
        }, t.prototype.clone = function () {
          return new this.constructor(this.headDetails, this.bodyElement.cloneNode(!0));
        }, t.prototype.getRootLocation = function () {
          var t, r;
          return r = null != (t = this.getSetting("root")) ? t : "/", new e.Location(r);
        }, t.prototype.getCacheControlValue = function () {
          return this.getSetting("cache-control");
        }, t.prototype.getElementForAnchor = function (t) {
          try {
            return this.bodyElement.querySelector("[id='" + t + "'], a[name='" + t + "']");
          } catch (e) {}
        }, t.prototype.getPermanentElements = function () {
          return this.bodyElement.querySelectorAll("[id][data-turbolinks-permanent]");
        }, t.prototype.getPermanentElementById = function (t) {
          return this.bodyElement.querySelector("#" + t + "[data-turbolinks-permanent]");
        }, t.prototype.getPermanentElementsPresentInSnapshot = function (t) {
          var e, r, n, o, i;

          for (o = this.getPermanentElements(), i = [], r = 0, n = o.length; n > r; r++) {
            e = o[r], t.getPermanentElementById(e.id) && i.push(e);
          }

          return i;
        }, t.prototype.findFirstAutofocusableElement = function () {
          return this.bodyElement.querySelector("[autofocus]");
        }, t.prototype.hasAnchor = function (t) {
          return null != this.getElementForAnchor(t);
        }, t.prototype.isPreviewable = function () {
          return "no-preview" !== this.getCacheControlValue();
        }, t.prototype.isCacheable = function () {
          return "no-cache" !== this.getCacheControlValue();
        }, t.prototype.isVisitable = function () {
          return "reload" !== this.getSetting("visit-control");
        }, t.prototype.getSetting = function (t) {
          return this.headDetails.getMetaValue("turbolinks-" + t);
        }, t;
      }();
    }.call(this), function () {
      var t = [].slice;

      e.Renderer = function () {
        function e() {}

        var r;
        return e.render = function () {
          var e, r, n, o;
          return n = arguments[0], r = arguments[1], e = 3 <= arguments.length ? t.call(arguments, 2) : [], o = function (t, e, r) {
            r.prototype = t.prototype;
            var n = new r(),
                o = t.apply(n, e);
            return Object(o) === o ? o : n;
          }(this, e, function () {}), o.delegate = n, o.render(r), o;
        }, e.prototype.renderView = function (t) {
          return this.delegate.viewWillRender(this.newBody), t(), this.delegate.viewRendered(this.newBody);
        }, e.prototype.invalidateView = function () {
          return this.delegate.viewInvalidated();
        }, e.prototype.createScriptElement = function (t) {
          var e;
          return "false" === t.getAttribute("data-turbolinks-eval") ? t : (e = document.createElement("script"), e.textContent = t.textContent, e.async = !1, r(e, t), e);
        }, r = function r(t, e) {
          var r, n, o, i, s, a, u;

          for (i = e.attributes, a = [], r = 0, n = i.length; n > r; r++) {
            s = i[r], o = s.name, u = s.value, a.push(t.setAttribute(o, u));
          }

          return a;
        }, e;
      }();
    }.call(this), function () {
      var t,
          r,
          n = function n(t, e) {
        function r() {
          this.constructor = t;
        }

        for (var n in e) {
          o.call(e, n) && (t[n] = e[n]);
        }

        return r.prototype = e.prototype, t.prototype = new r(), t.__super__ = e.prototype, t;
      },
          o = {}.hasOwnProperty;

      e.SnapshotRenderer = function (e) {
        function o(t, e, r) {
          this.currentSnapshot = t, this.newSnapshot = e, this.isPreview = r, this.currentHeadDetails = this.currentSnapshot.headDetails, this.newHeadDetails = this.newSnapshot.headDetails, this.currentBody = this.currentSnapshot.bodyElement, this.newBody = this.newSnapshot.bodyElement;
        }

        return n(o, e), o.prototype.render = function (t) {
          return this.shouldRender() ? (this.mergeHead(), this.renderView(function (e) {
            return function () {
              return e.replaceBody(), e.isPreview || e.focusFirstAutofocusableElement(), t();
            };
          }(this))) : this.invalidateView();
        }, o.prototype.mergeHead = function () {
          return this.copyNewHeadStylesheetElements(), this.copyNewHeadScriptElements(), this.removeCurrentHeadProvisionalElements(), this.copyNewHeadProvisionalElements();
        }, o.prototype.replaceBody = function () {
          var t;
          return t = this.relocateCurrentBodyPermanentElements(), this.activateNewBodyScriptElements(), this.assignNewBody(), this.replacePlaceholderElementsWithClonedPermanentElements(t);
        }, o.prototype.shouldRender = function () {
          return this.newSnapshot.isVisitable() && this.trackedElementsAreIdentical();
        }, o.prototype.trackedElementsAreIdentical = function () {
          return this.currentHeadDetails.getTrackedElementSignature() === this.newHeadDetails.getTrackedElementSignature();
        }, o.prototype.copyNewHeadStylesheetElements = function () {
          var t, e, r, n, o;

          for (n = this.getNewHeadStylesheetElements(), o = [], e = 0, r = n.length; r > e; e++) {
            t = n[e], o.push(document.head.appendChild(t));
          }

          return o;
        }, o.prototype.copyNewHeadScriptElements = function () {
          var t, e, r, n, o;

          for (n = this.getNewHeadScriptElements(), o = [], e = 0, r = n.length; r > e; e++) {
            t = n[e], o.push(document.head.appendChild(this.createScriptElement(t)));
          }

          return o;
        }, o.prototype.removeCurrentHeadProvisionalElements = function () {
          var t, e, r, n, o;

          for (n = this.getCurrentHeadProvisionalElements(), o = [], e = 0, r = n.length; r > e; e++) {
            t = n[e], o.push(document.head.removeChild(t));
          }

          return o;
        }, o.prototype.copyNewHeadProvisionalElements = function () {
          var t, e, r, n, o;

          for (n = this.getNewHeadProvisionalElements(), o = [], e = 0, r = n.length; r > e; e++) {
            t = n[e], o.push(document.head.appendChild(t));
          }

          return o;
        }, o.prototype.relocateCurrentBodyPermanentElements = function () {
          var e, n, o, i, s, a, u;

          for (a = this.getCurrentBodyPermanentElements(), u = [], e = 0, n = a.length; n > e; e++) {
            i = a[e], s = t(i), o = this.newSnapshot.getPermanentElementById(i.id), r(i, s.element), r(o, i), u.push(s);
          }

          return u;
        }, o.prototype.replacePlaceholderElementsWithClonedPermanentElements = function (t) {
          var e, n, o, i, s, a, u;

          for (u = [], o = 0, i = t.length; i > o; o++) {
            a = t[o], n = a.element, s = a.permanentElement, e = s.cloneNode(!0), u.push(r(n, e));
          }

          return u;
        }, o.prototype.activateNewBodyScriptElements = function () {
          var t, e, n, o, i, s;

          for (i = this.getNewBodyScriptElements(), s = [], e = 0, o = i.length; o > e; e++) {
            n = i[e], t = this.createScriptElement(n), s.push(r(n, t));
          }

          return s;
        }, o.prototype.assignNewBody = function () {
          return document.body = this.newBody;
        }, o.prototype.focusFirstAutofocusableElement = function () {
          var t;
          return null != (t = this.newSnapshot.findFirstAutofocusableElement()) ? t.focus() : void 0;
        }, o.prototype.getNewHeadStylesheetElements = function () {
          return this.newHeadDetails.getStylesheetElementsNotInDetails(this.currentHeadDetails);
        }, o.prototype.getNewHeadScriptElements = function () {
          return this.newHeadDetails.getScriptElementsNotInDetails(this.currentHeadDetails);
        }, o.prototype.getCurrentHeadProvisionalElements = function () {
          return this.currentHeadDetails.getProvisionalElements();
        }, o.prototype.getNewHeadProvisionalElements = function () {
          return this.newHeadDetails.getProvisionalElements();
        }, o.prototype.getCurrentBodyPermanentElements = function () {
          return this.currentSnapshot.getPermanentElementsPresentInSnapshot(this.newSnapshot);
        }, o.prototype.getNewBodyScriptElements = function () {
          return this.newBody.querySelectorAll("script");
        }, o;
      }(e.Renderer), t = function t(_t5) {
        var e;
        return e = document.createElement("meta"), e.setAttribute("name", "turbolinks-permanent-placeholder"), e.setAttribute("content", _t5.id), {
          element: e,
          permanentElement: _t5
        };
      }, r = function r(t, e) {
        var r;
        return (r = t.parentNode) ? r.replaceChild(e, t) : void 0;
      };
    }.call(this), function () {
      var t = function t(_t6, e) {
        function n() {
          this.constructor = _t6;
        }

        for (var o in e) {
          r.call(e, o) && (_t6[o] = e[o]);
        }

        return n.prototype = e.prototype, _t6.prototype = new n(), _t6.__super__ = e.prototype, _t6;
      },
          r = {}.hasOwnProperty;

      e.ErrorRenderer = function (e) {
        function r(t) {
          var e;
          e = document.createElement("html"), e.innerHTML = t, this.newHead = e.querySelector("head"), this.newBody = e.querySelector("body");
        }

        return t(r, e), r.prototype.render = function (t) {
          return this.renderView(function (e) {
            return function () {
              return e.replaceHeadAndBody(), e.activateBodyScriptElements(), t();
            };
          }(this));
        }, r.prototype.replaceHeadAndBody = function () {
          var t, e;
          return e = document.head, t = document.body, e.parentNode.replaceChild(this.newHead, e), t.parentNode.replaceChild(this.newBody, t);
        }, r.prototype.activateBodyScriptElements = function () {
          var t, e, r, n, o, i;

          for (n = this.getScriptElements(), i = [], e = 0, r = n.length; r > e; e++) {
            o = n[e], t = this.createScriptElement(o), i.push(o.parentNode.replaceChild(t, o));
          }

          return i;
        }, r.prototype.getScriptElements = function () {
          return document.documentElement.querySelectorAll("script");
        }, r;
      }(e.Renderer);
    }.call(this), function () {
      e.View = function () {
        function t(t) {
          this.delegate = t, this.htmlElement = document.documentElement;
        }

        return t.prototype.getRootLocation = function () {
          return this.getSnapshot().getRootLocation();
        }, t.prototype.getElementForAnchor = function (t) {
          return this.getSnapshot().getElementForAnchor(t);
        }, t.prototype.getSnapshot = function () {
          return e.Snapshot.fromHTMLElement(this.htmlElement);
        }, t.prototype.render = function (t, e) {
          var r, n, o;
          return o = t.snapshot, r = t.error, n = t.isPreview, this.markAsPreview(n), null != o ? this.renderSnapshot(o, n, e) : this.renderError(r, e);
        }, t.prototype.markAsPreview = function (t) {
          return t ? this.htmlElement.setAttribute("data-turbolinks-preview", "") : this.htmlElement.removeAttribute("data-turbolinks-preview");
        }, t.prototype.renderSnapshot = function (t, r, n) {
          return e.SnapshotRenderer.render(this.delegate, n, this.getSnapshot(), e.Snapshot.wrap(t), r);
        }, t.prototype.renderError = function (t, r) {
          return e.ErrorRenderer.render(this.delegate, r, t);
        }, t;
      }();
    }.call(this), function () {
      var t = function t(_t7, e) {
        return function () {
          return _t7.apply(e, arguments);
        };
      };

      e.ScrollManager = function () {
        function r(r) {
          this.delegate = r, this.onScroll = t(this.onScroll, this), this.onScroll = e.throttle(this.onScroll);
        }

        return r.prototype.start = function () {
          return this.started ? void 0 : (addEventListener("scroll", this.onScroll, !1), this.onScroll(), this.started = !0);
        }, r.prototype.stop = function () {
          return this.started ? (removeEventListener("scroll", this.onScroll, !1), this.started = !1) : void 0;
        }, r.prototype.scrollToElement = function (t) {
          return t.scrollIntoView();
        }, r.prototype.scrollToPosition = function (t) {
          var e, r;
          return e = t.x, r = t.y, window.scrollTo(e, r);
        }, r.prototype.onScroll = function (t) {
          return this.updatePosition({
            x: window.pageXOffset,
            y: window.pageYOffset
          });
        }, r.prototype.updatePosition = function (t) {
          var e;
          return this.position = t, null != (e = this.delegate) ? e.scrollPositionChanged(this.position) : void 0;
        }, r;
      }();
    }.call(this), function () {
      e.SnapshotCache = function () {
        function t(t) {
          this.size = t, this.keys = [], this.snapshots = {};
        }

        var r;
        return t.prototype.has = function (t) {
          var e;
          return e = r(t), e in this.snapshots;
        }, t.prototype.get = function (t) {
          var e;
          if (this.has(t)) return e = this.read(t), this.touch(t), e;
        }, t.prototype.put = function (t, e) {
          return this.write(t, e), this.touch(t), e;
        }, t.prototype.read = function (t) {
          var e;
          return e = r(t), this.snapshots[e];
        }, t.prototype.write = function (t, e) {
          var n;
          return n = r(t), this.snapshots[n] = e;
        }, t.prototype.touch = function (t) {
          var e, n;
          return n = r(t), e = this.keys.indexOf(n), e > -1 && this.keys.splice(e, 1), this.keys.unshift(n), this.trim();
        }, t.prototype.trim = function () {
          var t, e, r, n, o;

          for (n = this.keys.splice(this.size), o = [], t = 0, r = n.length; r > t; t++) {
            e = n[t], o.push(delete this.snapshots[e]);
          }

          return o;
        }, r = function r(t) {
          return e.Location.wrap(t).toCacheKey();
        }, t;
      }();
    }.call(this), function () {
      var t = function t(_t8, e) {
        return function () {
          return _t8.apply(e, arguments);
        };
      };

      e.Visit = function () {
        function r(r, n, o) {
          this.controller = r, this.action = o, this.performScroll = t(this.performScroll, this), this.identifier = e.uuid(), this.location = e.Location.wrap(n), this.adapter = this.controller.adapter, this.state = "initialized", this.timingMetrics = {};
        }

        var n;
        return r.prototype.start = function () {
          return "initialized" === this.state ? (this.recordTimingMetric("visitStart"), this.state = "started", this.adapter.visitStarted(this)) : void 0;
        }, r.prototype.cancel = function () {
          var t;
          return "started" === this.state ? (null != (t = this.request) && t.cancel(), this.cancelRender(), this.state = "canceled") : void 0;
        }, r.prototype.complete = function () {
          var t;
          return "started" === this.state ? (this.recordTimingMetric("visitEnd"), this.state = "completed", "function" == typeof (t = this.adapter).visitCompleted && t.visitCompleted(this), this.controller.visitCompleted(this)) : void 0;
        }, r.prototype.fail = function () {
          var t;
          return "started" === this.state ? (this.state = "failed", "function" == typeof (t = this.adapter).visitFailed ? t.visitFailed(this) : void 0) : void 0;
        }, r.prototype.changeHistory = function () {
          var t, e;
          return this.historyChanged ? void 0 : (t = this.location.isEqualTo(this.referrer) ? "replace" : this.action, e = n(t), this.controller[e](this.location, this.restorationIdentifier), this.historyChanged = !0);
        }, r.prototype.issueRequest = function () {
          return this.shouldIssueRequest() && null == this.request ? (this.progress = 0, this.request = new e.HttpRequest(this, this.location, this.referrer), this.request.send()) : void 0;
        }, r.prototype.getCachedSnapshot = function () {
          var t;
          return !(t = this.controller.getCachedSnapshotForLocation(this.location)) || null != this.location.anchor && !t.hasAnchor(this.location.anchor) || "restore" !== this.action && !t.isPreviewable() ? void 0 : t;
        }, r.prototype.hasCachedSnapshot = function () {
          return null != this.getCachedSnapshot();
        }, r.prototype.loadCachedSnapshot = function () {
          var t, e;
          return (e = this.getCachedSnapshot()) ? (t = this.shouldIssueRequest(), this.render(function () {
            var r;
            return this.cacheSnapshot(), this.controller.render({
              snapshot: e,
              isPreview: t
            }, this.performScroll), "function" == typeof (r = this.adapter).visitRendered && r.visitRendered(this), t ? void 0 : this.complete();
          })) : void 0;
        }, r.prototype.loadResponse = function () {
          return null != this.response ? this.render(function () {
            var t, e;
            return this.cacheSnapshot(), this.request.failed ? (this.controller.render({
              error: this.response
            }, this.performScroll), "function" == typeof (t = this.adapter).visitRendered && t.visitRendered(this), this.fail()) : (this.controller.render({
              snapshot: this.response
            }, this.performScroll), "function" == typeof (e = this.adapter).visitRendered && e.visitRendered(this), this.complete());
          }) : void 0;
        }, r.prototype.followRedirect = function () {
          return this.redirectedToLocation && !this.followedRedirect ? (this.location = this.redirectedToLocation, this.controller.replaceHistoryWithLocationAndRestorationIdentifier(this.redirectedToLocation, this.restorationIdentifier), this.followedRedirect = !0) : void 0;
        }, r.prototype.requestStarted = function () {
          var t;
          return this.recordTimingMetric("requestStart"), "function" == typeof (t = this.adapter).visitRequestStarted ? t.visitRequestStarted(this) : void 0;
        }, r.prototype.requestProgressed = function (t) {
          var e;
          return this.progress = t, "function" == typeof (e = this.adapter).visitRequestProgressed ? e.visitRequestProgressed(this) : void 0;
        }, r.prototype.requestCompletedWithResponse = function (t, r) {
          return this.response = t, null != r && (this.redirectedToLocation = e.Location.wrap(r)), this.adapter.visitRequestCompleted(this);
        }, r.prototype.requestFailedWithStatusCode = function (t, e) {
          return this.response = e, this.adapter.visitRequestFailedWithStatusCode(this, t);
        }, r.prototype.requestFinished = function () {
          var t;
          return this.recordTimingMetric("requestEnd"), "function" == typeof (t = this.adapter).visitRequestFinished ? t.visitRequestFinished(this) : void 0;
        }, r.prototype.performScroll = function () {
          return this.scrolled ? void 0 : ("restore" === this.action ? this.scrollToRestoredPosition() || this.scrollToTop() : this.scrollToAnchor() || this.scrollToTop(), this.scrolled = !0);
        }, r.prototype.scrollToRestoredPosition = function () {
          var t, e;
          return t = null != (e = this.restorationData) ? e.scrollPosition : void 0, null != t ? (this.controller.scrollToPosition(t), !0) : void 0;
        }, r.prototype.scrollToAnchor = function () {
          return null != this.location.anchor ? (this.controller.scrollToAnchor(this.location.anchor), !0) : void 0;
        }, r.prototype.scrollToTop = function () {
          return this.controller.scrollToPosition({
            x: 0,
            y: 0
          });
        }, r.prototype.recordTimingMetric = function (t) {
          var e;
          return null != (e = this.timingMetrics)[t] ? e[t] : e[t] = new Date().getTime();
        }, r.prototype.getTimingMetrics = function () {
          return e.copyObject(this.timingMetrics);
        }, n = function n(t) {
          switch (t) {
            case "replace":
              return "replaceHistoryWithLocationAndRestorationIdentifier";

            case "advance":
            case "restore":
              return "pushHistoryWithLocationAndRestorationIdentifier";
          }
        }, r.prototype.shouldIssueRequest = function () {
          return "restore" === this.action ? !this.hasCachedSnapshot() : !0;
        }, r.prototype.cacheSnapshot = function () {
          return this.snapshotCached ? void 0 : (this.controller.cacheSnapshot(), this.snapshotCached = !0);
        }, r.prototype.render = function (t) {
          return this.cancelRender(), this.frame = requestAnimationFrame(function (e) {
            return function () {
              return e.frame = null, t.call(e);
            };
          }(this));
        }, r.prototype.cancelRender = function () {
          return this.frame ? cancelAnimationFrame(this.frame) : void 0;
        }, r;
      }();
    }.call(this), function () {
      var t = function t(_t9, e) {
        return function () {
          return _t9.apply(e, arguments);
        };
      };

      e.Controller = function () {
        function r() {
          this.clickBubbled = t(this.clickBubbled, this), this.clickCaptured = t(this.clickCaptured, this), this.pageLoaded = t(this.pageLoaded, this), this.history = new e.History(this), this.view = new e.View(this), this.scrollManager = new e.ScrollManager(this), this.restorationData = {}, this.clearCache(), this.setProgressBarDelay(500);
        }

        return r.prototype.start = function () {
          return e.supported && !this.started ? (addEventListener("click", this.clickCaptured, !0), addEventListener("DOMContentLoaded", this.pageLoaded, !1), this.scrollManager.start(), this.startHistory(), this.started = !0, this.enabled = !0) : void 0;
        }, r.prototype.disable = function () {
          return this.enabled = !1;
        }, r.prototype.stop = function () {
          return this.started ? (removeEventListener("click", this.clickCaptured, !0), removeEventListener("DOMContentLoaded", this.pageLoaded, !1), this.scrollManager.stop(), this.stopHistory(), this.started = !1) : void 0;
        }, r.prototype.clearCache = function () {
          return this.cache = new e.SnapshotCache(10);
        }, r.prototype.visit = function (t, r) {
          var n, o;
          return null == r && (r = {}), t = e.Location.wrap(t), this.applicationAllowsVisitingLocation(t) ? this.locationIsVisitable(t) ? (n = null != (o = r.action) ? o : "advance", this.adapter.visitProposedToLocationWithAction(t, n)) : window.location = t : void 0;
        }, r.prototype.startVisitToLocationWithAction = function (t, r, n) {
          var o;
          return e.supported ? (o = this.getRestorationDataForIdentifier(n), this.startVisit(t, r, {
            restorationData: o
          })) : window.location = t;
        }, r.prototype.setProgressBarDelay = function (t) {
          return this.progressBarDelay = t;
        }, r.prototype.startHistory = function () {
          return this.location = e.Location.wrap(window.location), this.restorationIdentifier = e.uuid(), this.history.start(), this.history.replace(this.location, this.restorationIdentifier);
        }, r.prototype.stopHistory = function () {
          return this.history.stop();
        }, r.prototype.pushHistoryWithLocationAndRestorationIdentifier = function (t, r) {
          return this.restorationIdentifier = r, this.location = e.Location.wrap(t), this.history.push(this.location, this.restorationIdentifier);
        }, r.prototype.replaceHistoryWithLocationAndRestorationIdentifier = function (t, r) {
          return this.restorationIdentifier = r, this.location = e.Location.wrap(t), this.history.replace(this.location, this.restorationIdentifier);
        }, r.prototype.historyPoppedToLocationWithRestorationIdentifier = function (t, r) {
          var n;
          return this.restorationIdentifier = r, this.enabled ? (n = this.getRestorationDataForIdentifier(this.restorationIdentifier), this.startVisit(t, "restore", {
            restorationIdentifier: this.restorationIdentifier,
            restorationData: n,
            historyChanged: !0
          }), this.location = e.Location.wrap(t)) : this.adapter.pageInvalidated();
        }, r.prototype.getCachedSnapshotForLocation = function (t) {
          var e;
          return null != (e = this.cache.get(t)) ? e.clone() : void 0;
        }, r.prototype.shouldCacheSnapshot = function () {
          return this.view.getSnapshot().isCacheable();
        }, r.prototype.cacheSnapshot = function () {
          var t, r;
          return this.shouldCacheSnapshot() ? (this.notifyApplicationBeforeCachingSnapshot(), r = this.view.getSnapshot(), t = this.lastRenderedLocation, e.defer(function (e) {
            return function () {
              return e.cache.put(t, r.clone());
            };
          }(this))) : void 0;
        }, r.prototype.scrollToAnchor = function (t) {
          var e;
          return (e = this.view.getElementForAnchor(t)) ? this.scrollToElement(e) : this.scrollToPosition({
            x: 0,
            y: 0
          });
        }, r.prototype.scrollToElement = function (t) {
          return this.scrollManager.scrollToElement(t);
        }, r.prototype.scrollToPosition = function (t) {
          return this.scrollManager.scrollToPosition(t);
        }, r.prototype.scrollPositionChanged = function (t) {
          var e;
          return e = this.getCurrentRestorationData(), e.scrollPosition = t;
        }, r.prototype.render = function (t, e) {
          return this.view.render(t, e);
        }, r.prototype.viewInvalidated = function () {
          return this.adapter.pageInvalidated();
        }, r.prototype.viewWillRender = function (t) {
          return this.notifyApplicationBeforeRender(t);
        }, r.prototype.viewRendered = function () {
          return this.lastRenderedLocation = this.currentVisit.location, this.notifyApplicationAfterRender();
        }, r.prototype.pageLoaded = function () {
          return this.lastRenderedLocation = this.location, this.notifyApplicationAfterPageLoad();
        }, r.prototype.clickCaptured = function () {
          return removeEventListener("click", this.clickBubbled, !1), addEventListener("click", this.clickBubbled, !1);
        }, r.prototype.clickBubbled = function (t) {
          var e, r, n;
          return this.enabled && this.clickEventIsSignificant(t) && (r = this.getVisitableLinkForNode(t.target)) && (n = this.getVisitableLocationForLink(r)) && this.applicationAllowsFollowingLinkToLocation(r, n) ? (t.preventDefault(), e = this.getActionForLink(r), this.visit(n, {
            action: e
          })) : void 0;
        }, r.prototype.applicationAllowsFollowingLinkToLocation = function (t, e) {
          var r;
          return r = this.notifyApplicationAfterClickingLinkToLocation(t, e), !r.defaultPrevented;
        }, r.prototype.applicationAllowsVisitingLocation = function (t) {
          var e;
          return e = this.notifyApplicationBeforeVisitingLocation(t), !e.defaultPrevented;
        }, r.prototype.notifyApplicationAfterClickingLinkToLocation = function (t, r) {
          return e.dispatch("turbolinks:click", {
            target: t,
            data: {
              url: r.absoluteURL
            },
            cancelable: !0
          });
        }, r.prototype.notifyApplicationBeforeVisitingLocation = function (t) {
          return e.dispatch("turbolinks:before-visit", {
            data: {
              url: t.absoluteURL
            },
            cancelable: !0
          });
        }, r.prototype.notifyApplicationAfterVisitingLocation = function (t) {
          return e.dispatch("turbolinks:visit", {
            data: {
              url: t.absoluteURL
            }
          });
        }, r.prototype.notifyApplicationBeforeCachingSnapshot = function () {
          return e.dispatch("turbolinks:before-cache");
        }, r.prototype.notifyApplicationBeforeRender = function (t) {
          return e.dispatch("turbolinks:before-render", {
            data: {
              newBody: t
            }
          });
        }, r.prototype.notifyApplicationAfterRender = function () {
          return e.dispatch("turbolinks:render");
        }, r.prototype.notifyApplicationAfterPageLoad = function (t) {
          return null == t && (t = {}), e.dispatch("turbolinks:load", {
            data: {
              url: this.location.absoluteURL,
              timing: t
            }
          });
        }, r.prototype.startVisit = function (t, e, r) {
          var n;
          return null != (n = this.currentVisit) && n.cancel(), this.currentVisit = this.createVisit(t, e, r), this.currentVisit.start(), this.notifyApplicationAfterVisitingLocation(t);
        }, r.prototype.createVisit = function (t, r, n) {
          var o, i, s, a, u;
          return i = null != n ? n : {}, a = i.restorationIdentifier, s = i.restorationData, o = i.historyChanged, u = new e.Visit(this, t, r), u.restorationIdentifier = null != a ? a : e.uuid(), u.restorationData = e.copyObject(s), u.historyChanged = o, u.referrer = this.location, u;
        }, r.prototype.visitCompleted = function (t) {
          return this.notifyApplicationAfterPageLoad(t.getTimingMetrics());
        }, r.prototype.clickEventIsSignificant = function (t) {
          return !(t.defaultPrevented || t.target.isContentEditable || t.which > 1 || t.altKey || t.ctrlKey || t.metaKey || t.shiftKey);
        }, r.prototype.getVisitableLinkForNode = function (t) {
          return this.nodeIsVisitable(t) ? e.closest(t, "a[href]:not([target]):not([download])") : void 0;
        }, r.prototype.getVisitableLocationForLink = function (t) {
          var r;
          return r = new e.Location(t.getAttribute("href")), this.locationIsVisitable(r) ? r : void 0;
        }, r.prototype.getActionForLink = function (t) {
          var e;
          return null != (e = t.getAttribute("data-turbolinks-action")) ? e : "advance";
        }, r.prototype.nodeIsVisitable = function (t) {
          var r;
          return (r = e.closest(t, "[data-turbolinks]")) ? "false" !== r.getAttribute("data-turbolinks") : !0;
        }, r.prototype.locationIsVisitable = function (t) {
          return t.isPrefixedBy(this.view.getRootLocation()) && t.isHTML();
        }, r.prototype.getCurrentRestorationData = function () {
          return this.getRestorationDataForIdentifier(this.restorationIdentifier);
        }, r.prototype.getRestorationDataForIdentifier = function (t) {
          var e;
          return null != (e = this.restorationData)[t] ? e[t] : e[t] = {};
        }, r;
      }();
    }.call(this), function () {
      !function () {
        var t, e;
        if ((t = e = document.currentScript) && !e.hasAttribute("data-turbolinks-suppress-warning")) for (; t = t.parentNode;) {
          if (t === document.body) return console.warn("You are loading Turbolinks from a <script> element inside the <body> element. This is probably not what you meant to do!\n\nLoad your application\u2019s JavaScript bundle inside the <head> element instead. <script> elements in <body> are evaluated with each page change.\n\nFor more information, see: https://github.com/turbolinks/turbolinks#working-with-script-elements\n\n\u2014\u2014\nSuppress this warning by adding a `data-turbolinks-suppress-warning` attribute to: %s", e.outerHTML);
        }
      }();
    }.call(this), function () {
      var t, r, n;
      e.start = function () {
        return r() ? (null == e.controller && (e.controller = t()), e.controller.start()) : void 0;
      }, r = function r() {
        return null == window.Turbolinks && (window.Turbolinks = e), n();
      }, t = function t() {
        var t;
        return t = new e.Controller(), t.adapter = new e.BrowserAdapter(t), t;
      }, n = function n() {
        return window.Turbolinks === e;
      }, n() && e.start();
    }.call(this);
  }).call(this), "object" == ( false ? undefined : _typeof(module)) && module.exports ? module.exports = e :  true && !(__WEBPACK_AMD_DEFINE_FACTORY__ = (e),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}).call(this);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/webpack/buildin/amd-define.js":
/*!***************************************!*\
  !*** (webpack)/buildin/amd-define.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function() {
	throw new Error("define cannot be used indirect");
};


/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (module) {
  if (!module.webpackPolyfill) {
    module.deprecate = function () {};

    module.paths = []; // module.parent = undefined by default

    if (!module.children) module.children = [];
    Object.defineProperty(module, "loaded", {
      enumerable: true,
      get: function get() {
        return module.l;
      }
    });
    Object.defineProperty(module, "id", {
      enumerable: true,
      get: function get() {
        return module.i;
      }
    });
    module.webpackPolyfill = 1;
  }

  return module;
};

/***/ })

/******/ });
//# sourceMappingURL=application-f79f2c5a88d8b924642d.js.map