{"ast":null,"code":"function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*!\n Material Components for the Web\n Copyright (c) 2019 Google Inc.\n License: MIT\n*/\n(function webpackUniversalModuleDefinition(root, factory) {\n  if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object' && (typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object') exports[\"list\"] = factory();else root[\"mdc\"] = root[\"mdc\"] || {}, root[\"mdc\"][\"list\"] = factory();\n})(this, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            /******/\n            configurable: false,\n\n            /******/\n            enumerable: true,\n\n            /******/\n            get: getter\n            /******/\n\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 25);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    {\n      /***/\n      0:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        var _createClass = function () {\n          function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n\n          return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n          };\n        }();\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n        /**\n         * @license\n         * Copyright 2016 Google Inc.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in\n         * all copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n         * THE SOFTWARE.\n         */\n\n        /**\n         * @template A\n         */\n\n\n        var MDCFoundation = function () {\n          _createClass(MDCFoundation, null, [{\n            key: \"cssClasses\",\n\n            /** @return enum{cssClasses} */\n            get: function get() {\n              // Classes extending MDCFoundation should implement this method to return an object which exports every\n              // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n              return {};\n            }\n            /** @return enum{strings} */\n\n          }, {\n            key: \"strings\",\n            get: function get() {\n              // Classes extending MDCFoundation should implement this method to return an object which exports all\n              // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n              return {};\n            }\n            /** @return enum{numbers} */\n\n          }, {\n            key: \"numbers\",\n            get: function get() {\n              // Classes extending MDCFoundation should implement this method to return an object which exports all\n              // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n              return {};\n            }\n            /** @return {!Object} */\n\n          }, {\n            key: \"defaultAdapter\",\n            get: function get() {\n              // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n              // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n              // validation.\n              return {};\n            }\n            /**\n             * @param {A=} adapter\n             */\n\n          }]);\n\n          function MDCFoundation() {\n            var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            _classCallCheck(this, MDCFoundation);\n            /** @protected {!A} */\n\n\n            this.adapter_ = adapter;\n          }\n\n          _createClass(MDCFoundation, [{\n            key: \"init\",\n            value: function init() {// Subclasses should override this method to perform initialization routines (registering events, etc.)\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {// Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n            }\n          }]);\n\n          return MDCFoundation;\n        }();\n        /* harmony default export */\n\n\n        __webpack_exports__[\"a\"] = MDCFoundation;\n        /***/\n      },\n\n      /***/\n      1:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n        /* harmony import */\n\n        var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0);\n\n        var _createClass = function () {\n          function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n\n          return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n          };\n        }();\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n        /**\n         * @license\n         * Copyright 2016 Google Inc.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in\n         * all copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n         * THE SOFTWARE.\n         */\n\n        /**\n         * @template F\n         */\n\n\n        var MDCComponent = function () {\n          _createClass(MDCComponent, null, [{\n            key: 'attachTo',\n\n            /**\n             * @param {!Element} root\n             * @return {!MDCComponent}\n             */\n            value: function attachTo(root) {\n              // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n              // returns an instantiated component with its root set to that element. Also note that in the cases of\n              // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n              // from getDefaultFoundation().\n              return new MDCComponent(root, new __WEBPACK_IMPORTED_MODULE_0__foundation__[\"a\"\n              /* default */\n              ]());\n            }\n            /**\n             * @param {!Element} root\n             * @param {F=} foundation\n             * @param {...?} args\n             */\n\n          }]);\n\n          function MDCComponent(root) {\n            var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n            _classCallCheck(this, MDCComponent);\n            /** @protected {!Element} */\n\n\n            this.root_ = root;\n\n            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n              args[_key - 2] = arguments[_key];\n            }\n\n            this.initialize.apply(this, args); // Note that we initialize foundation here and not within the constructor's default param so that\n            // this.root_ is defined and can be used within the foundation class.\n\n            /** @protected {!F} */\n\n            this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n            this.foundation_.init();\n            this.initialSyncWithDOM();\n          }\n\n          _createClass(MDCComponent, [{\n            key: 'initialize',\n            value: function initialize()\n            /* ...args */\n            {} // Subclasses can override this to do any additional setup work that would be considered part of a\n            // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n            // initialized. Any additional arguments besides root and foundation will be passed in here.\n\n            /**\n             * @return {!F} foundation\n             */\n\n          }, {\n            key: 'getDefaultFoundation',\n            value: function getDefaultFoundation() {\n              // Subclasses must override this method to return a properly configured foundation class for the\n              // component.\n              throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');\n            }\n          }, {\n            key: 'initialSyncWithDOM',\n            value: function initialSyncWithDOM() {// Subclasses should override this method if they need to perform work to synchronize with a host DOM\n              // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n              // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n              // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n            }\n          }, {\n            key: 'destroy',\n            value: function destroy() {\n              // Subclasses may implement this method to release any resources / deregister any listeners they have\n              // attached. An example of this might be deregistering a resize event from the window object.\n              this.foundation_.destroy();\n            }\n            /**\n             * Wrapper method to add an event listener to the component's root element. This is most useful when\n             * listening for custom events.\n             * @param {string} evtType\n             * @param {!Function} handler\n             */\n\n          }, {\n            key: 'listen',\n            value: function listen(evtType, handler) {\n              this.root_.addEventListener(evtType, handler);\n            }\n            /**\n             * Wrapper method to remove an event listener to the component's root element. This is most useful when\n             * unlistening for custom events.\n             * @param {string} evtType\n             * @param {!Function} handler\n             */\n\n          }, {\n            key: 'unlisten',\n            value: function unlisten(evtType, handler) {\n              this.root_.removeEventListener(evtType, handler);\n            }\n            /**\n             * Fires a cross-browser-compatible custom event from the component root of the given type,\n             * with the given data.\n             * @param {string} evtType\n             * @param {!Object} evtData\n             * @param {boolean=} shouldBubble\n             */\n\n          }, {\n            key: 'emit',\n            value: function emit(evtType, evtData) {\n              var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n              var evt = void 0;\n\n              if (typeof CustomEvent === 'function') {\n                evt = new CustomEvent(evtType, {\n                  detail: evtData,\n                  bubbles: shouldBubble\n                });\n              } else {\n                evt = document.createEvent('CustomEvent');\n                evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n              }\n\n              this.root_.dispatchEvent(evt);\n            }\n          }]);\n\n          return MDCComponent;\n        }();\n        /* harmony default export */\n\n\n        __webpack_exports__[\"a\"] = MDCComponent;\n        /***/\n      },\n\n      /***/\n      10:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        var _createClass = function () {\n          function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n\n          return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n          };\n        }();\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n        /**\n         * @license\n         * Copyright 2018 Google Inc.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in\n         * all copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n         * THE SOFTWARE.\n         */\n\n        /* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n        /**\n         * Adapter for MDC List. Provides an interface for managing focus.\n         *\n         * Additionally, provides type information for the adapter to the Closure\n         * compiler.\n         *\n         * Implement this adapter for your framework of choice to delegate updates to\n         * the component in your framework of choice. See architecture documentation\n         * for more details.\n         * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n         *\n         * @record\n         */\n\n\n        var MDCListAdapter = function () {\n          function MDCListAdapter() {\n            _classCallCheck(this, MDCListAdapter);\n          }\n\n          _createClass(MDCListAdapter, [{\n            key: \"getListItemCount\",\n\n            /** @return {number} */\n            value: function getListItemCount() {}\n            /**\n             * @return {number} */\n\n          }, {\n            key: \"getFocusedElementIndex\",\n            value: function getFocusedElementIndex() {}\n            /**\n             * @param {number} index\n             * @param {string} attribute\n             * @param {string} value\n             */\n\n          }, {\n            key: \"setAttributeForElementIndex\",\n            value: function setAttributeForElementIndex(index, attribute, value) {}\n            /**\n             * @param {number} index\n             * @param {string} attribute\n             */\n\n          }, {\n            key: \"removeAttributeForElementIndex\",\n            value: function removeAttributeForElementIndex(index, attribute) {}\n            /**\n             * @param {number} index\n             * @param {string} className\n             */\n\n          }, {\n            key: \"addClassForElementIndex\",\n            value: function addClassForElementIndex(index, className) {}\n            /**\n             * @param {number} index\n             * @param {string} className\n             */\n\n          }, {\n            key: \"removeClassForElementIndex\",\n            value: function removeClassForElementIndex(index, className) {}\n            /**\n             * Focuses list item at the index specified.\n             * @param {number} index\n             */\n\n          }, {\n            key: \"focusItemAtIndex\",\n            value: function focusItemAtIndex(index) {}\n            /**\n             * Sets the tabindex to the value specified for all button/a element children of\n             * the list item at the index specified.\n             * @param {number} listItemIndex\n             * @param {number} tabIndexValue\n             */\n\n          }, {\n            key: \"setTabIndexForListItemChildren\",\n            value: function setTabIndexForListItemChildren(listItemIndex, tabIndexValue) {}\n            /**\n             * If the given element has an href, follows the link.\n             * @param {!Element} ele\n             */\n\n          }, {\n            key: \"followHref\",\n            value: function followHref(ele) {}\n            /**\n             * @param {number} index\n             * @return {boolean} Returns true if radio button is present at given list item index.\n             */\n\n          }, {\n            key: \"hasRadioAtIndex\",\n            value: function hasRadioAtIndex(index) {}\n            /**\n             * @param {number} index\n             * @return {boolean} Returns true if checkbox is present at given list item index.\n             */\n\n          }, {\n            key: \"hasCheckboxAtIndex\",\n            value: function hasCheckboxAtIndex(index) {}\n            /**\n             * @param {number} index\n             * @return {boolean} Returns true if checkbox inside a list item is checked.\n             */\n\n          }, {\n            key: \"isCheckboxCheckedAtIndex\",\n            value: function isCheckboxCheckedAtIndex(index) {}\n            /**\n             * Sets the checked status of checkbox or radio at given list item index.\n             * @param {number} index\n             * @param {boolean} isChecked\n             */\n\n          }, {\n            key: \"setCheckedCheckboxOrRadioAtIndex\",\n            value: function setCheckedCheckboxOrRadioAtIndex(index, isChecked) {}\n            /**\n             * @return {boolean} Returns true when the current focused element is inside list root.\n             */\n\n          }, {\n            key: \"isFocusInsideList\",\n            value: function isFocusInsideList() {}\n          }]);\n\n          return MDCListAdapter;\n        }();\n        /* unused harmony default export */\n\n\n        var _unused_webpack_default_export = MDCListAdapter;\n        /***/\n      },\n\n      /***/\n      11:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n        /* harmony export (binding) */\n\n        __webpack_require__.d(__webpack_exports__, \"b\", function () {\n          return strings;\n        });\n        /* harmony export (binding) */\n\n\n        __webpack_require__.d(__webpack_exports__, \"a\", function () {\n          return cssClasses;\n        });\n        /* unused harmony export Index */\n\n        /**\n         * @license\n         * Copyright 2018 Google Inc.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in\n         * all copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n         * THE SOFTWARE.\n         */\n\n        /** @enum {string} */\n\n\n        var cssClasses = {\n          ROOT: 'mdc-list',\n          LIST_ITEM_CLASS: 'mdc-list-item',\n          LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',\n          LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated'\n        };\n        /** @enum {string} */\n\n        var strings = {\n          ARIA_ORIENTATION: 'aria-orientation',\n          ARIA_ORIENTATION_HORIZONTAL: 'horizontal',\n          ARIA_SELECTED: 'aria-selected',\n          ARIA_CHECKED: 'aria-checked',\n          ARIA_CHECKED_RADIO_SELECTOR: '[role=\"radio\"][aria-checked=\"true\"]',\n          ARIA_ROLE_CHECKBOX_SELECTOR: '[role=\"checkbox\"]',\n          ARIA_CHECKED_CHECKBOX_SELECTOR: '[role=\"checkbox\"][aria-checked=\"true\"]',\n          RADIO_SELECTOR: 'input[type=\"radio\"]:not(:disabled)',\n          CHECKBOX_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled)',\n          CHECKBOX_RADIO_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled), input[type=\"radio\"]:not(:disabled)',\n          CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: '.' + cssClasses.LIST_ITEM_CLASS + ' button:not(:disabled),\\n  .' + cssClasses.LIST_ITEM_CLASS + ' a',\n          FOCUSABLE_CHILD_ELEMENTS: '.' + cssClasses.LIST_ITEM_CLASS + ' button:not(:disabled), .' + cssClasses.LIST_ITEM_CLASS + ' a,\\n  .' + cssClasses.LIST_ITEM_CLASS + ' input[type=\"radio\"]:not(:disabled),\\n  .' + cssClasses.LIST_ITEM_CLASS + ' input[type=\"checkbox\"]:not(:disabled)',\n          ENABLED_ITEMS_SELECTOR: '.mdc-list-item:not(.mdc-list-item--disabled)'\n        };\n        /** @typedef {number|!Array<number>} */\n\n        var Index = void 0;\n        /***/\n      },\n\n      /***/\n      15:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n        /* harmony import */\n\n        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(10);\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(11);\n\n        var _extends = Object.assign || function (target) {\n          for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            for (var key in source) {\n              if (Object.prototype.hasOwnProperty.call(source, key)) {\n                target[key] = source[key];\n              }\n            }\n          }\n\n          return target;\n        };\n\n        var _createClass = function () {\n          function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n\n          return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n          };\n        }();\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function _possibleConstructorReturn(self, call) {\n          if (!self) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          }\n\n          return call && (_typeof(call) === \"object\" || typeof call === \"function\") ? call : self;\n        }\n\n        function _inherits(subClass, superClass) {\n          if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function, not \" + _typeof(superClass));\n          }\n\n          subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n              value: subClass,\n              enumerable: false,\n              writable: true,\n              configurable: true\n            }\n          });\n          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n        }\n        /**\n         * @license\n         * Copyright 2018 Google Inc.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in\n         * all copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n         * THE SOFTWARE.\n         */\n        // eslint-disable-line no-unused-vars\n\n\n        var ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];\n\n        var MDCListFoundation = function (_MDCFoundation) {\n          _inherits(MDCListFoundation, _MDCFoundation);\n\n          _createClass(MDCListFoundation, null, [{\n            key: 'strings',\n\n            /** @return enum {string} */\n            get: function get() {\n              return __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"\n              /* strings */\n              ];\n            }\n            /** @return enum {string} */\n\n          }, {\n            key: 'cssClasses',\n            get: function get() {\n              return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"\n              /* cssClasses */\n              ];\n            }\n            /**\n             * {@see MDCListAdapter} for typing information on parameters and return\n             * types.\n             * @return {!MDCListAdapter}\n             */\n\n          }, {\n            key: 'defaultAdapter',\n            get: function get() {\n              return (\n                /** @type {!MDCListAdapter} */\n                {\n                  getListItemCount: function getListItemCount() {},\n                  getFocusedElementIndex: function getFocusedElementIndex() {},\n                  setAttributeForElementIndex: function setAttributeForElementIndex() {},\n                  removeAttributeForElementIndex: function removeAttributeForElementIndex() {},\n                  addClassForElementIndex: function addClassForElementIndex() {},\n                  removeClassForElementIndex: function removeClassForElementIndex() {},\n                  focusItemAtIndex: function focusItemAtIndex() {},\n                  setTabIndexForListItemChildren: function setTabIndexForListItemChildren() {},\n                  followHref: function followHref() {},\n                  hasRadioAtIndex: function hasRadioAtIndex() {},\n                  hasCheckboxAtIndex: function hasCheckboxAtIndex() {},\n                  isCheckboxCheckedAtIndex: function isCheckboxCheckedAtIndex() {},\n                  setCheckedCheckboxOrRadioAtIndex: function setCheckedCheckboxOrRadioAtIndex() {},\n                  isFocusInsideList: function isFocusInsideList() {}\n                }\n              );\n            }\n            /**\n             * @param {!MDCListAdapter=} adapter\n             */\n\n          }]);\n\n          function MDCListFoundation(adapter) {\n            _classCallCheck(this, MDCListFoundation);\n            /** @private {boolean} */\n\n\n            var _this = _possibleConstructorReturn(this, (MDCListFoundation.__proto__ || Object.getPrototypeOf(MDCListFoundation)).call(this, _extends(MDCListFoundation.defaultAdapter, adapter)));\n\n            _this.wrapFocus_ = false;\n            /** @private {boolean} */\n\n            _this.isVertical_ = true;\n            /** @private {boolean} */\n\n            _this.isSingleSelectionList_ = false;\n            /** @private {!Index} */\n\n            _this.selectedIndex_ = -1;\n            /** @private {number} */\n\n            _this.focusedItemIndex_ = -1;\n            /** @private {boolean} */\n\n            _this.useActivatedClass_ = false;\n            /** @private {boolean} */\n\n            _this.isCheckboxList_ = false;\n            /** @private {boolean} */\n\n            _this.isRadioList_ = false;\n            return _this;\n          }\n\n          _createClass(MDCListFoundation, [{\n            key: 'layout',\n            value: function layout() {\n              if (this.adapter_.getListItemCount() === 0) return;\n\n              if (this.adapter_.hasCheckboxAtIndex(0)) {\n                this.isCheckboxList_ = true;\n              } else if (this.adapter_.hasRadioAtIndex(0)) {\n                this.isRadioList_ = true;\n              }\n            }\n            /**\n             * Sets the private wrapFocus_ variable.\n             * @param {boolean} value\n             */\n\n          }, {\n            key: 'setWrapFocus',\n            value: function setWrapFocus(value) {\n              this.wrapFocus_ = value;\n            }\n            /**\n             * Sets the isVertical_ private variable.\n             * @param {boolean} value\n             */\n\n          }, {\n            key: 'setVerticalOrientation',\n            value: function setVerticalOrientation(value) {\n              this.isVertical_ = value;\n            }\n            /**\n             * Sets the isSingleSelectionList_ private variable.\n             * @param {boolean} value\n             */\n\n          }, {\n            key: 'setSingleSelection',\n            value: function setSingleSelection(value) {\n              this.isSingleSelectionList_ = value;\n            }\n            /**\n             * Sets the useActivatedClass_ private variable.\n             * @param {boolean} useActivated\n             */\n\n          }, {\n            key: 'setUseActivatedClass',\n            value: function setUseActivatedClass(useActivated) {\n              this.useActivatedClass_ = useActivated;\n            }\n            /** @return {!Index} */\n\n          }, {\n            key: 'getSelectedIndex',\n            value: function getSelectedIndex() {\n              return this.selectedIndex_;\n            }\n            /** @param {!Index} index */\n\n          }, {\n            key: 'setSelectedIndex',\n            value: function setSelectedIndex(index) {\n              if (!this.isIndexValid_(index)) return;\n\n              if (this.isCheckboxList_) {\n                this.setCheckboxAtIndex_(\n                /** @type {!Array<number>} */\n                index);\n              } else if (this.isRadioList_) {\n                this.setRadioAtIndex_(\n                /** @type {number} */\n                index);\n              } else {\n                this.setSingleSelectionAtIndex_(\n                /** @type {number} */\n                index);\n              }\n            }\n            /**\n             * Focus in handler for the list items.\n             * @param evt\n             * @param {number} listItemIndex\n             */\n\n          }, {\n            key: 'handleFocusIn',\n            value: function handleFocusIn(evt, listItemIndex) {\n              if (listItemIndex >= 0) {\n                this.adapter_.setTabIndexForListItemChildren(listItemIndex, 0);\n              }\n            }\n            /**\n             * Focus out handler for the list items.\n             * @param {Event} evt\n             * @param {number} listItemIndex\n             */\n\n          }, {\n            key: 'handleFocusOut',\n            value: function handleFocusOut(evt, listItemIndex) {\n              var _this2 = this;\n\n              if (listItemIndex >= 0) {\n                this.adapter_.setTabIndexForListItemChildren(listItemIndex, -1);\n              }\n              /**\n               * Between Focusout & Focusin some browsers do not have focus on any element. Setting a delay to wait till the focus\n               * is moved to next element.\n               */\n\n\n              setTimeout(function () {\n                if (!_this2.adapter_.isFocusInsideList()) {\n                  _this2.setTabindexToFirstSelectedItem_();\n                }\n              }, 0);\n            }\n            /**\n             * Key handler for the list.\n             * @param {Event} evt\n             * @param {boolean} isRootListItem\n             * @param {number} listItemIndex\n             */\n\n          }, {\n            key: 'handleKeydown',\n            value: function handleKeydown(evt, isRootListItem, listItemIndex) {\n              var arrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;\n              var arrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;\n              var arrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;\n              var arrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;\n              var isHome = evt.key === 'Home' || evt.keyCode === 36;\n              var isEnd = evt.key === 'End' || evt.keyCode === 35;\n              var isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n              var isSpace = evt.key === 'Space' || evt.keyCode === 32;\n              var currentIndex = this.adapter_.getFocusedElementIndex();\n              var nextIndex = -1;\n\n              if (currentIndex === -1) {\n                currentIndex = listItemIndex;\n\n                if (currentIndex < 0) {\n                  // If this event doesn't have a mdc-list-item ancestor from the\n                  // current list (not from a sublist), return early.\n                  return;\n                }\n              }\n\n              if (this.isVertical_ && arrowDown || !this.isVertical_ && arrowRight) {\n                this.preventDefaultEvent_(evt);\n                nextIndex = this.focusNextElement(currentIndex);\n              } else if (this.isVertical_ && arrowUp || !this.isVertical_ && arrowLeft) {\n                this.preventDefaultEvent_(evt);\n                nextIndex = this.focusPrevElement(currentIndex);\n              } else if (isHome) {\n                this.preventDefaultEvent_(evt);\n                nextIndex = this.focusFirstElement();\n              } else if (isEnd) {\n                this.preventDefaultEvent_(evt);\n                nextIndex = this.focusLastElement();\n              } else if (isEnter || isSpace) {\n                if (isRootListItem) {\n                  if (this.isSelectableList_()) {\n                    this.setSelectedIndexOnAction_(currentIndex);\n                    this.preventDefaultEvent_(evt);\n                  } // Explicitly activate links, since we're preventing default on Enter, and Space doesn't activate them.\n\n\n                  this.adapter_.followHref(currentIndex);\n                }\n              }\n\n              this.focusedItemIndex_ = currentIndex;\n\n              if (nextIndex >= 0) {\n                this.setTabindexAtIndex_(nextIndex);\n                this.focusedItemIndex_ = nextIndex;\n              }\n            }\n            /**\n             * Click handler for the list.\n             * @param {number} index\n             * @param {boolean} toggleCheckbox\n             */\n\n          }, {\n            key: 'handleClick',\n            value: function handleClick(index, toggleCheckbox) {\n              if (index === -1) return;\n\n              if (this.isSelectableList_()) {\n                this.setSelectedIndexOnAction_(index, toggleCheckbox);\n              }\n\n              this.setTabindexAtIndex_(index);\n              this.focusedItemIndex_ = index;\n            }\n            /**\n             * Ensures that preventDefault is only called if the containing element doesn't\n             * consume the event, and it will cause an unintended scroll.\n             * @param {Event} evt\n             * @private\n             */\n\n          }, {\n            key: 'preventDefaultEvent_',\n            value: function preventDefaultEvent_(evt) {\n              var tagName = ('' + evt.target.tagName).toLowerCase();\n\n              if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n                evt.preventDefault();\n              }\n            }\n            /**\n             * Focuses the next element on the list.\n             * @param {number} index\n             * @return {number}\n             */\n\n          }, {\n            key: 'focusNextElement',\n            value: function focusNextElement(index) {\n              var count = this.adapter_.getListItemCount();\n              var nextIndex = index + 1;\n\n              if (nextIndex >= count) {\n                if (this.wrapFocus_) {\n                  nextIndex = 0;\n                } else {\n                  // Return early because last item is already focused.\n                  return index;\n                }\n              }\n\n              this.adapter_.focusItemAtIndex(nextIndex);\n              return nextIndex;\n            }\n            /**\n             * Focuses the previous element on the list.\n             * @param {number} index\n             * @return {number}\n             */\n\n          }, {\n            key: 'focusPrevElement',\n            value: function focusPrevElement(index) {\n              var prevIndex = index - 1;\n\n              if (prevIndex < 0) {\n                if (this.wrapFocus_) {\n                  prevIndex = this.adapter_.getListItemCount() - 1;\n                } else {\n                  // Return early because first item is already focused.\n                  return index;\n                }\n              }\n\n              this.adapter_.focusItemAtIndex(prevIndex);\n              return prevIndex;\n            }\n            /**\n             * @return {number}\n             */\n\n          }, {\n            key: 'focusFirstElement',\n            value: function focusFirstElement() {\n              this.adapter_.focusItemAtIndex(0);\n              return 0;\n            }\n            /**\n             * @return {number}\n             */\n\n          }, {\n            key: 'focusLastElement',\n            value: function focusLastElement() {\n              var lastIndex = this.adapter_.getListItemCount() - 1;\n              this.adapter_.focusItemAtIndex(lastIndex);\n              return lastIndex;\n            }\n            /**\n             * @param {number} index\n             * @private\n             */\n\n          }, {\n            key: 'setSingleSelectionAtIndex_',\n            value: function setSingleSelectionAtIndex_(index) {\n              var selectedClassName = __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"\n              /* cssClasses */\n              ].LIST_ITEM_SELECTED_CLASS;\n\n              if (this.useActivatedClass_) {\n                selectedClassName = __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"\n                /* cssClasses */\n                ].LIST_ITEM_ACTIVATED_CLASS;\n              }\n\n              if (this.selectedIndex_ >= 0 && this.selectedIndex_ !== index) {\n                this.adapter_.removeClassForElementIndex(this.selectedIndex_, selectedClassName);\n                this.adapter_.setAttributeForElementIndex(this.selectedIndex_, __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"\n                /* strings */\n                ].ARIA_SELECTED, 'false');\n              }\n\n              this.adapter_.addClassForElementIndex(index, selectedClassName);\n              this.adapter_.setAttributeForElementIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"\n              /* strings */\n              ].ARIA_SELECTED, 'true');\n              this.selectedIndex_ = index;\n            }\n            /**\n             * Toggles radio at give index. Radio doesn't change the checked state if it is already checked.\n             * @param {number} index\n             * @private\n             */\n\n          }, {\n            key: 'setRadioAtIndex_',\n            value: function setRadioAtIndex_(index) {\n              this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, true);\n\n              if (this.selectedIndex_ >= 0) {\n                this.adapter_.setAttributeForElementIndex(this.selectedIndex_, __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"\n                /* strings */\n                ].ARIA_CHECKED, 'false');\n              }\n\n              this.adapter_.setAttributeForElementIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"\n              /* strings */\n              ].ARIA_CHECKED, 'true');\n              this.selectedIndex_ = index;\n            }\n            /**\n             * @param {!Array<number>} index\n             * @private\n             */\n\n          }, {\n            key: 'setCheckboxAtIndex_',\n            value: function setCheckboxAtIndex_(index) {\n              for (var i = 0; i < this.adapter_.getListItemCount(); i++) {\n                var isChecked = false;\n\n                if (index.indexOf(i) >= 0) {\n                  isChecked = true;\n                }\n\n                this.adapter_.setCheckedCheckboxOrRadioAtIndex(i, isChecked);\n                this.adapter_.setAttributeForElementIndex(i, __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"\n                /* strings */\n                ].ARIA_CHECKED, isChecked ? 'true' : 'false');\n              }\n\n              this.selectedIndex_ = index;\n            }\n            /**\n             * @param {number} index\n             * @private\n             */\n\n          }, {\n            key: 'setTabindexAtIndex_',\n            value: function setTabindexAtIndex_(index) {\n              if (this.focusedItemIndex_ === -1 && index !== 0) {\n                // If no list item was selected set first list item's tabindex to -1.\n                // Generally, tabindex is set to 0 on first list item of list that has no preselected items.\n                this.adapter_.setAttributeForElementIndex(0, 'tabindex', -1);\n              } else if (this.focusedItemIndex_ >= 0 && this.focusedItemIndex_ !== index) {\n                this.adapter_.setAttributeForElementIndex(this.focusedItemIndex_, 'tabindex', -1);\n              }\n\n              this.adapter_.setAttributeForElementIndex(index, 'tabindex', 0);\n            }\n            /**\n             * @return {boolean} Return true if it is single selectin list, checkbox list or radio list.\n             * @private\n             */\n\n          }, {\n            key: 'isSelectableList_',\n            value: function isSelectableList_() {\n              return this.isSingleSelectionList_ || this.isCheckboxList_ || this.isRadioList_;\n            }\n            /** @private */\n\n          }, {\n            key: 'setTabindexToFirstSelectedItem_',\n            value: function setTabindexToFirstSelectedItem_() {\n              var targetIndex = 0;\n\n              if (this.isSelectableList_()) {\n                if (typeof this.selectedIndex_ === 'number' && this.selectedIndex_ !== -1) {\n                  targetIndex = this.selectedIndex_;\n                } else if (this.selectedIndex_ instanceof Array && this.selectedIndex_.length > 0) {\n                  targetIndex = this.selectedIndex_.reduce(function (currentIndex, minIndex) {\n                    return Math.min(currentIndex, minIndex);\n                  });\n                }\n              }\n\n              this.setTabindexAtIndex_(targetIndex);\n            }\n            /**\n             * @param {!Index} index\n             * @return {boolean}\n             * @private\n             */\n\n          }, {\n            key: 'isIndexValid_',\n            value: function isIndexValid_(index) {\n              var _this3 = this;\n\n              if (index instanceof Array) {\n                if (!this.isCheckboxList_) {\n                  throw new Error('MDCListFoundation: Array of index is only supported for checkbox based list');\n                }\n\n                if (index.length === 0) {\n                  return true;\n                } else {\n                  return index.some(function (i) {\n                    return _this3.isIndexInRange_(i);\n                  });\n                }\n              } else if (typeof index === 'number') {\n                if (this.isCheckboxList_) {\n                  throw new Error('MDCListFoundation: Expected array of index for checkbox based list but got number: ' + index);\n                }\n\n                return this.isIndexInRange_(index);\n              } else {\n                return false;\n              }\n            }\n            /**\n             * @param {number} index\n             * @return {boolean}\n             * @private\n             */\n\n          }, {\n            key: 'isIndexInRange_',\n            value: function isIndexInRange_(index) {\n              var listSize = this.adapter_.getListItemCount();\n              return index >= 0 && index < listSize;\n            }\n            /**\n             * @param {number} index\n             * @param {boolean=} toggleCheckbox\n             * @private\n             */\n\n          }, {\n            key: 'setSelectedIndexOnAction_',\n            value: function setSelectedIndexOnAction_(index) {\n              var toggleCheckbox = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n              if (this.isCheckboxList_) {\n                this.toggleCheckboxAtIndex_(index, toggleCheckbox);\n              } else {\n                this.setSelectedIndex(index);\n              }\n            }\n            /**\n             * @param {number} index\n             * @param {boolean} toggleCheckbox\n             * @private\n             */\n\n          }, {\n            key: 'toggleCheckboxAtIndex_',\n            value: function toggleCheckboxAtIndex_(index, toggleCheckbox) {\n              var isChecked = this.adapter_.isCheckboxCheckedAtIndex(index);\n\n              if (toggleCheckbox) {\n                isChecked = !isChecked;\n                this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, isChecked);\n              }\n\n              this.adapter_.setAttributeForElementIndex(index, __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"\n              /* strings */\n              ].ARIA_CHECKED, isChecked ? 'true' : 'false'); // If none of the checkbox items are selected and selectedIndex is not initialized then provide a default value.\n\n              if (this.selectedIndex_ === -1) {\n                this.selectedIndex_ = [];\n              }\n\n              if (isChecked) {\n                this.selectedIndex_.push(index);\n              } else {\n                this.selectedIndex_ = this.selectedIndex_.filter(function (i) {\n                  return i !== index;\n                });\n              }\n            }\n          }]);\n\n          return MDCListFoundation;\n        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\"\n        /* default */\n        ]);\n        /* harmony default export */\n\n\n        __webpack_exports__[\"a\"] = MDCListFoundation;\n        /***/\n      },\n\n      /***/\n      25:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(__webpack_exports__, \"__esModule\", {\n          value: true\n        });\n        /* harmony export (binding) */\n\n        __webpack_require__.d(__webpack_exports__, \"MDCList\", function () {\n          return MDCList;\n        });\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(15);\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_2__adapter__ = __webpack_require__(10);\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_3__material_dom_ponyfill__ = __webpack_require__(8);\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(11);\n        /* harmony reexport (binding) */\n\n\n        __webpack_require__.d(__webpack_exports__, \"MDCListFoundation\", function () {\n          return __WEBPACK_IMPORTED_MODULE_1__foundation__[\"a\"];\n        });\n\n        var _extends = Object.assign || function (target) {\n          for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            for (var key in source) {\n              if (Object.prototype.hasOwnProperty.call(source, key)) {\n                target[key] = source[key];\n              }\n            }\n          }\n\n          return target;\n        };\n\n        var _createClass = function () {\n          function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n\n          return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n          };\n        }();\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function _possibleConstructorReturn(self, call) {\n          if (!self) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          }\n\n          return call && (_typeof(call) === \"object\" || typeof call === \"function\") ? call : self;\n        }\n\n        function _inherits(subClass, superClass) {\n          if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function, not \" + _typeof(superClass));\n          }\n\n          subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n              value: subClass,\n              enumerable: false,\n              writable: true,\n              configurable: true\n            }\n          });\n          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n        }\n        /**\n         * @license\n         * Copyright 2018 Google Inc.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in\n         * all copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n         * THE SOFTWARE.\n         */\n        // eslint-disable-line no-unused-vars\n\n        /**\n         * @extends MDCComponent<!MDCListFoundation>\n         */\n\n\n        var MDCList = function (_MDCComponent) {\n          _inherits(MDCList, _MDCComponent);\n          /** @param {...?} args */\n\n\n          function MDCList() {\n            var _ref;\n\n            _classCallCheck(this, MDCList);\n\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n            /** @private {!Function} */\n\n\n            var _this = _possibleConstructorReturn(this, (_ref = MDCList.__proto__ || Object.getPrototypeOf(MDCList)).call.apply(_ref, [this].concat(args)));\n\n            _this.handleKeydown_;\n            /** @private {!Function} */\n\n            _this.handleClick_;\n            /** @private {!Function} */\n\n            _this.focusInEventListener_;\n            /** @private {!Function} */\n\n            _this.focusOutEventListener_;\n            return _this;\n          }\n          /**\n           * @param {!Element} root\n           * @return {!MDCList}\n           */\n\n\n          _createClass(MDCList, [{\n            key: 'destroy',\n            value: function destroy() {\n              this.root_.removeEventListener('keydown', this.handleKeydown_);\n              this.root_.removeEventListener('click', this.handleClick_);\n              this.root_.removeEventListener('focusin', this.focusInEventListener_);\n              this.root_.removeEventListener('focusout', this.focusOutEventListener_);\n            }\n          }, {\n            key: 'initialSyncWithDOM',\n            value: function initialSyncWithDOM() {\n              this.handleClick_ = this.handleClickEvent_.bind(this);\n              this.handleKeydown_ = this.handleKeydownEvent_.bind(this);\n              this.focusInEventListener_ = this.handleFocusInEvent_.bind(this);\n              this.focusOutEventListener_ = this.handleFocusOutEvent_.bind(this);\n              this.root_.addEventListener('keydown', this.handleKeydown_);\n              this.root_.addEventListener('focusin', this.focusInEventListener_);\n              this.root_.addEventListener('focusout', this.focusOutEventListener_);\n              this.root_.addEventListener('click', this.handleClick_);\n              this.layout();\n              this.initializeListType();\n            }\n          }, {\n            key: 'layout',\n            value: function layout() {\n              var direction = this.root_.getAttribute(__WEBPACK_IMPORTED_MODULE_4__constants__[\"b\"\n              /* strings */\n              ].ARIA_ORIENTATION);\n              this.vertical = direction !== __WEBPACK_IMPORTED_MODULE_4__constants__[\"b\"\n              /* strings */\n              ].ARIA_ORIENTATION_HORIZONTAL; // List items need to have at least tabindex=-1 to be focusable.\n\n              [].slice.call(this.root_.querySelectorAll('.mdc-list-item:not([tabindex])')).forEach(function (ele) {\n                ele.setAttribute('tabindex', -1);\n              }); // Child button/a elements are not tabbable until the list item is focused.\n\n              [].slice.call(this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__[\"b\"\n              /* strings */\n              ].FOCUSABLE_CHILD_ELEMENTS)).forEach(function (ele) {\n                return ele.setAttribute('tabindex', -1);\n              });\n              this.foundation_.layout();\n            }\n            /**\n             * Used to figure out which list item this event is targetting. Or returns -1 if\n             * there is no list item\n             * @param {Event} evt\n             * @private\n             */\n\n          }, {\n            key: 'getListItemIndex_',\n            value: function getListItemIndex_(evt) {\n              var eventTarget =\n              /** @type {HTMLElement} */\n              evt.target;\n              var index = -1; // Find the first ancestor that is a list item or the list.\n\n              while (!eventTarget.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__[\"a\"\n              /* cssClasses */\n              ].LIST_ITEM_CLASS) && !eventTarget.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__[\"a\"\n              /* cssClasses */\n              ].ROOT)) {\n                eventTarget = eventTarget.parentElement;\n              } // Get the index of the element if it is a list item.\n\n\n              if (eventTarget.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__[\"a\"\n              /* cssClasses */\n              ].LIST_ITEM_CLASS)) {\n                index = this.listElements.indexOf(eventTarget);\n              }\n\n              return index;\n            }\n            /**\n             * Used to figure out which element was clicked before sending the event to the foundation.\n             * @param {Event} evt\n             * @private\n             */\n\n          }, {\n            key: 'handleFocusInEvent_',\n            value: function handleFocusInEvent_(evt) {\n              var index = this.getListItemIndex_(evt);\n              this.foundation_.handleFocusIn(evt, index);\n            }\n            /**\n             * Used to figure out which element was clicked before sending the event to the foundation.\n             * @param {Event} evt\n             * @private\n             */\n\n          }, {\n            key: 'handleFocusOutEvent_',\n            value: function handleFocusOutEvent_(evt) {\n              var index = this.getListItemIndex_(evt);\n              this.foundation_.handleFocusOut(evt, index);\n            }\n            /**\n             * Used to figure out which element was focused when keydown event occurred before sending the event to the\n             * foundation.\n             * @param {Event} evt\n             * @private\n             */\n\n          }, {\n            key: 'handleKeydownEvent_',\n            value: function handleKeydownEvent_(evt) {\n              var index = this.getListItemIndex_(evt);\n\n              if (index >= 0) {\n                this.foundation_.handleKeydown(evt, evt.target.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__[\"a\"\n                /* cssClasses */\n                ].LIST_ITEM_CLASS), index);\n              }\n            }\n            /**\n             * Used to figure out which element was clicked before sending the event to the foundation.\n             * @param {Event} evt\n             * @private\n             */\n\n          }, {\n            key: 'handleClickEvent_',\n            value: function handleClickEvent_(evt) {\n              var index = this.getListItemIndex_(evt); // Toggle the checkbox only if it's not the target of the event, or the checkbox will have 2 change events.\n\n              var toggleCheckbox = !Object(__WEBPACK_IMPORTED_MODULE_3__material_dom_ponyfill__[\"matches\"])(\n              /** @type {!Element} */\n              evt.target, __WEBPACK_IMPORTED_MODULE_4__constants__[\"b\"\n              /* strings */\n              ].CHECKBOX_RADIO_SELECTOR);\n              this.foundation_.handleClick(index, toggleCheckbox);\n            }\n            /**\n             * Initialize selectedIndex value based on pre-selected checkbox list items, single selection or radio.\n             */\n\n          }, {\n            key: 'initializeListType',\n            value: function initializeListType() {\n              var _this2 = this;\n\n              var checkboxListItems = this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__[\"b\"\n              /* strings */\n              ].ARIA_ROLE_CHECKBOX_SELECTOR);\n              var singleSelectedListItem = this.root_.querySelector('.' + __WEBPACK_IMPORTED_MODULE_4__constants__[\"a\"\n              /* cssClasses */\n              ].LIST_ITEM_ACTIVATED_CLASS + ',\\n        .' + __WEBPACK_IMPORTED_MODULE_4__constants__[\"a\"\n              /* cssClasses */\n              ].LIST_ITEM_SELECTED_CLASS);\n              var radioSelectedListItem = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__[\"b\"\n              /* strings */\n              ].ARIA_CHECKED_RADIO_SELECTOR);\n\n              if (checkboxListItems.length) {\n                var preselectedItems = this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__[\"b\"\n                /* strings */\n                ].ARIA_CHECKED_CHECKBOX_SELECTOR);\n                this.selectedIndex = [].map.call(preselectedItems, function (listItem) {\n                  return _this2.listElements.indexOf(listItem);\n                });\n              } else if (singleSelectedListItem) {\n                if (singleSelectedListItem.classList.contains(__WEBPACK_IMPORTED_MODULE_4__constants__[\"a\"\n                /* cssClasses */\n                ].LIST_ITEM_ACTIVATED_CLASS)) {\n                  this.foundation_.setUseActivatedClass(true);\n                }\n\n                this.singleSelection = true;\n                this.selectedIndex = this.listElements.indexOf(singleSelectedListItem);\n              } else if (radioSelectedListItem) {\n                this.selectedIndex = this.listElements.indexOf(radioSelectedListItem);\n              }\n            }\n            /** @param {boolean} value */\n\n          }, {\n            key: 'getDefaultFoundation',\n\n            /** @return {!MDCListFoundation} */\n            value: function getDefaultFoundation() {\n              var _this3 = this;\n\n              return new __WEBPACK_IMPORTED_MODULE_1__foundation__[\"a\"\n              /* default */\n              ](\n              /** @type {!MDCListAdapter} */\n              _extends({\n                getListItemCount: function getListItemCount() {\n                  return _this3.listElements.length;\n                },\n                getFocusedElementIndex: function getFocusedElementIndex() {\n                  return _this3.listElements.indexOf(document.activeElement);\n                },\n                setAttributeForElementIndex: function setAttributeForElementIndex(index, attr, value) {\n                  var element = _this3.listElements[index];\n\n                  if (element) {\n                    element.setAttribute(attr, value);\n                  }\n                },\n                removeAttributeForElementIndex: function removeAttributeForElementIndex(index, attr) {\n                  var element = _this3.listElements[index];\n\n                  if (element) {\n                    element.removeAttribute(attr);\n                  }\n                },\n                addClassForElementIndex: function addClassForElementIndex(index, className) {\n                  var element = _this3.listElements[index];\n\n                  if (element) {\n                    element.classList.add(className);\n                  }\n                },\n                removeClassForElementIndex: function removeClassForElementIndex(index, className) {\n                  var element = _this3.listElements[index];\n\n                  if (element) {\n                    element.classList.remove(className);\n                  }\n                },\n                focusItemAtIndex: function focusItemAtIndex(index) {\n                  var element = _this3.listElements[index];\n\n                  if (element) {\n                    element.focus();\n                  }\n                },\n                setTabIndexForListItemChildren: function setTabIndexForListItemChildren(listItemIndex, tabIndexValue) {\n                  var element = _this3.listElements[listItemIndex];\n                  var listItemChildren = [].slice.call(element.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__[\"b\"\n                  /* strings */\n                  ].CHILD_ELEMENTS_TO_TOGGLE_TABINDEX));\n                  listItemChildren.forEach(function (ele) {\n                    return ele.setAttribute('tabindex', tabIndexValue);\n                  });\n                },\n                followHref: function followHref(index) {\n                  var listItem = _this3.listElements[index];\n\n                  if (listItem && listItem.href) {\n                    listItem.click();\n                  }\n                },\n                hasCheckboxAtIndex: function hasCheckboxAtIndex(index) {\n                  var listItem = _this3.listElements[index];\n                  return !!listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__[\"b\"\n                  /* strings */\n                  ].CHECKBOX_SELECTOR);\n                },\n                hasRadioAtIndex: function hasRadioAtIndex(index) {\n                  var listItem = _this3.listElements[index];\n                  return !!listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__[\"b\"\n                  /* strings */\n                  ].RADIO_SELECTOR);\n                },\n                isCheckboxCheckedAtIndex: function isCheckboxCheckedAtIndex(index) {\n                  var listItem = _this3.listElements[index];\n                  var toggleEl = listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__[\"b\"\n                  /* strings */\n                  ].CHECKBOX_SELECTOR);\n                  return toggleEl.checked;\n                },\n                setCheckedCheckboxOrRadioAtIndex: function setCheckedCheckboxOrRadioAtIndex(index, isChecked) {\n                  var listItem = _this3.listElements[index];\n                  var toggleEl = listItem.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__[\"b\"\n                  /* strings */\n                  ].CHECKBOX_RADIO_SELECTOR);\n                  toggleEl.checked = isChecked;\n                  var event = document.createEvent('Event');\n                  event.initEvent('change', true, true);\n                  toggleEl.dispatchEvent(event);\n                },\n                isFocusInsideList: function isFocusInsideList() {\n                  return _this3.root_.contains(document.activeElement);\n                }\n              }));\n            }\n          }, {\n            key: 'vertical',\n            set: function set(value) {\n              this.foundation_.setVerticalOrientation(value);\n            }\n            /** @return Array<!Element>*/\n\n          }, {\n            key: 'listElements',\n            get: function get() {\n              return [].slice.call(this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_4__constants__[\"b\"\n              /* strings */\n              ].ENABLED_ITEMS_SELECTOR));\n            }\n            /** @param {boolean} value */\n\n          }, {\n            key: 'wrapFocus',\n            set: function set(value) {\n              this.foundation_.setWrapFocus(value);\n            }\n            /** @param {boolean} isSingleSelectionList */\n\n          }, {\n            key: 'singleSelection',\n            set: function set(isSingleSelectionList) {\n              this.foundation_.setSingleSelection(isSingleSelectionList);\n            }\n            /** @return {!Index} */\n\n          }, {\n            key: 'selectedIndex',\n            get: function get() {\n              return this.foundation_.getSelectedIndex();\n            }\n            /** @param {!Index} index */\n            ,\n            set: function set(index) {\n              this.foundation_.setSelectedIndex(index);\n            }\n          }], [{\n            key: 'attachTo',\n            value: function attachTo(root) {\n              return new MDCList(root);\n            }\n          }]);\n\n          return MDCList;\n        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\"\n        /* default */\n        ]);\n        /***/\n\n      },\n\n      /***/\n      8:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(__webpack_exports__, \"__esModule\", {\n          value: true\n        });\n        /* harmony export (binding) */\n\n        __webpack_require__.d(__webpack_exports__, \"closest\", function () {\n          return closest;\n        });\n        /* harmony export (binding) */\n\n\n        __webpack_require__.d(__webpack_exports__, \"matches\", function () {\n          return matches;\n        });\n        /**\n         * @license\n         * Copyright 2018 Google Inc.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in\n         * all copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n         * THE SOFTWARE.\n         */\n\n        /**\n         * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\n         * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\n         */\n\n        /**\n         * @param {!Element} element\n         * @param {string} selector\n         * @return {?Element}\n         */\n\n\n        function closest(element, selector) {\n          if (element.closest) {\n            return element.closest(selector);\n          }\n\n          var el = element;\n\n          while (el) {\n            if (matches(el, selector)) {\n              return el;\n            }\n\n            el = el.parentElement;\n          }\n\n          return null;\n        }\n        /**\n         * @param {!Element} element\n         * @param {string} selector\n         * @return {boolean}\n         */\n\n\n        function matches(element, selector) {\n          var nativeMatches = element.matches || element.webkitMatchesSelector || element.msMatchesSelector;\n          return nativeMatches.call(element, selector);\n        }\n        /***/\n\n      }\n      /******/\n\n    })\n  );\n});","map":null,"metadata":{},"sourceType":"module"}