{"ast":null,"code":"/*\n * Storage module for bots.\n *\n * Supports storage of data on a team-by-team, user-by-user, and channel-by-channel basis.\n *\n * save can be used to store arbitrary object.\n * These objects must include an id by which they can be looked up.\n * It is recommended to use the team/user/channel id for this purpose.\n * Example usage of save:\n * controller.storage.teams.save({id: message.team, foo:\"bar\"}, function(err){\n * if (err)\n * console.log(err)\n * });\n *\n * get looks up an object by id.\n * Example usage of get:\n * controller.storage.teams.get(message.team, function(err, team_data){\n * if (err)\n * console.log(err)\n * else\n * console.log(team_data)\n * });\n */\nvar Store = require('jfs');\n\nmodule.exports = function (config) {\n  if (!config) {\n    config = {\n      path: './'\n    };\n  }\n\n  var teams_db = new Store(config.path + '/teams', {\n    saveId: 'id'\n  });\n  var users_db = new Store(config.path + '/users', {\n    saveId: 'id'\n  });\n  var channels_db = new Store(config.path + '/channels', {\n    saveId: 'id'\n  });\n\n  var objectsToList = function objectsToList(cb) {\n    return function (err, data) {\n      if (err) {\n        cb(err, data);\n      } else {\n        cb(err, Object.keys(data).map(function (key) {\n          return data[key];\n        }));\n      }\n    };\n  };\n\n  var storage = {\n    teams: {\n      get: function get(team_id, cb) {\n        teams_db.get(team_id, cb);\n      },\n      save: function save(team_data, cb) {\n        teams_db.save(team_data.id, team_data, cb);\n      },\n      delete: function _delete(team_id, cb) {\n        teams_db.delete(team_id, cb);\n      },\n      all: function all(cb) {\n        teams_db.all(objectsToList(cb));\n      }\n    },\n    users: {\n      get: function get(user_id, cb) {\n        users_db.get(user_id, cb);\n      },\n      save: function save(user, cb) {\n        users_db.save(user.id, user, cb);\n      },\n      delete: function _delete(user_id, cb) {\n        users_db.delete(user_id, cb);\n      },\n      all: function all(cb) {\n        users_db.all(objectsToList(cb));\n      }\n    },\n    channels: {\n      get: function get(channel_id, cb) {\n        channels_db.get(channel_id, cb);\n      },\n      save: function save(channel, cb) {\n        channels_db.save(channel.id, channel, cb);\n      },\n      delete: function _delete(channel_id, cb) {\n        channels_db.delete(channel_id, cb);\n      },\n      all: function all(cb) {\n        channels_db.all(objectsToList(cb));\n      }\n    }\n  };\n  return storage;\n};","map":null,"metadata":{},"sourceType":"module"}