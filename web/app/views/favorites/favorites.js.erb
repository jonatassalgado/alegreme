(function () {

	const promise = new Promise(function (resolve, reject) {
		const savesWrapperEl = document.getElementById('saves');

		requestIdleCallback(function () {
			if (savesWrapperEl) {
				const morph = morphdom.default(savesWrapperEl, '<%= j render partial: "feeds/saves", locals: @data %>'.trim(), {
					onBeforeElUpdated: function (fromEl, toEl) {
						return !fromEl.isEqualNode(toEl);
					}
				});

				resolve(morph)
			} else {
				resolve()
			}
		}, {timeout: 250})
	})

	promise.then(function (value) {
	  PubSubModule.emit('saves.updated', {
	    detail: {
		    currentEventFavorited: <%= @data[:current_event_favorited] %>,
		    eventId              : <%= @data[:event_id] %>
	    }
    })
	})

})()