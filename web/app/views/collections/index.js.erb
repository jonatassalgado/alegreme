(function () {

	const promise = new Promise(function (resolve, reject) {
		const sectionElem = document.getElementById('<%= @locals[:identifier] %>');

		requestIdleCallback(function () {
			requestAnimationFrame(function () {
				const morph = morphdom.default(sectionElem, '<%= j render partial: "components/collection/collection", locals: @locals %>'.trim(), {
					onBeforeElUpdated: function (fromEl, toEl) {
						if (fromEl.dataset.fixed == 'true') {
							return false
						}

						if (fromEl.isEqualNode(toEl)) {
							return false
            }

						return true
					}
				});
				resolve(morph)
			});
		}, {timeout: 250});
	})

	promise.then(function (value) {
		PubSubModule.emit('<%= @locals[:identifier] %>.updated', {
			itemsCount: <%= @locals[:items].count %>,
			params    : {
				similar: <%= params[:similar] || {} %>
			}
		})
	})

})()
