(function () {


	const promise = new Promise(function (resolve, reject) {
		const sectionElem = document.getElementById('<%= @locals[:identifier] %>');

		requestIdleCallback(function () {
			const morph = morphdom.default(sectionElem, '<%= j render partial: "components/collection/collection", locals: @locals %>'.trim(), {
				onBeforeElUpdated: function (fromEl, toEl) {
					return !fromEl.isEqualNode(toEl);
				}
			});

			resolve(morph)
		});
	})

	promise.then(function (value) {
		PubSubModule.emit('<%= @locals[:identifier] %>.updated', {
			itemsCount: <%= @locals[:items].count %>,
			params    : {
				similar: <%= params[:similar] || {} %>
			}
		})
	})

})()